this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,a,n,s,i,r,o,h,c,g,l,d,C,m,p,u,M){"use strict";const _={name:"TitleInput",props:{modelValue:{type:String,default:""},placeholder:{type:String,required:true}},emits:["update:modelValue"],mounted(){this.$refs.titleInput.focus()},methods:{onInput(t){this.$emit("update:modelValue",t.target.value)}},template:`\n\t\t<div class="bx-im-chat-forms-title-input__container">\n\t\t\t<input\n\t\t\t\t:value="modelValue"\n\t\t\t\t:placeholder="placeholder"\n\t\t\t\t@input="onInput"\n\t\t\t\tclass="bx-im-chat-forms-title-input__input"\n\t\t\t\tref="titleInput"\n\t\t\t/>\n\t\t</div>\n\t`};const T={name:"ChatAvatar",props:{avatarFile:{required:true,validator(t){return t instanceof File||s.Type.isNull(t)}},existingAvatarUrl:{type:String,default:""},chatTitle:{type:String,required:true},squared:{type:Boolean,required:false,default:false}},emits:["avatarChange"],computed:{preparedAvatar(){if(!this.avatarFile){return null}return URL.createObjectURL(this.avatarFile)},avatarToShow(){return this.preparedAvatar||this.existingAvatarUrl}},methods:{onAvatarChangeClick(){this.$refs.avatarInput.click()},async onAvatarSelect(t){const e=t.target;const a=e.files[0];if(!a){return}const n=await this.getChatService().prepareAvatar(a);if(!n){return}this.$emit("avatarChange",n)},getChatService(){if(!this.chatService){this.chatService=new p.ChatService}return this.chatService}},template:`\n\t\t<div \n\t\t\tclass="bx-im-chat-forms-chat-avatar__container" \n\t\t\t:class="{'--squared': squared}" \n\t\t\t@click="onAvatarChangeClick"\n\t\t>\n\t\t\t<img \n\t\t\t\tv-if="avatarToShow" \n\t\t\t\t:src="avatarToShow" \n\t\t\t\t:alt="chatTitle" \n\t\t\t\tclass="bx-im-chat-forms-chat-avatar__image" \n\t\t\t/>\n\t\t</div>\n\t\t<input \n\t\t\ttype="file" \n\t\t\t@change="onAvatarSelect" \n\t\t\taccept="image/*" \n\t\t\tclass="bx-im-chat-forms-chat-avatar__input" \n\t\t\tref="avatarInput"\n\t\t>\n\t`};const v={props:{chatMembers:{type:Array,required:true},customElements:{type:Array,default:()=>[]}},emits:["membersChange"],created(){const t=this.loc("IM_CREATE_CHAT_USER_SELECTOR_ADD_MEMBERS_V2");this.membersSelector=new n.TagSelector({maxHeight:99,placeholder:"",addButtonCaption:t,addButtonCaptionMore:t,showCreateButton:false,items:this.customElements,dialogOptions:{enableSearch:true,alwaysShowLabels:true,context:"IM_CHAT_CREATE",entities:this.getEntitiesConfig(),preselectedItems:this.chatMembers,undeselectedItems:[["user",r.Core.getUserId()]],events:{"Item:onSelect":this.onItemsChange,"Item:onDeselect":this.onItemsChange}}})},mounted(){this.membersSelector.renderTo(this.$refs.members)},methods:{getEntitiesConfig(){const t=[{id:"user"}];const a=e.FeatureManager.isFeatureAvailable(e.Feature.chatDepartments);if(a){t.push({id:"department",options:{selectMode:"usersAndDepartments",allowFlatDepartments:true,allowSelectRootDepartment:true}})}else{t.push({id:"department"})}return t},onItemsChange(t){const e=t.getTarget();const a=e.getSelectedItems();this.$emit("membersChange",a.map((t=>this.prepareTag(t))))},prepareTag(t){return[t.getEntityId(),t.getId()]},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-chat-forms-chat-members__container" ref="members"></div>\n\t`};const I={components:{MessengerButton:i.Button},props:{isCreating:{type:Boolean,required:true},createButtonTitle:{type:String,required:true}},emits:["create","cancel"],computed:{ButtonSize:()=>i.ButtonSize,ButtonColor:()=>i.ButtonColor},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-chat-forms-button-panel__container">\n\t\t\t<MessengerButton\n\t\t\t\t:size="ButtonSize.XL"\n\t\t\t\t:color="ButtonColor.Success"\n\t\t\t\t:text="createButtonTitle"\n\t\t\t\t:isLoading="isCreating"\n\t\t\t\t:isDisabled="isCreating"\n\t\t\t\t@click="$emit('create')"\n\t\t\t\tclass="bx-im-chat-forms-button-panel__create-button"\n\t\t\t/>\n\t\t\t<MessengerButton\n\t\t\t\t:size="ButtonSize.XL"\n\t\t\t\t:color="ButtonColor.Link"\n\t\t\t\t:text="loc('IM_CREATE_CHAT_CANCEL')"\n\t\t\t\t:isDisabled="isCreating"\n\t\t\t\t@click="$emit('cancel')"\n\t\t\t/>\n\t\t</div>\n\t`};const E={name:"CreateChatHeading",components:{ChatHint:i.ChatHint},props:{text:{type:String,required:true},hintText:{type:String,required:false,default:""}},computed:{preparedText(){return this.text.replace("#SUBTITLE_START#",'<span class="bx-im-content-create-chat__subheading">').replace("#SUBTITLE_END#","</span>")}},template:`\n\t\t<div class="bx-im-content-create-chat__heading_container">\n\t\t\t<div class="bx-im-content-create-chat__heading" v-html="preparedText"></div>\n\t\t\t<ChatHint v-if="hintText" :text="hintText" />\n\t\t</div>\n\t`};const A={components:{ExpandAnimation:a.ExpandAnimation},props:{name:{type:String,required:true},title:{type:String,required:true},alwaysOpened:{type:Boolean,required:false,default:false}},data(){return{isOpened:false}},computed:{containerClasses(){return[`--${this.name}`,{"--active":this.isOpened}]}},created(){if(this.alwaysOpened){this.isOpened=true}},methods:{onHeaderClick(){if(this.alwaysOpened){return}this.isOpened=!this.isOpened}},template:`\n\t\t<div :class="containerClasses" class="bx-im-content-create-chat__section bx-im-content-create-chat__section_scope">\n\t\t\t<div @click="onHeaderClick" class="bx-im-content-create-chat__section_header">\n\t\t\t\t<div class="bx-im-content-create-chat__section_left">\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_icon"></div>\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_text">{{ title }}</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="!alwaysOpened" class="bx-im-content-create-chat__section_right"></div>\t\n\t\t\t</div>\n\t\t\t<ExpandAnimation>\n\t\t\t\t<div v-if="isOpened" class="bx-im-content-create-chat__section_content_container">\n\t\t\t\t\t<div class="bx-im-content-create-chat__section_content">\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</ExpandAnimation>\n\t\t</div>\n\t`};const S={name:"TextareaInput",props:{value:{type:String,default:""},placeholder:{type:String,required:true},border:{type:Boolean,required:false,default:true},rounded:{type:Boolean,required:false,default:true}},emits:["input"],computed:{containerClasses(){return{"--no-border":!this.border,"--rounded":this.rounded}}},methods:{onInput(t){this.$emit("input",t.target.value)}},template:`\n\t\t<div class="bx-im-content-create-chat__textarea_container" :class="containerClasses">\n\t\t\t<div class="ui-ctl ui-ctl-textarea ui-ctl-w100 ui-ctl-no-resize">\n\t\t\t\t<textarea\n\t\t\t\t\t:value="value"\n\t\t\t\t\t:placeholder="placeholder"\n\t\t\t\t\t@input="onInput"\n\t\t\t\t\tclass="bx-im-content-create-chat__textarea ui-ctl-element"\n\t\t\t\t></textarea>\n\t\t\t</div>\n\t\t</div>\n\t`};const b={name:"RadioOption",props:{items:{type:Array,required:true}},emits:["change"],data(){return{groupName:s.Text.getRandom()}},computed:{options(){return this.items},selectedValue(){return this.options.find((t=>t.selected===true))}},methods:{onInput(t){this.$emit("change",t.value)}},template:`\n\t\t<div class="bx-im-content-create-chat-radio__container">\n\t\t\t<label v-for="option in options" class="bx-im-content-create-chat-radio__item ui-ctl ui-ctl-radio">\n\t\t\t\t<input type="radio" class="ui-ctl-element" :name="groupName" :checked="option.selected" @input="onInput(option)">\n\t\t\t\t<div class="ui-ctl-label-text">\n\t\t\t\t\t\x3c!-- Text --\x3e\n\t\t\t\t\t<div v-if="option.html" class="bx-im-content-create-chat-radio__label_title" v-html="option.text"></div>\n\t\t\t\t\t<div v-else class="bx-im-content-create-chat-radio__label_title">{{ option.text }}</div>\n\t\t\t\t\t\x3c!-- Subtext --\x3e\n\t\t\t\t\t<template v-if="option.subtext">\n\t\t\t\t\t\t<div v-if="option.html" class="bx-im-content-create-chat-radio__label_subtitle" v-html="option.subtext"></div>\n\t\t\t\t\t\t<div v-else class="bx-im-content-create-chat-radio__label_subtitle">{{ option.subtext }}</div>\n\t\t\t\t\t</template>\n\t\t\t\t</div>\n\t\t\t</label>\n\t\t</div>\n\t`};const U={components:{CreateChatSection:A,CreateChatHeading:E,Dropdown:i.Dropdown,TextareaInput:S,RadioOption:b},props:{description:{type:String,required:true},withSearchOption:{type:Boolean,default:true},isAvailableInSearch:{type:Boolean,default:false}},emits:["chatTypeChange","descriptionChange"],computed:{privacyOptions(){return[{value:false,text:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_PRIVATE_TITLE"),subtext:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_PRIVATE_SUBTITLE"),selected:!this.isAvailableInSearch},{value:true,text:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_OPEN_TITLE"),subtext:this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_OPEN_SUBTITLE"),selected:this.isAvailableInSearch}]},descriptionPlaceholderText(){return this.loc("IM_CREATE_CHAT_SETTINGS_SECTION_DESCRIPTION_PLACEHOLDER",{"#BR#":"\n","#QUOTE_START#":'"',"#QUOTE_END#":'"'})}},methods:{onTypeChange(t){this.$emit("chatTypeChange",t)},onDescriptionChange(t){this.$emit("descriptionChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="settings" :title="loc('IM_CREATE_CHAT_SETTINGS_SECTION')">\n\t\t\t<div v-if="withSearchOption" class="bx-im-content-create-chat__section_block">\n\t\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_SETTINGS_SECTION_PRIVACY')" />\n\t\t\t\t<RadioOption :items="privacyOptions" @change="onTypeChange" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_SETTINGS_SECTION_DESCRIPTION')" />\n\t\t\t\t<div class="bx-im-chat-forms-settings__description_container">\n\t\t\t\t\t<TextareaInput\n\t\t\t\t\t\t:value="description"\n\t\t\t\t\t\t:placeholder="descriptionPlaceholderText"\n\t\t\t\t\t\t:rounded="false"\n\t\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const y={name:"RoleSelector",components:{Dropdown:i.Dropdown,ChatHint:i.ChatHint},props:{title:{type:String,required:true},dropdownItems:{type:Array,required:true},dropdownId:{type:String,required:true},hintText:{type:String,required:false,default:""}},emits:["itemChange"],template:`\n\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t<div class="bx-im-content-create-chat__section-header">\n\t\t\t\t<div class="bx-im-content-create-chat__section-heading">\n\t\t\t\t\t{{ title }}\n\t\t\t\t</div>\n\t\t\t\t<ChatHint v-if="hintText" :text="hintText" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-chat-forms-chat-settings__manage-select">\n\t\t\t\t<Dropdown\n\t\t\t\t\t:items="dropdownItems"\n\t\t\t\t\t:id="dropdownId" \n\t\t\t\t\t@itemChange="$emit('itemChange', $event)"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const f={name:"UserSelector",components:{ChatHint:i.ChatHint},props:{title:{type:String,required:true},hintText:{type:String,required:false,default:""}},template:`\n\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t<div class="bx-im-content-create-chat__section-header">\n\t\t\t\t<div class="bx-im-content-create-chat__section-heading">\n\t\t\t\t\t{{ title }}\n\t\t\t\t</div>\n\t\t\t\t<ChatHint v-if="hintText" :text="hintText" />\n\t\t\t</div>\n\t\t\t<slot></slot>\n\t\t</div>\n\t`};const R={name:"OwnerSelector",props:{ownerId:{type:Number,required:true}},emits:["ownerChange"],created(){this.membersSelector=new n.TagSelector({multiple:false,maxHeight:33,placeholder:"",addButtonCaption:this.loc("IM_CREATE_CHAT_USER_SELECTOR_CHANGE_OWNER"),addButtonCaptionMore:this.loc("IM_CREATE_CHAT_USER_SELECTOR_CHANGE_OWNER"),showCreateButton:false,dialogOptions:{enableSearch:false,context:"IM_CHAT_CREATE",entities:[{id:"user"},{id:"department"}],preselectedItems:[["user",this.ownerId]]},events:{onBeforeTagAdd:t=>{const{tag:e}=t.getData();e.setDeselectable(false)},onAfterTagAdd:t=>{const{tag:e}=t.getData();this.$emit("ownerChange",e.id)}}})},mounted(){this.membersSelector.renderTo(this.$refs.owner)},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-chat-forms-sections-owner__container" ref="owner"></div>\n\t`};const w={props:{managerIds:{type:Array,required:true}},emits:["managersChange"],computed:{currentUserId(){return r.Core.getUserId()}},created(){const t=this.managerIds.map((t=>["user",t]));this.membersSelector=new n.TagSelector({maxHeight:99,placeholder:"",addButtonCaption:this.loc("IM_CREATE_CHAT_RIGHTS_SECTION_ADD_MANAGERS"),addButtonCaptionMore:this.loc("IM_CREATE_CHAT_RIGHTS_SECTION_ADD_MANAGERS"),showCreateButton:false,dialogOptions:{enableSearch:false,context:"IM_CHAT_CREATE",entities:[{id:"user"},{id:"department"}],preselectedItems:t},events:{onAfterTagAdd:t=>{const e=t.getTarget();this.$emit("managersChange",e.getTags().map((t=>t.id)))},onAfterTagRemove:t=>{const e=t.getTarget();this.$emit("managersChange",e.getTags().map((t=>t.id)))}}})},mounted(){this.membersSelector.renderTo(this.$refs.managers)},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-chat-forms-sections-managers__container" ref="managers"></div>\n\t`};const x=[{value:u.UserRole.member,text:s.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_MEMBER")},{value:u.UserRole.manager,text:s.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_MANAGER_V2")},{value:u.UserRole.owner,text:s.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_ROLE_OWNER"),default:true}];const N={[u.ChatType.channel]:new Set([u.ChatActionGroup.manageUsersAdd,u.ChatActionGroup.manageUsersDelete,u.ChatActionGroup.manageMessages]),default:new Set([u.ChatActionGroup.manageUsersAdd,u.ChatActionGroup.manageUsersDelete,u.ChatActionGroup.manageUi,u.ChatActionGroup.manageMessages])};const D={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_RIGHTS_SECTION_MANAGE_USERS_ADD"),default:s.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_USERS_ADD")};const L={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_RIGHTS_SECTION_MANAGE_USERS_DELETE"),default:s.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_USERS_DELETE")};const B={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_RIGHTS_SECTION_MANAGE_SENDING"),default:s.Loc.getMessage("IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_SENDING_MSGVER_1")};const H={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_OWNER_HINT"),default:s.Loc.getMessage("IM_CREATE_CHAT_OWNER_HINT")};const O={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_MANAGER_HINT"),default:s.Loc.getMessage("IM_CREATE_CHAT_MANAGER_HINT")};const F={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_MANAGE_USERS_ADD_HINT"),default:s.Loc.getMessage("IM_CREATE_CHAT_MANAGE_USERS_ADD_HINT")};const P={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_MANAGE_USERS_DELETE_HINT"),default:s.Loc.getMessage("IM_CREATE_CHAT_MANAGE_USERS_DELETE_HINT")};const G={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_MANAGE_UI_HINT"),default:s.Loc.getMessage("IM_CREATE_CHAT_MANAGE_UI_HINT")};const k={[u.ChatType.channel]:s.Loc.getMessage("IM_CREATE_CHANNEL_MANAGE_SENDING_HINT"),default:s.Loc.getMessage("IM_CREATE_CHAT_MANAGE_SENDING_HINT")};const $={name:"RightsSection",components:{CreateChatSection:A,RoleSelector:y,UserSelector:f,OwnerSelector:R,ManagersSelector:w},props:{ownerId:{type:Number,required:true},managerIds:{type:Array,required:true},manageUsersAdd:{type:String,required:true},manageUsersDelete:{type:String,required:true},manageUi:{type:String,required:true},manageMessages:{type:String,required:true},chatType:{type:String,default:u.ChatType.chat}},emits:["ownerChange","managersChange","manageUsersAddChange","manageUsersDeleteChange","manageUiChange","manageMessagesChange"],computed:{PopupType:()=>u.PopupType,manageUsersAddItems(){return this.prepareDropdownItems(this.manageUsersAdd)},manageUsersDeleteItems(){return this.prepareDropdownItems(this.manageUsersDelete)},manageUiItems(){return this.prepareDropdownItems(this.manageUi)},manageMessagesItems(){return this.prepareDropdownItems(this.manageMessages)},showManageUiBlock(){var t;const e=(t=N[this.chatType])!=null?t:N.default;return e.has(u.ChatActionGroup.manageUi)},canAddUsersCaption(){var t;return(t=D[this.chatType])!=null?t:D.default},canKickUsersCaption(){var t;return(t=L[this.chatType])!=null?t:L.default},canSendCaption(){var t;return(t=B[this.chatType])!=null?t:B.default},ownerHint(){var t;return(t=H[this.chatType])!=null?t:H.default},managerHint(){var t;return(t=O[this.chatType])!=null?t:O.default},addUsersHint(){var t;return(t=F[this.chatType])!=null?t:F.default},deleteUsersHint(){var t;return(t=P[this.chatType])!=null?t:P.default},manageUiHint(){var t;return(t=G[this.chatType])!=null?t:G.default},sendMessagesHint(){var t;return(t=k[this.chatType])!=null?t:k.default}},methods:{prepareDropdownItems(t){return x.map((e=>({...e,default:e.value===t})))},onOwnerChange(t){this.$emit("ownerChange",t)},onManagersChange(t){this.$emit("managersChange",t)},onManageUsersAddChange(t){this.$emit("manageUsersAddChange",t)},onManageUsersDeleteChange(t){this.$emit("manageUsersDeleteChange",t)},onManageUiChange(t){this.$emit("manageUiChange",t)},onManageMessagesChange(t){this.$emit("manageMessagesChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="rights" :title="loc('IM_CREATE_CHAT_RIGHTS_SECTION')">\n\t\t\t<UserSelector :title="loc('IM_CREATE_CHAT_SETTINGS_SECTION_OWNER')" :hintText="ownerHint">\n\t\t\t\t<OwnerSelector :ownerId="ownerId" @ownerChange="onOwnerChange" />\n\t\t\t</UserSelector>\n\t\t\t<UserSelector :title="loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGERS')" :hintText="managerHint">\n\t\t\t\t<ManagersSelector :managerIds="managerIds" @managersChange="onManagersChange" />\n\t\t\t</UserSelector>\n\t\t\t<RoleSelector\n\t\t\t\t:title="canAddUsersCaption"\n\t\t\t\t:hintText="addUsersHint"\n\t\t\t\t:dropdownId="PopupType.createChatManageUsersAddMenu"\n\t\t\t\t:dropdownItems="manageUsersAddItems"\n\t\t\t\t@itemChange="onManageUsersAddChange"\n\t\t\t/>\n\t\t\t<RoleSelector\n\t\t\t\t:title="canKickUsersCaption"\n\t\t\t\t:hintText="deleteUsersHint"\n\t\t\t\t:dropdownId="PopupType.createChatManageUsersDeleteMenu"\n\t\t\t\t:dropdownItems="manageUsersDeleteItems"\n\t\t\t\t@itemChange="onManageUsersDeleteChange"\n\t\t\t/>\n\t\t\t<RoleSelector\n\t\t\t\tv-if="showManageUiBlock"\n\t\t\t\t:title="loc('IM_CREATE_CHAT_RIGHTS_SECTION_MANAGE_UI_MSGVER_2')"\n\t\t\t\t:hintText="manageUiHint"\n\t\t\t\t:dropdownId="PopupType.createChatManageUiMenu"\n\t\t\t\t:dropdownItems="manageUiItems"\n\t\t\t\t@itemChange="onManageUiChange"\n\t\t\t/>\n\t\t\t<RoleSelector\n\t\t\t\t:title="canSendCaption"\n\t\t\t\t:hintText="sendMessagesHint"\n\t\t\t\t:dropdownId="PopupType.createChatManageMessagesMenu"\n\t\t\t\t:dropdownItems="manageMessagesItems"\n\t\t\t\t@itemChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</CreateChatSection>\n\t`};const q={components:{CreateChatSection:A},data(){return{}},template:`\n\t\t<Section name="appearance" title="Appearance" />\n\t`};const X={name:"GroupChatCreation",components:{TitleInput:_,ChatAvatar:T,ChatMembersSelector:v,SettingsSection:U,RightsSection:$,AppearanceSection:q,ButtonPanel:I,CreateChatHeading:E},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[["user",r.Core.getUserId()]],settings:{isAvailableInSearch:false,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},watch:{chatTitle(t){c.CreateChatManager.getInstance().setChatTitle(t)}},created(){l.EventEmitter.subscribe(u.EventType.layout.onLayoutChange,this.onLayoutChange);this.rights.ownerId=r.Core.getUserId();this.initDefaultRolesForRights();this.restoreFields();c.CreateChatManager.getInstance().setChatType(u.ChatType.chat);c.CreateChatManager.getInstance().setCreationStatus(true);c.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){if(this.exitByCancel||this.exitByChatTypeSwitch||this.exitByCreation){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},async onCreateClick(){this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({title:this.chatTitle,avatar:this.avatarFile,memberEntities:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages}).catch((()=>{this.isCreating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_ERROR")})}));this.isCreating=false;this.exitByCreation=true;c.CreateChatManager.getInstance().setCreationStatus(false);void C.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;c.CreateChatManager.getInstance().setCreationStatus(false);C.Messenger.openChat()},onAvatarChange(t){this.avatarFile=t;c.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onScroll(){var t,e,a,n;(t=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=d.MenuManager.getMenuById(u.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=d.MenuManager.getMenuById(u.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===u.Layout.createChat.name&&e.entityId!==u.ChatType.chat){this.exitByChatTypeSwitch=true}},saveFields(){c.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights})},restoreFields(){const t=c.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:n,settings:s,rights:i}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=n;this.settings=s;this.rights=i},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:a,manageMessages:n}=o.PermissionManager.getInstance().getDefaultRolesForActionGroups();this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=a;this.rights.manageMessages=n},getChatService(){if(!this.chatService){this.chatService=new p.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --chat" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar :avatarFile="avatarFile" :chatTitle="chatTitle" @avatarChange="onAvatarChange" />\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHAT_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_MEMBERS_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector :chatMembers="chatMembers" @membersChange="onMembersChange" />\n\t\t\t</div>\n\t\t\t<SettingsSection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t:description="settings.description"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t\t@descriptionChange="onDescriptionChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/> \n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CHAT_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const V={components:{CreateChatSection:A,CreateChatHeading:E,Dropdown:i.Dropdown,Toggle:i.Toggle},props:{passwordNeeded:{type:Boolean,required:true},password:{type:String,required:true}},emits:["passwordNeededChange","passwordChange"],computed:{ToggleSize:()=>i.ToggleSize},methods:{onPasswordNeededChange(t){this.$emit("passwordNeededChange",t)},onPasswordChange(t){this.$emit("passwordChange",t.target.value)},onToggleLabelClick(){this.onPasswordNeededChange(!this.passwordNeeded)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection name="conference" :title="loc('IM_CREATE_CHAT_CONFERENCE_SECTION')">\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_CONFERENCE_SECTION_PRIVACY')" />\n\t\t\t\t<div @click="onToggleLabelClick" class="bx-im-chat-forms-chat-settings__type-select">\n\t\t\t\t\t<Toggle :size="ToggleSize.M" :isEnabled="passwordNeeded" />\n\t\t\t\t\t<div class="bx-im-chat-forms-chat-settings__type-select_label">\n\t\t\t\t\t\t{{ loc('IM_CREATE_CHAT_CONFERENCE_SECTION_USE_PASSWORD') }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div v-if="passwordNeeded" class="bx-im-chat-forms-chat-settings__password-container ui-ctl ui-ctl-textbox">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\tclass="bx-im-content-create-chat-conference__password-input ui-ctl-element"\n\t\t\t\t\t\t:value="password"\n\t\t\t\t\t\t:placeholder="loc('IM_CREATE_CHAT_CONFERENCE_SECTION_PASSWORD_PLACEHOLDER')"\n\t\t\t\t\t\t@input="onPasswordChange"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const z={name:"ConferenceCreation",components:{TitleInput:_,ChatAvatar:T,ChatMembersSelector:v,SettingsSection:U,RightsSection:$,AppearanceSection:q,ConferenceSection:V,ButtonPanel:I,CreateChatHeading:E},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[["user",r.Core.getUserId()]],conference:{passwordNeeded:false,password:""},settings:{description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},watch:{chatTitle(t){c.CreateChatManager.getInstance().setChatTitle(t)}},created(){l.EventEmitter.subscribe(u.EventType.layout.onLayoutChange,this.onLayoutChange);this.rights.ownerId=r.Core.getUserId();this.initDefaultRolesForRights();this.restoreFields();c.CreateChatManager.getInstance().setChatType(u.ChatType.videoconf);c.CreateChatManager.getInstance().setCreationStatus(true);c.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){if(this.exitByCancel||this.exitByChatTypeSwitch){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},onAvatarChange(t){this.avatarFile=t;c.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onPasswordNeededChange(t){this.conference.passwordNeeded=t},onPasswordChange(t){this.conference.password=t},async onCreateClick(){if(!this.checkPassword()){this.showPasswordError();return}this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({entityType:u.ChatType.videoconf,title:this.chatTitle,avatar:this.avatarFile,memberEntities:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages,conferencePassword:this.conference.passwordNeeded?this.conference.password:""}).catch((()=>{this.isCreating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_ERROR")})}));this.isCreating=false;c.CreateChatManager.getInstance().setCreationStatus(false);void C.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;c.CreateChatManager.getInstance().setCreationStatus(false);C.Messenger.openChat()},onScroll(){var t,e,a,n;(t=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=d.MenuManager.getMenuById(u.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=d.MenuManager.getMenuById(u.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===u.Layout.createChat.name&&e.entityId!==u.ChatType.videoconf){this.exitByChatTypeSwitch=true}},saveFields(){c.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights,conference:this.conference})},restoreFields(){const t=c.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:n,conference:s,settings:i,rights:r}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=n;this.conference=s;this.settings=i;this.rights=r},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:a,manageMessages:n}=o.PermissionManager.getInstance().getDefaultRolesForActionGroups();this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=a;this.rights.manageMessages=n},checkPassword(){const t=3;if(!this.conference.passwordNeeded){return true}const e=this.conference.password.trim();return e!==""&&e.length>=t},showPasswordError(){BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_CONFERENCE_PASSWORD_ERROR")})},getChatService(){if(!this.chatService){this.chatService=new p.ChatService}return this.chatService},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --conference" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar :avatarFile="avatarFile" :chatTitle="chatTitle" @avatarChange="onAvatarChange" :squared="true" />\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CONFERENCE_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_MEMBERS_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector :chatMembers="chatMembers" @membersChange="onMembersChange" />\n\t\t\t</div>\n\t\t\t<ConferenceSection\n\t\t\t\t:passwordNeeded="conference.passwordNeeded"\n\t\t\t\t:password="conference.password"\n\t\t\t\t@passwordNeededChange="onPasswordNeededChange"\n\t\t\t\t@passwordChange="onPasswordChange"\n\t\t\t/>\n\t\t\t<SettingsSection\n\t\t\t\t:withSearchOption="false"\n\t\t\t\t:description="settings.description"\n\t\t\t\t@descriptionChange="onDescriptionChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CONFERENCE_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const W={components:{CreateChatSection:A,RadioOption:b},props:{withSearchOption:{type:Boolean,default:true},isAvailableInSearch:{type:Boolean,default:false}},emits:["chatTypeChange"],data(){return{}},computed:{privacyOptions(){return[{value:true,text:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_OPEN_TITLE"),subtext:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_OPEN_SUBTITLE_V2"),selected:this.isAvailableInSearch},{value:false,text:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_PRIVATE_TITLE"),subtext:this.loc("IM_CREATE_CHAT_PRIVACY_SECTION_PRIVATE_SUBTITLE_V2"),selected:!this.isAvailableInSearch}]}},methods:{onTypeChange(t){this.$emit("chatTypeChange",t)},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<CreateChatSection\n\t\t\tname="privacy"\n\t\t\t:title="loc('IM_CREATE_CHAT_PRIVACY_SECTION_V2')"\n\t\t\t:alwaysOpened="true"\n\t\t>\n\t\t\t<div class="bx-im-content-create-chat__section_block">\n\t\t\t\t<RadioOption :items="privacyOptions" @change="onTypeChange" />\n\t\t\t</div>\n\t\t</CreateChatSection>\n\t`};const Y={name:"ChannelCreation",components:{TitleInput:_,ChatAvatar:T,ChatMembersSelector:v,SettingsSection:U,RightsSection:$,AppearanceSection:q,PrivacySection:W,ButtonPanel:I,TextareaInput:S,CreateChatHeading:E},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[["user",r.Core.getUserId()]],settings:{isAvailableInSearch:true,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},computed:{ChatType:()=>u.ChatType},watch:{chatTitle(t){c.CreateChatManager.getInstance().setChatTitle(t)}},created(){l.EventEmitter.subscribe(u.EventType.layout.onLayoutChange,this.onLayoutChange);this.rights.ownerId=r.Core.getUserId();this.initDefaultRolesForRights();this.restoreFields();c.CreateChatManager.getInstance().setChatType(u.ChatType.channel);c.CreateChatManager.getInstance().setCreationStatus(true);c.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){l.EventEmitter.unsubscribe(u.EventType.layout.onLayoutChange,this.onLayoutChange);if(this.exitByCancel||this.exitByChatTypeSwitch||this.exitByCreation){return}this.saveFields()},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},async onCreateClick(){this.isCreating=true;const{newDialogId:t}=await this.getChatService().createChat({type:u.ChatType.channel,title:this.chatTitle,avatar:this.avatarFile,memberEntities:this.chatMembers,ownerId:this.rights.ownerId,managers:this.rights.managerIds,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages}).catch((()=>{this.isCreating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_ERROR")})}));this.isCreating=false;this.exitByCreation=true;c.CreateChatManager.getInstance().setCreationStatus(false);void C.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;c.CreateChatManager.getInstance().setCreationStatus(false);C.Messenger.openChat()},onAvatarChange(t){this.avatarFile=t;c.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onScroll(){var t,e,a,n;(t=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=d.MenuManager.getMenuById(u.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=d.MenuManager.getMenuById(u.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},onLayoutChange(t){const{to:e}=t.getData();if(e.name===u.Layout.createChat.name&&e.entityId!==u.ChatType.channel){this.exitByChatTypeSwitch=true}},saveFields(){c.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers,settings:this.settings,rights:this.rights})},restoreFields(){const t=c.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:n,settings:s,rights:i}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=n;this.settings=s;this.rights=i},initDefaultRolesForRights(){const{manageUsersAdd:t,manageUsersDelete:e,manageUi:a,manageMessages:n}=o.PermissionManager.getInstance().getDefaultRolesForActionGroups(u.ChatType.channel);this.rights.manageUsersAdd=t;this.rights.manageUsersDelete=e;this.rights.manageUi=a;this.rights.manageMessages=n},getChatService(){if(!this.chatService){this.chatService=new p.ChatService}return this.chatService},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --channel" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar :avatarFile="avatarFile" :chatTitle="chatTitle" @avatarChange="onAvatarChange" :squared="true" />\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHANNEL_TITLE_PLACEHOLDER_V2')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHANNEL_DESCRIPTION_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__description_container">\n\t\t\t\t<TextareaInput\n\t\t\t\t\t:value="settings.description"\n\t\t\t\t\t:placeholder="loc('IM_CREATE_CHANNEL_DESCRIPTION_PLACEHOLDER_V3')"\n\t\t\t\t\t:border="false"\n\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<PrivacySection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t/>\n\t\t\t<CreateChatHeading\n\t\t\t\t:text="loc('IM_CREATE_CHANNEL_MEMBERS_TITLE')"\n\t\t\t\t:hintText="loc('IM_CREATE_CHANNEL_MEMBERS_HINT')"\n\t\t\t/>\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector :chatMembers="chatMembers" @membersChange="onMembersChange" />\n\t\t\t</div>\n\t\t\t<RightsSection\n\t\t\t\t:chatType="ChatType.channel"\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_CHANNEL_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const j={name:"CollabCreation",components:{TitleInput:_,ChatAvatar:T,CreateChatHeading:E,ChatMembersSelector:v,ButtonPanel:I},data(){return{isCreating:false,avatarFile:null,chatTitle:"",chatMembers:[]}},watch:{chatTitle(t){c.CreateChatManager.getInstance().setChatTitle(t)}},created(){l.EventEmitter.subscribe(u.EventType.layout.onLayoutChange,this.onLayoutChange);this.restoreFields();c.CreateChatManager.getInstance().setChatType(u.ChatType.collab);c.CreateChatManager.getInstance().setCreationStatus(true);c.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},beforeUnmount(){l.EventEmitter.unsubscribe(u.EventType.layout.onLayoutChange,this.onLayoutChange);if(this.exitByCancel||this.exitByChatTypeSwitch||this.exitByCreation){return}this.saveFields()},methods:{restoreFields(){const t=c.CreateChatManager.getInstance().getFields();if(!t){return}const{chatTitle:e,avatarFile:a,chatMembers:n}=t;this.chatTitle=e;this.avatarFile=a;this.chatMembers=n},saveFields(){c.CreateChatManager.getInstance().saveFields({chatTitle:this.chatTitle,avatarFile:this.avatarFile,chatMembers:this.chatMembers})},onLayoutChange(t){const{to:e}=t.getData();if(e.name===u.Layout.createChat.name&&e.entityId!==u.ChatType.collab){this.exitByChatTypeSwitch=true}},onMembersChange(t){this.chatMembers=t},async onCreateClick(){this.isCreating=true;const{newDialogId:t}=await this.getChatService().createCollab({title:this.chatTitle,avatar:this.avatarFile,memberEntities:this.chatMembers}).catch((()=>{this.isCreating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_CREATE_CHAT_ERROR")})}));this.isCreating=false;this.exitByCreation=true;c.CreateChatManager.getInstance().setCreationStatus(false);void C.Messenger.openChat(t)},onCancelClick(){this.exitByCancel=true;c.CreateChatManager.getInstance().setCreationStatus(false);C.Messenger.openChat()},onAvatarChange(t){this.avatarFile=t;c.CreateChatManager.getInstance().setChatAvatar(this.avatarFile)},onScroll(){var t,e,a,n;(t=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=d.MenuManager.getMenuById(u.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=d.MenuManager.getMenuById(u.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},getChatService(){if(!this.chatService){this.chatService=new p.ChatService}return this.chatService},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)}},template:`\n\t\t<div class="bx-im-content-chat-forms__content --collab" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar :avatarFile="avatarFile" :chatTitle="chatTitle" @avatarChange="onAvatarChange" :squared="true" />\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_COLLAB_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_COLLAB_MEMBERS_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector :chatMembers="chatMembers" @membersChange="onMembersChange" />\n\t\t\t</div>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isCreating"\n\t\t\t:createButtonTitle="loc('IM_CREATE_COLLAB_CONFIRM')"\n\t\t\t@create="onCreateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const J={[u.ChatType.chat]:X,[u.ChatType.videoconf]:z,[u.ChatType.channel]:Y,[u.ChatType.collab]:j,default:X};const K={name:"CreateChatContent",components:{GroupChatCreation:X,ConferenceCreation:z,ChannelCreation:Y,CollabCreation:j},props:{entityId:{type:String,required:true}},computed:{ChatType:()=>u.ChatType,chatType(){return this.entityId},creationComponent(){var t;return(t=J[this.chatType])!=null?t:J.default}},template:`\n\t\t<div class="bx-im-content-chat-forms__container">\n\t\t\t<component :is="creationComponent" />\n\t\t</div>\n\t`};var Q=babelHelpers.classPrivateFieldLooseKey("initialManagers");var Z=babelHelpers.classPrivateFieldLooseKey("initialMembers");class tt{constructor(){Object.defineProperty(this,Q,{writable:true,value:[]});Object.defineProperty(this,Z,{writable:true,value:[]})}setInitialManagers(t){babelHelpers.classPrivateFieldLooseBase(this,Q)[Q]=t}setInitialChatMembers(t){babelHelpers.classPrivateFieldLooseBase(this,Z)[Z]=t}getAddedMemberEntities(t){const e=new Set(babelHelpers.classPrivateFieldLooseBase(this,Z)[Z].map((t=>JSON.stringify(t))));return t.filter((t=>!e.has(JSON.stringify(t))))}getDeletedMemberEntities(t){const e=new Set(t.map((t=>JSON.stringify(t))));return babelHelpers.classPrivateFieldLooseBase(this,Z)[Z].filter((t=>!e.has(JSON.stringify(t))))}getAddedManagers(t){const e=new Set(babelHelpers.classPrivateFieldLooseBase(this,Q)[Q]);return t.filter((t=>!e.has(t)))}getDeletedManagers(t){const e=new Set(t);return babelHelpers.classPrivateFieldLooseBase(this,Q)[Q].filter((t=>!e.has(t)))}}const et="imUpdateChatCollapsedUsers";const at="/bitrix/js/im/v2/component/content/chat-forms/src/css/images/collapsed-users-avatar.svg";function nt({title:t,onclick:e}){const a=`\n\t\t<div class="bx-im-content-chat-forms__collapsed-users">\n\t\t\t${t}\n\t\t\t<div class="bx-im-content-chat-forms__collapsed-users-icon"></div>\n\t\t</div>\n\t`;return{id:0,entityId:et,avatar:at,title:{text:a,type:"html"},deselectable:false,tagOptions:{onclick:e}}}const st={name:"GroupChatUpdating",components:{TitleInput:_,ChatAvatar:T,ButtonPanel:I,CreateChatHeading:E,ChatMembersSelector:v,SettingsSection:U,RightsSection:$},props:{dialogId:{type:String,required:true}},data(){return{isLoading:true,isUpdating:false,areUsersCollapsed:false,collapsedUsersCount:0,avatarFile:null,avatarUrl:"",chatTitle:"",chatMembers:[],settings:{isAvailableInSearch:false,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},collapsedUsers(){if(!this.areUsersCollapsed){return[]}const t=this.loc("IM_UPDATE_GROUP_CHAT_COLLAPSED_ELEMENT",{"#COUNT#":this.collapsedUsersCount});const e=nt({title:t,onclick:this.onCollapsedUsersClick});return[e]},canChangeSearchAvailability(){return[u.ChatType.open,u.ChatType.chat].includes(this.dialog.type)},changedChatType(){if(!this.canChangeSearchAvailability){return this.dialog.type}return this.settings.isAvailableInSearch?u.ChatType.open:u.ChatType.chat}},async created(){await this.fillForm();this.memberDiffManager=new tt;this.memberDiffManager.setInitialChatMembers(this.chatMembers);this.memberDiffManager.setInitialManagers(this.rights.managerIds);this.isLoading=false},methods:{onMembersChange(t){this.chatMembers=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},onDescriptionChange(t){this.settings.description=t},async fillForm(){this.chatTitle=this.dialog.name;this.avatarUrl=this.dialog.avatar;this.settings.description=this.dialog.description;this.chatMembers=await this.getMemberEntities();this.rights.ownerId=this.dialog.ownerId;this.rights.manageMessages=this.dialog.permissions.manageMessages;this.rights.managerIds=this.dialog.managerList;this.rights.manageUi=this.dialog.permissions.manageUi;this.rights.manageUsersAdd=this.dialog.permissions.manageUsersAdd;this.rights.manageUsersDelete=this.dialog.permissions.manageUsersDelete;this.settings.isAvailableInSearch=this.dialog.type===u.ChatType.open},async getMemberEntities(){const{memberEntities:t,areUsersCollapsed:e,userCount:a}=await this.getChatService().getMemberEntities(this.chatId);if(e){this.areUsersCollapsed=true;this.collapsedUsersCount=a;return t}return t},async onUpdateClick(){m.Analytics.getInstance().onSubmitChatEditForm(this.dialogId);this.isUpdating=true;await this.getChatService().updateChat(this.chatId,{title:this.chatTitle,avatar:this.avatarFile,managers:this.dialog.managerList,type:this.changedChatType,addedMemberEntities:this.memberDiffManager.getAddedMemberEntities(this.chatMembers),deletedMemberEntities:this.memberDiffManager.getDeletedMemberEntities(this.chatMembers),addedManagers:this.memberDiffManager.getAddedManagers(this.rights.managerIds),deletedManagers:this.memberDiffManager.getDeletedManagers(this.rights.managerIds),ownerId:this.rights.ownerId,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages}).catch((()=>{this.isUpdating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_UPDATE_CHAT_ERROR")})}));this.isUpdating=false;return C.Messenger.openChat(this.dialogId)},onCancelClick(){m.Analytics.getInstance().onCancelChatEditForm(this.dialogId);void C.Messenger.openChat(this.dialogId)},onAvatarChange(t){this.avatarFile=t;this.avatarUrl=""},onScroll(){var t,e,a,n;(t=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=d.MenuManager.getMenuById(u.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=d.MenuManager.getMenuById(u.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},getChatService(){if(!this.chatService){this.chatService=new p.ChatService}return this.chatService},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)},async onCollapsedUsersClick(){const t=await M.showExitUpdateGroupChatConfirm();if(!t){return}await this.onUpdateClick();l.EventEmitter.emit(u.EventType.sidebar.open,{panel:u.SidebarDetailBlock.members,dialogId:this.dialogId})}},template:`\n\t\t<div v-if="isLoading" class="bx-im-content-chat-forms__skeleton"></div>\n\t\t<div v-else class="bx-im-content-chat-forms__content --chat" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar\n\t\t\t\t\t:avatarFile="avatarFile" \n\t\t\t\t\t:existingAvatarUrl="avatarUrl" \n\t\t\t\t\t:chatTitle="chatTitle" \n\t\t\t\t\t@avatarChange="onAvatarChange" \n\t\t\t\t/>\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHAT_TITLE_PLACEHOLDER')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHAT_MEMBERS_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector \n\t\t\t\t\t:customElements="collapsedUsers"\n\t\t\t\t\t:chatMembers="chatMembers" \n\t\t\t\t\t@membersChange="onMembersChange" \n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<SettingsSection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t:description="settings.description"\n\t\t\t\t:withSearchOption="canChangeSearchAvailability"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t\t@descriptionChange="onDescriptionChange"\n\t\t\t/>\n\t\t\t<RightsSection\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isUpdating || isLoading"\n\t\t\t:createButtonTitle="loc('IM_UPDATE_CONFIRM')"\n\t\t\t@create="onUpdateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const it={name:"ChannelUpdating",components:{TitleInput:_,ChatAvatar:T,ChatMembersSelector:v,SettingsSection:U,RightsSection:$,AppearanceSection:q,PrivacySection:W,ButtonPanel:I,TextareaInput:S,CreateChatHeading:E},props:{dialogId:{type:String,required:true}},data(){return{isLoading:true,isUpdating:false,areUsersCollapsed:false,collapsedUsersCount:0,avatarFile:null,avatarUrl:"",chatTitle:"",chatMembers:[],settings:{isAvailableInSearch:true,description:""},rights:{ownerId:0,managerIds:[],manageUsersAdd:"",manageUsersDelete:"",manageUi:"",manageMessages:""}}},computed:{ChatType:()=>u.ChatType,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},collapsedUsers(){if(!this.areUsersCollapsed){return[]}const t=this.loc("IM_UPDATE_CHANNEL_COLLAPSED_ELEMENT",{"#COUNT#":this.collapsedUsersCount});const e=nt({title:t,onclick:this.onCollapsedUsersClick});return[e]},changedChatType(){return this.settings.isAvailableInSearch?u.ChatType.openChannel:u.ChatType.channel}},async created(){await this.fillForm();this.memberDiffManager=new tt;this.memberDiffManager.setInitialChatMembers(this.chatMembers);this.memberDiffManager.setInitialManagers(this.rights.managerIds);this.isLoading=false},methods:{onMembersChange(t){this.chatMembers=t},onOwnerChange(t){this.rights.ownerId=t},onManagersChange(t){this.rights.managerIds=t},onDescriptionChange(t){this.settings.description=t},onManageUsersAddChange(t){this.rights.manageUsersAdd=t},onManageUsersDeleteChange(t){this.rights.manageUsersDelete=t},onManageUiChange(t){this.rights.manageUi=t},onManageMessagesChange(t){this.rights.manageMessages=t},onChatTypeChange(t){this.settings.isAvailableInSearch=t},async onUpdateClick(){m.Analytics.getInstance().onSubmitChatEditForm(this.dialogId);this.isUpdating=true;await this.getChatService().updateChat(this.chatId,{title:this.chatTitle,avatar:this.avatarFile,type:this.changedChatType,addedMemberEntities:this.memberDiffManager.getAddedMemberEntities(this.chatMembers),deletedMemberEntities:this.memberDiffManager.getDeletedMemberEntities(this.chatMembers),addedManagers:this.memberDiffManager.getAddedManagers(this.rights.managerIds),deletedManagers:this.memberDiffManager.getDeletedManagers(this.rights.managerIds),ownerId:this.rights.ownerId,managers:this.dialog.managerList,isAvailableInSearch:this.settings.isAvailableInSearch,description:this.settings.description,manageUsersAdd:this.rights.manageUsersAdd,manageUsersDelete:this.rights.manageUsersDelete,manageUi:this.rights.manageUi,manageMessages:this.rights.manageMessages}).catch((()=>{this.isUpdating=false;BX.UI.Notification.Center.notify({content:this.loc("IM_UPDATE_CHAT_ERROR")})}));this.isUpdating=false;return C.Messenger.openChat(this.dialogId)},onCancelClick(){m.Analytics.getInstance().onCancelChatEditForm(this.dialogId);void C.Messenger.openChat(this.dialogId)},onAvatarChange(t){this.avatarFile=t;this.avatarUrl=""},onScroll(){var t,e,a,n;(t=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersAddMenu))==null?void 0:t.close();(e=d.MenuManager.getMenuById(u.PopupType.createChatManageUsersDeleteMenu))==null?void 0:e.close();(a=d.MenuManager.getMenuById(u.PopupType.createChatManageUiMenu))==null?void 0:a.close();(n=d.MenuManager.getMenuById(u.PopupType.createChatManageMessagesMenu))==null?void 0:n.close()},getChatService(){if(!this.chatService){this.chatService=new p.ChatService}return this.chatService},async fillForm(){this.chatTitle=this.dialog.name;this.avatarUrl=this.dialog.avatar;this.settings.description=this.dialog.description;this.chatMembers=await this.getMemberEntities();this.rights.ownerId=this.dialog.ownerId;this.rights.manageMessages=this.dialog.permissions.manageMessages;this.rights.managerIds=this.dialog.managerList;this.rights.manageUi=this.dialog.permissions.manageUi;this.rights.manageUsersAdd=this.dialog.permissions.manageUsersAdd;this.rights.manageUsersDelete=this.dialog.permissions.manageUsersDelete;this.settings.isAvailableInSearch=this.dialog.type===u.ChatType.openChannel},async getMemberEntities(){const{memberEntities:t,areUsersCollapsed:e,userCount:a}=await this.getChatService().getMemberEntities(this.chatId);if(e){this.areUsersCollapsed=true;this.collapsedUsersCount=a;return t}return t},loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)},async onCollapsedUsersClick(){const t=await M.showExitUpdateChannelConfirm();if(!t){return}await this.onUpdateClick();l.EventEmitter.emit(u.EventType.sidebar.open,{panel:u.SidebarDetailBlock.members,dialogId:this.dialogId})}},template:`\n\t\t<div v-if="isLoading" class="bx-im-content-chat-forms__skeleton"></div>\n\t\t<div v-else class="bx-im-content-chat-forms__content --channel" @scroll="onScroll">\n\t\t\t<div class="bx-im-content-chat-forms__header">\n\t\t\t\t<ChatAvatar \n\t\t\t\t\t:avatarFile="avatarFile" \n\t\t\t\t\t:chatTitle="chatTitle"\n\t\t\t\t\t:existingAvatarUrl="avatarUrl"\n\t\t\t\t\t@avatarChange="onAvatarChange" \n\t\t\t\t\t:squared="true" \n\t\t\t\t/>\n\t\t\t\t<TitleInput v-model="chatTitle" :placeholder="loc('IM_CREATE_CHANNEL_TITLE_PLACEHOLDER_V2')" />\n\t\t\t</div>\n\t\t\t<CreateChatHeading :text="loc('IM_CREATE_CHANNEL_DESCRIPTION_TITLE')" />\n\t\t\t<div class="bx-im-content-chat-forms__description_container">\n\t\t\t\t<TextareaInput\n\t\t\t\t\t:value="settings.description"\n\t\t\t\t\t:placeholder="loc('IM_CREATE_CHANNEL_DESCRIPTION_PLACEHOLDER_V3')"\n\t\t\t\t\t:border="false"\n\t\t\t\t\t@input="onDescriptionChange"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<PrivacySection\n\t\t\t\t:isAvailableInSearch="settings.isAvailableInSearch"\n\t\t\t\t@chatTypeChange="onChatTypeChange"\n\t\t\t/>\n\t\t\t<CreateChatHeading\n\t\t\t\t:text="loc('IM_CREATE_CHANNEL_MEMBERS_TITLE')"\n\t\t\t\t:hintText="loc('IM_CREATE_CHANNEL_MEMBERS_HINT')"\n\t\t\t/>\n\t\t\t<div class="bx-im-content-chat-forms__members_container">\n\t\t\t\t<ChatMembersSelector\n\t\t\t\t\t:customElements="collapsedUsers"\n\t\t\t\t\t:chatMembers="chatMembers" \n\t\t\t\t\t@membersChange="onMembersChange" \n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<RightsSection\n\t\t\t\t:chatType="ChatType.channel"\n\t\t\t\t:ownerId="rights.ownerId"\n\t\t\t\t:managerIds="rights.managerIds"\n\t\t\t\t:manageUsersAdd="rights.manageUsersAdd"\n\t\t\t\t:manageUsersDelete="rights.manageUsersDelete"\n\t\t\t\t:manageUi="rights.manageUi"\n\t\t\t\t:manageMessages="rights.manageMessages"\n\t\t\t\t@ownerChange="onOwnerChange"\n\t\t\t\t@managersChange="onManagersChange"\n\t\t\t\t@manageUsersAddChange="onManageUsersAddChange"\n\t\t\t\t@manageUsersDeleteChange="onManageUsersDeleteChange"\n\t\t\t\t@manageUiChange="onManageUiChange"\n\t\t\t\t@manageMessagesChange="onManageMessagesChange"\n\t\t\t/>\n\t\t</div>\n\t\t<ButtonPanel\n\t\t\t:isCreating="isLoading || isUpdating"\n\t\t\t:createButtonTitle="loc('IM_UPDATE_CONFIRM')"\n\t\t\t@create="onUpdateClick"\n\t\t\t@cancel="onCancelClick"\n\t\t/>\n\t`};const rt={name:"UpdateChatContent",components:{GroupChatUpdating:st,ChannelUpdating:it},props:{entityId:{type:String,required:true}},computed:{ChatType:()=>u.ChatType,chatType(){const t=this.$store.getters["chats/get"](this.entityId,true);return t.type},isChannel(){const t=new Set([u.ChatType.channel,u.ChatType.openChannel]);return t.has(this.chatType)},isChat(){const t=new Set([u.ChatType.chat,u.ChatType.open,u.ChatType.videoconf]);return t.has(this.chatType)}},template:`\n\t\t<div class="bx-im-content-chat-forms__container">\n\t\t\t<GroupChatUpdating v-if="isChat" :dialogId="this.entityId" />\n\t\t\t<ChannelUpdating v-else-if="isChannel" :dialogId="this.entityId" />\n\t\t</div>\n\t`};t.CreateChatContent=K;t.UpdateChatContent=rt})(this.BX.Messenger.v2.Component.Content=this.BX.Messenger.v2.Component.Content||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Animation,BX.UI.EntitySelector,BX,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Lib,BX,BX.Event,BX.Main,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Messenger.v2.Const,BX.Messenger.v2.Lib);
//# sourceMappingURL=registry.bundle.map.js