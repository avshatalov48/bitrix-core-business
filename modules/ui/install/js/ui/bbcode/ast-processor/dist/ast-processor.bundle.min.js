this.BX=this.BX||{};this.BX.UI=this.BX.UI||{};(function(t,e){"use strict";function r(t,r){if(!e.Type.isArray(t)){throw new TypeError("array is not a array")}if(!e.Type.isInteger(r)){throw new TypeError("index is not a integer")}const n=r<0?t.length+r:r;return t[n]}class n{static flattenAst(t){if(t&&t.getChildren){const e=t.getChildren();return[...e,...e.flatMap((t=>n.flattenAst(t)))]}return[]}static parseSelector(t){const e=/(\w+)\[(.*?)]|\s*(>)\s*|\w+/g;const r=[...t.matchAll(e)];return r.map((([t,e,r,n])=>{if(n){return">"}if(r){const t=/(\w+)=["'](.*?)["']/g;const n=[...r.matchAll(t)];const s=n.map((([,t,e])=>[t,e]));return{nodeName:e,props:s}}return{nodeName:t,props:[]}}))}static matchesNodeWithSelector(t,r){if(t&&t.constructor.name===r.nodeName){if(r.props.length>0){return r.props.every((([r,n])=>{const s=(()=>{const n=`${r.charAt(0).toUpperCase()}${r.slice(1)}`;if(e.Type.isFunction(t[`get${n}`])){return t[`get${n}`]()}if(e.Type.isFunction(t[`is${n}`])){return t[`is${n}`]()}return null})();if(["true","false"].includes(n)){return s===(n==="true")}return s===n}))}return true}return false}static findParentNode(t,e){if(t){const r=t.getParent();if(n.matchesNodeWithSelector(r,e)){return r}return n.findParentNode(r,e)}return null}static findElements(t,s){const i=n.flattenAst(t);const c=n.parseSelector(s);const o=r(c,-1);let a=false;return c.reduceRight(((t,r)=>{if(e.Type.isPlainObject(r)){if(r===o){return t.filter((t=>n.matchesNodeWithSelector(t,r)))}if(a){a=false;return t.filter((t=>n.matchesNodeWithSelector(t.getParent(),r)))}return t.filter((t=>n.findParentNode(t,r)!==null))}if(r===">"){a=true}return t}),i)}static reduceAst(t,r){const s=t.getChildren==null?void 0:t.getChildren().reduce(((t,s)=>{const i=[n.reduceAst(s,r)].flat();if(!e.Type.isNil(i)){t.replaceChild(s,...i)}return t}),t);return r(t,s)}}t.AstProcessor=n})(this.BX.UI.Bbcode=this.BX.UI.Bbcode||{},BX);
//# sourceMappingURL=ast-processor.bundle.map.js