{"version":3,"file":"registry.bundle.js","sources":["../src/classes/recent-data-extractor.js","../src/recent.js","../src/classes/chat-data-extractor.js","../src/classes/chat/load.js","../src/classes/chat/create.js","../src/classes/chat/update.js","../src/classes/chat/rename.js","../src/classes/chat/mute.js","../src/classes/chat/pin.js","../src/classes/chat/read.js","../src/classes/chat/user.js","../src/chat.js","../src/classes/message/load.js","../src/classes/message/pin.js","../src/classes/message/edit.js","../src/classes/message/delete.js","../src/classes/message/mark.js","../src/classes/message/favorite.js","../src/message.js","../src/sending.js","../src/notification.js","../src/disk.js","../src/classes/recent/unread-recent.js","../src/classes/uploading/uploader-wrapper.js","../src/uploading.js","../src/settings.js","../src/lines.js","../src/copilot.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, UserRole, MessageStatus, FakeMessagePrefix } from 'im.v2.const';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type { RecentRestResult, RawUser, RawChat, RawRecentItem, RawMessage } from '../types/rest';\n\ntype RecentFile = {\n\tid: number,\n\tname: string,\n\ttype: string,\n};\n\ntype ExtractionResult = {\n\tusers: RawUser[],\n\tchats: RawChat[],\n\tmessages: RawMessage[],\n\tfiles: RecentFile[],\n\trecentItems: RawRecentItem[]\n};\n\nexport class RecentDataExtractor\n{\n\t#restResult: RecentRestResult;\n\t#withBirthdays: boolean;\n\n\t#users: { [id: string]: RawUser } = {};\n\t#chats: { [id: string]: RawChat } = {};\n\t#messages: { [id: string]: RawMessage } = {};\n\t#files: { [id: string]: RecentFile } = {};\n\t#recentItems: { [id: string]: RawRecentItem } = {};\n\n\tconstructor(params: { rawData: RecentRestResult, withBirthdays?: boolean })\n\t{\n\t\tconst { rawData, withBirthdays = true } = params;\n\t\tthis.#withBirthdays = withBirthdays;\n\t\tthis.#restResult = rawData;\n\t}\n\n\tgetItems(): ExtractionResult\n\t{\n\t\tconst { items = [] } = this.#restResult;\n\t\titems.forEach((item: RawRecentItem) => {\n\t\t\tthis.#extractUser(item);\n\t\t\tthis.#extractChat(item);\n\t\t\tthis.#extractMessage(item);\n\t\t\tthis.#extractRecentItem(item);\n\t\t});\n\n\t\tthis.#extractBirthdayItems();\n\n\t\treturn {\n\t\t\tusers: Object.values(this.#users),\n\t\t\tchats: Object.values(this.#chats),\n\t\t\tmessages: Object.values(this.#messages),\n\t\t\tfiles: Object.values(this.#files),\n\t\t\trecentItems: Object.values(this.#recentItems),\n\t\t};\n\t}\n\n\t#extractUser(item: RawRecentItem)\n\t{\n\t\tif (item.user?.id && !this.#users[item.user.id])\n\t\t{\n\t\t\tthis.#users[item.user.id] = item.user;\n\t\t}\n\t}\n\n\t#extractChat(item: RawRecentItem)\n\t{\n\t\tif (item.chat)\n\t\t{\n\t\t\tthis.#chats[item.id] = this.#prepareGroupChat(item);\n\n\t\t\tif (item.user.id && !this.#chats[item.user.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForAdditionalUser(item.user);\n\t\t\t}\n\t\t}\n\t\telse if (item.user.id)\n\t\t{\n\t\t\tconst existingRecentItem = Core.getStore().getters['recent/get'](item.user.id);\n\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForUser(item);\n\t\t\t}\n\t\t}\n\t}\n\n\t#extractMessage(item: RawRecentItem): void\n\t{\n\t\tconst message = item.message;\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (message.id === 0)\n\t\t{\n\t\t\tmessage.id = `${FakeMessagePrefix}-${item.id}`;\n\t\t}\n\n\t\tlet viewedByOthers = false;\n\t\tif (message.status === MessageStatus.delivered)\n\t\t{\n\t\t\tviewedByOthers = true;\n\t\t}\n\n\t\tif (Type.isPlainObject(message.file))\n\t\t{\n\t\t\tconst file: RecentFile = message.file;\n\t\t\tmessage.files = [file.id];\n\n\t\t\tconst existingFile = Core.getStore().getters['files/get'](file.id);\n\t\t\t// recent has shortened file format, we should not rewrite file if model has it\n\t\t\tif (!existingFile)\n\t\t\t{\n\t\t\t\tthis.#files[file.id] = file;\n\t\t\t}\n\t\t}\n\n\t\tconst existingMessage: ImModelMessage = Core.getStore().getters['messages/getById'](message.id);\n\t\t// recent has shortened attach format, we should not rewrite attach if model has it\n\t\tif (Type.isArrayFilled(existingMessage?.attach))\n\t\t{\n\t\t\tdelete message.attach;\n\t\t}\n\n\t\tthis.#messages[message.id] = { ...message, viewedByOthers };\n\t}\n\n\t#extractRecentItem(item: RawRecentItem): void\n\t{\n\t\tconst messageId = item.message?.id ?? 0;\n\t\tthis.#recentItems[item.id] = { ...item, messageId };\n\t}\n\n\t#extractBirthdayItems()\n\t{\n\t\tif (!this.#withBirthdays)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { birthdayList = [] } = this.#restResult;\n\t\tbirthdayList.forEach((item) => {\n\t\t\tif (!this.#users[item.id])\n\t\t\t{\n\t\t\t\tthis.#users[item.id] = item;\n\t\t\t}\n\n\t\t\tif (!this.#chats[item.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.id] = this.#prepareChatForAdditionalUser(item);\n\t\t\t}\n\n\t\t\tif (!this.#recentItems[item.id])\n\t\t\t{\n\t\t\t\tconst messageId = `${FakeMessagePrefix}-${item.id}`;\n\t\t\t\tthis.#recentItems[item.id] = { ...this.#getBirthdayPlaceholder(item), messageId };\n\t\t\t\tthis.#messages[messageId] = { id: messageId };\n\t\t\t}\n\t\t});\n\t}\n\n\t#prepareGroupChat(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id,\n\t\t};\n\t}\n\n\t#prepareChatForUser(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: ChatType.user,\n\t\t\tcounter: item.counter,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#prepareChatForAdditionalUser(user: RawUser): RawChat\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: ChatType.user,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#getBirthdayPlaceholder(item: RawRecentItem): { id: string, isBirthdayPlaceholder: true }\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\tisBirthdayPlaceholder: true,\n\t\t};\n\t}\n}\n","import { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { RecentDataExtractor } from './classes/recent-data-extractor';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem } from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tdataIsPreloaded: boolean = false;\n\tfirstPageIsLoaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn Core.getStore().getters['recent/getRecentCollection'];\n\t}\n\n\tasync loadFirstPage({ ignorePreloadedItems = false } = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn('Im.RecentList: first page was preloaded');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\tconst result = await this.requestItems({ firstPage: true });\n\t\tthis.firstPageIsLoaded = true;\n\n\t\treturn result;\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn('Im.RecentList: setting preloaded data', params);\n\t\tconst { items, hasMore } = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId): void\n\t{\n\t\tLogger.warn('Im.RecentList: hide chat', dialogId);\n\t\tconst recentItem = Core.getStore().getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = Core.getStore().getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tCore.getRestClient().callMethod(RestMethod.imRecentHide, { DIALOG_ID: dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t\t});\n\t}\n\t// endregion public\n\n\tasync requestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\tconst result = await Core.getRestClient().callMethod(this.getQueryMethod(), queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t\t});\n\n\t\tthis.pagesLoaded++;\n\t\tLogger.warn(`Im.RecentList: ${firstPage ? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\tconst { items, hasMore } = result.data();\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.isLoading = false;\n\n\t\treturn this.updateModels(result.data());\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): JsonObject\n\t{\n\t\treturn {\n\t\t\tSKIP_OPENLINES: 'Y',\n\t\t\tLIMIT: this.itemsPerPage,\n\t\t\tLAST_MESSAGE_DATE: firstPage ? null : this.lastMessageDate,\n\t\t\tGET_ORIGINAL_TEXT: 'Y',\n\t\t\tPARSE_TEXT: 'Y',\n\t\t};\n\t}\n\n\tgetModelSaveMethod(): string\n\t{\n\t\treturn 'recent/setRecent';\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst extractor = new RecentDataExtractor({ rawData, ...this.getExtractorOptions() });\n\t\tconst extractedItems = extractor.getItems();\n\t\tconst {\n\t\t\tusers,\n\t\t\tchats,\n\t\t\tmessages,\n\t\t\tfiles,\n\t\t\trecentItems,\n\t\t} = extractedItems;\n\t\tLogger.warn('RecentService: prepared data for models', extractedItems);\n\n\t\tconst usersPromise = Core.getStore().dispatch('users/set', users);\n\t\tconst dialoguesPromise = Core.getStore().dispatch('chats/set', chats);\n\t\tconst messagesPromise = Core.getStore().dispatch('messages/store', messages);\n\t\tconst filesPromise = Core.getStore().dispatch('files/set', files);\n\t\tconst recentPromise = Core.getStore().dispatch(this.getModelSaveMethod(), recentItems);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, messagesPromise, filesPromise, recentPromise]);\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n\n\tgetExtractorOptions(): { withBirthdays?: boolean }\n\t{\n\t\treturn {};\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type {\n\tChatLoadRestResult,\n\tRawChat,\n\tRawFile,\n\tRawUser,\n\tRawShortUser,\n\tRawMessage,\n\tRawPin,\n\tRawReaction,\n} from '../types/rest';\n\nexport class ChatDataExtractor\n{\n\t#restResult: ChatLoadRestResult;\n\n\tconstructor(restResult: ChatLoadRestResult)\n\t{\n\t\tthis.#restResult = restResult;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#restResult.chat.id;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#restResult.chat.dialogId;\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.lines;\n\t}\n\n\tgetChats(): RawChat[]\n\t{\n\t\tconst mainChat = {\n\t\t\t...this.#restResult.chat,\n\t\t\thasPrevPage: this.#restResult.hasPrevPage,\n\t\t\thasNextPage: this.#restResult.hasNextPage,\n\t\t};\n\t\tconst chats = {\n\t\t\t[this.#restResult.chat.dialogId]: mainChat,\n\t\t};\n\t\tthis.#restResult.users.forEach((user) => {\n\t\t\tif (chats[user.id])\n\t\t\t{\n\t\t\t\tchats[user.id] = { ...chats[user.id], ...UserManager.getDialogForUser(user) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchats[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.values(chats);\n\t}\n\n\tgetFiles(): RawFile[]\n\t{\n\t\treturn this.#restResult.files ?? [];\n\t}\n\n\tgetUsers(): RawUser[]\n\t{\n\t\treturn this.#restResult.users ?? [];\n\t}\n\n\tgetAdditionalUsers(): RawShortUser[]\n\t{\n\t\treturn this.#restResult.usersShort ?? [];\n\t}\n\n\tgetMessages(): RawMessage[]\n\t{\n\t\treturn this.#restResult.messages ?? [];\n\t}\n\n\tgetMessagesToStore(): RawMessage[]\n\t{\n\t\treturn this.#restResult.additionalMessages ?? [];\n\t}\n\n\tgetPinnedMessageIds(): number[]\n\t{\n\t\tconst pinnedMessageIds = [];\n\t\tconst pins: RawPin[] = this.#restResult.pins ?? [];\n\t\tpins.forEach((pin) => {\n\t\t\tpinnedMessageIds.push(pin.messageId);\n\t\t});\n\n\t\treturn pinnedMessageIds;\n\t}\n\n\tgetReactions(): RawReaction[]\n\t{\n\t\treturn this.#restResult.reactions ?? [];\n\t}\n}\n","import { Type } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, Layout } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { MessageService } from 'im.v2.provider.service';\nimport { UserManager } from 'im.v2.lib.user';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport { ChatDataExtractor } from '../chat-data-extractor';\n\nimport type { ChatLoadRestResult } from '../../types/rest';\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tconst params = { dialogId };\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatShallowLoad, params);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoad, params);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoadInContext, params);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\tif (!Utils.dialog.isExternalId(dialogId))\n\t\t{\n\t\t\treturn Promise.resolve(dialogId);\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2ChatGetDialogId, {\n\t\t\tdata: { externalId: dialogId },\n\t\t})\n\t\t\t.then((result: {dialogId: string}) => {\n\t\t\t\treturn result.dialogId;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error preparing external id', error);\n\t\t\t});\n\t}\n\n\tasync #requestChat(actionName: string, params: Object<string, any>): Promise\n\t{\n\t\tconst { dialogId } = params;\n\t\tthis.#markDialogAsLoading(dialogId);\n\n\t\tconst actionResult = await runAction(actionName, { data: params })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading chat', error);\n\t\t\t\tthis.#markDialogAsNotLoaded(dialogId);\n\t\t\t\tthrow error;\n\t\t\t});\n\t\tconst updateModelResult = await this.#updateModels(actionResult);\n\t\tif (Type.isStringFilled(updateModelResult?.linesDialogId))\n\t\t{\n\t\t\tLayoutManager.getInstance().setLastOpenedElement(Layout.chat.name, '');\n\n\t\t\treturn Messenger.openLines(updateModelResult.linesDialogId);\n\t\t}\n\n\t\tif (this.#isDialogLoadedMarkNeeded(actionName))\n\t\t{\n\t\t\treturn this.#markDialogAsLoaded(dialogId);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#markDialogAsLoading(dialogId: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: true,\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsNotLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#isDialogLoadedMarkNeeded(actionName: string): boolean\n\t{\n\t\treturn actionName !== RestMethod.imV2ChatShallowLoad;\n\t}\n\n\t#updateModels(restResult: ChatLoadRestResult): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(restResult);\n\t\tif (extractor.isOpenlinesChat())\n\t\t{\n\t\t\treturn Promise.resolve({ linesDialogId: extractor.getDialogId() });\n\t\t}\n\n\t\tconst chatsPromise = this.#store.dispatch('chats/set', extractor.getChats());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers()),\n\t\t]);\n\t\tconst messagesPromise = Promise.all([\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true,\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessageIds(),\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions()),\n\t\t]);\n\n\t\treturn Promise.all([\n\t\t\tchatsPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\tmessagesPromise,\n\t\t]);\n\t}\n}\n","import { Type } from 'main.core';\nimport { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { ChatConfig, RestChatConfig } from '../../types/chat';\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync createChat(chatConfig: ChatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(chatConfig);\n\n\t\tconst createResult: RestResult = await this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: preparedFields,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tconst { chatId: newChatId } = createResult.data();\n\n\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\tconst newDialogId = `chat${newChatId}`;\n\t\tthis.#addChatToModel(newDialogId, preparedFields);\n\n\t\treturn { newDialogId, newChatId };\n\t}\n\n\tasync #prepareFields(chatConfig: ChatConfig): RestChatConfig\n\t{\n\t\tconst preparedConfig = { ...chatConfig };\n\t\tif (preparedConfig.avatar)\n\t\t{\n\t\t\tpreparedConfig.avatar = await Utils.file.getBase64(chatConfig.avatar);\n\t\t}\n\n\t\tpreparedConfig.managers = preparedConfig.managers ?? [];\n\t\tpreparedConfig.members = preparedConfig.members ?? [];\n\t\tconst allMembers = [...preparedConfig.members, ...preparedConfig.managers];\n\t\tif (preparedConfig.ownerId)\n\t\t{\n\t\t\tallMembers.push(preparedConfig.ownerId);\n\t\t}\n\t\tpreparedConfig.members = [...new Set(allMembers)];\n\n\t\treturn {\n\t\t\ttype: preparedConfig.type?.toUpperCase() ?? null,\n\t\t\tentityType: preparedConfig.entityType?.toUpperCase() ?? null,\n\t\t\ttitle: preparedConfig.title ?? null,\n\t\t\tavatar: preparedConfig.avatar ?? null,\n\t\t\tdescription: preparedConfig.description ?? null,\n\t\t\tusers: preparedConfig.members,\n\t\t\tmanagers: preparedConfig.managers,\n\t\t\townerId: preparedConfig.ownerId ?? null,\n\t\t\tsearchable: preparedConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\tmanageUsersAdd: preparedConfig.manageUsersAdd ?? null,\n\t\t\tmanageUsersDelete: preparedConfig.manageUsersDelete ?? null,\n\t\t\tmanageUi: preparedConfig.manageUi ?? null,\n\t\t\tmanageSettings: preparedConfig.manageSettings ?? null,\n\t\t\tcanPost: preparedConfig.canPost ?? null,\n\t\t\tconferencePassword: preparedConfig.conferencePassword ?? null,\n\t\t};\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: RestChatConfig)\n\t{\n\t\tlet chatType = chatConfig.searchable === 'Y' ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tif (Type.isStringFilled(chatConfig.entityType))\n\t\t{\n\t\t\tchatType = chatConfig.entityType.toLowerCase();\n\t\t}\n\n\t\tif (Type.isStringFilled(chatConfig.type))\n\t\t{\n\t\t\tchatType = chatConfig.type.toLowerCase();\n\t\t}\n\n\t\tthis.#store.dispatch('chats/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.users.length,\n\t\t\trole: UserRole.owner,\n\t\t\tcanPost: chatConfig.canPost,\n\t\t});\n\t}\n}\n","import { isResizableImage, resizeImage } from 'ui.uploader.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Utils } from 'im.v2.lib.utils';\n\nconst MAX_AVATAR_SIZE = 180;\n\nexport class UpdateService\n{\n\tasync prepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\tif (!isResizableImage(avatarFile))\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\treturn Promise.reject(new Error('UpdateService: prepareAvatar: incorrect image'));\n\t\t}\n\n\t\tconst { preview: resizedAvatar } = await resizeImage(avatarFile, {\n\t\t\twidth: MAX_AVATAR_SIZE,\n\t\t\theight: MAX_AVATAR_SIZE,\n\t\t});\n\n\t\treturn resizedAvatar;\n\t}\n\n\tasync changeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\tLogger.warn('ChatService: changeAvatar', chatId, avatarFile);\n\t\tconst avatarInBase64 = await Utils.file.getBase64(avatarFile);\n\n\t\treturn runAction(RestMethod.imV2ChatUpdate, {\n\t\t\tdata: {\n\t\t\t\tid: chatId,\n\t\t\t\tfields: { avatar: avatarInBase64 },\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: changeAvatar error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['chats/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName\n\t\t}).then(result => {\n\t\t\tLogger.warn('ChatService: renameChat result', result.data());\n\t\t\treturn Promise.resolve();\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tname: title\n\t\t\t}\n\t\t});\n\t}\n}","import {Runtime} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {RestMethod} from 'im.v2.const';\n\nimport {ChatService} from '../../chat';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, ChatService.DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('chats/mute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'Y'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('chats/unmute', {dialogId});\n\t\tconst queryParams = {'dialog_id': dialogId, 'action': 'N'};\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst {dialog_id: dialogId, action} = queryParams;\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch(error => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\t\t\tconst actionType = action === 'Y' ? 'chats/unmute' : 'chats/mute';\n\t\t\tthis.#store.dispatch(actionType, {dialogId});\n\t\t});\n\t}\n}","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'Y'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: false});\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tconst queryParams = {'DIALOG_ID': dialogId, 'ACTION': 'N'};\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch(error => {\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', {id: dialogId, action: true});\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat, ImModelRecentItem } from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<number>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('chats/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { counter: 0 },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\t\tthis.#store.dispatch('recent/unread', { id: dialogId, action: false });\n\t\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([rawChatId, messageIds]) => {\n\t\t\t\tthis.#readMessagesForChat(rawChatId, messageIds);\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tasync #readMessagesForChat(rawChatId: string, messageIds: Set<number>)\n\t{\n\t\tconst queueChatId = Number.parseInt(rawChatId, 10);\n\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\tif (messageIds.size === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst copiedMessageIds = [...messageIds];\n\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\tconst readMessagesCount = await this.#readMessageOnClient(queueChatId, copiedMessageIds);\n\n\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\tawait this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\n\t\tconst readResult = await this.#readMessageOnServer(queueChatId, copiedMessageIds)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t});\n\n\t\tthis.#checkChatCounter(readResult);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](dialogId);\n\t\tif (dialog.markedId === 0 && !recentItem?.unread)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0,\n\t\t\t},\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: 'Y',\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds,\n\t\t});\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tfields: { counter: newCounter },\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tconst { chatId, counter } = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: { counter },\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['chats/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory,\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: kick user ${userId} from chat ${dialogId}`);\n\t\tconst queryParams = { dialogId, userId };\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error kicking user from chat', error);\n\t\t});\n\t}\n\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.kickUserFromChat(dialogId, Core.getUserId());\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: false,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('recent/delete', {\n\t\t\tid: dialogId,\n\t\t});\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tLogger.warn(`UserService: join chat ${dialogId}`);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\trole: UserRole.member,\n\t\t\t},\n\t\t});\n\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatJoin, {\n\t\t\tdialogId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error joining chat', error);\n\t\t});\n\t}\n}\n","import { LoadService } from './classes/chat/load';\nimport { CreateService } from './classes/chat/create';\nimport { UpdateService } from './classes/chat/update';\nimport { RenameService } from './classes/chat/rename';\nimport { MuteService } from './classes/chat/mute';\nimport { PinService } from './classes/chat/pin';\nimport { ReadService } from './classes/chat/read';\nimport { UserService } from './classes/chat/user';\n\nexport class ChatService\n{\n\tstatic DEBOUNCE_TIME = 500;\n\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#updateService: UpdateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\treturn this.#loadService.prepareDialogId(dialogId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'update'\n\tprepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\treturn this.#updateService.prepareAvatar(avatarFile);\n\t}\n\n\tchangeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\treturn this.#updateService.changeAvatar(chatId, avatarFile);\n\t}\n\t// endregion 'update'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tthis.#userService.joinChat(dialogId);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#updateService = new UpdateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { callBatch, runAction } from 'im.v2.lib.rest';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { PaginationRestResult } from '../../types/message';\nimport type { RawMessage } from '../../types/rest';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#restClient: RestClient;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: RawMessage[] = [];\n\t#preparedUnreadMessages: RawMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tloadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastUnreadMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'ASC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\t\treturn this.#updateModels(result);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: {\n\t\t\t\tlastId: lastHistoryMessageId,\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tid: 'DESC',\n\t\t\t},\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageTail, { data: query }).then((result) => {\n\t\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\t\tthis.#preparedHistoryMessages = result.messages;\n\t\t\tconst hasPrevPage = result.hasNextPage;\n\t\t\tconst rawData = { ...result, hasPrevPage, hasNextPage: null };\n\n\t\t\treturn this.#updateModels(rawData);\n\t\t}).then(() => {\n\t\t\tthis.#isLoading = false;\n\n\t\t\treturn true;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\tthis.#isLoading = false;\n\t\t});\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId],\n\t\t\t},\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\n\t\treturn callBatch(query)\n\t\t\t.then((data) => {\n\t\t\t\tLogger.warn('MessageService: loadContext result', data);\n\n\t\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadContext error:', error);\n\t\t\t\tthrow new Error(error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#isLoading = false;\n\t\t\t});\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().chatId <= 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId)\n\t\t\t\t.catch(() => {})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages()\n\t\t\t.catch(() => {})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t}\n\n\tasync loadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageList, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages result', restResult);\n\t\trestResult.messages = this.#prepareInitialMessages(restResult.messages);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tthis.#isLoading = false;\n\t}\n\n\t#prepareInitialMessages(rawMessages: RawMessage[]): RawMessage[]\n\t{\n\t\tif (rawMessages.length === 0)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst lastMessageId = this.#getDialog().lastMessageId;\n\t\tconst newMaxId = Math.max(...rawMessages.map((message) => message.id));\n\t\tif (newMaxId >= lastMessageId)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst messagesCollection: ImModelMessage[] = this.#store.getters['messages/get'](this.#chatId);\n\t\tconst additionalMessages = messagesCollection.filter((message) => {\n\t\t\treturn message.id > newMaxId;\n\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages: local id is higher than server one', additionalMessages);\n\n\t\treturn [...rawMessages, ...additionalMessages];\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst { messages } = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true,\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: PaginationRestResult): Promise\n\t{\n\t\tconst {\n\t\t\tfiles,\n\t\t\tusers,\n\t\t\tusersShort,\n\t\t\treactions,\n\t\t\thasPrevPage,\n\t\t\thasNextPage,\n\t\t\tadditionalMessages,\n\t\t} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage,\n\t\t\t},\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort),\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\t\tconst additionalMessagesPromise = this.#store.dispatch('messages/store', additionalMessages);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise, filesPromise, usersPromise, reactionsPromise, additionalMessagesPromise,\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag,\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields,\n\t\t});\n\t}\n\n\t#getDialog(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import {EventEmitter} from 'main.core.events';\nimport {RestClient} from 'rest.client';\nimport {Store} from 'ui.vue3.vuex';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {EventType, RestMethod} from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\t// EventEmitter.emit(EventType.dialog.scrollToBottom, {chatId});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, {id: messageId}).catch(error => {\n\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\tchatId,\n\t\t\t\tmessageId\n\t\t\t});\n\t\t});\n\t}\n}","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelMessage } from 'im.v2.model';\n\nexport class EditService\n{\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tconst message = this.#getMessage(messageId);\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#updateMessageModel(messageId, text);\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tid: messageId,\n\t\t\t\tfields: { message: text },\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatMessageUpdate, payload)\n\t\t\t.catch((error) => {\n\t\t\t\tLogger.error('MessageService: editMessageText error:', error);\n\t\t\t});\n\t}\n\n\t#updateMessageModel(messageId: number, text: string): void\n\t{\n\t\tconst message = this.#getMessage(messageId);\n\t\tconst isEdited = message.viewedByOthers;\n\n\t\tCore.getStore().dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited,\n\t\t\t},\n\t\t});\n\t}\n\n\t#getMessage(messageId: number): ImModelMessage | null\n\t{\n\t\treturn Core.getStore().getters['messages/getById'](messageId);\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { RestMethod, EventType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\n\nimport type { ImModelChat, ImModelMessage, ImModelRecentItem } from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync deleteMessage(messageId: number | string)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\n\t\tif (Utils.text.isUuidV4(messageId))\n\t\t{\n\t\t\tthis.#deleteTemporaryMessage(messageId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#sendDeleteEvent(messageId);\n\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tif (message.viewedByOthers)\n\t\t{\n\t\t\tawait this.#shallowMessageDelete(message);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tawait this.#completeMessageDelete(message);\n\t\t}\n\t}\n\n\t#shallowMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: message.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tisDeleted: true,\n\t\t\t\tfiles: [],\n\t\t\t\tattach: [],\n\t\t\t\treplyId: 0,\n\t\t\t},\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#completeMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tif (message.id === dialog.lastMessageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(message.id);\n\t\t\tthis.#updateRecentForCompleteDelete(newLastId);\n\t\t\tthis.#updateChatForCompleteDelete(newLastId);\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: message.id,\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#updateRecentForCompleteDelete(newLastId: number)\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tif (!newLastId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/delete', { id: dialog.dialogId });\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: dialog.dialogId,\n\t\t\tfields: { messageId: newLastId },\n\t\t});\n\t}\n\n\t#updateChatForCompleteDelete(newLastId)\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/getByChatId'](this.#chatId);\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: dialog.dialogId,\n\t\t\tfields: {\n\t\t\t\tlastMessageId: newLastId,\n\t\t\t\tlastId: newLastId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('chats/clearLastMessageViews', {\n\t\t\tdialogId: dialog.dialogId,\n\t\t});\n\t}\n\n\t#deleteMessageOnServer(messageId: number): Promise\n\t{\n\t\treturn runAction(RestMethod.imV2ChatMessageDelete, {\n\t\t\tdata: { id: messageId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n\n\t#deleteTemporaryMessage(messageId: string)\n\t{\n\t\tconst chat: ImModelChat = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](chat.dialogId);\n\t\tif (recentItem.messageId === messageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(messageId);\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: chat.dialogId,\n\t\t\t\tfields: { messageId: newLastId },\n\t\t\t});\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: messageId,\n\t\t});\n\t}\n\n\t#getPreviousMessageId(messageId: number): number\n\t{\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId,\n\t\t\tchatId: this.#chatId,\n\t\t});\n\n\t\treturn previousMessage?.id ?? 0;\n\t}\n\n\t#sendDeleteEvent(messageId: number)\n\t{\n\t\tEventEmitter.emit(EventType.dialog.onMessageDeleted, { messageId });\n\t}\n}\n","import {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst {dialogId} = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: messageId\n\t\t\t}\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}","import {Loc} from 'main.core';\nimport {Store} from 'ui.vue3.vuex';\nimport {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\nimport {Logger} from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_ADD_MESSAGE_TO_FAVORITE_SUCCESS')\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId: messageId\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId\n\t\t}).catch(error => {\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}","import { LoadService } from './classes/message/load';\nimport { PinService } from './classes/message/pin';\nimport { EditService } from './classes/message/edit';\nimport { DeleteService } from './classes/message/delete';\nimport { MarkService } from './classes/message/mark';\nimport { FavoriteService } from './classes/message/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst { chatId } = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService();\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number | string): Promise\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction, type RunActionError } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\nimport { EventType, RestMethod, DialogScrollThreshold } from 'im.v2.const';\n\nimport { MessageService } from './registry';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\ntype BaseMessageParams = {\n\tdialogId: string,\n\ttext: string,\n\ttempMessageId?: string,\n};\n\ntype PlainMessageParams = BaseMessageParams & {\n\treplyId?: number,\n\tforwardIds?: number[],\n};\n\ntype CopilotMessageParams = BaseMessageParams & {\n\tcopilot: {\n\t\tpromptCode: string,\n\t},\n};\n\ntype FileMessageParams = BaseMessageParams & {\n\tfileId: string,\n};\n\ntype PreparedMessage = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\treplyId: number,\n\tforward: {userId: number, id: string},\n\tforwardIds: {[string]: number},\n\ttext: string,\n\tparams: JsonObject,\n\tcopilot: JsonObject,\n\tunread: boolean,\n\tsending: boolean,\n\tviewedByOthers: boolean,\n};\n\nexport class SendingService\n{\n\t#store: Store;\n\n\tstatic instance: SendingService = null;\n\n\tstatic getInstance(): SendingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync sendMessage(params: PlainMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage', params);\n\t\tconst message = this.#prepareMessage(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync sendMessageWithFile(params: FileMessageParams): Promise\n\t{\n\t\tconst { text = '', fileId = '' } = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isStringFilled(fileId))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage with file', params);\n\t\tconst message = this.#prepareMessageWithFile(params);\n\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync forwardMessages(params: PlainMessageParams): Promise\n\t{\n\t\tconst { forwardIds, dialogId, text } = params;\n\t\tif (!Type.isArrayFilled(forwardIds))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tLogger.warn('SendingService: forwardMessages', params);\n\n\t\tawait this.#handlePagination(dialogId);\n\n\t\tlet commentMessage = null;\n\t\tif (Type.isStringFilled(text))\n\t\t{\n\t\t\tcommentMessage = this.#prepareMessage(params);\n\t\t\tawait this.#addMessageToModels(commentMessage);\n\t\t}\n\n\t\tconst forwardUuidMap = this.#getForwardUuidMap(forwardIds);\n\t\tconst forwardedMessages = this.#prepareForwardMessages(params, forwardUuidMap);\n\n\t\tawait this.#addForwardsToModels(forwardedMessages);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\n\t\ttry\n\t\t{\n\t\t\tconst requestParams = this.#prepareSendForwardRequest({ forwardUuidMap, commentMessage, dialogId });\n\t\t\tconst response = await this.#sendMessageToServer(requestParams);\n\t\t\tLogger.warn('SendingService: forwardMessage result -', response);\n\t\t\tthis.#handleForwardMessageResponse({ response, dialogId, commentMessage });\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\tthis.#handleForwardMessageError({ commentMessage, forwardUuidMap });\n\t\t\tthis.#logSendErrors(errors, 'forwardMessage');\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync retrySendMessage(params: { tempMessageId: string, dialogId: string }): Promise\n\t{\n\t\tconst { tempMessageId, dialogId } = params;\n\t\tconst unsentMessage: ImModelMessage = this.#store.getters['messages/getById'](tempMessageId);\n\t\tif (!unsentMessage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#removeMessageError(tempMessageId);\n\t\tconst message = this.#prepareMessage({\n\t\t\ttext: unsentMessage.text,\n\t\t\tdialogId,\n\t\t\ttempMessageId: unsentMessage.id,\n\t\t\treplyId: unsentMessage.replyId,\n\t\t});\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync sendCopilotPrompt(params: CopilotMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendCopilotPrompt', params);\n\t\tconst message = this.#preparePrompt(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync #processMessageSending(message: PreparedMessage): Promise\n\t{\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync #handleAddingMessageToModels(message)\n\t{\n\t\tawait this.#handlePagination(message.dialogId);\n\t\tawait this.#addMessageToModels(message);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId: message.dialogId });\n\t}\n\n\tasync #sendAndProcessMessage(message: PreparedMessage): Promise\n\t{\n\t\tconst sendResult = await this.#sendMessageToServer(message)\n\t\t\t.catch((errors) => {\n\t\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\t\tthis.#logSendErrors(errors, 'sendAndProcessMessage');\n\t\t\t});\n\n\t\tLogger.warn('SendingService: sendAndProcessMessage result -', sendResult);\n\t\tconst { id } = sendResult;\n\t\tif (!id)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#updateModels({\n\t\t\toldId: message.temporaryId,\n\t\t\tnewId: id,\n\t\t\tdialogId: message.dialogId,\n\t\t});\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#prepareMessage(params: PlainMessageParams): PreparedMessage\n\t{\n\t\tconst { text, tempMessageId, dialogId, replyId, forwardIds } = params;\n\n\t\tconst defaultFields = {\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t};\n\n\t\treturn {\n\t\t\ttext,\n\t\t\tdialogId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\ttemporaryId: tempMessageId ?? Utils.text.getUuidV4(),\n\t\t\treplyId,\n\t\t\tforwardIds,\n\t\t\tviewedByOthers: this.#needToSetAsViewed(dialogId),\n\t\t\t...defaultFields,\n\t\t};\n\t}\n\n\t#prepareMessageWithFile(params: FileMessageParams): PreparedMessage\n\t{\n\t\tconst { fileId } = params;\n\t\tif (!fileId)\n\t\t{\n\t\t\tthrow new Error('SendingService: sendMessageWithFile: no fileId provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tparams: { FILE_ID: [fileId] },\n\t\t};\n\t}\n\n\t#preparePrompt(params: CopilotMessageParams): PreparedMessage\n\t{\n\t\tconst { copilot } = params;\n\t\tif (!copilot || !copilot.promptCode)\n\t\t{\n\t\t\tthrow new Error('SendingService: preparePrompt: no code provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tcopilot,\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({ chatId: this.#getDialog(dialogId).chatId });\n\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({ dialogId });\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: PreparedMessage): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tvoid this.#store.dispatch('chats/clearLastMessageViews', { dialogId: message.dialogId });\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: PreparedMessage)\n\t{\n\t\tconst recentItem = this.#store.getters['recent/get'](message.dialogId);\n\t\tif (!recentItem || message.text === '')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: message.dialogId,\n\t\t\tfields: { messageId: message.temporaryId },\n\t\t});\n\t}\n\n\t#sendMessageToServer(message: PreparedMessage): Promise\n\t{\n\t\tconst fields = {};\n\n\t\tif (message.replyId)\n\t\t{\n\t\t\tfields.replyId = message.replyId;\n\t\t}\n\n\t\tif (message.forwardIds)\n\t\t{\n\t\t\tfields.forwardIds = message.forwardIds;\n\t\t}\n\n\t\tif (message.text)\n\t\t{\n\t\t\tfields.message = message.text;\n\t\t\tfields.templateId = message.temporaryId;\n\t\t}\n\n\t\tif (message.copilot)\n\t\t{\n\t\t\tfields.copilot = message.copilot;\n\t\t}\n\n\t\tconst queryData = {\n\t\t\tdialogId: message.dialogId.toString(),\n\t\t\tfields,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageSend, { data: queryData });\n\t}\n\n\t#updateModels(params: { oldId: string, newId: number, dialogId: string })\n\t{\n\t\tconst { oldId, newId, dialogId } = params;\n\t\tvoid this.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: { id: newId },\n\t\t});\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId,\n\t\t\t},\n\t\t});\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: { messageId: newId },\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: { error: true },\n\t\t});\n\t}\n\n\t#removeMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\tsending: true,\n\t\t\t\terror: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst { force = false, dialogId } = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp,\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId, true);\n\t}\n\n\t#getDialogByChatId(chatId: number): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId, true);\n\t}\n\n\t#needToSetAsViewed(dialogId: string): boolean\n\t{\n\t\treturn this.#store.getters['users/bots/isNetwork'](dialogId);\n\t}\n\n\t#handleForwardMessageResponse(params: { response: Object, dialogId: string, commentMessage: PreparedMessage })\n\t{\n\t\tconst { response, dialogId, commentMessage } = params;\n\t\tconst { id, uuidMap } = response;\n\n\t\tif (id)\n\t\t{\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: commentMessage.temporaryId,\n\t\t\t\tnewId: id,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t}\n\t\tObject.entries(uuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: uuid,\n\t\t\t\tnewId: messageId,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t});\n\t}\n\n\t#handleForwardMessageError({ commentMessage, forwardUuidMap })\n\t{\n\t\tif (commentMessage)\n\t\t{\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: commentMessage.temporaryId,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t}\n\n\t\tObject.keys(forwardUuidMap).forEach((uuid: string) => {\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: uuid,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t});\n\t}\n\n\t#prepareForwardMessages(params: PlainMessageParams, forwardUuidMap: {[string]: number}): PreparedMessage[]\n\t{\n\t\tconst { forwardIds, dialogId } = params;\n\t\tif (forwardIds.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst preparedMessages = [];\n\t\tObject.entries(forwardUuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\t\tif (!message)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isForward = this.#store.getters['messages/isForward'](messageId);\n\n\t\t\tpreparedMessages.push({\n\t\t\t\t...this.#prepareMessage({ dialogId, text: message.text, tempMessageId: uuid, replyId: message.replyId }),\n\t\t\t\tforward: {\n\t\t\t\t\tid: this.#buildForwardContextId(message.chatId, messageId),\n\t\t\t\t\tuserId: isForward ? message.forward.userId : message.authorId,\n\t\t\t\t},\n\t\t\t\tattach: message.attach,\n\t\t\t\tisDeleted: message.isDeleted,\n\t\t\t\tfiles: message.files,\n\t\t\t});\n\t\t});\n\n\t\treturn preparedMessages;\n\t}\n\n\t#prepareSendForwardRequest(params: {\n\t\tforwardUuidMap: { [string]: number },\n\t\tcommentMessage: ?PreparedMessage,\n\t\tdialogId: string\n\t}): { dialogId: string, forwardIds: { [string]: number }, text?: string, temporaryId?: string }\n\t{\n\t\tconst { dialogId, forwardUuidMap, commentMessage } = params;\n\n\t\tconst requestPrams = {\n\t\t\tdialogId,\n\t\t\tforwardIds: forwardUuidMap,\n\t\t};\n\n\t\tif (commentMessage)\n\t\t{\n\t\t\trequestPrams.text = commentMessage.text;\n\t\t\trequestPrams.temporaryId = commentMessage.temporaryId;\n\t\t}\n\n\t\treturn requestPrams;\n\t}\n\n\t#addForwardsToModels(forwardedMessages: PreparedMessage[]): Promise\n\t{\n\t\tconst addPromises = [];\n\t\tforwardedMessages.forEach((message) => {\n\t\t\taddPromises.push(this.#addMessageToModels(message));\n\t\t});\n\n\t\treturn Promise.all(addPromises);\n\t}\n\n\t#getForwardUuidMap(forwardIds: number[]): { [string]: number }\n\t{\n\t\tconst uuidMap = {};\n\t\tforwardIds.forEach((id) => {\n\t\t\tuuidMap[Utils.text.getUuidV4()] = id;\n\t\t});\n\n\t\treturn uuidMap;\n\t}\n\n\t#buildForwardContextId(chatId: number, messageId: number): string\n\t{\n\t\tconst dialogId = this.#getDialogByChatId(chatId).dialogId;\n\t\tif (dialogId.startsWith('chat'))\n\t\t{\n\t\t\treturn `${dialogId}/${messageId}`;\n\t\t}\n\n\t\tconst currentUser = Core.getUserId();\n\n\t\treturn `${dialogId}:${currentUser}/${messageId}`;\n\t}\n\n\t#logSendErrors(errors: RunActionError[], methodName: string)\n\t{\n\t\terrors.forEach((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`SendingService: ${methodName} error: code: ${error.code} message: ${error.message}`);\n\t\t});\n\t}\n}\n","import {Runtime, Type} from 'main.core';\n\nimport {Core} from 'im.v2.application.core';\nimport {Logger} from 'im.v2.lib.logger';\nimport {NotificationTypesCodes, RestMethod} from 'im.v2.const';\nimport {UserManager} from 'im.v2.lib.user';\n\ntype NotificationItemRest = {\n\tid: number,\n\tchat_id: number,\n\tauthor_id: number,\n\tdate: string,\n\tnotify_type: number,\n\tnotify_module: string,\n\tnotify_event: string,\n\tnotify_tag: string,\n\tnotify_sub_tag: string,\n\tnotify_title?: string,\n\tnotify_read: string,\n\tsetting_name: string,\n\ttext: string,\n\tnotify_buttons: string,\n\tparams?: Object\n};\n\ntype NotificationGetRestResult = {\n\tchat_id: number,\n\tnotifications: NotificationItemRest[],\n\ttotal_count: number,\n\ttotal_unread_count: number,\n\tusers: [],\n};\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\t\tthis.store.dispatch('notifications/deleteFromSearch', { id: notificationId });\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\t'NOTIFY_ID': notificationId,\n\t\t\t'NOTIFY_VALUE': value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', {id: notificationId});\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams).then(response => {\n\t\t\tLogger.warn(`NotificationService: sendConfirmAction: success`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\t}\n\n\tsendQuickAnswer(params)\n\t{\n\t\tconst {id, text, callbackSuccess = () => {}, callbackError = () => {}} = params;\n\n\t\tthis.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\tnotify_id: id,\n\t\t\tanswer_text: text\n\t\t}).then(response => {\n\t\t\tcallbackSuccess(response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t});\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', {id: idsToDelete}).then(response => {\n\t\t\tLogger.warn(`NotificationService: deleteRequest: success for ids: ${idsToDelete}`, response);\n\t\t}).catch(error => {\n\t\t\tconsole.error(error);\n\t\t\t//revert?\n\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({firstPage = false} = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\t'LIMIT': this.limitPerPage,\n\t\t\t'CONVERT_TEXT': 'Y'\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethod.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams]\n\t\t};\n\n\t\tif (!firstPage)\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tbatchQueryParams[RestMethod.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethod.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethod.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethod.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications) || notifications.length < this.limitPerPage)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}","import {RestClient} from 'rest.client';\n\nimport {Core} from 'im.v2.application.core';\nimport {RestMethod} from 'im.v2.const';\n\nexport class DiskService\n{\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdelete({chatId, fileId}): Promise\n\t{\n\t\tconst queryParams = {chat_id: chatId, file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileDelete, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error deleting file', error);\n\t\t});\n\t}\n\n\tsave(fileId: number): Promise\n\t{\n\t\tconst queryParams = {file_id: fileId};\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileSave, queryParams).catch(error => {\n\t\t\tconsole.error('DiskService: error saving file on disk', error);\n\t\t});\n\t}\n}","import {RecentService} from '../../recent';\n\nimport type {ImModelRecentItem} from 'im.v2.model';\n\nexport class UnreadRecentService extends RecentService\n{\n\tstatic instance = null;\n\n\tstatic getInstance(): UnreadRecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn this.store.getters['recent/getUnreadCollection'];\n\t}\n\n\tloadFirstPage({ignorePreloadedItems = false} = {}): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({firstPage: true});\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst {users, dialogues, recent} = this.prepareDataForModels(rawData);\n\n\t\tconst usersPromise = this.store.dispatch('users/set', users);\n\t\tconst dialoguesPromise = this.store.dispatch('chats/set', dialogues);\n\n\t\tconst fakeRecent = this.getFakeData(recent);\n\t\tconst recentPromise = this.store.dispatch('recent/setUnread', fakeRecent);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, recentPromise]);\n\t}\n\n\tgetFakeData(itemsForModel: Object[]): Object[]\n\t{\n\t\titemsForModel = itemsForModel.slice(-4);\n\t\titemsForModel.forEach(item => {\n\t\t\tthis.store.dispatch('chats/update', {\n\t\t\t\tdialogId: item.id,\n\t\t\t\tfields: {\n\t\t\t\t\tcounter: 7\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn itemsForModel;\n\t}\n\n\tonUpdateState({data})\n\t{\n\t\t//\n\t}\n}","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Uploader, UploaderEvent } from 'ui.uploader.core';\n\nimport { EventType } from 'im.v2.const';\n\nimport type { UploaderFile } from 'ui.uploader.core';\nimport type { MessageWithFile } from '../../uploading';\n\ntype UploaderWrapperOptions = {\n\tdiskFolderId: number,\n\tuploaderId: string,\n}\n\nexport class UploaderWrapper extends EventEmitter\n{\n\t#uploaderRegistry: {[uploaderId: string]: Uploader} = {};\n\t#onUploadCancelHandler: Function;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Service.Uploading.UploaderWrapper';\n\n\tstatic events = {\n\t\tonFileAddStart: 'onFileAddStart',\n\t\tonFileAdd: 'onFileAdd',\n\t\tonFileUploadStart: 'onFileUploadStart',\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t\tonMaxFileCountExceeded: 'onMaxFileCountExceeded',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(UploaderWrapper.eventNamespace);\n\n\t\tthis.#onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n\n\tcreateUploader(options: UploaderWrapperOptions)\n\t{\n\t\tconst { diskFolderId, uploaderId, autoUpload } = options;\n\n\t\tthis.#uploaderRegistry[uploaderId] = new Uploader({\n\t\t\tautoUpload,\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\tmultiple: true,\n\t\t\tcontrollerOptions: {\n\t\t\t\tfolderId: diskFolderId,\n\t\t\t},\n\t\t\timageResizeWidth: 1280,\n\t\t\timageResizeHeight: 1280,\n\t\t\timageResizeMode: 'contain',\n\t\t\timageResizeFilter: (file: UploaderFile) => {\n\t\t\t\treturn !file.getCustomData('sendAsFile') && file.getExtension() !== 'gif';\n\t\t\t},\n\t\t\timageResizeMimeType: 'image/jpeg',\n\t\t\timageResizeMimeTypeMode: 'force',\n\t\t\timagePreviewHeight: 720,\n\t\t\timagePreviewWidth: 720,\n\t\t\ttreatOversizeImageAsFile: true,\n\t\t\tignoreUnknownImageTypes: true,\n\t\t\tmaxFileSize: null,\n\t\t\tevents: {\n\t\t\t\t[UploaderEvent.FILE_ADD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAddStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ADD]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAdd, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_PROGRESS]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadProgress, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadComplete, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.MAX_FILE_COUNT_EXCEEDED]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onMaxFileCountExceeded, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.UPLOAD_COMPLETE]: () => {\n\t\t\t\t\tthis.#uploaderRegistry[uploaderId].destroy({ removeFilesFromServer: false });\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].setAutoUpload(true);\n\t\tthis.#uploaderRegistry[uploaderId].start();\n\t}\n\n\taddFiles(tasks: MessageWithFile[]): UploaderFile[]\n\t{\n\t\tconst addedFiles = [];\n\t\ttasks.forEach((task) => {\n\t\t\tconst file = this.#addFile(task);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\taddedFiles.push(file);\n\t\t\t}\n\t\t});\n\n\t\treturn addedFiles;\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderRegistry[uploaderId].getFiles();\n\t}\n\n\t#addFile(task: MessageWithFile): ?UploaderFile\n\t{\n\t\treturn this.#uploaderRegistry[task.uploaderId].addFile(\n\t\t\ttask.file,\n\t\t\t{\n\t\t\t\tid: task.tempFileId,\n\t\t\t\tcustomData: {\n\t\t\t\t\tdialogId: task.dialogId,\n\t\t\t\t\tchatId: task.chatId,\n\t\t\t\t\ttempMessageId: task.tempMessageId,\n\t\t\t\t\tsendAsFile: task.sendAsFile,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tconst { tempFileId, tempMessageId } = event.getData();\n\t\tif (!tempFileId || !tempMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#removeFileFromUploader(tempFileId);\n\t\tthis.emit(UploaderWrapper.events.onFileUploadCancel, { tempMessageId, tempFileId });\n\t}\n\n\t#removeFileFromUploader(tempFileId: string)\n\t{\n\t\tconst uploaderList = Object.values(this.#uploaderRegistry);\n\t\tfor (const uploader of uploaderList)\n\t\t{\n\t\t\tif (!uploader.getFile)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst file = uploader.getFile(tempFileId);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\tfile.remove();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n}\n","import { BaseEvent } from 'main.core.events';\nimport { getFilesFromDataTransfer } from 'ui.uploader.core';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport { Core } from 'im.v2.application.core';\nimport { FileStatus, FileType, RestMethod } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UploaderWrapper } from './classes/uploading/uploader-wrapper';\nimport { SendingService } from './registry';\n\nimport type { ImModelChat, ImModelUser } from 'im.v2.model';\nimport type { UploaderFile, UploaderError } from 'ui.uploader.core';\nimport type { Store } from 'ui.vue3.vuex';\nimport type { RestClient } from 'rest.client';\n\nexport type FileFromDisk = {\n\tid: string;\n\tname: string;\n\ttype: string;\n\tsize: string;\n\tsizeInt: string;\n\tmodifyBy: string;\n\tmodifyDate: string;\n\tmodifyDateInt: number;\n\text: string;\n\tfileType: string;\n};\n\nexport type MessageWithFile = {\n\ttempMessageId?: string,\n\ttempFileId: string,\n\tfile: FileFromDisk | File,\n\tdialogId: string,\n\tchatId?: number,\n\tuploaderId: string,\n\tsendAsFile: boolean,\n}\n\ntype FileCommitParams = {\n\ttemporaryFileId: string,\n\ttempMessageId: string,\n\tchatId: number,\n\trealFileId: number,\n\tfromDisk: boolean,\n\tsendAsFile: boolean,\n\tmessageText: string\n}\n\ntype UploadFilesParams = {\n\tfiles: File[],\n\tdialogId: string,\n\tautoUpload: boolean,\n\tsendAsFile: boolean\n}\n\nexport class UploadingService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: { [string]: Promise } = {};\n\t#uploaderWrapper: UploaderWrapper;\n\t#sendingService: SendingService;\n\t#uploaderFilesRegistry: {\n\t\t[uploaderId: string]: {\n\t\t\tautoUpload: boolean,\n\t\t\twasSent: boolean,\n\t\t\ttext: string,\n\t\t\tdialogId: string,\n\t\t\tfilesPreviewStatus: { [string]: boolean }\n\t\t}\n\t} = {};\n\n\tstatic instance = null;\n\n\tstatic getInstance(): UploadingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#sendingService = SendingService.getInstance();\n\t\tthis.#initUploader();\n\t}\n\n\t#createUploader(params: { dialogId: string, autoUpload: boolean }): Promise<string>\n\t{\n\t\tconst { dialogId, autoUpload } = params;\n\n\t\tconst uploaderId = Utils.text.getUuidV4();\n\n\t\treturn this.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tthis.#uploaderWrapper.createUploader({\n\t\t\t\tdiskFolderId,\n\t\t\t\tuploaderId,\n\t\t\t\tautoUpload,\n\t\t\t});\n\n\t\t\treturn uploaderId;\n\t\t});\n\t}\n\n\taddFilesFromClipboard(clipboardData: DataTransfer, dialogId): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\treturn getFilesFromDataTransfer(clipboardData).then((files: File[]) => {\n\t\t\tconst imagesOnly = files.filter((file) => Utils.file.isImage(file.name));\n\t\t\tif (imagesOnly.length === 0)\n\t\t\t{\n\t\t\t\treturn {\n\t\t\t\t\tfiles: [],\n\t\t\t\t\tuploaderId: '',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this.addFiles({\n\t\t\t\tfiles: imagesOnly,\n\t\t\t\tdialogId,\n\t\t\t\tautoUpload: false,\n\t\t\t});\n\t\t});\n\t}\n\n\taddFilesFromInput(files: File[], dialogId: string, sendAsFile: boolean)\n\t{\n\t\tif (files.length === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addFiles({ files, dialogId, autoUpload: true, sendAsFile }).then(({ uploaderId }) => {\n\t\t\tthis.#tryToSendMessages(uploaderId);\n\t\t}).catch((error) => {\n\t\t\tLogger.error('SendingService: sendFilesFromInput error', error);\n\t\t});\n\t}\n\n\taddFiles(params: UploadFilesParams): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { files, dialogId, autoUpload, sendAsFile = false } = params;\n\n\t\treturn this.#createUploader({ dialogId, autoUpload }).then((uploaderId: string) => {\n\t\t\tconst filesForUploader = [];\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst messageWithFile = this.#prepareMessageWithFile(file, dialogId, uploaderId, sendAsFile);\n\t\t\t\tfilesForUploader.push(messageWithFile);\n\t\t\t});\n\n\t\t\tconst addedFiles = this.#uploaderWrapper.addFiles(filesForUploader);\n\t\t\tthis.#registerFiles(uploaderId, addedFiles, dialogId, autoUpload);\n\n\t\t\treturn {\n\t\t\t\tfiles: addedFiles,\n\t\t\t\tuploaderId,\n\t\t\t};\n\t\t});\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderWrapper.getFiles(uploaderId);\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = true;\n\t\tthis.#uploaderWrapper.start(uploaderId);\n\t}\n\n\tuploadFileFromDisk(files, dialogId)\n\t{\n\t\tObject.values(files).forEach((file) => {\n\t\t\tconst messageWithFile = this.#prepareFileFromDisk(file, dialogId);\n\n\t\t\tthis.#addFileFromDiskToModel(messageWithFile).then(() => {\n\t\t\t\tconst message = {\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\tfileId: messageWithFile.tempFileId,\n\t\t\t\t\tdialogId: messageWithFile.dialogId,\n\t\t\t\t};\n\n\t\t\t\treturn this.#sendingService.sendMessageWithFile(message);\n\t\t\t}).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\tchatId: messageWithFile.chatId,\n\t\t\t\t\ttemporaryFileId: messageWithFile.tempFileId,\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\trealFileId: messageWithFile.file.id.slice(1),\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.error('SendingService: sendFilesFromDisk error:', error);\n\t\t\t});\n\t\t});\n\t}\n\n\t#addFileFromDiskToModel(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: messageWithFile.tempFileId,\n\t\t\tchatId: messageWithFile.chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: messageWithFile.file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(messageWithFile.file.ext),\n\t\t\textension: messageWithFile.file.ext,\n\t\t\tsize: messageWithFile.file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploader()\n\t{\n\t\tthis.#uploaderWrapper = new UploaderWrapper();\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAddStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#addFileToStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAdd, (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId } = event.getData();\n\t\t\tthis.#updateFilePreviewInStore(file);\n\t\t\tthis.#setReadyFilePreview(uploaderId, file.getId());\n\t\t\tthis.#tryToSendMessages(uploaderId);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileSizeInStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.upload);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadComplete, (event: BaseEvent) => {\n\t\t\tconst { file }: {file: UploaderFile} = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.wait);\n\t\t\tthis.#uploadPreview(file).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\trealFileId: file.getServerFileId(),\n\t\t\t\t\ttemporaryFileId: file.getId(),\n\t\t\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\t\tmessageText: file.getCustomData('messageText') ?? '',\n\t\t\t\t\tsendAsFile: file.getCustomData('sendAsFile'),\n\t\t\t\t\tfromDisk: false,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\tLogger.warn('UploadingService: upload preview error', error);\n\t\t\t});\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst { file, error } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), 0, FileStatus.error);\n\t\t\tthis.#setMessageError(file.getCustomData('tempMessageId'));\n\t\t\tthis.#showError(error);\n\t\t\tLogger.error('UploadingService: upload error', error);\n\t\t});\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst { tempMessageId, tempFileId } = event.getData();\n\t\t\tthis.#cancelUpload(tempMessageId, tempFileId);\n\t\t});\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tconst chatId = this.#getChatId(dialogId);\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, { chat_id: chatId }).then((response) => {\n\t\t\t\tconst { ID: diskFolderId } = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('chats/update', {\n\t\t\t\t\tdialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: FileCommitParams)\n\t{\n\t\tconst { temporaryFileId, tempMessageId, chatId, realFileId, fromDisk, messageText = '', sendAsFile = false } = params;\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId.toString().slice(1);\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: messageText,\n\t\t\ttemplate_id: tempMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\t...fileIdParams,\n\t\t}).catch((error) => {\n\t\t\tthis.#setMessageError(tempMessageId);\n\t\t\tthis.#updateFileProgress(temporaryFileId, 0, FileStatus.error);\n\t\t\tLogger.error('commitFile error', error);\n\t\t});\n\t}\n\n\t#uploadPreview(file: UploaderFile): Promise\n\t{\n\t\tif (\n\t\t\tthis.#getFileType(file.getBinary()) === FileType.file\n\t\t\t|| file.getExtension() === 'gif'\n\t\t)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst id = file.getServerFileId().toString().slice(1);\n\t\tconst previewFile = file.getClientPreview();\n\t\tif (!previewFile)\n\t\t{\n\t\t\tfile.setCustomData('sendAsFile', true);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('previewFile', previewFile, `preview_${file.getName()}.jpg`);\n\n\t\treturn runAction(RestMethod.imDiskFilePreviewUpload, { data: formData }).catch((error) => {\n\t\t\tLogger.error('imDiskFilePreviewUpload request error', error);\n\t\t});\n\t}\n\n\t#prepareMessageWithFile(file: File, dialogId: string, uploaderId, sendAsFile: boolean): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst tempFileId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tfile,\n\t\t\tdialogId,\n\t\t\tchatId,\n\t\t\tuploaderId,\n\t\t\tsendAsFile: sendAsFile && this.#getFileType(file) !== FileType.file,\n\t\t};\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\t#cancelUpload(tempMessageId: string, tempFileId)\n\t{\n\t\tthis.#store.dispatch('messages/delete', { id: tempMessageId });\n\t\tthis.#store.dispatch('files/delete', { id: tempFileId });\n\t}\n\n\t#addFileToStore(file: UploaderFile)\n\t{\n\t\tconst taskId = file.getId();\n\t\tconst fileBinary = file.getBinary();\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: fileBinary.name,\n\t\t\ttype: this.#getFileType(fileBinary),\n\t\t\textension: this.#getFileExtension(fileBinary),\n\t\t\tstatus: file.isFailed() ? FileStatus.error : FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData,\n\t\t});\n\t}\n\n\t#updateFilePreviewInStore(file: UploaderFile)\n\t{\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\t...previewData,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateFileSizeInStore(file: UploaderFile)\n\t{\n\t\tthis.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\tsize: file.getSize(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#preparePreview(file: UploaderFile): { image: { width: number, height: number }, urlPreview: Blob }\n\t{\n\t\tif (file.getCustomData('sendAsFile'))\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst preview = {\n\t\t\tblob: file.getPreviewUrl(),\n\t\t\twidth: file.getPreviewWidth(),\n\t\t\theight: file.getPreviewHeight(),\n\t\t};\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = preview.blob;\n\t\t}\n\n\t\tif (file.getClientPreview())\n\t\t{\n\t\t\tpreviewData.urlShow = URL.createObjectURL(file.getBinary());\n\t\t}\n\n\t\treturn previewData;\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\t#registerFiles(uploaderId: string, files: UploaderFile[], dialogId: string, autoUpload: boolean)\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\tthis.#uploaderFilesRegistry[uploaderId] = {\n\t\t\t\tfilesPreviewStatus: {},\n\t\t\t\tdialogId,\n\t\t\t\ttext: '',\n\t\t\t\tautoUpload,\n\t\t\t};\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tconst fileId = file.getId();\n\t\t\tif (!this.#uploaderFilesRegistry[uploaderId].filesPreviewStatus)\n\t\t\t{\n\t\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus = {};\n\t\t\t}\n\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = false;\n\t\t});\n\t}\n\n\t#setReadyFilePreview(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].filesPreviewStatus[fileId] = true;\n\t}\n\n\t#setMessagesText(uploaderId: string, text: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].text = text;\n\t}\n\n\t#setAutoUpload(uploaderId: string, autoUploadFlag: boolean)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = autoUploadFlag;\n\t}\n\n\tsendSeparateMessagesWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessages(uploaderId);\n\t}\n\n\t#createMessagesFromFiles(uploaderId): {comment: {text: string, dialogId: string}, files: []}\n\t{\n\t\tconst messagesToSend = {\n\t\t\tcomment: {},\n\t\t\tfiles: [],\n\t\t};\n\n\t\tconst files = this.getFiles(uploaderId);\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst hasText = text.length > 0;\n\n\t\t// if we have more than one file and text, we need to send text message first\n\t\tif (files.length > 1 && hasText)\n\t\t{\n\t\t\tmessagesToSend.comment = { dialogId, text };\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tif (file.getError())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\n\t\t\tfile.setCustomData('messageId', messageId);\n\t\t\tif (files.length === 1 && hasText)\n\t\t\t{\n\t\t\t\tfile.setCustomData('messageText', text);\n\t\t\t}\n\n\t\t\tmessagesToSend.files.push({\n\t\t\t\tfileId: file.getId(),\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tdialogId,\n\t\t\t\ttext: file.getCustomData('messageText') ?? '',\n\t\t\t});\n\t\t});\n\n\t\treturn messagesToSend;\n\t}\n\n\t#readyToAddMessages(uploaderId): boolean\n\t{\n\t\tif (\n\t\t\t!this.#uploaderFilesRegistry[uploaderId]\n\t\t\t|| !this.#uploaderFilesRegistry[uploaderId].autoUpload\n\t\t\t|| this.#uploaderFilesRegistry[uploaderId].wasSent\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { filesPreviewStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(filesPreviewStatus).every((flag) => flag === true);\n\t}\n\n\t#tryToSendMessages(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\t\tconst { comment, files } = this.#createMessagesFromFiles(uploaderId);\n\t\tif (comment.text)\n\t\t{\n\t\t\tvoid this.#sendingService.sendMessage(comment);\n\t\t}\n\n\t\tfiles.forEach((message) => {\n\t\t\tvoid this.#sendingService.sendMessageWithFile(message);\n\t\t});\n\t\tthis.start(uploaderId);\n\t}\n\n\t#prepareFileFromDisk(file: FileFromDisk, dialogId: string): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst realFileId = file.id.slice(1); // 'n123' => '123'\n\t\tconst tempFileId = `${tempMessageId}|${realFileId}`;\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tdialogId,\n\t\t\tfile,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t};\n\t}\n\n\t#showError(error: UploaderError)\n\t{\n\t\tif (error.getCode() === 'MAX_FILE_SIZE_EXCEEDED')\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\tcontent: `${error.getMessage()}<br>${error.getDescription()}`,\n\t\t\t});\n\t\t}\n\t}\n\n\t#setMessageError(tempMessageId: string)\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: tempMessageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploaderWrapper.destroy();\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nexport class SettingsService\n{\n\tchangeSetting(settingName: string, value: any): Promise\n\t{\n\t\tLogger.warn('SettingsService: changeSetting', settingName, value);\n\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t[settingName]: value,\n\t\t});\n\n\t\treturn runAction(RestMethod.imV2SettingsGeneralUpdate, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tname: settingName,\n\t\t\t\tvalue: value,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SettingsService: changeSetting error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class LinesService\n{\n\tgetDialogIdByUserCode(userCode: string): Promise<string>\n\t{\n\t\treturn Core.getRestClient().callMethod(RestMethod.linesDialogGet, {\n\t\t\tUSER_CODE: userCode,\n\t\t}).then((result) => {\n\t\t\tconst { dialog_id: dialogId } = result.data();\n\n\t\t\treturn dialogId;\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('LinesService: error getting dialog id', error);\n\t\t});\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { ChatService } from './chat';\n\nexport class CopilotService\n{\n\tasync createChat(): Promise<string>\n\t{\n\t\tconst chatService = new ChatService();\n\t\tconst { newDialogId, newChatId } = await chatService.createChat({ type: ChatType.copilot })\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\tthis.#sendAnalytics({ chatId: newChatId, dialogId: newDialogId });\n\n\t\tawait chatService.loadChatWithMessages(newDialogId)\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\treturn newDialogId;\n\t}\n\n\t#onCreateError(error: Error)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('Copilot chat create error', error);\n\t\tthrow new Error('Copilot chat create error');\n\t}\n\n\t#sendAnalytics({ chatId, dialogId })\n\t{\n\t\tAnalytics.getInstance().createChat({ chatId, dialogId });\n\t}\n}\n"],"names":["RecentDataExtractor","constructor","params","rawData","withBirthdays","getItems","items","forEach","item","users","Object","values","chats","messages","files","recentItems","user","id","chat","existingRecentItem","Core","getStore","getters","options","default_user_record","message","FakeMessagePrefix","viewedByOthers","status","MessageStatus","delivered","Type","isPlainObject","file","existingFile","existingMessage","isArrayFilled","attach","messageId","birthdayList","counter","dialogId","chatId","chat_id","avatar","color","name","type","ChatType","role","UserRole","member","isBirthdayPlaceholder","RecentService","dataIsPreloaded","firstPageIsLoaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","getInstance","instance","getCollection","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","result","requestItems","firstPage","loadNextPage","setPreloadedData","hasMore","getLastMessageDate","updateModels","hideChat","recentItem","dispatch","chatIsOpened","Messenger","openChat","getRestClient","callMethod","RestMethod","imRecentHide","DIALOG_ID","catch","error","console","queryParams","getQueryParams","getQueryMethod","data","imRecentList","SKIP_OPENLINES","LIMIT","LAST_MESSAGE_DATE","GET_ORIGINAL_TEXT","PARSE_TEXT","getModelSaveMethod","extractor","getExtractorOptions","extractedItems","usersPromise","dialoguesPromise","messagesPromise","filesPromise","recentPromise","all","length","slice","date","ChatDataExtractor","restResult","getChatId","getDialogId","isOpenlinesChat","lines","getChats","mainChat","hasPrevPage","hasNextPage","UserManager","getDialogForUser","getFiles","getUsers","getAdditionalUsers","usersShort","getMessages","getMessagesToStore","additionalMessages","getPinnedMessageIds","pinnedMessageIds","pins","pin","push","getReactions","reactions","LoadService","loadChat","imV2ChatShallowLoad","loadChatWithMessages","messageLimit","MessageService","getMessageRequestLimit","imV2ChatLoad","loadChatWithContext","imV2ChatLoadInContext","prepareDialogId","Utils","dialog","isExternalId","runAction","imV2ChatGetDialogId","externalId","then","actionName","actionResult","updateModelResult","isStringFilled","linesDialogId","LayoutManager","setLastOpenedElement","Layout","openLines","fields","loading","inited","chatsPromise","userManager","addUsersToModel","clearCollection","pinnedMessages","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","preparedFields","createResult","imV2ChatAdd","Error","newChatId","newDialogId","preparedConfig","getBase64","managers","members","allMembers","ownerId","Set","toUpperCase","entityType","title","description","searchable","isAvailableInSearch","manageUsersAdd","manageUsersDelete","manageUi","manageSettings","canPost","conferencePassword","chatType","toLowerCase","userCounter","owner","MAX_AVATAR_SIZE","UpdateService","prepareAvatar","avatarFile","isResizableImage","reject","preview","resizedAvatar","resizeImage","width","height","changeAvatar","avatarInBase64","imV2ChatUpdate","RenameService","renameChat","newName","oldName","imChatUpdateTitle","dialog_id","MuteService","Runtime","debounce","ChatService","DEBOUNCE_TIME","muteChat","unmuteChat","action","imChatMute","actionText","actionType","PinService","pinChat","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","add","clearTimeout","readTimeout","setTimeout","entries","rawChatId","messageIds","clearDialogMark","markedId","unread","onlyRecent","queueChatId","Number","parseInt","size","copiedMessageIds","readMessagesCount","readResult","maxMessageId","Math","max","lastReadId","lastId","newCounter","imV2ChatMessageRead","ids","actionUuid","UuidManager","getActionUuid","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","imV2ChatDeleteUser","leaveChat","getUserId","joinChat","imV2ChatJoin","loadUnread","lastUnreadMessageId","query","filter","order","limit","MESSAGE_REQUEST_LIMIT","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","imV2ChatMessageGetContext","range","callBatch","finally","reloadMessageList","targetMessageId","savedPositionMessageId","wasInitedBefore","loadInitialMessages","payload","imV2ChatMessageList","rawMessages","lastMessageId","newMaxId","map","messagesCollection","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","additionalMessagesPromise","flag","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","text","imV2ChatMessageUpdate","isEdited","DeleteService","deleteMessage","isUuidV4","isDeleted","replyId","newLastId","imV2ChatMessageDelete","previousMessage","EventEmitter","emit","EventType","onMessageDeleted","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","BX","UI","Notification","Center","notify","content","Loc","getMessage","removeMessageFromFavorite","imChatFavoriteDelete","SendingService","sendMessage","sendMessageWithFile","fileId","forwardMessages","forwardIds","commentMessage","forwardUuidMap","forwardedMessages","force","requestParams","response","errors","retrySendMessage","tempMessageId","unsentMessage","sendCopilotPrompt","sendResult","temporaryId","oldId","newId","defaultFields","authorId","sending","getUuidV4","FILE_ID","copilot","promptCode","messageService","templateId","queryData","toString","imV2ChatMessageSend","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","uuidMap","uuid","keys","preparedMessages","isForward","forward","requestPrams","addPromises","startsWith","currentUser","methodName","code","NotificationService","store","restClient","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","value","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","batchQueryParams","imNotifyGet","LAST_ID","LAST_TYPE","imNotifySchemaGet","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","destroy","DiskService","file_id","imDiskFileDelete","save","imDiskFileSave","UnreadRecentService","dialogues","recent","prepareDataForModels","fakeRecent","getFakeData","itemsForModel","onUpdateState","UploaderWrapper","setEventNamespace","eventNamespace","bind","subscribe","uploader","cancel","createUploader","diskFolderId","uploaderId","autoUpload","Uploader","controller","multiple","controllerOptions","folderId","imageResizeWidth","imageResizeHeight","imageResizeMode","imageResizeFilter","getCustomData","getExtension","imageResizeMimeType","imageResizeMimeTypeMode","imagePreviewHeight","imagePreviewWidth","treatOversizeImageAsFile","ignoreUnknownImageTypes","maxFileSize","events","UploaderEvent","FILE_ADD_START","event","onFileAddStart","FILE_UPLOAD_START","onFileUploadStart","FILE_ADD","getData","onFileAdd","FILE_UPLOAD_PROGRESS","onFileUploadProgress","FILE_UPLOAD_COMPLETE","onFileUploadComplete","ERROR","onFileUploadError","FILE_ERROR","MAX_FILE_COUNT_EXCEEDED","onMaxFileCountExceeded","UPLOAD_COMPLETE","removeFilesFromServer","start","setAutoUpload","addFiles","tasks","addedFiles","task","unsubscribe","addFile","tempFileId","customData","sendAsFile","onFileUploadCancel","uploaderList","getFile","remove","UploadingService","addFilesFromClipboard","clipboardData","getFilesFromDataTransfer","imagesOnly","isImage","addFilesFromInput","filesForUploader","messageWithFile","uploadFileFromDisk","commitFile","temporaryFileId","realFileId","fromDisk","checkDiskFolderId","messageText","fileIdParams","disk_id","upload_id","imDiskFileCommit","template_id","file_template_id","as_file","FileStatus","sendSeparateMessagesWithFiles","getFileTypeByExtension","ext","extension","sizeInt","wait","progress","authorName","getId","getProgress","upload","getServerFileId","imDiskFolderGet","ID","commit","getBinary","FileType","previewFile","getClientPreview","setCustomData","formData","FormData","append","getName","imDiskFilePreviewUpload","taskId","fileBinary","previewData","isFailed","getSize","blob","getPreviewUrl","getPreviewWidth","getPreviewHeight","image","urlPreview","urlShow","URL","createObjectURL","fileType","video","split","splice","filesPreviewStatus","autoUploadFlag","messagesToSend","comment","hasText","getError","wasSent","every","getCode","getDescription","SettingsService","changeSetting","settingName","imV2SettingsGeneralUpdate","LinesService","getDialogIdByUserCode","userCode","linesDialogGet","USER_CODE","CopilotService","chatService","Analytics"],"mappings":"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"}