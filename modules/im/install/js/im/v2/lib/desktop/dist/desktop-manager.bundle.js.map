{"version":3,"file":"desktop-manager.bundle.js","sources":["../src/classes/check-utils.js","../src/classes/conference.js","../src/classes/reload-checker.js","../src/classes/encoder.js","../src/classes/event-handlers/bx-link.js","../src/classes/event-handlers/auth.js","../src/classes/event-handlers/status.js","../src/classes/event-handlers/counter.js","../src/classes/event-handlers/hotkey.js","../src/classes/event-handlers/new-tab.js","../src/classes/desktop.js","../src/classes/browser.js","../src/desktop-manager.js"],"sourcesContent":["import { Dom } from 'main.core';\n\nconst IMAGE_DESKTOP_RUN = 'icon.png';\nconst IMAGE_DESKTOP_TWO_WINDOW_MODE = 'internal.png';\n\nconst IMAGE_CHECK_URL = 'http://127.0.0.1:20141';\nconst IMAGE_CHECK_TIMEOUT = 500;\nconst IMAGE_CLASS = 'bx-im-messenger__out-of-view';\n\nconst INTERNET_CHECK_URL = '//www.bitrixsoft.com/200.ok';\n\nconst checkTimeoutList = {};\n\nexport const CheckUtils = {\n\ttestImageLoad(successCallback, failureCallback, image = IMAGE_DESKTOP_RUN)\n\t{\n\t\tconst dateCheck = Date.now();\n\t\tlet failureCallbackCalled = false;\n\n\t\tconst imageForCheck = Dom.create({\n\t\t\ttag: 'img',\n\t\t\tattrs: {\n\t\t\t\tsrc: `${IMAGE_CHECK_URL}/${image}?${dateCheck}`,\n\t\t\t\t'data-id': dateCheck,\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tclassName: IMAGE_CLASS,\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\terror() {\n\t\t\t\t\tif (failureCallbackCalled)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst checkId = this.dataset.id;\n\t\t\t\t\tfailureCallback(false, checkId);\n\n\t\t\t\t\tclearTimeout(checkTimeoutList[checkId]);\n\t\t\t\t\tDom.remove(this);\n\t\t\t\t},\n\t\t\t\tload() {\n\t\t\t\t\tconst checkId = this.dataset.id;\n\t\t\t\t\tsuccessCallback(true, checkId);\n\n\t\t\t\t\tclearTimeout(checkTimeoutList[checkId]);\n\t\t\t\t\tDom.remove(this);\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\tdocument.body.append(imageForCheck);\n\n\t\tcheckTimeoutList[dateCheck] = setTimeout(() => {\n\t\t\tfailureCallbackCalled = true;\n\n\t\t\tfailureCallback(false, dateCheck);\n\t\t\tDom.remove(imageForCheck);\n\t\t}, IMAGE_CHECK_TIMEOUT);\n\t},\n\n\ttestInternetConnection(): Promise\n\t{\n\t\tconst currentTimestamp = Date.now();\n\n\t\treturn new Promise((resolve) => {\n\t\t\tfetch(`${INTERNET_CHECK_URL}.${currentTimestamp}`)\n\t\t\t\t.then((response: Response) => {\n\t\t\t\t\tif (response.status === 200)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve(true);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(false);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresolve(false);\n\t\t\t\t});\n\t\t});\n\t},\n\n\tIMAGE_DESKTOP_RUN,\n\tIMAGE_DESKTOP_TWO_WINDOW_MODE,\n};\n","import { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Loc, Reflection } from 'main.core';\n\nlet conferenceList = [];\nlet conferenceIndex = 0;\n\nexport const Conference = {\n\topenConference(code: string): boolean\n\t{\n\t\tif (!Utils.conference.isValidCode(code))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!DesktopApi.isDesktop())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tlet windowSize = null;\n\n\t\tconst sizes = [\n\t\t\t{ width: 2560, height: 1440 },\n\t\t\t{ width: 2048, height: 1152 },\n\t\t\t{ width: 1920, height: 1080 },\n\t\t\t{ width: 1600, height: 900 },\n\t\t\t{ width: 1366, height: 768 },\n\t\t\t{ width: 1024, height: 576 },\n\t\t];\n\n\t\tfor (const size of sizes)\n\t\t{\n\t\t\twindowSize = size;\n\t\t\tif (screen.width > size.width && screen.height > size.height)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconferenceList = conferenceList.filter((name) => {\n\t\t\treturn Boolean(DesktopApi.findWindow(name));\n\t\t});\n\n\t\tconferenceList.push(Utils.conference.getWindowNameByCode(code));\n\n\t\tDesktopApi.createWindow(Utils.conference.getWindowNameByCode(code), (controller) => {\n\t\t\tcontroller.SetProperty('title', Loc.getMessage('IM_LIB_DESKTOP_CONFERENCE_TITLE'));\n\t\t\tcontroller.SetProperty('clientSize', { Width: windowSize.width, Height: windowSize.height });\n\n\t\t\t// we need the first 'center' command to prevent the window from jumping after we show it\n\t\t\tcontroller.ExecuteCommand('center');\n\t\t\tcontroller.SetProperty('minClientSize', { Width: 940, Height: 400 });\n\t\t\tcontroller.SetProperty('backgroundColor', '#2B3038');\n\t\t\tcontroller.ExecuteCommand('html.load', `<script>location.href=\"/desktop_app/router.php?alias=${code}&videoconf\";</script>`);\n\t\t\tcontroller.ExecuteCommand('show');\n\n\t\t\t// we need the second 'center' command because we know the exact size of the window after we show it\n\t\t\tcontroller.ExecuteCommand('center');\n\t\t});\n\n\t\treturn true;\n\t},\n\ttoggleConference(): boolean\n\t{\n\t\tif (conferenceIndex > conferenceList.length - 1)\n\t\t{\n\t\t\tconferenceIndex = 0;\n\n\t\t\tDesktopApi.showWindow();\n\n\t\t\treturn true;\n\t\t}\n\n\t\tconferenceList = conferenceList.filter((name) => {\n\t\t\treturn Boolean(DesktopApi.findWindow(name));\n\t\t});\n\n\t\tfor (let index = conferenceIndex; index < conferenceList.length; index++)\n\t\t{\n\t\t\tconferenceIndex++;\n\n\t\t\tconst target = DesktopApi.findWindow(conferenceList[index]);\n\t\t\tif (target)\n\t\t\t{\n\t\t\t\tDesktopApi.activateWindow(target);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n};\n","import { CallManager } from 'im.v2.lib.call';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nimport { CheckUtils } from './check-utils';\n\nconst ONE_HOUR = 60 * 60 * 1000;\n\nexport class ReloadChecker\n{\n\t#initDate: Date;\n\t#sidePanelManager: BX.SidePanel.Manager = BX.SidePanel.Instance;\n\n\tstatic init(): ReloadChecker\n\t{\n\t\treturn new ReloadChecker();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#initDate = new Date();\n\t\tthis.#startReloadCheck();\n\t}\n\n\t#startReloadCheck(): void\n\t{\n\t\tsetInterval(async () => {\n\t\t\tconst isReloadNeeded = await this.#isReloadNeeded();\n\t\t\tif (isReloadNeeded)\n\t\t\t{\n\t\t\t\tthis.#reloadWindow();\n\t\t\t}\n\t\t}, ONE_HOUR);\n\t}\n\n\tasync #isReloadNeeded(): Promise<boolean>\n\t{\n\t\tif (Utils.date.isSameDay(new Date(), this.#initDate))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#sidePanelManager.opened)\n\t\t{\n\t\t\tLogger.desktop('Checker: checkDayForReload, slider is open - delay reload');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (CallManager.getInstance().hasCurrentCall())\n\t\t{\n\t\t\tLogger.desktop('Checker: checkDayForReload, call is active - delay reload');\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn CheckUtils.testInternetConnection();\n\t}\n\n\t#reloadWindow(): void\n\t{\n\t\tLogger.desktop('Checker: checkDayForReload, new day - reload window');\n\t\tDesktopApi.reloadWindow();\n\t}\n}\n","import {Type} from 'main.core';\n\nconst ENCODE_SEPARATOR = '!!';\n\nexport const Encoder = {\n\tencodeParams(params: {[key]: any}): string\n\t{\n\t\tif (!Type.isPlainObject(params))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tlet result = '';\n\t\tconst first = true;\n\n\t\tObject.entries(params).forEach(([key, value]) => {\n\t\t\tconst prefix = first ? '' : ENCODE_SEPARATOR;\n\t\t\tresult += `${prefix}${key}${ENCODE_SEPARATOR}${value}`;\n\t\t});\n\n\t\treturn result;\n\t},\n\n\tdecodeParams(encodedParams: string): {[key]: any}\n\t{\n\t\tconst result = {};\n\t\tif (!Type.isStringFilled(encodedParams))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tconst chunks = encodedParams.split(ENCODE_SEPARATOR);\n\t\tfor (let i = 0; i < chunks.length; i += 2)\n\t\t{\n\t\t\tconst key = chunks[i];\n\t\t\tconst value = chunks[i+1];\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tencodeParamsJson(params): string\n\t{\n\t\tif (!Type.isPlainObject(params))\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\n\t\tlet result = '';\n\t\ttry\n\t\t{\n\t\t\tresult = encodeURIComponent(JSON.stringify(params));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('DesktopUtils: could not encode params.', error);\n\t\t\tresult = '{}';\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tdecodeParamsJson(encodedParams: string): {[key]: any}\n\t{\n\t\tlet result = {};\n\t\tif (!Type.isStringFilled(encodedParams))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\ttry\n\t\t{\n\t\t\tresult = JSON.parse(decodeURIComponent(encodedParams));\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error('DesktopUtils: could not decode encoded params.', error);\n\t\t}\n\n\t\treturn result;\n\t}\n};","/* eslint-disable unicorn/prefer-switch */\nimport { Encoder } from '../encoder';\nimport { DesktopManager } from '../../desktop-manager';\nimport { Messenger } from 'im.public';\nimport { EventType, DesktopBxLink, LegacyDesktopBxLink } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nexport class BxLinkHandler\n{\n\tstatic init(): BxLinkHandler\n\t{\n\t\treturn new BxLinkHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToBxProtocolEvent();\n\t\tthis.#subscribeToLegacyBxProtocolEvent();\n\t}\n\n\t#subscribeToBxProtocolEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onBxLink, (command: $Keys<typeof DesktopBxLink>, rawParams) => {\n\t\t\tconst params = rawParams ?? {};\n\n\t\t\tObject.entries(params).forEach(([key, value]) => {\n\t\t\t\tparams[key] = decodeURIComponent(value);\n\t\t\t});\n\n\t\t\tif (command !== DesktopBxLink.openPage)\n\t\t\t{\n\t\t\t\tDesktopApi.activateWindow();\n\t\t\t}\n\n\t\t\tif (command === DesktopBxLink.chat)\n\t\t\t{\n\t\t\t\tconst messageId = params.messageId ?? 0;\n\t\t\t\tvoid Messenger.openChat(params.dialogId, messageId);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.lines)\n\t\t\t{\n\t\t\t\tvoid Messenger.openLines(params.dialogId);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.conference)\n\t\t\t{\n\t\t\t\tvoid DesktopManager.getInstance().openConference(params.code);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.call)\n\t\t\t{\n\t\t\t\tconst withVideo = params.withVideo !== 'N';\n\t\t\t\tvoid Messenger.startVideoCall(params.dialogId, withVideo);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.phone)\n\t\t\t{\n\t\t\t\tconst decodedParams = Encoder.decodeParamsJson(params.phoneParams);\n\t\t\t\tvoid Messenger.startPhoneCall(params.number, decodedParams);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.callList)\n\t\t\t{\n\t\t\t\tconst decodedParams = Encoder.decodeParamsJson(params.callListParams);\n\t\t\t\tvoid Messenger.startCallList(params.callListId, decodedParams);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.notifications)\n\t\t\t{\n\t\t\t\tvoid Messenger.openNotifications();\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.recentSearch)\n\t\t\t{\n\t\t\t\tvoid Messenger.openRecentSearch();\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.copilot)\n\t\t\t{\n\t\t\t\tvoid Messenger.openCopilot(params.dialogId);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.collab)\n\t\t\t{\n\t\t\t\tvoid Messenger.openCollab(params.dialogId);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.settings)\n\t\t\t{\n\t\t\t\tvoid Messenger.openSettings({ onlyPanel: params.section });\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.chatCreation)\n\t\t\t{\n\t\t\t\tvoid Messenger.openChatCreation(params.chatType);\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.timeManager)\n\t\t\t{\n\t\t\t\tBX.Timeman?.Monitor?.openReport();\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.openTab)\n\t\t\t{\n\t\t\t\tDesktopApi.setActiveTab();\n\t\t\t}\n\t\t\telse if (command === DesktopBxLink.openPage)\n\t\t\t{\n\t\t\t\tconst options = Encoder.decodeParamsJson(params.options);\n\t\t\t\tDesktopApi.openPage(options.url, options.options);\n\t\t\t}\n\t\t});\n\t}\n\n\t#subscribeToLegacyBxProtocolEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onBxLink, (command: $Keys<typeof LegacyDesktopBxLink>, rawParams) => {\n\t\t\tconst params = rawParams ?? {};\n\n\t\t\tObject.entries(params).forEach(([key, value]) => {\n\t\t\t\tparams[key] = decodeURIComponent(value);\n\t\t\t});\n\n\t\t\tDesktopApi.activateWindow();\n\n\t\t\tif (command === LegacyDesktopBxLink.messenger)\n\t\t\t{\n\t\t\t\tif (params.dialog)\n\t\t\t\t{\n\t\t\t\t\tvoid Messenger.openChat(params.dialog);\n\t\t\t\t}\n\t\t\t\telse if (params.chat)\n\t\t\t\t{\n\t\t\t\t\tvoid Messenger.openChat(`chat${params.chat}`);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvoid Messenger.openChat();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (command === LegacyDesktopBxLink.chat && params.id)\n\t\t\t{\n\t\t\t\tvoid Messenger.openChat(`chat${params.id}`);\n\t\t\t}\n\t\t\telse if (command === LegacyDesktopBxLink.notify)\n\t\t\t{\n\t\t\t\tvoid Messenger.openNotifications();\n\t\t\t}\n\t\t\telse if (command === LegacyDesktopBxLink.callTo)\n\t\t\t{\n\t\t\t\tif (params.video)\n\t\t\t\t{\n\t\t\t\t\tvoid Messenger.startVideoCall(params.video);\n\t\t\t\t}\n\t\t\t\telse if (params.audio)\n\t\t\t\t{\n\t\t\t\t\tvoid Messenger.startVideoCall(params.audio, false);\n\t\t\t\t}\n\t\t\t\telse if (params.phone)\n\t\t\t\t{\n\t\t\t\t\tvoid Messenger.startPhoneCall(params.phone);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (command === LegacyDesktopBxLink.callList)\n\t\t\t{\n\t\t\t\tvoid Messenger.openRecentSearch();\n\t\t\t}\n\t\t});\n\t}\n}\n","import {EventType, RestMethod} from 'im.v2.const';\nimport {runAction} from 'im.v2.lib.rest';\n\nimport {DesktopApi} from 'im.v2.lib.desktop-api';\n\nexport class AuthHandler\n{\n\tstatic init(): AuthHandler\n\t{\n\t\treturn new AuthHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToLogoutEvent();\n\t}\n\n\t#subscribeToLogoutEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onExit, this.#onExit.bind(this));\n\t}\n\n\t#onExit()\n\t{\n\t\trunAction(RestMethod.imV2DesktopLogout)\n\t\t\t.finally(() => {\n\t\t\t\tDesktopApi.shutdown();\n\t\t\t});\n\t}\n}","import { Core } from 'im.v2.application.core';\nimport { CallManager } from 'im.v2.lib.call';\nimport { Logger } from 'im.v2.lib.logger';\nimport { DesktopManager } from '../../desktop-manager';\nimport { Utils } from 'im.v2.lib.utils';\nimport { EventType, RestMethod, Settings } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { Browser, Event } from 'main.core';\nimport { CheckUtils } from '../check-utils';\n\nexport class StatusHandler\n{\n\t#initDate: Date;\n\t#wakeUpTimer = null;\n\tsidePanelManager: Object = BX.SidePanel.Instance;\n\n\tstatic init(): StatusHandler\n\t{\n\t\treturn new StatusHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#initDate = new Date();\n\n\t\tthis.#subscribeToWakeUpEvent();\n\t\tthis.#subscribeToAwayEvent();\n\t\tthis.#subscribeToFocusEvent();\n\t\tthis.#subscribeToBlurEvent();\n\t\tthis.#subscribeToIconClickEvent();\n\n\t\tthis.#setInitialStatus();\n\t\tthis.#subscribeToStatusChange();\n\t}\n\n\t// region wake up\n\t#subscribeToWakeUpEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onWakeUp, this.#onWakeUp.bind(this));\n\t}\n\n\tasync #onWakeUp()\n\t{\n\t\tconst hasConnection = await CheckUtils.testInternetConnection();\n\t\tif (!hasConnection)\n\t\t{\n\t\t\tLogger.desktop('StatusHandler: onWakeUp event, no internet connection, delay 60 sec');\n\n\t\t\tclearTimeout(this.#wakeUpTimer);\n\t\t\tthis.#wakeUpTimer = setTimeout(this.#onWakeUp.bind(this), 60 * 1000);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (Utils.date.isSameHour(new Date(), this.#initDate))\n\t\t{\n\t\t\tLogger.desktop('StatusHandler: onWakeUp event, same hour - restart pull client');\n\t\t\tCore.getPullClient().restart();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.sidePanelManager.opened)\n\t\t\t{\n\t\t\t\tclearTimeout(this.#wakeUpTimer);\n\t\t\t\tthis.#wakeUpTimer = setTimeout(this.#onWakeUp.bind(this), 60 * 1000);\n\n\t\t\t\tLogger.desktop('StatusHandler: onWakeUp event, slider is open, delay 60 sec');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (CallManager.getInstance().hasCurrentCall())\n\t\t\t{\n\t\t\t\tclearTimeout(this.#wakeUpTimer);\n\t\t\t\tthis.#wakeUpTimer = setTimeout(this.#onWakeUp.bind(this), 60 * 1000);\n\n\t\t\t\tLogger.desktop('StatusHandler: onWakeUp event, call is active, delay 60 sec');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tLogger.desktop('StatusHandler: onWakeUp event, reload window');\n\t\t\tDesktopApi.reloadWindow();\n\t\t}\n\t}\n\t// endregion wake up\n\n\t// region icon click\n\t#subscribeToIconClickEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onIconClick, this.#onIconClick.bind(this));\n\t}\n\n\t#onIconClick()\n\t{\n\t\tDesktopManager.getInstance().toggleConference();\n\t}\n\n\t// endregion icon click\n\n\t// region away\n\t#subscribeToAwayEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onUserAway, this.#onUserAway.bind(this));\n\t}\n\n\t#onUserAway(away: boolean)\n\t{\n\t\tconst method = away ? RestMethod.imUserStatusIdleStart : RestMethod.imUserStatusIdleEnd;\n\t\tCore.getRestClient().callMethod(method)\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(`Desktop: error in ${method}  - ${error}`);\n\t\t\t})\n\t\t;\n\t}\n\t// endregion away\n\n\t// region focus/blur events\n\t#subscribeToFocusEvent()\n\t{\n\t\tEvent.bind(window, 'focus', this.#removeNativeNotifications.bind(this));\n\t}\n\n\t#subscribeToBlurEvent()\n\t{\n\t\t// TODO remove this after refactor notification balloons\n\t\tEvent.bind(window, 'blur', this.#removeNativeNotifications.bind(this));\n\t}\n\n\t#removeNativeNotifications()\n\t{\n\t\tif (!Browser.isWin() || !DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tDesktopApi.removeNativeNotifications();\n\t}\n\t// endregion focus/blur events\n\n\t// region user status\n\t#setInitialStatus()\n\t{\n\t\tconst status = Core.getStore().getters['application/settings/get'](Settings.user.status);\n\t\tDesktopApi.setIconStatus(status);\n\t}\n\n\t#subscribeToStatusChange()\n\t{\n\t\tconst statusWatcher = (state, getters) => {\n\t\t\treturn getters['application/settings/get'](Settings.user.status);\n\t\t};\n\t\tCore.getStore().watch(statusWatcher, (newStatus: string) => {\n\t\t\tDesktopApi.setIconStatus(newStatus);\n\t\t});\n\t}\n\t// endregion user status\n}\n","import { Core } from 'im.v2.application.core';\nimport { EventType } from 'im.v2.const';\n\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { EventEmitter } from 'main.core.events';\n\nimport type { Store } from 'ui.vue3.vuex';\n\nexport class CounterHandler\n{\n\t#store: Store;\n\n\tstatic init(): CounterHandler\n\t{\n\t\treturn new CounterHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\n\t\tthis.#onCounterChange();\n\t\tthis.#subscribeToCountersChange();\n\t}\n\n\t#subscribeToCountersChange()\n\t{\n\t\tEventEmitter.subscribe(EventType.counter.onNotificationCounterChange, this.#onCounterChange.bind(this));\n\t\tEventEmitter.subscribe(EventType.counter.onChatCounterChange, this.#onCounterChange.bind(this));\n\t}\n\n\t#onCounterChange()\n\t{\n\t\tconst chatCounter = this.#store.getters['counters/getTotalChatCounter'];\n\t\tconst notificationCounter = this.#store.getters['notifications/getCounter'];\n\n\t\tconst isImportant = chatCounter > 0;\n\t\tDesktopApi.setCounter(chatCounter + notificationCounter, isImportant);\n\t}\n}","import { Event } from 'main.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nexport class HotkeyHandler\n{\n\tstatic init(): HotkeyHandler\n\t{\n\t\treturn new HotkeyHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#bindHotkeys();\n\t}\n\n\t#bindHotkeys()\n\t{\n\t\tEvent.bind(window, 'keydown', (event) => {\n\t\t\tconst reloadCombination = Utils.key.isCombination(event, 'Ctrl+R');\n\t\t\tif (reloadCombination)\n\t\t\t{\n\t\t\t\tDesktopApi.reloadWindow();\n\t\t\t\tLogger.desktop('NOTICE: User reload window (hotkey)');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst logFolderCombination = Utils.key.isCombination(event, 'Ctrl+Shift+L');\n\t\t\tif (logFolderCombination)\n\t\t\t{\n\t\t\t\tDesktopApi.openLogsFolder();\n\t\t\t\tLogger.desktop('NOTICE: User open log folder (hotkey)');\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst devToolsCombination = Utils.key.isCombination(event, 'Ctrl+Shift+D');\n\t\t\tif (devToolsCombination)\n\t\t\t{\n\t\t\t\tDesktopApi.openDeveloperTools();\n\t\t\t\tLogger.desktop('NOTICE: User open developer tools (hotkey)');\n\t\t\t}\n\t\t});\n\t}\n}\n","import { EventType } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\nexport class NewTabHandler\n{\n\tstatic init(): NewTabHandler\n\t{\n\t\treturn new NewTabHandler();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#subscribeToNewTabEvent();\n\t}\n\n\t#subscribeToNewTabEvent()\n\t{\n\t\tDesktopApi.subscribe(EventType.desktop.onNewTabClick, this.#onNewTabClick.bind(this));\n\t}\n\n\t#onNewTabClick()\n\t{\n\t\tDesktopApi.createTab('/desktop/menu/');\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { EventType } from 'im.v2.const';\nimport { DesktopApi, DesktopSettingsKey } from 'im.v2.lib.desktop-api';\nimport { Logger } from 'im.v2.lib.logger';\nimport { ReloadChecker } from './reload-checker';\n\nimport { BxLinkHandler } from './event-handlers/bx-link';\nimport { AuthHandler } from './event-handlers/auth';\nimport { StatusHandler } from './event-handlers/status';\nimport { CounterHandler } from './event-handlers/counter';\nimport { HotkeyHandler } from './event-handlers/hotkey';\nimport { NewTabHandler } from './event-handlers/new-tab';\n\n/* eslint-disable no-undef */\nexport class Desktop\n{\n\tstatic init(): Desktop\n\t{\n\t\treturn new Desktop();\n\t}\n\n\tconstructor()\n\t{\n\t\tReloadChecker.init();\n\n\t\tStatusHandler.init();\n\t\tAuthHandler.init();\n\t\tBxLinkHandler.init();\n\t\tCounterHandler.init();\n\t\tHotkeyHandler.init();\n\t\tNewTabHandler.init();\n\n\t\tthis.#sendInitEvent();\n\t\tthis.#subscribeOnErrorEvent();\n\n\t\tthis.#initSliderBindings();\n\t\tthis.#initComplete();\n\t}\n\n\t#sendInitEvent()\n\t{\n\t\tconst { currentUser } = Core.getApplicationData();\n\t\tDesktopApi.emit(EventType.desktop.onInit, [{\n\t\t\tuserInfo: currentUser ?? {},\n\t\t}]);\n\t}\n\n\t#initSliderBindings()\n\t{\n\t\tconst sliderBindingStatus = this.#getSliderBindingsStatus();\n\t\tif (sliderBindingStatus)\n\t\t{\n\t\t\tBX.SidePanel.Instance.enableAnchorBinding();\n\n\t\t\treturn;\n\t\t}\n\n\t\tBX.SidePanel.Instance.disableAnchorBinding();\n\t}\n\n\t#getSliderBindingsStatus(): boolean\n\t{\n\t\tconst result = DesktopApi.getCustomSetting(DesktopSettingsKey.sliderBindingsStatus, '1');\n\n\t\treturn result === '1';\n\t}\n\n\t#initComplete()\n\t{\n\t\tDesktopApi.setLogInfo = function(...params)\n\t\t{\n\t\t\tLogger.desktop(...params);\n\t\t};\n\n\t\twindow.BX.debugEnable(true);\n\n\t\tDesktopApi.printWelcomePrompt();\n\t}\n\n\t#subscribeOnErrorEvent()\n\t{\n\t\tEventEmitter.subscribe(EventType.request.onAuthError, () => {\n\t\t\treturn this.#handleInvalidAuthError();\n\t\t});\n\t}\n\n\t#handleInvalidAuthError(): Promise\n\t{\n\t\treturn DesktopApi.login();\n\t}\n}\n","import { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { Logger } from 'im.v2.lib.logger';\nimport { NewTabHandler } from './event-handlers/new-tab';\n\n/* eslint-disable no-undef */\nexport class Browser\n{\n\tstatic init(): Browser\n\t{\n\t\treturn new Browser();\n\t}\n\n\tconstructor()\n\t{\n\t\tNewTabHandler.init();\n\n\t\tthis.#initComplete();\n\t}\n\n\t#initComplete()\n\t{\n\t\tDesktopApi.setLogInfo = function(...params)\n\t\t{\n\t\t\tLogger.desktop(...params);\n\t\t};\n\t}\n}\n","import { Extension } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { DesktopBxLink, Settings } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { DesktopApi, DesktopFeature } from 'im.v2.lib.desktop-api';\n\nimport { CheckUtils } from './classes/check-utils';\nimport { Conference } from './classes/conference';\nimport { Desktop } from './classes/desktop';\nimport { Browser } from './classes/browser';\nimport { Encoder } from './classes/encoder';\n\nimport type { CreatableChatType } from 'im.v2.component.content.chat-forms.forms';\n\nconst DESKTOP_PROTOCOL_VERSION = 2;\nconst LOCATION_RESET_TIMEOUT = 1000;\n\nexport class DesktopManager\n{\n\tstatic instance: DesktopManager;\n\n\t#desktopIsActive: boolean;\n\t#desktopActiveVersion: number;\n\t#locationChangedToBx = false;\n\t#enableRedirectCounter = 1;\n\n\tstatic getInstance(): DesktopManager\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tDesktopManager.getInstance();\n\t}\n\n\tstatic isDesktop(): boolean\n\t{\n\t\treturn DesktopApi.isDesktop();\n\t}\n\n\tstatic isChatWindow(): boolean\n\t{\n\t\treturn DesktopApi.isChatWindow();\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#initDesktopStatus();\n\n\t\tif (DesktopManager.isDesktop())\n\t\t{\n\t\t\tif (DesktopApi.isChatWindow())\n\t\t\t{\n\t\t\t\tDesktop.init();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tBrowser.init();\n\t\t\t}\n\t\t}\n\t}\n\n\tisDesktopActive(): boolean\n\t{\n\t\tif (DesktopManager.isDesktop())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.#desktopIsActive;\n\t}\n\n\tsetDesktopActive(flag: boolean)\n\t{\n\t\tthis.#desktopIsActive = flag;\n\t}\n\n\tsetDesktopVersion(version: number)\n\t{\n\t\tthis.#desktopActiveVersion = version;\n\t}\n\n\tgetDesktopVersion(): number\n\t{\n\t\treturn this.#desktopActiveVersion;\n\t}\n\n\tisLocationChangedToBx(): boolean\n\t{\n\t\treturn this.#locationChangedToBx;\n\t}\n\n\tredirectToChat(dialogId: string = '', messageId: number = 0): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToChat', dialogId);\n\t\tlet link = `bx://${DesktopBxLink.chat}/dialogId/${dialogId}`;\n\t\tif (messageId > 0)\n\t\t{\n\t\t\tlink += `/messageId/${messageId}`;\n\t\t}\n\t\tthis.openBxLink(link);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToLines(dialogId: string = ''): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToLines', dialogId);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.lines}/dialogId/${dialogId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToCopilot(dialogId: string = ''): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToCopilot', dialogId);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.copilot}/dialogId/${dialogId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToCollab(dialogId: string = ''): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToCollab', dialogId);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.collab}/dialogId/${dialogId}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToNotifications(): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToNotifications');\n\t\tthis.openBxLink(`bx://${DesktopBxLink.notifications}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToRecentSearch(): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToRecentSearch');\n\t\tthis.openBxLink(`bx://${DesktopBxLink.recentSearch}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToConference(code: string): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToConference', code);\n\n\t\tthis.openBxLink(`bx://${DesktopBxLink.conference}/code/${code}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToSettings(sectionName: string): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToSettings', sectionName);\n\n\t\tthis.openBxLink(`bx://${DesktopBxLink.settings}/section/${sectionName}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\topenConference(code: string): Promise\n\t{\n\t\tLogger.warn('Desktop: openConference', code);\n\n\t\tconst result = Conference.openConference(code);\n\t\tif (!result)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn Promise.resolve(true);\n\t}\n\n\ttoggleConference()\n\t{\n\t\tLogger.warn('Desktop: toggleConference');\n\n\t\tConference.toggleConference();\n\t}\n\n\tredirectToChatCreation(chatType: CreatableChatType): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToChatCreation', chatType);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.chatCreation}/chatType/${chatType}/`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToVideoCall(dialogId: string = '', withVideo: boolean = true): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToVideoCall', dialogId, withVideo);\n\t\tconst withVideoParam = withVideo ? 'Y' : 'N';\n\t\tthis.openBxLink(`bx://${DesktopBxLink.call}/dialogId/${dialogId}/withVideo/${withVideoParam}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToPhoneCall(number: string, params: Object<any, string>): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToPhoneCall', number, params);\n\t\tconst encodedParams = Encoder.encodeParamsJson(params);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.phone}/number/${number}/phoneParams/${encodedParams}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\tredirectToCallList(callListId: number, params: Object<string, any>): Promise\n\t{\n\t\tLogger.warn('Desktop: redirectToCallList', callListId, params);\n\t\tconst encodedParams = Encoder.encodeParamsJson(params);\n\t\tthis.openBxLink(`bx://${DesktopBxLink.callList}/callListId/${callListId}/callListParams/${encodedParams}`);\n\n\t\treturn Promise.resolve();\n\t}\n\n\topenAccountTab(domainName: string)\n\t{\n\t\tthis.openBxLink(`bx://v2/${domainName}/${DesktopBxLink.openTab}`);\n\t}\n\n\topenPage(url: string, options: { skipNativeBrowser?: boolean } = {})\n\t{\n\t\tconst encodedParams = Encoder.encodeParamsJson({ url, options });\n\n\t\tthis.openBxLink(`bx://${DesktopBxLink.openPage}/options/${encodedParams}`);\n\t}\n\n\tcheckStatusInDifferentContext(): Promise\n\t{\n\t\tif (!this.isDesktopActive())\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tif (DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tCheckUtils.testImageLoad(\n\t\t\t\t() => {\n\t\t\t\t\tresolve(true);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tresolve(false);\n\t\t\t\t},\n\t\t\t);\n\t\t});\n\t}\n\n\tcheckForRedirect(): Promise\n\t{\n\t\tif (!this.isRedirectEnabled() || !this.isRedirectOptionEnabled())\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn this.checkStatusInDifferentContext();\n\t}\n\n\tcheckForOpenBrowserPage(): Promise\n\t{\n\t\tif (!this.isDesktopActive() || !this.isRedirectOptionEnabled())\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tconst desktopVersion = this.getDesktopVersion();\n\t\tif (!DesktopApi.isFeatureSupportedInVersion(desktopVersion, DesktopFeature.openPage.id))\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tCheckUtils.testImageLoad(\n\t\t\t\t() => {\n\t\t\t\t\tCheckUtils.testImageLoad(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tresolve(true);\n\t\t\t\t\t\t},\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\tresolve(false);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCheckUtils.IMAGE_DESKTOP_TWO_WINDOW_MODE,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tresolve(false);\n\t\t\t\t},\n\t\t\t\tCheckUtils.IMAGE_DESKTOP_RUN,\n\t\t\t);\n\t\t});\n\t}\n\n\tisRedirectEnabled(): boolean\n\t{\n\t\treturn this.#enableRedirectCounter > 0;\n\t}\n\n\tenableRedirect()\n\t{\n\t\tthis.#enableRedirectCounter++;\n\t}\n\n\tdisableRedirect()\n\t{\n\t\tthis.#enableRedirectCounter--;\n\t}\n\n\tisRedirectOptionEnabled(): boolean\n\t{\n\t\tif (DesktopApi.isDesktop() && !DesktopApi.isChatWindow())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn Core.getStore().getters['application/settings/get'](Settings.desktop.enableRedirect);\n\t}\n\n\topenBxLink(rawUrl: string)\n\t{\n\t\tconst preparedUrl = this.#prepareBxUrl(rawUrl);\n\n\t\tthis.#locationChangedToBx = true;\n\t\tsetTimeout(() => {\n\t\t\tconst event = new BaseEvent({ compatData: [] });\n\t\t\tEventEmitter.emit(window, 'BXLinkOpened', event);\n\t\t\tthis.#locationChangedToBx = false;\n\t\t}, LOCATION_RESET_TIMEOUT);\n\n\t\tlocation.href = preparedUrl;\n\t}\n\n\t#prepareBxUrl(url: string): string\n\t{\n\t\tif (/^bx:\\/\\/v(\\d)\\//.test(url))\n\t\t{\n\t\t\treturn url;\n\t\t}\n\n\t\treturn url.replace('bx://', `bx://v${DESKTOP_PROTOCOL_VERSION}/${location.hostname}/`);\n\t}\n\n\t#initDesktopStatus()\n\t{\n\t\tconst settings = Extension.getSettings('im.v2.lib.desktop');\n\t\tthis.setDesktopActive(settings.get('desktopIsActive'));\n\t\tthis.setDesktopVersion(settings.get('desktopActiveVersion'));\n\t}\n}\n"],"names":["IMAGE_DESKTOP_RUN","IMAGE_DESKTOP_TWO_WINDOW_MODE","IMAGE_CHECK_URL","IMAGE_CHECK_TIMEOUT","IMAGE_CLASS","INTERNET_CHECK_URL","checkTimeoutList","CheckUtils","testImageLoad","successCallback","failureCallback","image","dateCheck","Date","now","failureCallbackCalled","imageForCheck","Dom","create","tag","attrs","src","props","className","events","error","checkId","dataset","id","clearTimeout","remove","load","document","body","append","setTimeout","testInternetConnection","currentTimestamp","Promise","resolve","fetch","then","response","status","catch","conferenceList","conferenceIndex","Conference","openConference","code","Utils","conference","isValidCode","DesktopApi","isDesktop","windowSize","sizes","width","height","size","screen","filter","name","Boolean","findWindow","push","getWindowNameByCode","createWindow","controller","SetProperty","Loc","getMessage","Width","Height","ExecuteCommand","toggleConference","length","showWindow","index","target","activateWindow","ONE_HOUR","ReloadChecker","init","constructor","BX","SidePanel","Instance","setInterval","isReloadNeeded","date","isSameDay","opened","Logger","desktop","CallManager","getInstance","hasCurrentCall","reloadWindow","ENCODE_SEPARATOR","Encoder","encodeParams","params","Type","isPlainObject","result","Object","entries","forEach","key","value","prefix","first","decodeParams","encodedParams","isStringFilled","chunks","split","i","encodeParamsJson","encodeURIComponent","JSON","stringify","console","decodeParamsJson","parse","decodeURIComponent","BxLinkHandler","subscribe","EventType","onBxLink","command","rawParams","DesktopBxLink","openPage","chat","messageId","Messenger","openChat","dialogId","lines","openLines","DesktopManager","call","withVideo","startVideoCall","phone","decodedParams","phoneParams","startPhoneCall","number","callList","callListParams","startCallList","callListId","notifications","openNotifications","recentSearch","openRecentSearch","copilot","openCopilot","collab","openCollab","settings","openSettings","onlyPanel","section","chatCreation","openChatCreation","chatType","timeManager","Timeman","Monitor","openReport","openTab","setActiveTab","options","url","LegacyDesktopBxLink","messenger","dialog","notify","callTo","video","audio","AuthHandler","onExit","bind","runAction","RestMethod","imV2DesktopLogout","finally","shutdown","StatusHandler","sidePanelManager","onWakeUp","hasConnection","isSameHour","Core","getPullClient","restart","onIconClick","onUserAway","away","method","imUserStatusIdleStart","imUserStatusIdleEnd","getRestClient","callMethod","Event","window","Browser","isWin","isChatWindow","removeNativeNotifications","getStore","getters","Settings","user","setIconStatus","statusWatcher","state","watch","newStatus","CounterHandler","EventEmitter","counter","onNotificationCounterChange","onChatCounterChange","chatCounter","notificationCounter","isImportant","setCounter","HotkeyHandler","event","reloadCombination","isCombination","logFolderCombination","openLogsFolder","devToolsCombination","openDeveloperTools","NewTabHandler","onNewTabClick","createTab","Desktop","currentUser","getApplicationData","emit","onInit","userInfo","sliderBindingStatus","enableAnchorBinding","disableAnchorBinding","getCustomSetting","DesktopSettingsKey","sliderBindingsStatus","setLogInfo","debugEnable","printWelcomePrompt","request","onAuthError","login","DESKTOP_PROTOCOL_VERSION","LOCATION_RESET_TIMEOUT","instance","isDesktopActive","setDesktopActive","flag","setDesktopVersion","version","getDesktopVersion","isLocationChangedToBx","redirectToChat","warn","link","openBxLink","redirectToLines","redirectToCopilot","redirectToCollab","redirectToNotifications","redirectToRecentSearch","redirectToConference","redirectToSettings","sectionName","redirectToChatCreation","redirectToVideoCall","withVideoParam","redirectToPhoneCall","redirectToCallList","openAccountTab","domainName","checkStatusInDifferentContext","checkForRedirect","isRedirectEnabled","isRedirectOptionEnabled","checkForOpenBrowserPage","desktopVersion","isFeatureSupportedInVersion","DesktopFeature","enableRedirect","disableRedirect","rawUrl","preparedUrl","BaseEvent","compatData","location","href","test","replace","hostname","Extension","getSettings","get"],"mappings":"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"}