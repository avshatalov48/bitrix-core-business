<? namespace Bitrix\Main\Security\W;$GLOBALS['____161439864']= array(base64_decode('dGltZ'.'Q'.'=='),base64_decode('dGltZ'.'Q=='),base64_decode('anNvbl9k'.'ZWNvZGU'.'='),base64_decode('YXJy'.'YX'.'lfbWVyZ2U='),base64_decode('am'.'9pbg'.'=='),base64_decode('am9pbg=='),base64_decode(''.'a'.'m9'.'pbg=='),base64_decode('Y'.'XJ'.'yYXlfcG9w'),base64_decode(''.'YX'.'JyYXlfc2hpZnQ='),base64_decode('YXJyYXl'.'fc'.'2hpZnQ'.'='),base64_decode('YXJyYXl'.'f'.'c'.'2hpZnQ='),base64_decode('YX'.'J'.'y'.'Y'.'X'.'lfc2hpZnQ='),base64_decode('YX'.'JyY'.'Xlf'.'b'.'WVyZ2'.'U='),base64_decode('aX'.'NfYXJy'.'YXk='),base64_decode(''.'Y'.'XJyYXlfbWVyZ2U='),base64_decode('aW5'.'fYXJy'.'YX'.'k='),base64_decode('aW5'.'fYXJyY'.'Xk='),base64_decode(''.'a'.'W5fYXJyYXk='),base64_decode('aW5fYXJ'.'y'.'YX'.'k='),base64_decode('a'.'W5fY'.'XJyYXk='),base64_decode('d'.'GltZQ=='),base64_decode('dGlt'.'ZQ='.'='),base64_decode(''.'YXJyYXlfbW'.'F'.'w'),base64_decode(''.'Z2V0X2'.'x'.'vYWRlZF'.'9'.'l'.'eHRlb'.'nNpb25'.'z'),base64_decode('anNvbl9lbmN'.'vZGU='),base64_decode('an'.'N'.'vbl9'.'lb'.'mNvZG'.'U='),base64_decode('cGhw'.'dmVyc2'.'lvb'.'g'.'=='),base64_decode('a'.'n'.'Nvbl9lbm'.'Nv'.'ZGU='),base64_decode(''.'am9pbg=='));if(!function_exists(__NAMESPACE__.'\\___311163565')){function ___311163565($_258647315){static $_2012120432= false; if($_2012120432 == false) $_2012120432=array('V'.'1dBTEx'.'fTE9DS'.'w==',''.'c2VjdXJpdHk=','REFU'.'Q'.'Q='.'=','e'.'yI=','V1'.'dBTE'.'xf'.'T'.'E9DS'.'w'.'='.'=','c2Vjd'.'XJpdHk=','U0VDVVJJVFlf'.'V1dBTExfRV'.'hD'.'RVBU'.'SU9O','R'.'kF'.'J'.'TF9D'.'SE'.'VDS0l'.'ORw==','Q'.'2FuIG5'.'vd'.'CBleGVjdXRlI'.'H'.'d3'.'YW'.'x'.'sIH'.'J1bG'.'Vz'.'Oi'.'A=',''.'I'.'FRyY'.'WNlOiA=','UkV'.'R'.'VUVTV'.'F9VUkk=','a2V5cw==','dm'.'FsdWVz','U'.'0VDV'.'VJJVF'.'lfV1'.'d'.'B'.'TE'.'xfTU9ES'.'UZZ','Lg'.'='.'=','U'.'0VDVVJJVFl'.'fV1dBTExfV'.'U5'.'TRV'.'Q'.'=','Lg==','U'.'0V'.'DVVJJVFlfV1d'.'BTE'.'xfRVh'.'JVA='.'=','Lg==','Z2xvYmFs','a'.'2V'.'5cw==','dm'.'Fsd'.'WVz','Z2V0','Z2V'.'0','c'.'G9zdA==','c'.'G9zdA==',''.'Y'.'29va2ll','Y'.'29va2ll','cmV'.'x'.'dW'.'VzdA==',''.'cmVxdWVzdA'.'='.'=','Z2xv'.'YmFs','Z2'.'xvYmF'.'s','b'.'WFpbl9z'.'Z'.'WM'.'=','V1'.'dBTExfQUNUVUFMSVpF'.'X1JVT'.'EVT','dg==','d'.'mVyc2l'.'vbg==','aQ==','a'.'XNJ'.'bnN0YW'.'xsZWQ=','dg'.'==','a'.'W5p',''.'c'.'29ja2'.'V0VGltZW9'.'1dA='.'=','c3'.'RyZWFtVGltZW91d'.'A='.'=','KCc=','Z'.'GF'.'0'.'YQ==','J'.'ywgJw==','b'.'W9kdWxl',''.'JywgJw==',''.'bW9kdWxl'.'X'.'3'.'Zlcn'.'Npb2'.'4'.'=','Jyk=',''.'LC'.'A=',''.'U0VDVVJJV'.'Fl'.'fV1d'.'B'.'TExfRVhDR'.'VBU'.'SU9O','b'.'WFpbg==',''.'RkFJTF9'.'SRU'.'ZSRVNISU5'.'H','Q2'.'F'.'uIG5'.'vd'.'CByZW'.'Zy'.'ZXNoIHd3YWxsIH'.'J'.'1bGV'.'zO'.'iA=','IFR'.'yY'.'WNl'.'OiA=','Z'.'GF0Y'.'Q'.'==','ey'.'I=','LS0tLS1C'.'RU'.'dJ'.'TiBQVUJMSU'.'MgS0VZLS0tL'.'S0'.'=','Ck'.'1JSUJJak'.'FO'.'Qmd'.'rcW'.'hraUc5dzBCQVFFRkF'.'BT0NBU'.'ThBTU'.'lJ'.'QkNnS0NBU'.'U'.'V'.'BcThRRTBIam'.'1'.'IS'.'lVTdFd'.'WN'.'m4wemEKUl'.'Z'.'v'.'THgw'.'Mkt6Ym'.'Z'.'yYl'.'M'.'vUDZzV'.'2'.'F4'.'VHp3'.'OFNl'.'R1R0'.'YlRDT'.'3JwSGk1'.'UUY2T1J'.'5al'.'ovWHh6'.'L'.'0tMVTFHYm9'.'mOUNaMwo'.'0'.'e'.'j'.'d'.'Ta3'.'FVd'.'DY2aWJYd'.'k9G'.'Qng0Znc'.'v'.'QV'.'BQUkdE'.'c'.'XRtM'.'G5EM2Zn'.'R3'.'N1M1JlUGd3'.'M'.'jlpOCt2bTdt'.'dEJLSlVZbD'.'RyClZwYjZ'.'zZ'.'lpFVDlLRWI2VDFIR'.'FltR'.'X'.'ZjM'.'W'.'hxL'.'2'.'lpdX'.'l4TH'.'JaW'.'mk1U'.'T'.'ZVZ'.'m'.'Y0'.'VUV2'.'VE'.'kr'.'Njhzc0ZSa1Erb3dUUnkKZU9JTWJGaE0vVV'.'R'.'tZlZZYlRSRnkyb1VROFdNem'.'E'.'yb'.'ko1U2FoemkxVUtPM'.'WpB'.'alhUUF'.'J'.'yem'.'M'.'3'.'QWp1Nj'.'M5ajF'.'PMApwc'.'HFmbTV4Z'.'1ds'.'R'.'kF'.'Ka0hRVGdiZGQ1QVdxR'.'EZ'.'Ra3Q5SEtrWStUbmZCTE'.'dWTXZWeV'.'B3VEhOV1FZ'.'QX'.'c0'.'eHBnL3dBC'.'lp'.'3SURB'.'U'.'UFCC'.'i0tLS'.'0tRU5EIFBVQkxJQyBLR'.'Vkt'.'LS0'.'tLQ'.'='.'=');return base64_decode($_2012120432[$_258647315]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; use ReflectionExtension; class WWall{ const CACHE_RULES_TTL= 10800; private static $_1501754056= 'https://wwall.bitrix.info/rules.php'; protected $_860292194= true; public function handle(){ try{  $_1875899659= RuleRecordTable::getList([ 'cache' =>['ttl' => 3600* 24* 7]])->fetchAll(); if(empty($_1875899659)){ return;}  $_1328644151= Cache::createInstance(); $_1222877075= false; if($_1328644151->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_398229853= $_1328644151->getVars(); if($GLOBALS['____161439864'][0]()- $_398229853> round(0+4+4+4+4+4)){  $_956270784= Application::getConnection(); $_1382540753= RuleRecordTable::getTableName(); $_956270784->truncateTable($_1382540753); RuleRecordTable::cleanCache(); $_1328644151->clean(___311163565(0), ___311163565(1));}} elseif($_1328644151->startDataCache()){  $_1328644151->endDataCache($GLOBALS['____161439864'][1]()); $_1222877075= true;} foreach($_1875899659 as $_1415030715){ $_817611707= new PublicKeyCipher; $_2125874283= $_817611707->decrypt($_1415030715[___311163565(2)], static::__1690691366()); if(!str_starts_with($_2125874283, ___311163565(3))){ continue;} $_101177814= $GLOBALS['____161439864'][2]($_2125874283, true); if(!empty($_101177814)){ $_208736042= Rule::make($_101177814); $_150259286= $this->handleRule($_208736042); $this->applyHandlingResults($_150259286);}}  if($_1222877075){ $_1328644151->clean(___311163565(4), ___311163565(5));}} catch(\Throwable $_1688258302){ $this->logEvent( ___311163565(6), ___311163565(7), ___311163565(8). $_1688258302->getMessage(). ___311163565(9). $_1688258302->getTraceAsString());}}  public function handleRule(Rule $_208736042): array{ $_150259286=[]; if($_208736042->matchPath($_SERVER[___311163565(10)])){  $_1037601826= $this->getContextElements($_208736042->getContext()); foreach($_1037601826 as $_2037338963 => &$_743971468){ $_150259286= $GLOBALS['____161439864'][3]($_150259286, $this->recursiveContextKeyHandle($_2037338963, $_743971468,[], $_208736042));}} return $_150259286;}  public function applyHandlingResults(array $_150259286){ $_1037601826= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_150259286 as $_291903623){ $_743971468=& $_1037601826[$_291903623->getContextName()]; $_1612462529= $_291903623->getRuleResult(); $_208736042= $_291903623->getRule(); if($_1612462529 instanceof ModifyResult){ if($_208736042->getProcess() === ___311163565(11)){  static::rewriteContextKey( $_291903623->getContextName(), $_743971468, $_291903623->getContextKey(), $_1612462529->getCleanValue());} elseif($_208736042->getProcess() === ___311163565(12)){ static::rewriteContextValue( $_291903623->getContextName(), $_743971468, $_291903623->getContextKey(), $_1612462529->getCleanValue());} $this->logEvent( ___311163565(13), $_291903623->getContextName(), $GLOBALS['____161439864'][4](___311163565(14), $_291903623->getContextKey()));} elseif($_1612462529 instanceof CheckResult &&!$_1612462529->isSuccess()){ if($_1612462529->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_291903623->getContextName(), $_743971468, $_291903623->getContextKey(),); $this->logEvent( ___311163565(15), $_291903623->getContextName(), $GLOBALS['____161439864'][5](___311163565(16), $_291903623->getContextKey()));} elseif($_1612462529->getAction() === RuleAction::EXIT){ $this->logEvent( ___311163565(17), $_291903623->getContextName(), $GLOBALS['____161439864'][6](___311163565(18), $_291903623->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_860292194= false;} protected function rewriteContextKey($_2037338963, &$_743971468, $_1800294574, $_2026458311){ $_329727734= $_1800294574;  $GLOBALS['____161439864'][7]($_329727734); $_329727734[]= $_2026458311; if($_2037338963 === ___311163565(19)){ $_1871183836= $GLOBALS['____161439864'][8]($_1800294574); $GLOBALS['____161439864'][9]($_329727734); if(empty($_1800294574)){ $GLOBALS[$_2026458311]= $GLOBALS[$_1871183836]; unset($GLOBALS[$_1871183836]);} else{ $_743971468=& $GLOBALS[$_1871183836]; $_2037231732= ArrayHelper::getByNestedKey($_743971468, $_1800294574);  ArrayHelper::setByNestedKey($_743971468, $_329727734, $_2037231732);  ArrayHelper::unsetByNestedKey($_743971468, $_1800294574);}} else{ $_2037231732= ArrayHelper::getByNestedKey($_743971468, $_1800294574);  ArrayHelper::setByNestedKey($_743971468, $_329727734, $_2037231732);  ArrayHelper::unsetByNestedKey($_743971468, $_1800294574);}} protected function rewriteContextValue($_2037338963, &$_743971468, $_175278869, $_2037231732){ if($_2037338963 === 'global'){ $_1871183836= $GLOBALS['____161439864'][10]($_175278869); if(empty($_175278869)){ $GLOBALS[$_1871183836]= $_2037231732;} else{ $_743971468=& $GLOBALS[$_1871183836]; ArrayHelper::setByNestedKey($_743971468, $_175278869, $_2037231732);}} else{  ArrayHelper::setByNestedKey($_743971468, $_175278869, $_2037231732);}} protected function unsetContextValue($_2037338963, &$_743971468, $_175278869){ if($_2037338963 === 'global'){ $_1871183836= $GLOBALS['____161439864'][11]($_175278869); if(empty($_175278869)){ unset($GLOBALS[$_1871183836]);} else{ $_743971468=& $GLOBALS[$_1871183836]; ArrayHelper::unsetByNestedKey($_743971468, $_175278869);}} else{ ArrayHelper::unsetByNestedKey($_743971468, $_175278869);}}  protected function recursiveContextKeyHandle(string $_2037338963, array &$_743971468, array $_1746216806, Rule $_208736042): array{  $_150259286=[]; foreach($_743971468 as $_513688340 => $_2037231732){ $_175278869= $GLOBALS['____161439864'][12]($_1746216806,[$_513688340]); if($_208736042->matchKey($_175278869)){  if($_208736042->getProcess() === ___311163565(20)){ $_1612462529= $_208736042->evaluate($_513688340);} elseif($_208736042->getProcess() === ___311163565(21)){ $_1612462529= $_208736042->evaluateValue($_2037231732);}  if(!empty($_1612462529) && $_1612462529 instanceof RuleResult){ $_150259286[]= new HandlingResult($_2037338963, $_175278869, $_1612462529, $_208736042);}}  if($GLOBALS['____161439864'][13]($_2037231732)){ $_150259286= $GLOBALS['____161439864'][14]($_150259286, $this->recursiveContextKeyHandle( $_2037338963, $_743971468[$_513688340], $_175278869, $_208736042));}} return $_150259286;} protected function getContextElements(array $_1684268202){ $_1188006743=[]; if($GLOBALS['____161439864'][15](___311163565(22), $_1684268202, true)){ $_1188006743[___311163565(23)]= &$_GET;} if($GLOBALS['____161439864'][16](___311163565(24), $_1684268202, true)){ $_1188006743[___311163565(25)]= &$_POST;} if($GLOBALS['____161439864'][17](___311163565(26), $_1684268202, true)){ $_1188006743[___311163565(27)]= &$_COOKIE;} if($GLOBALS['____161439864'][18](___311163565(28), $_1684268202, true)){ $_1188006743[___311163565(29)]= &$_REQUEST;} if($GLOBALS['____161439864'][19](___311163565(30), $_1684268202, true)){ $_1188006743[___311163565(31)]= $GLOBALS;} return $_1188006743;} public static function refreshRules(){ try{ $_232475477= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____161439864'][20]()- $_232475477)< static::CACHE_RULES_TTL){ return;} Option::set(___311163565(32), ___311163565(33), $GLOBALS['____161439864'][21]()); $_35024436= null;  $_1931461515= $GLOBALS['____161439864'][22](function($_1501349913){ return[___311163565(34) => $_1501349913[___311163565(35)], ___311163565(36) => (int) $_1501349913[___311163565(37)]];}, ModuleManager::getModulesFromDisk());  $_305126240=[]; foreach($GLOBALS['____161439864'][23]() as $_1355681657){ $_530848160= new ReflectionExtension($_1355681657); $_305126240[$_1355681657]=[ ___311163565(38) => $_530848160->getVersion(), ___311163565(39) => $_530848160->getINIEntries()];}  $_1559476498= new HttpClient([ ___311163565(40) => round(0+2.5+2.5), ___311163565(41) => round(0+1.25+1.25+1.25+1.25)]); $_1565275161= $_1559476498->post( static::$_1501754056,[ 'modules' => $GLOBALS['____161439864'][24]($_1931461515), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey(), 'php' => $GLOBALS['____161439864'][25]([ 'v' => $GLOBALS['____161439864'][26](), 'ext' => $_305126240]),]); if($_1559476498->getStatus() == round(0+50+50+50+50) &&!empty($_1565275161)){ $_35024436= Json::decode($_1565275161);}  if($_35024436 !== null){ $_956270784= Application::getConnection(); $_1382540753= RuleRecordTable::getTableName(); if(!empty($_35024436)){ foreach($_35024436 as $_18849173){ if(!static::checkRuleSign($_18849173)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____161439864'][27]($_18849173));}}}  $_956270784->truncateTable($_1382540753);  if(!empty($_35024436)){ $_933730467=[]; foreach($_35024436 as $_18849173){ $_933730467[]= ___311163565(42). $_956270784->getSqlHelper()->forSql($_18849173[___311163565(43)]). ___311163565(44). $_956270784->getSqlHelper()->forSql($_18849173[___311163565(45)]). ___311163565(46). $_956270784->getSqlHelper()->forSql($_18849173[___311163565(47)]). ___311163565(48);} $_1383931988= $GLOBALS['____161439864'][28](___311163565(49), $_933730467);  $_956270784->query("INSERT INTO {$_1382540753} (DATA, MODULE, MODULE_VERSION) VALUES {$_1383931988}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_1688258302){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___311163565(50), ___311163565(51), ___311163565(52), ___311163565(53). $_1688258302->getMessage(). ___311163565(54). $_1688258302->getTraceAsString());}} protected static function checkRuleSign($_208736042){ $_817611707= new PublicKeyCipher; $_101177814= $_817611707->decrypt($_208736042[___311163565(55)], static::__1690691366()); return str_starts_with($_101177814, ___311163565(56));} private static function __1690691366(){ $_1884068586= ''; $_1884068586 .= ___311163565(57); $_1884068586 .= ___311163565(58); return $_1884068586;} protected function logEvent($_415438593, $_466517835, $_1207631306){ if($this->_860292194){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_415438593, 'main', $_466517835, $_1207631306);}}}?>