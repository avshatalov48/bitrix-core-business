this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,t,s,i,r,a,n,o,l,c,d,h,u,m,g,v,p){"use strict";const I="ui.entityselector.doSearch";const y="ui.entityselector.load";const b="ui.entityselector.saveRecentItems";var f=babelHelpers.classPrivateFieldLooseKey("searchConfig");var M=babelHelpers.classPrivateFieldLooseKey("storeUpdater");var S=babelHelpers.classPrivateFieldLooseKey("loadLatestResultsRequest");var _=babelHelpers.classPrivateFieldLooseKey("searchRequest");var L=babelHelpers.classPrivateFieldLooseKey("getDialogIdAndDate");var x=babelHelpers.classPrivateFieldLooseKey("getItemsFromRecentItems");class C{constructor(e){Object.defineProperty(this,x,{value:k});Object.defineProperty(this,L,{value:P});Object.defineProperty(this,_,{value:E});Object.defineProperty(this,S,{value:B});Object.defineProperty(this,f,{writable:true,value:void 0});Object.defineProperty(this,M,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,f)[f]=e;babelHelpers.classPrivateFieldLooseBase(this,M)[M]=new r.StoreUpdater}async search(e){const t=await babelHelpers.classPrivateFieldLooseBase(this,_)[_](e);await babelHelpers.classPrivateFieldLooseBase(this,M)[M].update(t);return babelHelpers.classPrivateFieldLooseBase(this,L)[L](t)}async loadLatestResults(){const e=await babelHelpers.classPrivateFieldLooseBase(this,S)[S]();const{items:t,recentItems:s}=e;if(t.length===0||s.length===0){return[]}const i=babelHelpers.classPrivateFieldLooseBase(this,x)[x](s,t);await babelHelpers.classPrivateFieldLooseBase(this,M)[M].update(i);return babelHelpers.classPrivateFieldLooseBase(this,L)[L](i)}addItemsToRecentSearchResults(e){const t=[{id:e,entityId:r.EntityId}];const s={json:{...r.getSearchConfig(babelHelpers.classPrivateFieldLooseBase(this,f)[f]),recentItems:t}};return d.ajax.runAction(b,s)}}async function B(){const e={json:r.getSearchConfig(babelHelpers.classPrivateFieldLooseBase(this,f)[f])};let t={items:[],recentItems:[]};try{const s=await d.ajax.runAction(y,e);i.Logger.warn("Search service: latest search request result",s);t=s.data.dialog}catch(e){i.Logger.warn("Search service: latest search request error",e)}return t}async function E(e){const t={json:r.getSearchConfig(babelHelpers.classPrivateFieldLooseBase(this,f)[f])};t.json.searchQuery={queryWords:u.Utils.text.getWordsFromString(e),query:e};let s=[];try{const e=await d.ajax.runAction(I,t);i.Logger.warn("Search service: request result",e);s=e.data.dialog.items}catch(e){i.Logger.warn("Search service: error",e)}return s}function P(e){return e.map((e=>{var t,s;return{dialogId:e.id.toString(),dateMessage:(t=(s=e.customData)==null?void 0:s.dateMessage)!=null?t:""}}))}function k(e,t){const s=[];e.forEach((([,e])=>{const i=t.find((t=>t.id===e.toString()));if(i){s.push(i)}}));return s}var R=babelHelpers.classPrivateFieldLooseKey("store");var T=babelHelpers.classPrivateFieldLooseKey("localSearch");var H=babelHelpers.classPrivateFieldLooseKey("baseServerSearch");var F=babelHelpers.classPrivateFieldLooseKey("localCollection");var w=babelHelpers.classPrivateFieldLooseKey("isExtranet");class U{constructor(e){Object.defineProperty(this,w,{value:A});Object.defineProperty(this,R,{writable:true,value:void 0});Object.defineProperty(this,T,{writable:true,value:void 0});Object.defineProperty(this,H,{writable:true,value:void 0});Object.defineProperty(this,F,{writable:true,value:new Map});babelHelpers.classPrivateFieldLooseBase(this,R)[R]=v.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,T)[T]=new r.LocalSearch(e);babelHelpers.classPrivateFieldLooseBase(this,H)[H]=new C(e)}loadLatestResults(){return babelHelpers.classPrivateFieldLooseBase(this,H)[H].loadLatestResults()}searchLocal(e){const t=[...babelHelpers.classPrivateFieldLooseBase(this,F)[F].values()];return babelHelpers.classPrivateFieldLooseBase(this,T)[T].search(e,t)}async search(e){const t=await babelHelpers.classPrivateFieldLooseBase(this,H)[H].search(e);t.forEach((e=>{babelHelpers.classPrivateFieldLooseBase(this,F)[F].set(e.dialogId,e)}));return t}saveItemToRecentSearch(e){return babelHelpers.classPrivateFieldLooseBase(this,H)[H].addItemsToRecentSearchResults(e)}clearSessionResult(){babelHelpers.classPrivateFieldLooseBase(this,F)[F].clear()}sortByDate(e){e.sort(((e,t)=>{if(!e.dateMessage||!t.dateMessage){if(!e.dateMessage&&!t.dateMessage){if(babelHelpers.classPrivateFieldLooseBase(this,w)[w](e.dialogId)){return 1}if(babelHelpers.classPrivateFieldLooseBase(this,w)[w](t.dialogId)){return-1}return 0}return e.dateMessage?-1:1}return u.Utils.date.cast(t.dateMessage)-u.Utils.date.cast(e.dateMessage)}));return e}}function A(e){const t=babelHelpers.classPrivateFieldLooseBase(this,R)[R].getters["chats/get"](e);if(!t){return false}if(t.type===h.ChatType.user){const t=babelHelpers.classPrivateFieldLooseBase(this,R)[R].getters["users/get"](e);return t&&t.extranet}return t.extranet}class O extends o.BaseMenu{constructor(){super();this.id="im-chat-search-context-menu";this.callManager=l.CallManager.getInstance();this.permissionManager=c.PermissionManager.getInstance()}getMenuItems(){return[this.getOpenItem(),this.getCallItem(),this.getOpenProfileItem(),this.getChatsWithUserItem()]}getOpenItem(){return{text:d.Loc.getMessage("IM_LIB_MENU_OPEN"),onclick:()=>{n.Messenger.openChat(this.context.dialogId);this.menuInstance.close()}}}getCallItem(){const e=this.callManager.chatCanBeCalled(this.context.dialogId);const t=this.permissionManager.canPerformAction(h.ChatActionType.call,this.context.dialogId);if(!e||!t){return null}return{text:d.Loc.getMessage("IM_LIB_MENU_CALL_2"),onclick:()=>{this.callManager.startCall(this.context.dialogId);this.menuInstance.close()}}}getOpenProfileItem(){if(!this.isUser()||this.isBot()){return null}const e=u.Utils.user.getProfileLink(this.context.dialogId);return{text:d.Loc.getMessage("IM_LIB_MENU_OPEN_PROFILE"),href:e,onclick:()=>{this.menuInstance.close()}}}getChatsWithUserItem(){if(!this.isUser()||this.isBot()){return null}const e=this.store.getters["application/getLayout"].entityId.length>0;return{text:d.Loc.getMessage("IM_LIB_MENU_FIND_CHATS_WITH_USER"),onclick:async()=>{if(!e){await n.Messenger.openChat(this.context.dialogId)}a.EventEmitter.emit(h.EventType.sidebar.open,{panel:h.SidebarDetailBlock.chatsWithUser,standalone:true,dialogId:this.context.dialogId});this.menuInstance.close()}}}isUser(){return this.store.getters["chats/isUser"](this.context.dialogId)}isBot(){if(!this.isUser()){return false}const e=this.store.getters["users/get"](this.context.dialogId);return e.bot===true}}const $={name:"SearchItem",components:{Avatar:p.Avatar,ChatTitleWithHighlighting:p.ChatTitleWithHighlighting},props:{dialogId:{type:String,required:true},dateMessage:{type:String,default:""},withDate:{type:Boolean,default:false},selected:{type:Boolean,required:false},query:{type:String,default:""}},emits:["clickItem","openContextMenu"],computed:{AvatarSize:()=>p.AvatarSize,user(){return this.$store.getters["users/get"](this.dialogId,true)},dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},isChat(){return!this.isUser},isUser(){return this.dialog.type===h.ChatType.user},position(){if(!this.isUser){return""}return this.user.workPosition},userItemText(){if(!this.position){return this.loc("IM_SEARCH_ITEM_USER_TYPE_GROUP_V2")}return m.highlightText(d.Text.encode(this.position),this.query)},chatItemText(){return this.loc("IM_SEARCH_ITEM_CHAT_TYPE_GROUP_V2")},itemText(){return this.isUser?this.userItemText:this.chatItemText},itemTextForTitle(){return this.isUser?this.position:this.chatItemText},formattedDate(){if(!this.dateMessage){return null}const e=u.Utils.date.cast(this.dateMessage);return this.formatDate(e)}},methods:{onClick(e){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:e})},onRightClick(e){if(e.altKey&&e.shiftKey){return}this.$emit("openContextMenu",{dialogId:this.dialogId,nativeEvent:e})},formatDate(e){return g.DateFormatter.formatByTemplate(e,g.DateTemplate.recent)},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div \n\t\t\t@click="onClick" \n\t\t\t@click.right.prevent="onRightClick" \n\t\t\tclass="bx-im-search-item__container bx-im-search-item__scope"\n\t\t\t:class="{'--selected': selected}"\n\t\t>\n\t\t\t<div class="bx-im-search-item__avatar-container">\n\t\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.XL" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-search-item__content-container">\n\t\t\t\t<div class="bx-im-search-item__content_header">\n\t\t\t\t\t<ChatTitleWithHighlighting :dialogId="dialogId" :textToHighlight="query" />\n\t\t\t\t\t<div v-if="withDate && formattedDate" class="bx-im-search-item__date">\n\t\t\t\t\t\t<span>{{ formattedDate }}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-search-item__item-text" :title="itemTextForTitle" v-html="itemText"></div>\n\t\t\t</div>\n\t\t\t<div v-if="selected" class="bx-im-chat-search-item__selected"></div>\n\t\t</div>\n\t`};const D={name:"MyNotes",emits:["clickItem"],computed:{dialogId(){return v.Core.getUserId().toString()},name(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_MY_NOTES")}},created(){this.contextMenuManager=new O},beforeUnmount(){this.contextMenuManager.destroy()},methods:{onClick(e){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:e})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-search-my-notes__container bx-im-search-my-notes__scope"\n\t\t\t@click="onClick" \n\t\t\t@click.right.prevent\n\t\t>\n\t\t\t<div class="bx-im-search-my-notes__avatar"></div>\n\t\t\t<div class="bx-im-search-my-notes__title" :title="name">\n\t\t\t\t{{ name }}\n\t\t\t</div>\n\t\t</div>\n\t`};const N={name:"CarouselUser",components:{Avatar:p.Avatar},props:{userId:{type:Number,required:true},selected:{type:Boolean,default:false}},emits:["clickItem","openContextMenu"],computed:{AvatarSize:()=>p.AvatarSize,dialogId(){return this.userId.toString()},user(){return this.$store.getters["users/get"](this.dialogId,true)},name(){var e;return(e=this.user.firstName)!=null?e:this.user.name},isExtranet(){return this.user.extranet}},created(){this.contextMenuManager=new O},beforeUnmount(){this.contextMenuManager.destroy()},methods:{onClick(e){this.$emit("clickItem",{dialogId:this.dialogId,nativeEvent:e})},onRightClick(e){if(e.altKey&&e.shiftKey){return}this.$emit("openContextMenu",{dialogId:this.dialogId,nativeEvent:e})}},template:`\n\t\t<div \n\t\t\tclass="bx-im-carousel-user__container bx-im-carousel-user__scope"\n\t\t\t:class="{'--extranet': isExtranet, '--selected': selected}"\n\t\t\t@click="onClick" \n\t\t\t@click.right.prevent="onRightClick"\n\t\t>\n\t\t\t<div v-if="selected" class="bx-im-carousel-user__selected-mark"></div>\n\t\t\t<Avatar :dialogId="dialogId" :size="AvatarSize.XL" />\n\t\t\t<div class="bx-im-carousel-user__title" :title="name">\n\t\t\t\t{{ name }}\n\t\t\t</div>\n\t\t</div>\n\t`};const q=6;const X={name:"RecentUsersCarousel",components:{CarouselUser:N,MyNotes:D},props:{selectMode:{type:Boolean,default:false},showMyNotes:{type:Boolean,default:true},selectedItems:{type:Array,required:false,default:()=>[]}},emits:["clickItem","openContextMenu"],computed:{users(){const e=[];this.$store.getters["recent/getSortedCollection"].forEach((t=>{if(this.isChat(t.dialogId)){return}const s=this.$store.getters["users/get"](t.dialogId,true);if(s.bot||s.id===v.Core.getUserId()){return}e.push(s)}));return e.map((e=>e.id))},items(){const e=this.showMyNotes?q-1:q;return this.users.slice(0,e)},currentUserId(){return v.Core.getUserId()}},methods:{isChat(e){return e.startsWith("chat")},isSelected(e){const t=e.toString();return this.selectedItems.includes(t)},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-recent-users-carousel__container bx-im-recent-users-carousel__scope">\n\t\t\t<div class="bx-im-recent-users-carousel__title-container">\n\t\t\t\t<span class="bx-im-recent-users-carousel__section-title">\n\t\t\t\t\t{{ loc('IM_SEARCH_SECTION_RECENT_CHATS') }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class="bx-im-recent-users-carousel__users-container">\n\t\t\t\t<MyNotes\n\t\t\t\t\tv-if="showMyNotes"\n\t\t\t\t\t@clickItem="$emit('clickItem', $event)" \n\t\t\t\t/>\n\t\t\t\t<CarouselUser\n\t\t\t\t\tv-for="userId in items"\n\t\t\t\t\t:key="userId"\n\t\t\t\t\t:userId="userId"\n\t\t\t\t\t:selectMode="selectMode"\n\t\t\t\t\t:selected="isSelected(userId)"\n\t\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t\t\t@openContextMenu="$emit('openContextMenu', $event)"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const K={name:"LatestSearchResult",components:{RecentUsersCarousel:X,SearchItem:$,Loader:p.Loader},props:{items:{type:Array,default:()=>[]},isLoading:{type:Boolean,default:false},selectMode:{type:Boolean,default:false},selectedItems:{type:Array,required:false,default:()=>[]},showMyNotes:{type:Boolean,default:true}},emits:["clickItem","openContextMenu"],computed:{searchItems(){return this.items},title(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_SECTION_RECENT")}},methods:{isSelected(e){return this.selectedItems.includes(e.toString())}},template:`\n\t\t<div class="bx-im-latest-search-result__scope">\n\t\t\t<RecentUsersCarousel\n\t\t\t\t:selectMode="selectMode"\n\t\t\t\t:selectedItems="selectedItems"\n\t\t\t\t:showMyNotes="showMyNotes"\n\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t\t@openContextMenu="$emit('openContextMenu', $event)"\n\t\t\t/>\n\t\t\t<div class="bx-im-latest-search-result__title">{{ title }}</div>\n\t\t\t<SearchItem\n\t\t\t\tv-for="item in searchItems"\n\t\t\t\t:key="item.dialogId"\n\t\t\t\t:dialogId="item.dialogId"\n\t\t\t\t:selected="isSelected(item.dialogId)"\n\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t\t@openContextMenu="$emit('openContextMenu', $event)"\n\t\t\t/>\n\t\t\t<Loader v-if="isLoading" class="bx-im-latest-search-result__loader" />\n\t\t</div>\n\t`};const W={name:"EmptyState",computed:{title(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_RESULT_NOT_FOUND")},subTitle(){return this.$Bitrix.Loc.getMessage("IM_SEARCH_RESULT_NOT_FOUND_DESCRIPTION")}},template:`\n\t\t<div class="bx-im-search-empty-state__container bx-im-search-empty-state__scope">\n\t\t\t<div class="bx-im-search-empty-state__icon"></div>\n\t\t\t<div class="bx-im-search-empty-state__title">\n\t\t\t\t{{ title }}\n\t\t\t</div>\n\t\t\t<div class="bx-im-search-empty-state__subtitle">\n\t\t\t\t{{ subTitle }}\n\t\t\t</div>\n\t\t</div>\n\t`};const j={name:"SearchResult",components:{SearchItem:$,EmptyState:W,Loader:p.Loader},props:{items:{type:Array,default:()=>[]},isLoading:{type:Boolean,default:false},query:{type:String,default:""},selectMode:{type:Boolean,default:false},selectedItems:{type:Array,required:false,default:()=>[]},showMyNotes:{type:Boolean,default:true}},emits:["clickItem","openContextMenu"],computed:{searchResult(){return this.items},isEmptyState(){return this.items.length===0}},methods:{isSelected(e){return this.selectedItems.includes(e.dialogId)}},template:`\n\t\t<div class="bx-im-search-result__scope">\n\t\t\t<SearchItem\n\t\t\t\tv-for="item in items"\n\t\t\t\t:key="item.dialogId"\n\t\t\t\t:dialogId="item.dialogId"\n\t\t\t\t:dateMessage="item.dateMessage"\n\t\t\t\t:withDate="true"\n\t\t\t\t:selectMode="selectMode"\n\t\t\t\t:isSelected="isSelected(item)"\n\t\t\t\t:query="query"\n\t\t\t\t@clickItem="$emit('clickItem', $event)"\n\t\t\t\t@openContextMenu="$emit('openContextMenu', $event)"\n\t\t\t/>\n\t\t\t<EmptyState v-if="isEmptyState" />\n\t\t</div>\n\t`};const Q={name:"ChatSearch",components:{ScrollWithGradient:p.ScrollWithGradient,LatestSearchResult:K,SearchResult:j},props:{searchQuery:{type:String,default:""},searchMode:{type:Boolean,required:true},selectMode:{type:Boolean,default:false},saveSearchHistory:{type:Boolean,default:false},showMyNotes:{type:Boolean,default:true},selectedItems:{type:Array,required:false,default:()=>[]},searchConfig:{type:Object,required:true}},emits:["clickItem","loading","scroll"],data(){return{isRecentLoading:false,isServerLoading:false,queryWasDeleted:false,currentServerQueries:0,result:{recent:[],usersAndChats:[]}}},computed:{cleanQuery(){return this.searchQuery.trim().toLowerCase()},showLatestSearchResult(){return this.cleanQuery.length===0}},watch:{cleanQuery(e,t){if(e.length>0){this.queryWasDeleted=false}if(e.length===0){this.searchService.clearSessionResult()}if(e===t){return}this.startSearch(e)},isServerLoading(e){this.$emit("loading",e)},searchMode(e,t){if(!e&&t){this.searchService.clearSessionResult();void this.loadRecentSearchFromServer()}}},created(){this.initSettings();this.contextMenuManager=new O;this.searchService=new U(this.searchConfig);this.searchOnServerDelayed=d.Runtime.debounce(this.searchOnServer,400,this);a.EventEmitter.subscribe(h.EventType.dialog.errors.accessDenied,this.onDelete);a.EventEmitter.subscribe(h.EventType.search.keyPressed,this.onKeyPressed);void this.loadRecentSearchFromServer()},beforeUnmount(){this.contextMenuManager.destroy();a.EventEmitter.unsubscribe(h.EventType.dialog.errors.accessDenied,this.onDelete);a.EventEmitter.unsubscribe(h.EventType.search.keyPressed,this.onKeyPressed)},methods:{async loadRecentSearchFromServer(){this.isRecentLoading=true;this.result.recent=await this.searchService.loadLatestResults();this.isRecentLoading=false},initSettings(){const e=d.Extension.getSettings("im.v2.component.search.chat-search");const t=3;this.minTokenSize=e.get("minTokenSize",t)},startSearch(e){if(e.length>0){const t=this.searchService.searchLocal(e);if(e!==this.cleanQuery){return}this.result.usersAndChats=this.searchService.sortByDate(t)}if(e.length>=this.minTokenSize){this.isServerLoading=true;this.searchOnServerDelayed(e)}if(e.length===0){this.cleanSearchResult()}},cleanSearchResult(){this.result.usersAndChats=[]},async searchOnServer(e){this.currentServerQueries++;const t=await this.searchService.search(e);if(e!==this.cleanQuery){this.stopLoader();return}const s=this.mergeResults(this.result.usersAndChats,t);this.result.usersAndChats=this.searchService.sortByDate(s);this.stopLoader()},stopLoader(){this.currentServerQueries--;if(this.currentServerQueries>0){return}this.isServerLoading=false},onOpenContextMenu(e){if(this.selectMode){return}const{dialogId:t,nativeEvent:s}=e;if(u.Utils.key.isAltOrOption(s)){return}this.contextMenuManager.openMenu({dialogId:t},s.currentTarget)},onDelete({data:e}){const{dialogId:t}=e;this.result.recent=this.result.recent.filter((e=>e!==t));this.result.usersAndChats=this.result.usersAndChats.filter((e=>e!==t))},onScroll(e){this.$emit("scroll",e);this.contextMenuManager.destroy()},async onClickItem(e){if(this.saveSearchHistory){void this.searchService.saveItemToRecentSearch(e.dialogId)}this.$emit("clickItem",e)},onKeyPressed(e){if(this.selectMode||!this.searchMode){return}const{keyboardEvent:t}=e.getData();if(u.Utils.key.isCombination(t,"Enter")){this.onPressEnterKey(e)}if(u.Utils.key.isCombination(t,"Backspace")){this.onPressBackspaceKey()}},onPressEnterKey(e){const t=this.getFirstItemFromSearchResults();if(!t){return}void this.onClickItem({dialogId:t.dialogId,nativeEvent:e})},onPressBackspaceKey(){if(this.searchQuery.length>0){this.queryWasDeleted=false;return}if(!this.queryWasDeleted){this.queryWasDeleted=true;return}if(this.queryWasDeleted){a.EventEmitter.emit(h.EventType.search.close)}},getFirstItemFromSearchResults(){if(this.showLatestSearchResult&&this.result.recent.length>0){return this.result.recent[0]}if(this.result.usersAndChats.length>0){return this.result.usersAndChats[0]}return null},mergeResults(e,t){const s=[...e,...t].map((e=>[e.dialogId,e]));const i=new Map(s);return[...i.values()]}},template:`\n\t\t<ScrollWithGradient :gradientHeight="28" :withShadow="false" @scroll="onScroll"> \n\t\t\t<div class="bx-im-chat-search__container bx-im-chat-search__scope">\n\t\t\t\t<LatestSearchResult\n\t\t\t\t\tv-if="showLatestSearchResult"\n\t\t\t\t\t:items="result.recent"\n\t\t\t\t\t:selectMode="selectMode"\n\t\t\t\t\t:selectedItems="selectedItems"\n\t\t\t\t\t:showMyNotes="showMyNotes"\n\t\t\t\t\t:isLoading="isRecentLoading"\n\t\t\t\t\t@clickItem="onClickItem"\n\t\t\t\t\t@openContextMenu="onOpenContextMenu"\n\t\t\t\t/>\n\t\t\t\t<SearchResult\n\t\t\t\t\tv-else\n\t\t\t\t\t:items="result.usersAndChats"\n\t\t\t\t\t:selectMode="selectMode"\n\t\t\t\t\t:selectedItems="selectedItems"\n\t\t\t\t\t:isLoading="isServerLoading"\n\t\t\t\t\t:query="cleanQuery"\n\t\t\t\t\t@clickItem="onClickItem"\n\t\t\t\t\t@openContextMenu="onOpenContextMenu"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</ScrollWithGradient> \n\t`};e.ChatSearch=Q})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX,BX,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Component.Elements);
//# sourceMappingURL=chat-search.bundle.map.js