this.BX=this.BX||{};this.BX.UI=this.BX.UI||{};(function(t,n){"use strict";function e(t){if(!n.Type.isPlainObject(t)){console.error("BX.UI.Analytics: {analytics} must be an object.");return false}const e=["event","tool","category"];for(const i of e){if(!n.Type.isStringFilled(t[i])){console.error(`BX.UI.Analytics: The "${i}" property in the "analytics" object must be a non-empty string.`);return false}}const i=["p1","p2","p3","p4","p5"];for(const e of i){const i=t[e];if(!n.Type.isStringFilled(i)){continue}if(i.split("_").length>2){console.error(`BX.UI.Analytics: The "${e}" property (${i}) in the "analytics" object must be a string containing a single underscore.`);return false}}return true}function i(t){const n=new URL("/_analytics/",window.location.origin);const e=[];for(const[n,i]of Object.entries(t)){e.push(`st[${n}]=${encodeURIComponent(i)}`)}n.search=e.join("&");return n.toString()}function o(t){if(!e(t)){return}const o=n.Extension.getSettings("ui.analytics");const s=o.get("collectData",false);if(!s){return}void n.ajax({method:"GET",url:i(t)})}function s(t){o(t)}t.sendData=s})(this.BX.UI.Analytics=this.BX.UI.Analytics||{},BX);
//# sourceMappingURL=analytics.bundle.map.js