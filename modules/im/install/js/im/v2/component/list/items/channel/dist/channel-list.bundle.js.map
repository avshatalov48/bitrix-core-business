{"version":3,"file":"channel-list.bundle.js","sources":["../src/components/channel-item/components/message-text.js","../src/components/channel-item/channel-item.js","../src/components/empty-state.js","../src/classes/channel-service.js","../src/classes/pull-watch-manager.js","../src/classes/context-menu-manager.js","../src/channel-list.js"],"sourcesContent":["import { DateFormatter, DateTemplate } from 'im.v2.lib.date-formatter';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatTitle } from 'im.v2.component.elements';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Parser } from 'im.v2.lib.parser';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelRecentItem, ImModelMessage, ImModelUser } from 'im.v2.model';\n\n// @vue/component\nexport const MessageText = {\n\tname: 'MessageText',\n\tcomponents: { ChatTitle },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\trecentItem(): ImModelRecentItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.recentItem.dialogId, true);\n\t\t},\n\t\tmessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['recent/getMessage'](this.recentItem.dialogId);\n\t\t},\n\t\tformattedDate(): string\n\t\t{\n\t\t\treturn this.formatDate(this.message.date);\n\t\t},\n\t\tisLastMessageAuthor(): boolean\n\t\t{\n\t\t\treturn this.message.authorId === Core.getUserId();\n\t\t},\n\t\tlastMessageAuthorAvatar(): string\n\t\t{\n\t\t\tconst author: ImModelUser = this.$store.getters['users/get'](this.message.authorId);\n\n\t\t\tif (!author)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn author.avatar;\n\t\t},\n\t\tlastMessageAuthorAvatarStyle(): Object\n\t\t{\n\t\t\treturn { backgroundImage: `url('${this.lastMessageAuthorAvatar}')` };\n\t\t},\n\t\tmessageText(): string\n\t\t{\n\t\t\tif (this.message.isDeleted)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_LIST_RECENT_DELETED_MESSAGE');\n\t\t\t}\n\n\t\t\tconst formattedText = Parser.purifyRecent(this.recentItem);\n\t\t\tif (!formattedText)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_LIST_RECENT_CHAT_TYPE_GROUP_V2');\n\t\t\t}\n\n\t\t\treturn formattedText;\n\t\t},\n\t\tformattedMessageText(): string\n\t\t{\n\t\t\tconst SPLIT_INDEX = 27;\n\n\t\t\treturn Utils.text.insertUnseenWhitespace(this.messageText, SPLIT_INDEX);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tformatDate(date): string\n\t\t{\n\t\t\treturn DateFormatter.formatByTemplate(date, DateTemplate.recent);\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-list-channel-item__message_container\">\n\t\t\t<span class=\"bx-im-list-channel-item__message_text\">\n\t\t\t\t<span v-if=\"isLastMessageAuthor\" class=\"bx-im-list-channel-item__message_author-icon --self\"></span>\n\t\t\t\t<template v-else-if=\"message.authorId\">\n\t\t\t\t\t<span v-if=\"lastMessageAuthorAvatar\" :style=\"lastMessageAuthorAvatarStyle\" class=\"bx-im-list-channel-item__message_author-icon --user\"></span>\n\t\t\t\t\t<span v-else class=\"bx-im-list-channel-item__message_author-icon --user --default\"></span>\n\t\t\t\t</template>\n\t\t\t\t<span class=\"bx-im-list-channel-item__message_text_content\">{{ formattedMessageText }}</span>\n\t\t\t</span>\n\t\t</div>\n\t`,\n};\n","import 'main.date';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, Settings, Layout } from 'im.v2.const';\nimport { ChatAvatar, AvatarSize, ChatTitle } from 'im.v2.component.elements';\n\nimport { MessageText } from './components/message-text';\nimport { DateFormatter, DateTemplate } from 'im.v2.lib.date-formatter';\n\nimport './css/channel-item.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem, ImModelChat, ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const ChannelItem = {\n\tname: 'ChannelItem',\n\tcomponents: { ChatAvatar, ChatTitle, MessageText },\n\tprops: {\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\trecentItem(): ImModelRecentItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tformattedDate(): string\n\t\t{\n\t\t\tif (this.needsBirthdayPlaceholder)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_LIST_RECENT_BIRTHDAY_DATE');\n\t\t\t}\n\n\t\t\treturn this.formatDate(this.message.date);\n\t\t},\n\t\tformattedCounter(): string\n\t\t{\n\t\t\treturn this.dialog.counter > 99 ? '99+' : this.dialog.counter.toString();\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.recentItem.dialogId, true);\n\t\t},\n\t\tlayout(): { name: string, entityId: string }\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tmessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['recent/getMessage'](this.recentItem.dialogId);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.user;\n\t\t},\n\t\tisChat(): boolean\n\t\t{\n\t\t\treturn !this.isUser;\n\t\t},\n\t\tisChatSelected(): boolean\n\t\t{\n\t\t\tif (this.layout.name !== Layout.channel.name)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.layout.entityId === this.recentItem.dialogId;\n\t\t},\n\t\tisChatMuted(): boolean\n\t\t{\n\t\t\tif (this.isUser)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst isMuted = this.dialog.muteList.find((element) => {\n\t\t\t\treturn element === Core.getUserId();\n\t\t\t});\n\n\t\t\treturn Boolean(isMuted);\n\t\t},\n\t\tisSomeoneTyping(): boolean\n\t\t{\n\t\t\treturn this.dialog.writingList.length > 0;\n\t\t},\n\t\tneedsBirthdayPlaceholder(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['recent/needsBirthdayPlaceholder'](this.recentItem.dialogId);\n\t\t},\n\t\tshowLastMessage(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['application/settings/get'](Settings.recent.showLastMessage);\n\t\t},\n\t\tinvitation(): { isActive: boolean, originator: number, canResend: boolean }\n\t\t{\n\t\t\treturn this.recentItem.invitation;\n\t\t},\n\t\twrapClasses(): { [string]: boolean }\n\t\t{\n\t\t\treturn {\n\t\t\t\t'--selected': this.isChatSelected,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tformatDate(date): string\n\t\t{\n\t\t\treturn DateFormatter.formatByTemplate(date, DateTemplate.recent);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div :data-id=\"recentItem.dialogId\" :class=\"wrapClasses\" class=\"bx-im-list-channel-item__wrap\">\n\t\t\t<div class=\"bx-im-list-channel-item__container\">\n\t\t\t\t<div class=\"bx-im-list-channel-item__avatar_container\">\n\t\t\t\t\t<div class=\"bx-im-list-channel-item__avatar_content\">\n\t\t\t\t\t\t<ChatAvatar \n\t\t\t\t\t\t\t:avatarDialogId=\"recentItem.dialogId\" \n\t\t\t\t\t\t\t:contextDialogId=\"recentItem.dialogId\"\n\t\t\t\t\t\t\t:size=\"AvatarSize.XL\" \n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-list-channel-item__content_container\">\n\t\t\t\t\t<div class=\"bx-im-list-channel-item__content_header\">\n\t\t\t\t\t\t<ChatTitle :dialogId=\"recentItem.dialogId\" />\n\t\t\t\t\t\t<div class=\"bx-im-list-channel-item__date\">\n\t\t\t\t\t\t\t<span>{{ formattedDate }}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"bx-im-list-channel-item__content_bottom\">\n\t\t\t\t\t\t<MessageText :item=\"recentItem\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-list-channel__empty\">\n\t\t\t<div class=\"bx-im-list-channel__empty_icon\"></div>\n\t\t\t<div class=\"bx-im-list-channel__empty_text\">{{ loc('IM_LIST_CHANNEL_EMPTY') }}</div>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { ChannelRestResult } from 'im.v2.provider.service';\n\nexport class ChannelService\n{\n\tfirstPageIsLoaded: boolean = false;\n\t#itemsPerPage: number = 50;\n\t#isLoading: boolean = false;\n\t#pagesLoaded: number = 0;\n\t#hasMoreItemsToLoad: boolean = true;\n\t#lastMessageId: number = 0;\n\n\tasync loadFirstPage(): Promise\n\t{\n\t\tthis.#isLoading = true;\n\n\t\tconst result = await this.#requestItems({ firstPage: true });\n\t\tthis.firstPageIsLoaded = true;\n\n\t\treturn result;\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\treturn this.#requestItems();\n\t}\n\n\thasMoreItemsToLoad(): boolean\n\t{\n\t\treturn this.#hasMoreItemsToLoad;\n\t}\n\n\tasync #requestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tdata: {\n\t\t\t\tlimit: this.#itemsPerPage,\n\t\t\t\tfilter: {\n\t\t\t\t\tlastMessageId: firstPage ? null : this.#lastMessageId,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst result: ChannelRestResult = await runAction(RestMethod.imV2RecentChannelTail, queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.ChannelList: page request error', error);\n\t\t\t});\n\n\t\tthis.#pagesLoaded++;\n\t\tLogger.warn(`Im.ChannelList: ${firstPage ? 'First' : this.#pagesLoaded} page request result`, result);\n\t\tconst { messages, hasNextPage } = result;\n\t\tthis.#lastMessageId = this.#getMinMessageId(messages);\n\t\tif (!hasNextPage)\n\t\t{\n\t\t\tthis.#hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.#isLoading = false;\n\n\t\tif (firstPage)\n\t\t{\n\t\t\tvoid Core.getStore().dispatch('recent/clearChannelCollection');\n\t\t}\n\n\t\treturn this.#updateModels(result);\n\t}\n\n\t#updateModels(restResult: ChannelRestResult): Promise\n\t{\n\t\tconst { users, chats, messages, files, recentItems } = restResult;\n\n\t\tconst usersPromise = Core.getStore().dispatch('users/set', users);\n\t\tconst dialoguesPromise = Core.getStore().dispatch('chats/set', chats);\n\t\tconst messagesPromise = Core.getStore().dispatch('messages/store', messages);\n\t\tconst filesPromise = Core.getStore().dispatch('files/set', files);\n\t\tconst recentPromise = Core.getStore().dispatch('recent/setChannel', recentItems);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, messagesPromise, filesPromise, recentPromise]);\n\t}\n\n\t#getMinMessageId(messages: Array): string\n\t{\n\t\tif (messages.length === 0)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst firstMessageId = messages[0].id;\n\n\t\treturn messages.reduce((minId, nextMessage) => {\n\t\t\treturn Math.min(minId, nextMessage.id);\n\t\t}, firstMessageId);\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { PULL as Pull } from 'pull.client';\n\nconst TAG = 'IM_SHARED_CHANNEL_LIST';\n\nexport class PullWatchManager\n{\n\t#pullClient: Pull;\n\n\tconstructor()\n\t{\n\t\tthis.#pullClient = Core.getPullClient();\n\t}\n\n\tsubscribe(): void\n\t{\n\t\tthis.#pullClient.extendWatch(TAG);\n\t\tthis.#requestWatchStart();\n\t}\n\n\tunsubscribe(): void\n\t{\n\t\tthis.#pullClient.clearWatch(TAG);\n\t}\n\n\t#requestWatchStart(): void\n\t{\n\t\tvoid runAction(RestMethod.imV2RecentChannelExtendPullWatch);\n\t}\n}\n","import { Loc } from 'main.core';\n\nimport { Layout } from 'im.v2.const';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { RecentMenu, type MenuItem } from 'im.v2.lib.menu';\n\nexport class ChannelRecentMenu extends RecentMenu\n{\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getOpenItem(),\n\t\t];\n\t}\n\n\tgetOpenItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_LIB_MENU_OPEN'),\n\t\t\tonclick: () => {\n\t\t\t\tLayoutManager.getInstance().setLayout({\n\t\t\t\t\tname: Layout.channel.name,\n\t\t\t\t\tentityId: this.context.dialogId,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n}\n","import { Utils } from 'im.v2.lib.utils';\nimport { ListLoadingState as LoadingState } from 'im.v2.component.elements';\n\nimport { ChannelItem } from './components/channel-item/channel-item';\nimport { EmptyState } from './components/empty-state';\nimport { ChannelService } from './classes/channel-service';\nimport { PullWatchManager } from './classes/pull-watch-manager';\nimport { ChannelRecentMenu } from './classes/context-menu-manager';\n\nimport './css/channel-list.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem, ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const ChannelList = {\n\tname: 'ChannelList',\n\tcomponents: { EmptyState, LoadingState, ChannelItem },\n\temits: ['chatClick'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tisLoading: false,\n\t\t\tisLoadingNextPage: false,\n\t\t\tfirstPageLoaded: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tcollection(): ImModelRecentItem[]\n\t\t{\n\t\t\treturn this.$store.getters['recent/getChannelCollection'];\n\t\t},\n\t\tpreparedItems(): ImModelRecentItem[]\n\t\t{\n\t\t\treturn [...this.collection].sort((a, b) => {\n\t\t\t\tconst firstMessage: ImModelMessage = this.$store.getters['messages/getById'](a.messageId);\n\t\t\t\tconst secondMessage: ImModelMessage = this.$store.getters['messages/getById'](b.messageId);\n\n\t\t\t\treturn secondMessage.date - firstMessage.date;\n\t\t\t});\n\t\t},\n\t\tisEmptyCollection(): boolean\n\t\t{\n\t\t\treturn this.collection.length === 0;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.contextMenuManager = new ChannelRecentMenu();\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.contextMenuManager.destroy();\n\t},\n\tasync activated()\n\t{\n\t\tthis.isLoading = true;\n\t\tawait this.getRecentService().loadFirstPage();\n\t\tthis.firstPageLoaded = true;\n\t\tthis.isLoading = false;\n\t\tthis.getPullWatchManager().subscribe();\n\t},\n\tdeactivated()\n\t{\n\t\tthis.getPullWatchManager().unsubscribe();\n\t},\n\tmethods:\n\t{\n\t\tasync onScroll(event: Event)\n\t\t{\n\t\t\tthis.contextMenuManager.close();\n\t\t\tif (!Utils.dom.isOneScreenRemaining(event.target) || !this.getRecentService().hasMoreItemsToLoad)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isLoadingNextPage = true;\n\t\t\tawait this.getRecentService().loadNextPage();\n\t\t\tthis.isLoadingNextPage = false;\n\t\t},\n\t\tonClick(item: ImModelRecentItem)\n\t\t{\n\t\t\tthis.$emit('chatClick', item.dialogId);\n\t\t},\n\t\tonRightClick(item: ImModelRecentItem, event: PointerEvent)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.contextMenuManager.openMenu(item, event.currentTarget);\n\t\t},\n\t\tgetRecentService(): ChannelService\n\t\t{\n\t\t\tif (!this.service)\n\t\t\t{\n\t\t\t\tthis.service = new ChannelService();\n\t\t\t}\n\n\t\t\treturn this.service;\n\t\t},\n\t\tgetPullWatchManager(): PullWatchManager\n\t\t{\n\t\t\tif (!this.pullWatchManager)\n\t\t\t{\n\t\t\t\tthis.pullWatchManager = new PullWatchManager();\n\t\t\t}\n\n\t\t\treturn this.pullWatchManager;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-list-channel__container\">\n\t\t\t<LoadingState v-if=\"isLoading && !firstPageLoaded\" />\n\t\t\t<div v-else @scroll=\"onScroll\" class=\"bx-im-list-channel__scroll-container\">\n\t\t\t\t<EmptyState v-if=\"isEmptyCollection\" />\n\t\t\t\t<div class=\"bx-im-list-channel__general_container\">\n\t\t\t\t\t<ChannelItem\n\t\t\t\t\t\tv-for=\"item in preparedItems\"\n\t\t\t\t\t\t:key=\"item.dialogId\"\n\t\t\t\t\t\t:item=\"item\"\n\t\t\t\t\t\t@click=\"onClick(item)\"\n\t\t\t\t\t\t@click.right=\"onRightClick(item, $event)\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<LoadingState v-if=\"isLoadingNextPage\" />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n"],"names":["MessageText","name","components","ChatTitle","props","item","type","Object","required","data","computed","recentItem","dialog","$store","getters","dialogId","message","formattedDate","formatDate","date","isLastMessageAuthor","authorId","Core","getUserId","lastMessageAuthorAvatar","author","avatar","lastMessageAuthorAvatarStyle","backgroundImage","messageText","isDeleted","loc","formattedText","Parser","purifyRecent","formattedMessageText","SPLIT_INDEX","Utils","text","insertUnseenWhitespace","methods","DateFormatter","formatByTemplate","DateTemplate","recent","phraseCode","replacements","$Bitrix","Loc","getMessage","template","ChannelItem","ChatAvatar","AvatarSize","needsBirthdayPlaceholder","formattedCounter","counter","toString","layout","isUser","ChatType","user","isChat","isChatSelected","Layout","channel","entityId","isChatMuted","isMuted","muteList","find","element","Boolean","isSomeoneTyping","writingList","length","showLastMessage","Settings","invitation","wrapClasses","EmptyState","ChannelService","firstPageIsLoaded","loadFirstPage","result","firstPage","loadNextPage","Promise","resolve","hasMoreItemsToLoad","queryParams","limit","filter","lastMessageId","runAction","RestMethod","imV2RecentChannelTail","catch","error","console","Logger","warn","messages","hasNextPage","getStore","dispatch","restResult","users","chats","files","recentItems","usersPromise","dialoguesPromise","messagesPromise","filesPromise","recentPromise","all","firstMessageId","id","reduce","minId","nextMessage","Math","min","TAG","PullWatchManager","constructor","getPullClient","subscribe","extendWatch","unsubscribe","clearWatch","imV2RecentChannelExtendPullWatch","ChannelRecentMenu","RecentMenu","getMenuItems","getOpenItem","onclick","LayoutManager","getInstance","setLayout","context","menuInstance","close","ChannelList","LoadingState","emits","isLoading","isLoadingNextPage","firstPageLoaded","collection","preparedItems","sort","a","b","firstMessage","messageId","secondMessage","isEmptyCollection","created","contextMenuManager","beforeUnmount","destroy","activated","getRecentService","getPullWatchManager","deactivated","onScroll","event","dom","isOneScreenRemaining","target","onClick","$emit","onRightClick","preventDefault","openMenu","currentTarget","service","pullWatchManager"],"mappings":"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"}