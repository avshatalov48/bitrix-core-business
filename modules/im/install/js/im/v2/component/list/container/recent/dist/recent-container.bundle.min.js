this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,n,o,s,i,a,r,c,h,l,C,u,d,p,m,E){"use strict";const _={components:{MessengerMenu:C.MessengerMenu,MenuItem:C.MenuItem},emits:["showUnread"],data(){return{showPopup:false}},computed:{menuConfig(){return{id:"im-recent-header-menu",width:284,bindElement:this.$refs["icon"]||{},offsetTop:4,padding:0}},unreadCounter(){return this.$store.getters["counters/getTotalChatCounter"]}},methods:{onIconClick(){this.showPopup=true},onReadAllClick(){(new r.ChatService).readAll();this.showPopup=false},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div @click="onIconClick" class="bx-im-list-container-recent__header-menu_icon" :class="{'--active': showPopup}" ref="icon"></div>\n\t\t<MessengerMenu v-if="showPopup" :config="menuConfig" @close="showPopup = false">\n\t\t\t<MenuItem\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_READ_ALL')"\n\t\t\t\t@click="onReadAllClick"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="false"\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_SHOW_UNREAD_ONLY')"\n\t\t\t\t:counter="unreadCounter"\n\t\t\t\t:disabled="true"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="false"\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_CHAT_GROUPS_TITLE')"\n\t\t\t\t:subtitle="loc('IM_RECENT_HEADER_MENU_CHAT_GROUPS_SUBTITLE')"\n\t\t\t\t:disabled="true"\n\t\t\t/>\n\t\t</MessengerMenu>\n\t`};const M={emits:["articleOpen"],data(){return{}},methods:{openHelpArticle(){var t;const e=17412872;(t=BX.Helper)==null?void 0:t.show(`redirect=detail&code=${e}`);this.$emit("articleOpen")},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-create-chat-help__container">\n\t\t\t<div @click="openHelpArticle" class="bx-im-create-chat-help__content">\n\t\t\t\t<div class="bx-im-create-chat-help__icon"></div>\n\t\t\t\t<div class="bx-im-create-chat-help__text">{{ loc('IM_RECENT_CREATE_CHAT_WHAT_TO_CHOOSE') }}</div>\t\n\t\t\t</div>\n\t\t</div>\n\t`};const T={[u.ChatType.chat]:u.PromoId.createGroupChat,[u.ChatType.videoconf]:u.PromoId.createConference,[u.ChatType.channel]:u.PromoId.createChannel};const v={components:{MessengerMenu:C.MessengerMenu,MenuItem:C.MenuItem,CreateChatHelp:M,CreateChatPromo:C.CreateChatPromo},data(){return{showPopup:false,chatTypeToCreate:"",showPromo:false}},computed:{ChatType:()=>u.ChatType,menuConfig(){return{id:"im-create-chat-menu",width:275,bindElement:this.$refs.icon||{},offsetTop:4,padding:0}},menuItems(){return[{icon:C.MenuItemIcon.chat,title:this.loc("IM_RECENT_CREATE_GROUP_CHAT_TITLE_V2"),subtitle:this.loc("IM_RECENT_CREATE_GROUP_CHAT_SUBTITLE_V2"),clickHandler:this.onChatCreateClick.bind(this,u.ChatType.chat)},{icon:C.MenuItemIcon.channel,title:this.loc("IM_RECENT_CREATE_CHANNEL_TITLE_V2"),subtitle:this.loc("IM_RECENT_CREATE_CHANNEL_SUBTITLE_V3"),clickHandler:this.onChatCreateClick.bind(this,u.ChatType.channel)},{icon:C.MenuItemIcon.conference,title:this.loc("IM_RECENT_CREATE_CONFERENCE_TITLE"),subtitle:this.loc("IM_RECENT_CREATE_CONFERENCE_SUBTITLE_V2"),clickHandler:this.onChatCreateClick.bind(this,u.ChatType.videoconf)},{icon:C.MenuItemIcon.conference,title:this.loc("IM_RECENT_CREATE_COLLAB_TITLE"),subtitle:this.loc("IM_RECENT_CREATE_COLLAB_SUBTITLE"),clickHandler:this.onChatCreateClick.bind(this,u.ChatType.collab),showCondition:()=>E.FeatureManager.isFeatureAvailable(E.Feature.collabAvailable)}]}},methods:{onChatCreateClick(t){d.Analytics.getInstance().onStartCreateNewChat(t);this.chatTypeToCreate=t;const e=p.PromoManager.getInstance().needToShow(this.getPromoType());if(e){this.showPromo=true;this.showPopup=false;return}this.startChatCreation();this.showPopup=false},onCopilotClick(){this.showPopup=false;if(!E.FeatureManager.isFeatureAvailable(E.Feature.copilotActive)){const t=new h.FeaturePromoter({code:u.SliderCode.copilotDisabled});t.show();return}void l.Messenger.openCopilot()},onPromoContinueClick(){p.PromoManager.getInstance().markAsWatched(this.getPromoType());this.startChatCreation();this.showPromo=false;this.showPopup=false;this.chatTypeToCreate=""},startChatCreation(){const{name:t,entityId:e}=this.$store.getters["application/getLayout"];if(t===u.Layout.createChat.name&&e===this.chatTypeToCreate){return}m.CreateChatManager.getInstance().startChatCreation(this.chatTypeToCreate)},getPromoType(){var t;return(t=T[this.chatTypeToCreate])!=null?t:""},needToShowMenuItem(t){if(!c.Type.isFunction(t)){return true}return t()},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div\n\t\t\tclass="bx-im-list-container-recent__create-chat_icon"\n\t\t\t:class="{'--active': showPopup}"\n\t\t\t@click="showPopup = true"\n\t\t\tref="icon"\n\t\t></div>\n\t\t<MessengerMenu v-if="showPopup" :config="menuConfig" @close="showPopup = false">\n\t\t\t<template v-for="{ icon, title, subtitle, clickHandler, showCondition } in menuItems">\n\t\t\t\t<MenuItem\n\t\t\t\t\tv-if="needToShowMenuItem(showCondition)"\n\t\t\t\t\t:key="title"\n\t\t\t\t\t:icon="icon"\n\t\t\t\t\t:title="title"\n\t\t\t\t\t:subtitle="subtitle"\n\t\t\t\t\t@click="clickHandler"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<template #footer>\n\t\t\t\t<CreateChatHelp @articleOpen="showPopup = false" />\n\t\t\t</template>\n\t\t</MessengerMenu>\n\t\t<CreateChatPromo\n\t\t\tv-if="showPromo"\n\t\t\t:chatType="chatTypeToCreate"\n\t\t\t@continue="onPromoContinueClick"\n\t\t\t@close="showPromo = false"\n\t\t/>\n\t`};const g=Object.freeze({chats:true,users:true});const I={name:"RecentListContainer",components:{HeaderMenu:_,CreateChatMenu:v,ChatSearchInput:s.ChatSearchInput,RecentList:o.RecentList,ChatSearch:i.ChatSearch},emits:["selectEntity"],data(){return{searchMode:false,unreadOnlyMode:false,searchQuery:"",isSearchLoading:false}},computed:{searchConfig:()=>g},created(){a.Logger.warn("List: Recent container created");e.EventEmitter.subscribe(u.EventType.recent.openSearch,this.onOpenSearch);c.Event.bind(document,"mousedown",this.onDocumentClick)},beforeUnmount(){e.EventEmitter.unsubscribe(u.EventType.recent.openSearch,this.onOpenSearch);c.Event.unbind(document,"mousedown",this.onDocumentClick)},methods:{onChatClick(t){this.$emit("selectEntity",{layoutName:u.Layout.chat.name,entityId:t})},onOpenSearch(){this.searchMode=true},onCloseSearch(){this.searchMode=false;this.searchQuery=""},onUpdateSearch(t){this.searchMode=true;this.searchQuery=t},onDocumentClick(t){const n=t.composedPath().includes(this.$refs["recent-container"]);if(!n){e.EventEmitter.emit(u.EventType.search.close)}},onLoading(t){this.isSearchLoading=t},async onItemClick(t){const{dialogId:o,nativeEvent:s}=t;void l.Messenger.openChat(o);if(!n.Utils.key.isAltOrOption(s)){e.EventEmitter.emit(u.EventType.search.close)}}},template:`\n\t\t<div class="bx-im-list-container-recent__scope bx-im-list-container-recent__container" ref="recent-container">\n\t\t\t<div class="bx-im-list-container-recent__header_container">\n\t\t\t\t<HeaderMenu @showUnread="unreadOnlyMode = true" />\n\t\t\t\t<div class="bx-im-list-container-recent__search-input_container">\n\t\t\t\t\t<ChatSearchInput \n\t\t\t\t\t\t:searchMode="searchMode" \n\t\t\t\t\t\t:isLoading="searchMode && isSearchLoading"\n\t\t\t\t\t\t@openSearch="onOpenSearch"\n\t\t\t\t\t\t@closeSearch="onCloseSearch"\n\t\t\t\t\t\t@updateSearch="onUpdateSearch"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<CreateChatMenu />\n\t\t\t</div>\n\t\t\t<div class="bx-im-list-container-recent__elements_container">\n\t\t\t\t<div class="bx-im-list-container-recent__elements">\n\t\t\t\t\t<ChatSearch \n\t\t\t\t\t\tv-show="searchMode" \n\t\t\t\t\t\t:searchMode="searchMode"\n\t\t\t\t\t\t:searchQuery="searchQuery"\n\t\t\t\t\t\t:searchConfig="searchConfig"\n\t\t\t\t\t\t:saveSearchHistory="true"\n\t\t\t\t\t\t@loading="onLoading"\n\t\t\t\t\t\t@clickItem="onItemClick"\n\t\t\t\t\t/>\n\t\t\t\t\t<RecentList v-show="!searchMode && !unreadOnlyMode" @chatClick="onChatClick" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};t.RecentListContainer=I})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component,BX.Messenger.v2.Component,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX,BX.UI,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=recent-container.bundle.map.js