this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,t,n,s){"use strict";const o={name:"ChatSearchInput",components:{SearchInput:s.SearchInput},props:{searchMode:{type:Boolean,required:true},isLoading:{type:Boolean,required:false},delayForFocusOnStart:{type:[Number,null],default:null},withIcon:{type:Boolean,default:true}},emits:["closeSearch","openSearch","updateSearch"],created(){t.EventEmitter.subscribe(n.EventType.search.close,this.onClose)},beforeUnmount(){t.EventEmitter.unsubscribe(n.EventType.search.close,this.onClose)},methods:{onInputFocus(){this.$emit("openSearch")},onClose(){this.$emit("closeSearch")},onInputUpdate(e){this.$emit("updateSearch",e)},onKeyPressed(e){t.EventEmitter.emit(n.EventType.search.keyPressed,{keyboardEvent:e})}},template:`\n\t\t<SearchInput\n\t\t\t:placeholder="$Bitrix.Loc.getMessage('IM_SEARCH_INPUT_PLACEHOLDER_V2')"\n\t\t\t:searchMode="searchMode"\n\t\t\t:isLoading="isLoading"\n\t\t\t:withLoader="true"\n\t\t\t:delayForFocusOnStart="delayForFocusOnStart"\n\t\t\t:withIcon="withIcon"\n\t\t\t@inputFocus="onInputFocus"\n\t\t\t@inputBlur="onClose"\n\t\t\t@queryChange="onInputUpdate"\n\t\t\t@keyPressed="onKeyPressed"\n\t\t\t@close="onClose"\n\t\t/>\n\t`};e.ChatSearchInput=o})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX.Event,BX.Messenger.v2.Const,BX.Messenger.v2.Component.Elements);
//# sourceMappingURL=chat-search-input.bundle.map.js