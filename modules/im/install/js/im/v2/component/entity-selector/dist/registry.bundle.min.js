this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,s,o,n,r,i,a,c,d,h,l){"use strict";const u=Object.freeze({chats:false,users:true});const g="user";const m={name:"AddToChatContent",components:{ChatSearch:l.ChatSearch,MessengerButton:i.Button},props:{dialogId:{type:String,required:true}},data(){return{searchQuery:"",showHistory:true,isLoading:false,selectedItems:new Set}},computed:{ButtonSize:()=>i.ButtonSize,ButtonColor:()=>i.ButtonColor,searchConfig:()=>u,dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},chatId(){return this.dialog.chatId},isChat(){return this.dialog.type!==d.ChatType.user},isChannel(){return n.ChannelManager.isChannel(this.dialogId)},showHistoryOption(){return this.isChat&&!this.isChannel}},created(){this.chatService=new o.ChatService;this.membersSelector=this.getTagSelector()},mounted(){this.membersSelector.renderTo(this.$refs["tag-selector"]);this.membersSelector.focusTextBox()},methods:{getTagSelector(){let t=null;return new e.TagSelector({maxHeight:111,showAddButton:false,showTextBox:true,addButtonCaption:this.loc("IM_ENTITY_SELECTOR_ADD_TO_CHAT_ADD_MSGVER_1"),addButtonCaptionMore:this.loc("IM_ENTITY_SELECTOR_ADD_TO_CHAT_ADD_MORE"),showCreateButton:false,events:{onBeforeTagAdd:()=>{clearTimeout(t)},onAfterTagAdd:t=>{const{tag:e}=t.getData();this.selectedItems.add(e.id);this.focusSelector()},onKeyUp:t=>{const{event:e}=t.getData();a.EventEmitter.emit(d.EventType.search.keyPressed,{keyboardEvent:e})},onBeforeTagRemove:()=>{clearTimeout(t)},onAfterTagRemove:t=>{const{tag:e}=t.getData();this.selectedItems.delete(e.id);this.focusSelector()},onInput:()=>{this.searchQuery=this.membersSelector.getTextBoxValue()},onBlur:()=>{const e=this.membersSelector.getTextBoxValue();if(e.length>0){return}t=setTimeout((()=>{this.membersSelector.hideTextBox();this.membersSelector.showAddButton()}),200)},onContainerClick:()=>{this.focusSelector()}}})},focusSelector(){this.membersSelector.hideAddButton();this.membersSelector.showTextBox();this.membersSelector.focusTextBox()},prepareMembers(t){const e=[];[...t].forEach((t=>{const[s,o]=t.split("|");if(s===d.SearchEntityIdTypes.user||s===d.SearchEntityIdTypes.bot){e.push(o)}else if(s===d.SearchEntityIdTypes.department){e.push(`${s}${o}`)}}));return e},onSelectItem(t){const{dialogId:e,nativeEvent:s}=t;if(this.selectedItems.has(e)){const t={id:e,entityId:g};this.membersSelector.removeTag(t)}else{const t=this.getTagByDialogId(e);this.membersSelector.addTag(t)}this.membersSelector.clearTextBox();if(!s.altKey){this.searchQuery=""}},getTagByDialogId(t){const e=this.$store.getters["users/get"](t,true);const s=e.extranet?"extranet":"employee";return{id:t,entityId:g,entityType:s,title:e.name,avatar:e.avatar.length>0?e.avatar:null}},onInviteClick(){const t=[...this.selectedItems];if(this.isChat){this.extendChat(t)}else{t.push(this.dialogId,s.Core.getUserId());this.createChat(t)}},extendChat(t){this.isLoading=true;this.chatService.addToChat({chatId:this.chatId,members:t,showHistory:this.showHistory}).then((()=>{this.isLoading=false;this.$emit("close")})).catch((t=>{console.error(t);this.isLoading=false;this.$emit("close")}))},async createChat(t){this.isLoading=true;const{newDialogId:e}=await this.chatService.createChat({title:null,description:null,members:t,ownerId:s.Core.getUserId(),isPrivate:true}).catch((t=>{console.error(t);this.isLoading=false}));this.isLoading=false;void c.Messenger.openChat(e)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-entity-selector-add-to-chat__container bx-im-entity-selector-add-to-chat__scope">\n\t\t\t<div class="bx-im-entity-selector-add-to-chat__input" ref="tag-selector"></div>\n\t\t\t<div v-if="showHistoryOption" class="bx-im-entity-selector-add-to-chat__show-history">\n\t\t\t\t<input type="checkbox" id="bx-im-entity-selector-add-to-chat-show-history" v-model="showHistory">\n\t\t\t\t<label for="bx-im-entity-selector-add-to-chat-show-history">\n\t\t\t\t\t{{ loc('IM_ENTITY_SELECTOR_ADD_TO_CHAT_SHOW_HISTORY')}}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<div class="bx-im-entity-selector-add-to-chat__search-result-container">\n\t\t\t\t<ChatSearch\n\t\t\t\t\t:searchMode="true"\n\t\t\t\t\t:searchQuery="searchQuery"\n\t\t\t\t\t:selectMode="true"\n\t\t\t\t\t:searchConfig="searchConfig"\n\t\t\t\t\t:selectedItems="[...selectedItems]"\n\t\t\t\t\t:showMyNotes="false"\n\t\t\t\t\t@clickItem="onSelectItem"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-entity-selector-add-to-chat__buttons">\n\t\t\t\t<MessengerButton\n\t\t\t\t\t:size="ButtonSize.L"\n\t\t\t\t\t:color="ButtonColor.Primary"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:isLoading="isLoading"\n\t\t\t\t\t:text="loc('IM_ENTITY_SELECTOR_ADD_TO_CHAT_INVITE_BUTTON')"\n\t\t\t\t\t:isDisabled="selectedItems.size === 0"\n\t\t\t\t\t@click="onInviteClick"\n\t\t\t\t/>\n\t\t\t\t<MessengerButton\n\t\t\t\t\t:size="ButtonSize.L"\n\t\t\t\t\t:color="ButtonColor.LightBorder"\n\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t:text="loc('IM_ENTITY_SELECTOR_ADD_TO_CHAT_CANCEL_BUTTON')"\n\t\t\t\t\t@click="$emit('close')"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const p="im-add-to-chat-popup";const C={name:"AddToChat",components:{MessengerPopup:i.MessengerPopup,AddToChatContent:m},props:{showPopup:{type:Boolean,required:true},bindElement:{type:Object,required:true},dialogId:{type:String,required:true},popupConfig:{type:Object,required:true}},emits:["close"],computed:{POPUP_ID:()=>p,config(){return{titleBar:this.$Bitrix.Loc.getMessage("IM_ENTITY_SELECTOR_ADD_TO_CHAT_ADD_MEMBERS_TITLE"),closeIcon:true,bindElement:this.bindElement,offsetTop:this.popupConfig.offsetTop,offsetLeft:this.popupConfig.offsetLeft,padding:0,contentPadding:0,contentBackground:"#fff",className:"bx-im-entity-selector-add-to-chat__scope"}}},template:`\n\t\t<MessengerPopup\n\t\t\tv-if="showPopup"\n\t\t\tv-slot="{enableAutoHide, disableAutoHide}"\n\t\t\t:config="config"\n\t\t\t@close="$emit('close')"\n\t\t\t:id="POPUP_ID"\n\t\t>\n\t\t\t<AddToChatContent :dialogId="dialogId" @close="$emit('close')"/>\n\t\t</MessengerPopup>\n\t`};const T=Object.freeze({chats:true,users:true});const I={name:"ForwardContent",components:{ChatSearch:l.ChatSearch,ChatSearchInput:h.ChatSearchInput},props:{messageId:{type:[Number,String],required:true}},emits:["close"],data(){return{searchQuery:"",isLoading:false}},computed:{searchConfig:()=>T},methods:{onLoading(t){this.isLoading=t},onUpdateSearch(t){this.searchQuery=t},async onSelectItem(t){const{dialogId:e}=t;await c.Messenger.openChat(e);a.EventEmitter.emit(d.EventType.textarea.insertForward,{messageId:this.messageId,dialogId:e});this.$emit("close")}},template:`\n\t\t<div class="bx-im-entity-selector-forward__container">\n\t\t\t<div class="bx-im-entity-selector-forward__input">\n\t\t\t\t<ChatSearchInput \n\t\t\t\t\t:searchMode="true" \n\t\t\t\t\t:isLoading="isLoading" \n\t\t\t\t\t:withIcon="false" \n\t\t\t\t\t:delayForFocusOnStart="1"\n\t\t\t\t\t@updateSearch="onUpdateSearch"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-entity-selector-forward__search-result-container">\n\t\t\t\t<ChatSearch\n\t\t\t\t\t:searchMode="true"\n\t\t\t\t\t:searchQuery="searchQuery"\n\t\t\t\t\t:searchConfig="searchConfig"\n\t\t\t\t\t@clickItem="onSelectItem"\n\t\t\t\t\t@loading="onLoading"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`};const _="im-forward-popup";const f={name:"ForwardPopup",components:{MessengerPopup:i.MessengerPopup,ForwardContent:I},props:{showPopup:{type:Boolean,required:true},messageId:{type:[Number,String],required:true}},emits:["close"],computed:{POPUP_ID:()=>_,config(){return{titleBar:this.$Bitrix.Loc.getMessage("IM_ENTITY_SELECTOR_ADD_TO_CHAT_FORWARD_TITLE"),closeIcon:true,targetContainer:document.body,fixed:true,draggable:true,padding:0,autoHide:false,contentPadding:0,contentBackground:"#fff",className:"bx-im-entity-selector-forward__scope"}}},template:`\n\t\t<MessengerPopup\n\t\t\tv-if="showPopup"\n\t\t\t:id="POPUP_ID"\n\t\t\t:config="config"\n\t\t\t@close="$emit('close')"\n\t\t>\n\t\t\t<ForwardContent :messageId="messageId" @close="$emit('close')" />\n\t\t</MessengerPopup>\n\t`};t.AddToChat=C;t.ForwardPopup=f})(this.BX.Messenger.v2.Component.EntitySelector=this.BX.Messenger.v2.Component.EntitySelector||{},BX.UI.EntitySelector,BX.Messenger.v2.Application,BX.Messenger.v2.Service,BX.Messenger.v2.Lib,BX.Main,BX.Messenger.v2.Component.Elements,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Component,BX.Messenger.v2.Component);
//# sourceMappingURL=registry.bundle.map.js