{"version":3,"file":"message-list.bundle.js","sources":["../src/components/dialog-loader.js","../src/classes/avatar-menu.js","../src/classes/message-menu.js","../src/classes/observer-manager.js","../src/components/block/date-group-title.js","../src/components/block/date-group.js","../src/components/block/message-select-button.js","../src/components/block/author-group.js","../src/components/block/new-messages.js","../src/components/block/marked-messages.js","../src/components/empty-state.js","../src/components/history-limit-banner.js","../src/classes/collection-manager/classes/block-manager.js","../src/classes/collection-manager/classes/collection.js","../src/classes/collection-manager/classes/date-manager.js","../src/classes/collection-manager/collection-manager.js","../src/utils/message-components.js","../src/message-list.js"],"sourcesContent":["import { type JsonObject } from 'main.core';\n\nimport '../css/dialog-loader.css';\n\n// @vue/component\nexport const DialogLoader = {\n\tname: 'DialogLoader',\n\tprops:\n\t{\n\t\tfullHeight: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-dialog-loader__container\" :class=\"{'--full-height': fullHeight}\">\n\t\t\t<div class=\"bx-im-dialog-loader__spinner\"></div>\n\t\t\t<div class=\"bx-im-dialog-loader__text\">{{ loc('IM_DIALOG_CHAT_LOADER_TEXT') }}</div>\n\t\t</div>\n\t`,\n};\n","import { UserMenu } from 'im.v2.lib.menu';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\n\nexport class AvatarMenu extends UserMenu\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.id = 'bx-im-avatar-context-menu';\n\t}\n\n\tgetMenuOptions(): Object\n\t{\n\t\treturn {\n\t\t\t...super.getMenuOptions(),\n\t\t\tclassName: this.getMenuClassName(),\n\t\t\tangle: true,\n\t\t\toffsetLeft: 21,\n\t\t};\n\t}\n\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getMentionItem(),\n\t\t\tthis.getSendItem(),\n\t\t\tthis.getProfileItem(),\n\t\t\tthis.getKickItem(),\n\t\t];\n\t}\n}\n","import { Loc, Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { PromoManager } from 'im.v2.lib.promo';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { ChannelManager } from 'im.v2.lib.channel';\nimport { Core } from 'im.v2.application.core';\nimport { BaseMenu } from 'im.v2.lib.menu';\nimport { Parser } from 'im.v2.lib.parser';\nimport { EntityCreator } from 'im.v2.lib.entity-creator';\nimport { MessageService, DiskService } from 'im.v2.provider.service';\nimport { EventType, PlacementType, ActionByRole, PromoId } from 'im.v2.const';\nimport { MarketManager } from 'im.v2.lib.market';\nimport { Utils } from 'im.v2.lib.utils';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { showDeleteChannelPostConfirm, showDownloadAllFilesConfirm } from 'im.v2.lib.confirm';\n\nimport '../css/message-menu.css';\n\nimport 'ui.notification';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\nimport type { ImModelMessage, ImModelChat, ImModelFile } from 'im.v2.model';\n\nexport class MessageMenu extends BaseMenu\n{\n\tcontext: ImModelMessage & {dialogId: string};\n\tdiskService: DiskService;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.id = 'bx-im-message-context-menu';\n\t\tthis.diskService = new DiskService();\n\t\tthis.marketManager = MarketManager.getInstance();\n\t}\n\n\tgetMenuOptions(): Object\n\t{\n\t\treturn {\n\t\t\t...super.getMenuOptions(),\n\t\t\tclassName: this.getMenuClassName(),\n\t\t\tangle: true,\n\t\t\toffsetLeft: 11,\n\t\t};\n\t}\n\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getReplyItem(),\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getCopyLinkItem(),\n\t\t\tthis.getCopyFileItem(),\n\t\t\tthis.getPinItem(),\n\t\t\tthis.getForwardItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getMarkItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getCreateItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDownloadFileItem(),\n\t\t\tthis.getSaveToDiskItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getEditItem(),\n\t\t\tthis.getDeleteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getSelectItem(),\n\t\t];\n\t}\n\n\tgetSelectItem(): ?MenuItem\n\t{\n\t\tif (this.#isDeletedMessage() || !this.#isRealMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_SELECT'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.dialog.openBulkActionsMode, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetReplyItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_REPLY'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.replyMessage, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t\tdialogId: this.context.dialogId,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetForwardItem(): ?MenuItem\n\t{\n\t\tif (this.#isDeletedMessage() || !this.#isRealMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_FORWARD'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.dialog.showForwardPopup, {\n\t\t\t\t\tmessagesIds: [this.context.id],\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCopyItem(): ?MenuItem\n\t{\n\t\tif (this.context.text.trim().length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY'),\n\t\t\tonclick: async () => {\n\t\t\t\tconst textToCopy = Parser.prepareCopy(this.context);\n\n\t\t\t\tawait Utils.text.copyToClipboard(textToCopy);\n\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_SUCCESS'),\n\t\t\t\t});\n\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCopyLinkItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_LINK_MSGVER_1'),\n\t\t\tonclick: () => {\n\t\t\t\tconst textToCopy = Utils.text.getMessageLink(this.context.dialogId, this.context.id);\n\t\t\t\tif (BX.clipboard?.copy(textToCopy))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_LINK_SUCCESS'),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCopyFileItem(): ?MenuItem\n\t{\n\t\tif (this.context.files.length !== 1)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_FILE'),\n\t\t\tonclick: () => {\n\t\t\t\tconst textToCopy = Parser.prepareCopyFile(this.context);\n\t\t\t\tif (BX.clipboard?.copy(textToCopy))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_FILE_SUCCESS'),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetPinItem(): ?MenuItem\n\t{\n\t\tconst canPin = PermissionManager.getInstance().canPerformActionByRole(\n\t\t\tActionByRole.pinMessage,\n\t\t\tthis.context.dialogId,\n\t\t);\n\n\t\tif (this.#isDeletedMessage() || !canPin)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isPinned = this.store.getters['messages/pin/isPinned']({\n\t\t\tchatId: this.context.chatId,\n\t\t\tmessageId: this.context.id,\n\t\t});\n\n\t\treturn {\n\t\t\ttext: isPinned ? Loc.getMessage('IM_DIALOG_CHAT_MENU_UNPIN') : Loc.getMessage('IM_DIALOG_CHAT_MENU_PIN'),\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tif (isPinned)\n\t\t\t\t{\n\t\t\t\t\tmessageService.unpinMessage(this.context.chatId, this.context.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmessageService.pinMessage(this.context.chatId, this.context.id);\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetFavoriteItem(): MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isInFavorite = this.store.getters['sidebar/favorites/isFavoriteMessage'](this.context.chatId, this.context.id);\n\n\t\tconst menuItemText = isInFavorite\n\t\t\t? Loc.getMessage('IM_DIALOG_CHAT_MENU_REMOVE_FROM_SAVED')\n\t\t\t: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE')\n\t\t;\n\n\t\treturn {\n\t\t\ttext: menuItemText,\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tif (isInFavorite)\n\t\t\t\t{\n\t\t\t\t\tmessageService.removeMessageFromFavorite(this.context.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmessageService.addMessageToFavorite(this.context.id);\n\t\t\t\t}\n\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMarkItem(): ?MenuItem\n\t{\n\t\tconst canUnread = this.context.viewed && !this.#isOwnMessage();\n\n\t\tconst dialog: ImModelChat = this.store.getters['chats/getByChatId'](this.context.chatId);\n\t\tconst isMarked = this.context.id === dialog.markedId;\n\t\tif (!canUnread || isMarked)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_MARK'),\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tmessageService.markMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCreateItem(): MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE'),\n\t\t\titems: [\n\t\t\t\tthis.getCreateTaskItem(),\n\t\t\t\tthis.getCreateMeetingItem(),\n\t\t\t\t...this.getMarketItems(),\n\t\t\t],\n\t\t};\n\t}\n\n\tgetCreateTaskItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE_TASK'),\n\t\t\tonclick: () => {\n\t\t\t\tconst entityCreator = new EntityCreator(this.context.chatId);\n\t\t\t\tvoid entityCreator.createTaskForMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCreateMeetingItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE_MEETING'),\n\t\t\tonclick: () => {\n\t\t\t\tconst entityCreator = new EntityCreator(this.context.chatId);\n\t\t\t\tvoid entityCreator.createMeetingForMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetEditItem(): ?MenuItem\n\t{\n\t\tif (!this.#isOwnMessage() || this.#isDeletedMessage() || this.#isForwardedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_EDIT'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.editMessage, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t\tdialogId: this.context.dialogId,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetDeleteItem(): ?MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst permissionManager = PermissionManager.getInstance();\n\t\tconst canDeleteOthersMessage = permissionManager.canPerformActionByRole(\n\t\t\tActionByRole.deleteOthersMessage,\n\t\t\tthis.context.dialogId,\n\t\t);\n\t\tif (!this.#isOwnMessage() && !canDeleteOthersMessage)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_DELETE'),\n\t\t\tclassName: 'menu-popup-no-icon bx-im-dialog-chat__message-menu_delete',\n\t\t\tonclick: this.#onDelete.bind(this),\n\t\t};\n\t}\n\n\tgetMarketItems(): MenuItem[]\n\t{\n\t\tconst { dialogId, id } = this.context;\n\t\tconst placements = this.marketManager.getAvailablePlacementsByType(PlacementType.contextMenu, dialogId);\n\t\tconst marketMenuItem = [];\n\t\tif (placements.length > 0)\n\t\t{\n\t\t\tmarketMenuItem.push(this.getDelimiter());\n\t\t}\n\n\t\tconst context = { messageId: id, dialogId };\n\n\t\tplacements.forEach((placement) => {\n\t\t\tmarketMenuItem.push({\n\t\t\t\ttext: placement.title,\n\t\t\t\tonclick: () => {\n\t\t\t\t\tMarketManager.openSlider(placement, context);\n\t\t\t\t\tthis.menuInstance.close();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\t// (10 items + 1 delimiter), because we don't want to show long context menu.\n\t\tconst itemLimit = 11;\n\n\t\treturn marketMenuItem.slice(0, itemLimit);\n\t}\n\n\tgetDownloadFileItem(): ?MenuItem\n\t{\n\t\tif (!Type.isArrayFilled(this.context.files))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.#isSingleFile())\n\t\t{\n\t\t\treturn this.#getDownloadSingleFileItem();\n\t\t}\n\n\t\treturn this.#getDownloadSeveralFilesItem();\n\t}\n\n\tgetSaveToDiskItem(): ?MenuItem\n\t{\n\t\tif (!Type.isArrayFilled(this.context.files))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst menuItemText = this.#isSingleFile()\n\t\t\t? Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE_ON_DISK_MSGVER_1')\n\t\t\t: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE_ALL_ON_DISK');\n\n\t\tconst successNotification = this.#isSingleFile()\n\t\t\t? Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE_ON_DISK_SUCCESS_MSGVER_1')\n\t\t\t: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE_ALL_ON_DISK_SUCCESS');\n\n\t\treturn {\n\t\t\ttext: menuItemText,\n\t\t\tonclick: function() {\n\t\t\t\tAnalytics.getInstance().messageFiles.onClickSaveOnDisk({\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t\tdialogId: this.context.dialogId,\n\t\t\t\t});\n\n\t\t\t\tvoid this.diskService.save(this.context.files).then(() => {\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: successNotification,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t}.bind(this),\n\t\t};\n\t}\n\n\tgetDelimiter(): MenuItem\n\t{\n\t\treturn {\n\t\t\tdelimiter: true,\n\t\t};\n\t}\n\n\t#isOwnMessage(): boolean\n\t{\n\t\treturn this.context.authorId === Core.getUserId();\n\t}\n\n\t#isDeletedMessage(): boolean\n\t{\n\t\treturn this.context.isDeleted;\n\t}\n\n\t#getFirstFile(): ?ImModelFile\n\t{\n\t\treturn this.store.getters['files/get'](this.context.files[0]);\n\t}\n\n\t#isSingleFile(): boolean\n\t{\n\t\treturn this.context.files.length === 1;\n\t}\n\n\t#isForwardedMessage(): boolean\n\t{\n\t\treturn Type.isStringFilled(this.context.forward.id);\n\t}\n\n\t#isRealMessage(): boolean\n\t{\n\t\treturn this.store.getters['messages/isRealMessage'](this.context.id);\n\t}\n\n\tasync #onDelete()\n\t{\n\t\tconst { id: messageId, dialogId, chatId } = this.context;\n\t\tAnalytics.getInstance().messageDelete.onClickDelete({ messageId, dialogId });\n\t\tthis.menuInstance.close();\n\n\t\tif (await this.#isDeletionCancelled())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst messageService = new MessageService({ chatId });\n\t\tvoid messageService.deleteMessage(messageId);\n\t}\n\n\tasync #isDeletionCancelled(): Promise<boolean>\n\t{\n\t\tconst { id: messageId, dialogId } = this.context;\n\t\tif (!ChannelManager.isChannel(dialogId))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst confirmResult = await showDeleteChannelPostConfirm();\n\t\tif (!confirmResult)\n\t\t{\n\t\t\tAnalytics.getInstance().messageDelete.onCancel({ messageId, dialogId });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#getDownloadSingleFileItem(): MenuItem\n\t{\n\t\tconst file = this.#getFirstFile();\n\n\t\treturn {\n\t\t\thtml: Utils.file.createDownloadLink(\n\t\t\t\tLoc.getMessage('IM_DIALOG_CHAT_MENU_DOWNLOAD_FILE'),\n\t\t\t\tfile.urlDownload,\n\t\t\t\tfile.name,\n\t\t\t),\n\t\t\tonclick: function() {\n\t\t\t\tAnalytics.getInstance().messageFiles.onClickDownload({\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t\tdialogId: this.context.dialogId,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t}.bind(this),\n\t\t};\n\t}\n\n\t#getDownloadSeveralFilesItem(): MenuItem\n\t{\n\t\tconst files: ImModelFile[] = this.context.files.map((fileId) => {\n\t\t\treturn this.store.getters['files/get'](fileId);\n\t\t});\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_DOWNLOAD_FILES'),\n\t\t\tonclick: async () => {\n\t\t\t\tAnalytics.getInstance().messageFiles.onClickDownload({\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t\tdialogId: this.context.dialogId,\n\t\t\t\t});\n\t\t\t\tUtils.file.downloadFiles(files);\n\n\t\t\t\tconst needToShowPopup = PromoManager.getInstance().needToShow(PromoId.downloadSeveralFiles);\n\t\t\t\tif (needToShowPopup && Utils.browser.isChrome() && !Utils.platform.isBitrixDesktop())\n\t\t\t\t{\n\t\t\t\t\tthis.menuInstance?.close();\n\t\t\t\t\tawait showDownloadAllFilesConfirm();\n\t\t\t\t\tvoid PromoManager.getInstance().markAsWatched(PromoId.downloadSeveralFiles);\n\t\t\t\t}\n\t\t\t\tthis.menuInstance?.close();\n\t\t\t},\n\t\t};\n\t}\n}\n","import 'main.polyfill.intersectionobserver';\nimport { EventEmitter } from 'main.core.events';\n\nimport { EventType } from 'im.v2.const';\n\nexport class ObserverManager\n{\n\t#dialogId: string;\n\t#observer: IntersectionObserver;\n\n\tconstructor(dialogId: string): ObserverManager\n\t{\n\t\tthis.#dialogId = dialogId;\n\t\tthis.#initObserver();\n\t}\n\n\tobserveMessage(messageElement: HTMLElement)\n\t{\n\t\tthis.#observer.observe(messageElement);\n\t}\n\n\tunobserveMessage(messageElement: HTMLElement)\n\t{\n\t\tthis.#observer.unobserve(messageElement);\n\t}\n\n\t#initObserver()\n\t{\n\t\tthis.#observer = new IntersectionObserver(((entries: IntersectionObserverEntry[]) => {\n\t\t\tentries.forEach((entry: IntersectionObserverEntry) => {\n\t\t\t\tconst messageId = this.#getMessageIdFromElement(entry.target);\n\t\t\t\tif (!messageId || !entry.rootBounds)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst messageIsFullyVisible = entry.isIntersecting && entry.intersectionRatio >= 0.99;\n\t\t\t\tconst messageTakesHalfOfViewport = entry.intersectionRect.height >= entry.rootBounds.height / 2.2;\n\t\t\t\t// const messageIsBiggerThanViewport = entry.boundingClientRect.height + 20 > entry.rootBounds.height;\n\t\t\t\t// const messageCountsAsVisible = messageIsBiggerThanViewport && messageTakesMostOfViewport;\n\t\t\t\tif (messageIsFullyVisible || messageTakesHalfOfViewport)\n\t\t\t\t{\n\t\t\t\t\tthis.#sendVisibleEvent(messageId);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.#sendNotVisibleEvent(messageId);\n\t\t\t\t}\n\t\t\t});\n\t\t}), { threshold: this.#getThreshold() });\n\t}\n\n\t#sendVisibleEvent(messageId: number): void\n\t{\n\t\tEventEmitter.emit(EventType.dialog.onMessageIsVisible, {\n\t\t\tmessageId,\n\t\t\tdialogId: this.#dialogId,\n\t\t});\n\t}\n\n\t#sendNotVisibleEvent(messageId: number): void\n\t{\n\t\tEventEmitter.emit(EventType.dialog.onMessageIsNotVisible, {\n\t\t\tmessageId,\n\t\t\tdialogId: this.#dialogId,\n\t\t});\n\t}\n\n\t#getThreshold(): number[]\n\t{\n\t\tconst arrayWithZeros = Array.from({ length: 101 }).fill(0);\n\n\t\treturn arrayWithZeros.map((zero, index) => index * 0.01);\n\t}\n\n\t#getMessageIdFromElement(messageElement: HTMLElement): number\n\t{\n\t\treturn Number(messageElement.dataset.id);\n\t}\n}\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const DateGroupTitle = {\n\tprops:\n\t{\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-date-group-title__container\">\n\t\t\t<div class=\"bx-im-message-list-date-group-title__text\">{{ title }}</div>\n\t\t</div>\n\t`,\n};\n","import { DialogBlockType as BlockType } from 'im.v2.const';\n\nimport { DateGroupTitle } from './date-group-title';\n\nimport type { JsonObject } from 'main.core';\nimport type { DateGroupItem } from '../../classes/collection-manager/collection-manager';\n\n// @vue/component\nexport const DateGroup = {\n\tname: 'DateGroup',\n\tcomponents: { DateGroupTitle },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tBlockType: () => BlockType,\n\t\tdateGroup(): DateGroupItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-date-group__container\">\n\t\t\t<DateGroupTitle :title=\"dateGroup.dateTitle\" />\n\t\t\t<template v-for=\"dateGroupItem in dateGroup.items\" >\n\t\t\t\t<slot\n\t\t\t\t\tname=\"dateGroupItem\"\n\t\t\t\t\t:dateGroupItem=\"dateGroupItem\"\n\t\t\t\t\t:isMarkedBlock=\"dateGroupItem.type === BlockType.markedMessages\"\n\t\t\t\t\t:isNewMessagesBlock=\"dateGroupItem.type === BlockType.newMessages\"\n\t\t\t\t\t:isAuthorBlock=\"dateGroupItem.type === BlockType.authorGroup\"\n\t\t\t\t></slot>\n\t\t\t</template>\n\t\t</div>\n\t`,\n};\n","import { Extension } from 'main.core';\n\nimport { MessageComponent } from 'im.v2.const';\n\nimport type { ImModelMessage } from 'im.v2.model';\n\nimport '../../css/message-select-button.css';\n\nconst forwardMessageComponents = new Set([\n\tMessageComponent.default,\n\tMessageComponent.copilotMessage,\n\tMessageComponent.checkIn,\n\tMessageComponent.FeedbackFormMessage,\n\tMessageComponent.ImOpenLinesMessage,\n\tMessageComponent.ImOpenLinesForm,\n]);\n\n// @vue/component\nexport const MessageSelectButton = {\n\tname: 'MessageSelectButton',\n\tprops:\n\t{\n\t\tmessage: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tmessageItem(): ImModelMessage\n\t\t{\n\t\t\treturn this.message;\n\t\t},\n\t\tselectedMessages(): Set<number>\n\t\t{\n\t\t\treturn this.$store.getters['messages/select/getCollection'];\n\t\t},\n\t\tbulkActionMessageLimit(): number\n\t\t{\n\t\t\tconst settings = Extension.getSettings('im.v2.component.message-list');\n\n\t\t\treturn settings.get('multipleActionMessageLimit');\n\t\t},\n\t\tisMessageSelected(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/select/isMessageSelected'](this.messageItem.id);\n\t\t},\n\t\tisSelectionLimitReached(): boolean\n\t\t{\n\t\t\treturn this.selectedMessages.size === this.bulkActionMessageLimit && !this.isMessageSelected;\n\t\t},\n\t\tisRealMessage(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/isRealMessage'](this.messageItem.id);\n\t\t},\n\t\tcanSelectMessage(): boolean\n\t\t{\n\t\t\tif (this.messageItem.isDeleted || !this.isRealMessage)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn forwardMessageComponents.has(this.messageItem.componentId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonSelectMessage()\n\t\t{\n\t\t\tif (!this.canSelectMessage)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isSelectionLimitReached)\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IM_MESSAGE_LIST_MAX_LIMIT_SELECTED_MESSAGES'));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$store.dispatch('messages/select/toggle', this.messageItem.id);\n\t\t},\n\t\tshowNotification(text: string)\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({ content: text });\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div @click=\"onSelectMessage\" class=\"bx-im-message-list-select-button__container\">\n\t\t\t<div\n\t\t\t\tv-if=\"canSelectMessage\"\n\t\t\t\tclass=\"bx-im-message-list-select-button__checkbox-circle\"\n\t\t\t\t:class=\"{'--selected': isMessageSelected}\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { MessageAvatar, AvatarSize } from 'im.v2.component.elements';\nimport { ActionByRole, ChatType, UserType } from 'im.v2.const';\nimport { CopilotManager } from 'im.v2.lib.copilot';\nimport { PermissionManager } from 'im.v2.lib.permission';\n\nimport { MessageSelectButton } from './message-select-button';\n\nimport type { ImModelChat, ImModelUser } from 'im.v2.model';\nimport type { AuthorGroupItem } from '../../classes/collection-manager/collection-manager';\n\n// @vue/component\nexport const AuthorGroup = {\n\tname: 'AuthorGroup',\n\tcomponents: { MessageAvatar, MessageSelectButton },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tcontextDialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\twithAvatarMenu: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\temits: ['avatarClick'],\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tcontextDialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.contextDialogId, true);\n\t\t},\n\t\tcontextUser(): ImModelUser\n\t\t{\n\t\t\treturn this.$store.getters['users/get'](this.contextDialogId, true);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.contextDialog.type === ChatType.user;\n\t\t},\n\t\tisBulkActionsMode(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/select/getBulkActionsMode'];\n\t\t},\n\t\tauthorGroup(): AuthorGroupItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tauthorDialogId(): string\n\t\t{\n\t\t\treturn this.authorGroup.avatar.avatarId;\n\t\t},\n\t\tfirstMessageIdInAuthorGroup(): number\n\t\t{\n\t\t\t// this is potentially dangerous.\n\t\t\t// for now, we always have the same avatar in one authorGroup\n\t\t\t// in future it can be different: several support answers (with different avatars) in one authorGroup\n\t\t\treturn this.authorGroup.messages[0].id;\n\t\t},\n\t\tavatarMenuAvailable(): boolean\n\t\t{\n\t\t\tif (!this.withAvatarMenu)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst authorUser: ImModelUser = this.$store.getters['users/get'](this.authorDialogId);\n\t\t\tif (!authorUser)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst copilotManager = new CopilotManager();\n\t\t\tif (copilotManager.isCopilotBot(this.authorDialogId))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst isCurrentUser = authorUser.id === Core.getUserId();\n\t\t\tif (isCurrentUser)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst isBotChat = this.isUser && this.contextUser.type === UserType.bot;\n\t\t\tif (isBotChat)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst permissionManager = PermissionManager.getInstance();\n\n\t\t\treturn permissionManager.canPerformActionByRole(ActionByRole.openAvatarMenu, this.contextDialogId);\n\t\t},\n\t\tcontainerClasses(): string[]\n\t\t{\n\t\t\tconst classes = [`--${this.authorGroup.messageType}`];\n\t\t\tif (!this.avatarMenuAvailable)\n\t\t\t{\n\t\t\t\tclasses.push('--no-menu');\n\t\t\t}\n\n\t\t\tif (this.isBulkActionsMode)\n\t\t\t{\n\t\t\t\tclasses.push('--is-bulk-actions-mode');\n\t\t\t}\n\n\t\t\tif (this.authorGroup.avatar.isNeeded)\n\t\t\t{\n\t\t\t\tclasses.push('--has-avatar');\n\t\t\t}\n\n\t\t\treturn classes;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tisAvatarNeeded(index: number): boolean\n\t\t{\n\t\t\tconst lastIndexMessageInGroup = this.authorGroup.messages.length - 1;\n\n\t\t\treturn this.authorGroup.avatar.isNeeded && index === lastIndexMessageInGroup;\n\t\t},\n\t\tonAvatarClick(event: PointerEvent): void\n\t\t{\n\t\t\tif (!this.avatarMenuAvailable)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$emit('avatarClick', {\n\t\t\t\tdialogId: this.authorGroup.avatar.avatarId,\n\t\t\t\t$event: event,\n\t\t\t});\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-author-group__container\" :class=\"containerClasses\">\n\t\t\t<template v-for=\"(message, index) in authorGroup.messages\">\n\t\t\t\t<Transition name=\"bx-im-select-button-transition\">\n\t\t\t\t\t<MessageSelectButton v-if=\"isBulkActionsMode\" :message=\"message\" />\n\t\t\t\t</Transition>\n\t\t\t\t<div v-if=\"isAvatarNeeded(index)\" class=\"bx-im-message-list-author-group__avatar\">\n\t\t\t\t\t<MessageAvatar\n\t\t\t\t\t\t:messageId=\"firstMessageIdInAuthorGroup\"\n\t\t\t\t\t\t:authorId=\"authorGroup.avatar.avatarId\"\n\t\t\t\t\t\t:size=\"AvatarSize.L\"\n\t\t\t\t\t\t@click=\"onAvatarClick\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<slot name=\"message\" :message=\"message\" :index=\"index\"></slot>\n\t\t\t</template>\n\t\t</div>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const NewMessagesBlock = {\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-new-message__container\">\n\t\t\t<div class=\"bx-im-message-list-new-message__text\">\n\t\t\t\t{{ loc('IM_DIALOG_CHAT_BLOCK_NEW_MESSAGES_2') }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const MarkedMessagesBlock = {\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-new-message__container\">\n\t\t\t<div class=\"bx-im-message-list-new-message__text\">\n\t\t\t\t{{ loc('IM_DIALOG_CHAT_BLOCK_MARKED_MESSAGES') }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { EventType } from 'im.v2.const';\n\nimport '../css/empty-state.css';\n\nimport type { JsonObject } from 'main.core';\n\nconst defaultMessages = [\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_1'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_2'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_3'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_4'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_5'),\n];\n\n// @vue/component\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tdefaultMessages: () => defaultMessages,\n\t},\n\tmethods:\n\t{\n\t\tonMessageClick(text: string): void\n\t\t{\n\t\t\tEventEmitter.emit(EventType.textarea.insertText, {\n\t\t\t\ttext,\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-empty-state__container\">\n\t\t\t<div class=\"bx-im-message-list-empty-state__content\">\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__icon\"></div>\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__title\">{{ loc('IM_MESSAGE_LIST_EMPTY_STATE_TITLE') }}</div>\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__action-list\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for=\"(message, index) in defaultMessages\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t@click=\"onMessageClick(message)\"\n\t\t\t\t\t\tclass=\"bx-im-message-list-empty-state__action-list_item\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ message }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Analytics } from 'im.v2.lib.analytics';\nimport { FeatureManager } from 'im.v2.lib.feature';\n\nimport '../css/history-limit-banner.css';\n\n// @vue/component\nexport const HistoryLimitBanner = {\n\tname: 'HistoryLimitBanner',\n\tprops:\n\t{\n\t\tnoMessages: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\ttitle(): string\n\t\t{\n\t\t\treturn FeatureManager.chatHistory.getLimitTitle();\n\t\t},\n\t\tsubtitle(): string\n\t\t{\n\t\t\treturn FeatureManager.chatHistory.getLimitSubtitle();\n\t\t},\n\t\tbuttonText(): string\n\t\t{\n\t\t\treturn FeatureManager.chatHistory.getLearnMoreText();\n\t\t},\n\t},\n\tmounted()\n\t{\n\t\tthis.sendAnalytics();\n\t},\n\tmethods:\n\t{\n\t\tonButtonClick(): void\n\t\t{\n\t\t\tAnalytics.getInstance().historyLimit.onDialogBannerClick({ dialogId: this.dialogId });\n\t\t\tFeatureManager.chatHistory.openFeatureSlider();\n\t\t},\n\t\tsendAnalytics()\n\t\t{\n\t\t\tAnalytics.getInstance().historyLimit.onDialogLimitExceeded({\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t\tnoMessages: this.noMessages,\n\t\t\t});\n\t\t},\n\t},\n\t// language=Vue\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-history-banner__container\" :class=\"{'--no-messages': noMessages}\">\n\t\t\t<div class=\"bx-im-message-list-history-banner__left\">\n\t\t\t\t<div class=\"bx-im-message-list-history-banner__title\">\n\t\t\t\t\t<div class=\"bx-im-message-list-history-banner__icon bx-im-messenger__lock-icon\"></div>\n\t\t\t\t\t<div class=\"bx-im-message-list-history-banner__title_text --ellipsis\" :title=\"title\">\n\t\t\t\t\t\t{{ title }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-message-list-history-banner__subtitle --line-clamp-2\" :title=\"subtitle\">\n\t\t\t\t\t{{ subtitle }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-message-list-history-banner__right\">\n\t\t\t\t<div class=\"bx-im-message-list-history-banner__button\" @click=\"onButtonClick\">\n\t\t\t\t\t{{ buttonText }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { DialogAlignment, DialogBlockType as BlockType, MessageType, Settings } from 'im.v2.const';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type { AuthorGroupItem, NewMessagesItem, MarkedMessageItem } from '../collection-manager';\n\nexport class BlockManager\n{\n\tgetAuthorBlock(message: ImModelMessage): AuthorGroupItem\n\t{\n\t\treturn {\n\t\t\ttype: BlockType.authorGroup,\n\t\t\tuserId: message.authorId,\n\t\t\tavatar: this.#getAvatarConfig(message),\n\t\t\tmessageType: this.#getMessageType(message),\n\t\t};\n\t}\n\n\tgetMarkedBlock(): MarkedMessageItem\n\t{\n\t\treturn { type: BlockType.markedMessages };\n\t}\n\n\tgetNewMessagesBlock(): NewMessagesItem\n\t{\n\t\treturn { type: BlockType.newMessages };\n\t}\n\n\t#getAvatarConfig(message: ImModelMessage): {isNeeded: boolean, avatarId: string}\n\t{\n\t\treturn {\n\t\t\tisNeeded: this.#checkIfAvatarIsNeeded(message),\n\t\t\tavatarId: message.authorId.toString(),\n\t\t};\n\t}\n\n\t#getMessageType(message: ImModelMessage): string\n\t{\n\t\tif (!message.authorId)\n\t\t{\n\t\t\treturn MessageType.system;\n\t\t}\n\n\t\tif (message.authorId === Core.getUserId())\n\t\t{\n\t\t\treturn MessageType.self;\n\t\t}\n\n\t\treturn MessageType.opponent;\n\t}\n\n\t#checkIfAvatarIsNeeded(message: ImModelMessage): boolean\n\t{\n\t\tconst messageType = this.#getMessageType(message);\n\n\t\tconst isSystem = messageType === MessageType.system;\n\t\tif (isSystem)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst isSelf = messageType === MessageType.self;\n\t\tconst alignment = Core.getStore().getters['application/settings/get'](Settings.appearance.alignment);\n\t\tif (alignment === DialogAlignment.center)\n\t\t{\n\t\t\treturn !isSelf;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","import { BlockManager } from './block-manager';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type { DateGroupItem, DateGroupItemType } from '../collection-manager';\n\nexport class Collection\n{\n\t#blockManager: BlockManager;\n\n\t#collection: DateGroupItem[] = [];\n\t#currentDateTitles: Set<string> = new Set();\n\t#markedIndicatorInserted: boolean = false;\n\n\t#lastDateItems: DateGroupItemType = [];\n\t#lastAuthorId: number | null = null;\n\t#lastAuthorItems: ImModelMessage[] = [];\n\n\tconstructor()\n\t{\n\t\tthis.#blockManager = new BlockManager();\n\t}\n\n\tget(): DateGroupItem[]\n\t{\n\t\treturn this.#collection;\n\t}\n\n\thasDateTitle(dateTitle: string): boolean\n\t{\n\t\treturn this.#currentDateTitles.has(dateTitle);\n\t}\n\n\taddDateGroup(dateTitle: string): void\n\t{\n\t\tthis.#currentDateTitles.add(dateTitle);\n\t\tthis.#lastDateItems = [];\n\t\tthis.#collection.push({\n\t\t\tdateTitle,\n\t\t\titems: this.#lastDateItems,\n\t\t});\n\t\tthis.#clearLastAuthor();\n\t}\n\n\taddAuthorGroup(message: ImModelMessage): void\n\t{\n\t\tthis.#lastAuthorId = message.authorId;\n\t\tthis.#lastAuthorItems = [];\n\n\t\tthis.#lastDateItems.push({\n\t\t\t...this.#blockManager.getAuthorBlock(message),\n\t\t\tmessages: this.#lastAuthorItems,\n\t\t});\n\t}\n\n\taddMessage(message: ImModelMessage)\n\t{\n\t\tthis.#lastAuthorItems.push(message);\n\t}\n\n\taddMarkedIndicator(): void\n\t{\n\t\tthis.#lastDateItems.push(this.#blockManager.getMarkedBlock());\n\t\tthis.#markedIndicatorInserted = true;\n\t\tthis.#clearLastAuthor();\n\t}\n\n\taddNewMessagesIndicator(): void\n\t{\n\t\tif (this.#markedIndicatorInserted)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#lastDateItems.push(this.#blockManager.getNewMessagesBlock());\n\t\tthis.#clearLastAuthor();\n\t}\n\n\tgetLastAuthorId(): number | null\n\t{\n\t\treturn this.#lastAuthorId;\n\t}\n\n\t#clearLastAuthor(): void\n\t{\n\t\tthis.#lastAuthorId = null;\n\t}\n}\n","import { DateFormatter, DateTemplate } from 'im.v2.lib.date-formatter';\n\nexport type DateGroup = { id: number, title: string };\n\nexport class DateManager\n{\n\tcachedDateGroups: { [shortDate: string]: string } = {};\n\n\tgetDateTitle(date: Date): string\n\t{\n\t\tconst shortDate = this.#getLocalShortDate(date);\n\n\t\tif (this.cachedDateGroups[shortDate])\n\t\t{\n\t\t\treturn this.cachedDateGroups[shortDate];\n\t\t}\n\n\t\tthis.cachedDateGroups[shortDate] = DateFormatter.formatByTemplate(date, DateTemplate.dateGroup);\n\n\t\treturn this.cachedDateGroups[shortDate];\n\t}\n\n\t#getLocalShortDate(date: Date): string\n\t{\n\t\tconst timestampWithTimezoneOffset = date.getTime() - (date.getTimezoneOffset() * 60000);\n\t\tconst localDateInJSON = new Date(timestampWithTimezoneOffset).toJSON();\n\n\t\t// 2022-10-25T14:58:44.000Z => 2022-10-25\n\t\tconst INDEX_BETWEEN_DATE_AND_TIME = 10;\n\n\t\treturn localDateInJSON.slice(0, INDEX_BETWEEN_DATE_AND_TIME);\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { DialogBlockType as BlockType, MessageType } from 'im.v2.const';\n\nimport { Collection } from './classes/collection';\nimport { DateManager } from './classes/date-manager';\nimport { BlockManager } from './classes/block-manager';\n\nimport type { ImModelMessage, ImModelChat } from 'im.v2.model';\n\nexport type DateGroupItem = {\n\tdateTitle: string,\n\titems: DateGroupItemType,\n};\n\nexport type DateGroupItemType = Array<AuthorGroupItem | NewMessagesItem | MarkedMessageItem>\n\nexport type AuthorGroupItem = {\n\ttype: BlockType.authorGroup,\n\tuserId: number,\n\tavatar: {\n\t\tisNeeded: boolean,\n\t\tavatarId: string,\n\t},\n\tmessageType: MessageType.opponent | MessageType.self | MessageType.system,\n\tmessages: ImModelMessage[]\n};\n\nexport type NewMessagesItem = {\n\ttype: BlockType.newMessages\n};\n\nexport type MarkedMessageItem = {\n\ttype: BlockType.markedMessages\n};\n\nexport class CollectionManager\n{\n\tdialogId: number;\n\tdateManager: DateManager;\n\n\tfirstIteration: boolean = true;\n\tlastReadMessageId: number | null;\n\tmarkedMessageId: number;\n\n\tconstructor(dialogId)\n\t{\n\t\tthis.dialogId = dialogId;\n\t\tthis.dateManager = new DateManager();\n\t}\n\n\t#setInitialValues(): void\n\t{\n\t\tif (!this.firstIteration)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { markedId } = this.#getDialog();\n\t\tthis.lastReadMessageId = this.#getLastReadMessageId();\n\t\tthis.markedMessageId = markedId;\n\t}\n\n\t#handleMarkedMessageId(): void\n\t{\n\t\tconst { markedId } = this.#getDialog();\n\t\tif (markedId === this.markedMessageId || markedId === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\t// if mark was set after chat load - remember marked message and remove \"new messages\" block\n\t\tthis.markedMessageId = markedId;\n\t\tthis.lastReadMessageId = null;\n\t}\n\n\tformatMessageCollection(messageCollection: ImModelMessage[]): DateGroupItem[]\n\t{\n\t\t/*\n\t\tCollection\n\t\t├── Date Group\n\t\t│   ├── Marked Message Indicator\n\t\t│   ├── Author Group\n\t\t│   │   └── Messages\n\t\t│   └── New Messages Indicator\n\t\t*/\n\n\t\tconst collection = new Collection();\n\n\t\tthis.#setInitialValues();\n\t\tthis.#handleMarkedMessageId();\n\n\t\tmessageCollection.forEach((message: ImModelMessage, index) => {\n\t\t\tconst dateTitle = this.dateManager.getDateTitle(message.date);\n\t\t\tif (!collection.hasDateTitle(dateTitle))\n\t\t\t{\n\t\t\t\tcollection.addDateGroup(dateTitle);\n\t\t\t}\n\n\t\t\tif (message.id === this.markedMessageId)\n\t\t\t{\n\t\t\t\tcollection.addMarkedIndicator();\n\t\t\t}\n\n\t\t\tif (message.authorId !== collection.getLastAuthorId())\n\t\t\t{\n\t\t\t\tcollection.addAuthorGroup(message);\n\t\t\t}\n\n\t\t\tcollection.addMessage(message);\n\n\t\t\tconst isLastMessage = index === messageCollection.length - 1;\n\t\t\tif (!isLastMessage && message.id === this.lastReadMessageId)\n\t\t\t{\n\t\t\t\tcollection.addNewMessagesIndicator();\n\t\t\t}\n\t\t});\n\n\t\tconst { inited } = this.#getDialog();\n\t\tif (inited)\n\t\t{\n\t\t\tthis.firstIteration = false;\n\t\t}\n\n\t\treturn collection.get();\n\t}\n\n\tformatAuthorGroup(message: ImModelMessage): AuthorGroupItem\n\t{\n\t\tconst blockManager = new BlockManager();\n\n\t\treturn {\n\t\t\t...blockManager.getAuthorBlock(message),\n\t\t\tmessages: [message],\n\t\t};\n\t}\n\n\t#getLastReadMessageId(): number\n\t{\n\t\tconst { lastMessageId }: ImModelChat = this.#getDialog();\n\t\tconst lastReadId = Core.getStore().getters['chats/getLastReadId'](this.dialogId);\n\t\tif (lastReadId === lastMessageId)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn lastReadId;\n\t}\n\n\t#getDialog(): ImModelChat\n\t{\n\t\treturn Core.getStore().getters['chats/get'](this.dialogId);\n\t}\n}\n","import { FileMessage } from 'im.v2.component.message.file';\nimport { DefaultMessage } from 'im.v2.component.message.default';\nimport { CallInviteMessage } from 'im.v2.component.message.call-invite';\nimport { DeletedMessage } from 'im.v2.component.message.deleted';\nimport { UnsupportedMessage } from 'im.v2.component.message.unsupported';\nimport { SmileMessage } from 'im.v2.component.message.smile';\nimport { SystemMessage } from 'im.v2.component.message.system';\nimport { ChatCreationMessage } from 'im.v2.component.message.chat-creation';\nimport { ChatCopilotCreationMessage } from 'im.v2.component.message.copilot.creation';\nimport { CopilotMessage } from 'im.v2.component.message.copilot.answer';\nimport { ChatCopilotAddedUsersMessage } from 'im.v2.component.message.copilot.added-users';\nimport { SupportVoteMessage } from 'im.v2.component.message.support.vote';\nimport { SupportSessionNumberMessage } from 'im.v2.component.message.support.session-number';\nimport { SupportChatCreationMessage } from 'im.v2.component.message.support.chat-creation';\nimport { ConferenceCreationMessage } from 'im.v2.component.message.conference-creation';\nimport { SupervisorUpdateFeatureMessage } from 'im.v2.component.message.supervisor.update-feature';\nimport { SupervisorEnableFeatureMessage } from 'im.v2.component.message.supervisor.enable-feature';\nimport { SignMessage } from 'im.v2.component.message.sign';\nimport { CheckInMessage } from 'im.v2.component.message.check-in';\nimport { OwnChatCreationMessage } from 'im.v2.component.message.own-chat-creation';\nimport { ZoomInviteMessage } from 'im.v2.component.message.zoom-invite';\nimport { GeneralChatCreationMessage } from 'im.v2.component.message.general-chat-creation';\nimport { GeneralChannelCreationMessage } from 'im.v2.component.message.general-channel-creation';\nimport { ChannelCreationMessage } from 'im.v2.component.message.channel-creation';\nimport { StartDialogMessage } from 'imopenlines.v2.component.message.start-dialog';\nimport { HiddenMessage } from 'imopenlines.v2.component.message.hidden';\nimport { FeedbackFormMessage } from 'imopenlines.v2.component.message.feedback-form';\nimport { CallMessage } from 'im.v2.component.message.call';\nimport { VoteMessage } from 'im.v2.component.message.vote';\n\nexport const MessageComponents = {\n\tDefaultMessage,\n\tFileMessage,\n\tSmileMessage,\n\tCallInviteMessage,\n\tDeletedMessage,\n\tSystemMessage,\n\tUnsupportedMessage,\n\tChatCreationMessage,\n\tOwnChatCreationMessage,\n\tChatCopilotCreationMessage,\n\tCopilotMessage,\n\tSupportVoteMessage,\n\tSupportSessionNumberMessage,\n\tSupportChatCreationMessage,\n\tConferenceCreationMessage,\n\tZoomInviteMessage,\n\tCheckInMessage,\n\tSupervisorUpdateFeatureMessage,\n\tSupervisorEnableFeatureMessage,\n\tChatCopilotAddedUsersMessage,\n\tSignMessage,\n\tGeneralChatCreationMessage,\n\tGeneralChannelCreationMessage,\n\tChannelCreationMessage,\n\tCallMessage,\n\tStartDialogMessage,\n\tFeedbackFormMessage,\n\tHiddenMessage,\n\tVoteMessage,\n};\n","import { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport { ChatType, EventType, MessageComponent, ActionByRole } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { Quote } from 'im.v2.lib.quote';\nimport { FadeAnimation } from 'im.v2.component.animation';\nimport { FeatureManager } from 'im.v2.lib.feature';\nimport { MessageComponentManager } from 'im.v2.lib.message-component-manager';\n\nimport { DialogStatus } from 'im.v2.component.elements';\nimport { DialogLoader } from './components/dialog-loader';\nimport { AvatarMenu } from './classes/avatar-menu';\nimport { MessageMenu } from './classes/message-menu';\nimport { ObserverManager } from './classes/observer-manager';\n\nimport { DateGroup } from './components/block/date-group';\nimport { AuthorGroup } from './components/block/author-group';\nimport { NewMessagesBlock } from './components/block/new-messages';\nimport { MarkedMessagesBlock } from './components/block/marked-messages';\nimport { EmptyState } from './components/empty-state';\nimport { HistoryLimitBanner } from './components/history-limit-banner';\nimport { CollectionManager, type DateGroupItem } from './classes/collection-manager/collection-manager';\nimport { MessageComponents } from './utils/message-components';\n\nimport './css/message-list.css';\n\nexport { AvatarMenu } from './classes/avatar-menu';\nexport { MessageMenu } from './classes/message-menu';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelMessage, ImModelUser } from 'im.v2.model';\nexport { AuthorGroup } from './components/block/author-group';\nexport { MessageComponents } from './utils/message-components';\nexport { CollectionManager } from './classes/collection-manager/collection-manager';\n\n// @vue/component\nexport const MessageList = {\n\tname: 'MessageList',\n\tdirectives:\n\t{\n\t\t'message-observer': {\n\t\t\tmounted(element, binding)\n\t\t\t{\n\t\t\t\tbinding.instance.observer.observeMessage(element);\n\t\t\t},\n\t\t\tbeforeUnmount(element, binding)\n\t\t\t{\n\t\t\t\tbinding.instance.observer.unobserveMessage(element);\n\t\t\t},\n\t\t},\n\t},\n\tcomponents:\n\t{\n\t\tDateGroup,\n\t\tAuthorGroup,\n\t\tNewMessagesBlock,\n\t\tMarkedMessagesBlock,\n\t\tDialogStatus,\n\t\tDialogLoader,\n\t\tEmptyState,\n\t\tFadeAnimation,\n\t\tHistoryLimitBanner,\n\t\t...MessageComponents,\n\t},\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tmessageMenuClass: {\n\t\t\ttype: Function,\n\t\t\tdefault: MessageMenu,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\twindowFocused: false,\n\t\t\tmessageMenuIsActiveForId: 0,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tuser(): ImModelUser\n\t\t{\n\t\t\treturn this.$store.getters['users/get'](this.dialogId, true);\n\t\t},\n\t\tmessageCollection(): ImModelMessage[]\n\t\t{\n\t\t\treturn this.$store.getters['messages/getByChatId'](this.dialog.chatId);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.user;\n\t\t},\n\t\tdialogInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tformattedCollection(): DateGroupItem[]\n\t\t{\n\t\t\tif (!this.dialogInited && this.messageCollection.length === 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn this.getCollectionManager().formatMessageCollection(this.messageCollection);\n\t\t},\n\t\tnoMessages(): boolean\n\t\t{\n\t\t\treturn this.formattedCollection.length === 0;\n\t\t},\n\t\tisHistoryLimitExceeded(): boolean\n\t\t{\n\t\t\treturn !FeatureManager.chatHistory.isAvailable() && this.dialog.tariffRestrictions.isHistoryLimitExceeded;\n\t\t},\n\t\tshowDialogStatus(): boolean\n\t\t{\n\t\t\treturn this.messageCollection.some((message) => {\n\t\t\t\treturn message.id === this.dialog.lastMessageId;\n\t\t\t});\n\t\t},\n\t\tshowEmptyState(): boolean\n\t\t{\n\t\t\treturn this.dialogInited && this.noMessages && this.isUser && !this.isHistoryLimitExceeded;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.initContextMenu();\n\t\tthis.initCollectionManager();\n\t\tthis.initObserverManager();\n\t},\n\tmounted()\n\t{\n\t\tthis.subscribeToEvents();\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.unsubscribeFromEvents();\n\t},\n\tmethods:\n\t{\n\t\tsubscribeToEvents(): void\n\t\t{\n\t\t\tEventEmitter.subscribe(EventType.dialog.onClickMessageContextMenu, this.onMessageContextMenuClick);\n\t\t},\n\t\tunsubscribeFromEvents(): void\n\t\t{\n\t\t\tEventEmitter.unsubscribe(EventType.dialog.onClickMessageContextMenu, this.onMessageContextMenuClick);\n\t\t},\n\t\tinsertTextQuote(message: ImModelMessage): void\n\t\t{\n\t\t\tEventEmitter.emit(EventType.textarea.insertText, {\n\t\t\t\ttext: Quote.prepareQuoteText(message),\n\t\t\t\twithNewLine: true,\n\t\t\t\treplace: false,\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\tinsertMention(user: ImModelUser): void\n\t\t{\n\t\t\tEventEmitter.emit(EventType.textarea.insertMention, {\n\t\t\t\tmentionText: user.name,\n\t\t\t\tmentionReplacement: Utils.text.getMentionBbCode(user.id, user.name),\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\topenReplyPanel(messageId: number): void\n\t\t{\n\t\t\tEventEmitter.emit(EventType.textarea.replyMessage, {\n\t\t\t\tmessageId,\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\tonAvatarClick(params: { dialogId: string, $event: PointerEvent })\n\t\t{\n\t\t\tconst { dialogId, $event: event } = params;\n\t\t\tconst user: ImModelUser = this.$store.getters['users/get'](dialogId);\n\t\t\tif (Utils.key.isAltOrOption(event))\n\t\t\t{\n\t\t\t\tthis.insertMention(user);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.avatarMenu.openMenu({ user, dialog: this.dialog }, event.currentTarget);\n\t\t},\n\t\tonMessageContextMenuClick(eventData: BaseEvent<{ message: ImModelMessage, dialogId: string, event: PointerEvent }>)\n\t\t{\n\t\t\tconst permissionManager = PermissionManager.getInstance();\n\t\t\tif (!permissionManager.canPerformActionByRole(ActionByRole.openMessageMenu, this.dialogId))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { message, event, dialogId } = eventData.getData();\n\t\t\tif (dialogId !== this.dialogId)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Utils.key.isCombination(event, ['Alt+Ctrl']))\n\t\t\t{\n\t\t\t\tthis.insertTextQuote(message);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Utils.key.isCmdOrCtrl(event))\n\t\t\t{\n\t\t\t\tthis.openReplyPanel(message.id);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst context = { dialogId: this.dialogId, ...message };\n\t\t\tthis.messageMenu.openMenu(context, event.currentTarget);\n\t\t\tthis.messageMenuIsActiveForId = message.id;\n\t\t},\n\t\tasync onMessageMouseUp(message: ImModelMessage, event: MouseEvent)\n\t\t{\n\t\t\tawait Utils.browser.waitForSelectionToUpdate();\n\t\t\tconst selection = window.getSelection().toString().trim();\n\t\t\tif (selection.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventEmitter.emit(EventType.dialog.showQuoteButton, {\n\t\t\t\tmessage,\n\t\t\t\tevent,\n\t\t\t});\n\t\t},\n\t\tinitObserverManager()\n\t\t{\n\t\t\tthis.observer = new ObserverManager(this.dialogId);\n\t\t},\n\t\tinitContextMenu()\n\t\t{\n\t\t\tconst MessageMenuClass = this.messageMenuClass;\n\t\t\tthis.messageMenu = new MessageMenuClass();\n\t\t\tthis.messageMenu.subscribe(MessageMenu.events.onCloseMenu, () => {\n\t\t\t\tthis.messageMenuIsActiveForId = 0;\n\t\t\t});\n\n\t\t\tthis.avatarMenu = new AvatarMenu();\n\t\t},\n\t\tgetMessageComponentName(message: ImModelMessage): $Values<typeof MessageComponent>\n\t\t{\n\t\t\treturn (new MessageComponentManager(message)).getName();\n\t\t},\n\t\tinitCollectionManager()\n\t\t{\n\t\t\tthis.collectionManager = new CollectionManager(this.dialogId);\n\t\t},\n\t\tgetCollectionManager(): CollectionManager\n\t\t{\n\t\t\treturn this.collectionManager;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<slot v-if=\"!dialogInited\" name=\"loader\">\n\t\t\t<DialogLoader />\n\t\t</slot>\n\t\t<FadeAnimation :duration=\"200\">\n\t\t\t<div v-if=\"dialogInited\" class=\"bx-im-message-list__container\">\n\t\t\t\t<EmptyState v-if=\"showEmptyState\" :dialogId=\"dialogId\" />\n\t\t\t\t<slot name=\"before-messages\" :getMessageComponentName=\"getMessageComponentName\"></slot>\n\t\t\t\t<HistoryLimitBanner v-if=\"isHistoryLimitExceeded\" :dialogId=\"dialogId\" :noMessages=\"noMessages\" />\n\t\t\t\t<DateGroup v-for=\"dateGroup in formattedCollection\" :key=\"dateGroup.dateTitle\" :item=\"dateGroup\">\n\t\t\t\t\t<!-- Slot for every date group item -->\n\t\t\t\t\t<template #dateGroupItem=\"{ dateGroupItem, isMarkedBlock, isNewMessagesBlock, isAuthorBlock }\">\n\t\t\t\t\t\t<MarkedMessagesBlock v-if=\"isMarkedBlock\" data-id=\"newMessages\" />\n\t\t\t\t\t\t<NewMessagesBlock v-else-if=\"isNewMessagesBlock\" data-id=\"newMessages\" />\n\t\t\t\t\t\t<AuthorGroup \n\t\t\t\t\t\t\tv-else-if=\"isAuthorBlock\" \n\t\t\t\t\t\t\t:item=\"dateGroupItem\"\n\t\t\t\t\t\t\t:contextDialogId=\"dialogId\"\n\t\t\t\t\t\t\t@avatarClick=\"onAvatarClick\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<!-- Slot for every message -->\n\t\t\t\t\t\t\t<template #message=\"{ message, index }\">\n\t\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t\tv-message-observer\n\t\t\t\t\t\t\t\t\t:is=\"getMessageComponentName(message)\"\n\t\t\t\t\t\t\t\t\t:withTitle=\"index === 0\"\n\t\t\t\t\t\t\t\t\t:item=\"message\"\n\t\t\t\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t\t\t\t:key=\"message.id\"\n\t\t\t\t\t\t\t\t\t:menuIsActiveForId=\"messageMenuIsActiveForId\"\n\t\t\t\t\t\t\t\t\t:data-viewed=\"message.viewed\"\n\t\t\t\t\t\t\t\t\t@mouseup=\"onMessageMouseUp(message, $event)\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</component>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</AuthorGroup>\n\t\t\t\t\t</template>\n\t\t\t\t</DateGroup>\n\t\t\t\t<DialogStatus v-if=\"showDialogStatus\" :dialogId=\"dialogId\" />\n\t\t\t</div>\n\t\t</FadeAnimation>\n\t`,\n};\n"],"names":["DialogLoader","name","props","fullHeight","type","Boolean","default","data","methods","loc","phraseCode","$Bitrix","Loc","getMessage","template","AvatarMenu","UserMenu","constructor","id","getMenuOptions","className","getMenuClassName","angle","offsetLeft","getMenuItems","getMentionItem","getSendItem","getProfileItem","getKickItem","MessageMenu","BaseMenu","diskService","DiskService","marketManager","MarketManager","getInstance","getReplyItem","getCopyItem","getCopyLinkItem","getCopyFileItem","getPinItem","getForwardItem","getDelimiter","getMarkItem","getFavoriteItem","getCreateItem","getDownloadFileItem","getSaveToDiskItem","getEditItem","getDeleteItem","getSelectItem","text","onclick","EventEmitter","emit","EventType","dialog","openBulkActionsMode","messageId","context","menuInstance","close","textarea","replyMessage","dialogId","showForwardPopup","messagesIds","trim","length","textToCopy","Parser","prepareCopy","Utils","copyToClipboard","BX","UI","Notification","Center","notify","content","getMessageLink","clipboard","copy","files","prepareCopyFile","canPin","PermissionManager","canPerformActionByRole","ActionByRole","pinMessage","isPinned","store","getters","chatId","messageService","MessageService","unpinMessage","isInFavorite","menuItemText","removeMessageFromFavorite","addMessageToFavorite","canUnread","viewed","isMarked","markedId","markMessage","items","getCreateTaskItem","getCreateMeetingItem","getMarketItems","entityCreator","EntityCreator","createTaskForMessage","createMeetingForMessage","editMessage","permissionManager","canDeleteOthersMessage","deleteOthersMessage","bind","placements","getAvailablePlacementsByType","PlacementType","contextMenu","marketMenuItem","push","forEach","placement","title","openSlider","itemLimit","slice","Type","isArrayFilled","successNotification","Analytics","messageFiles","onClickSaveOnDisk","save","then","delimiter","authorId","Core","getUserId","isDeleted","isStringFilled","forward","messageDelete","onClickDelete","deleteMessage","ChannelManager","isChannel","confirmResult","showDeleteChannelPostConfirm","onCancel","file","html","createDownloadLink","urlDownload","onClickDownload","map","fileId","downloadFiles","needToShowPopup","PromoManager","needToShow","PromoId","downloadSeveralFiles","browser","isChrome","platform","isBitrixDesktop","showDownloadAllFilesConfirm","markAsWatched","ObserverManager","observeMessage","messageElement","observe","unobserveMessage","unobserve","IntersectionObserver","entries","entry","target","rootBounds","messageIsFullyVisible","isIntersecting","intersectionRatio","messageTakesHalfOfViewport","intersectionRect","height","threshold","onMessageIsVisible","onMessageIsNotVisible","arrayWithZeros","Array","from","fill","zero","index","Number","dataset","DateGroupTitle","String","required","DateGroup","components","item","Object","computed","BlockType","dateGroup","forwardMessageComponents","Set","MessageComponent","copilotMessage","checkIn","FeedbackFormMessage","ImOpenLinesMessage","ImOpenLinesForm","MessageSelectButton","message","messageItem","selectedMessages","$store","bulkActionMessageLimit","settings","Extension","getSettings","get","isMessageSelected","isSelectionLimitReached","size","isRealMessage","canSelectMessage","has","componentId","onSelectMessage","showNotification","dispatch","AuthorGroup","MessageAvatar","contextDialogId","withAvatarMenu","emits","AvatarSize","contextDialog","contextUser","isUser","ChatType","user","isBulkActionsMode","authorGroup","authorDialogId","avatar","avatarId","firstMessageIdInAuthorGroup","messages","avatarMenuAvailable","authorUser","copilotManager","CopilotManager","isCopilotBot","isCurrentUser","isBotChat","UserType","bot","openAvatarMenu","containerClasses","classes","messageType","isNeeded","isAvatarNeeded","lastIndexMessageInGroup","onAvatarClick","event","$emit","$event","NewMessagesBlock","MarkedMessagesBlock","defaultMessages","EmptyState","onMessageClick","insertText","HistoryLimitBanner","noMessages","FeatureManager","chatHistory","getLimitTitle","subtitle","getLimitSubtitle","buttonText","getLearnMoreText","mounted","sendAnalytics","onButtonClick","historyLimit","onDialogBannerClick","openFeatureSlider","onDialogLimitExceeded","BlockManager","getAuthorBlock","userId","getMarkedBlock","markedMessages","getNewMessagesBlock","newMessages","toString","MessageType","system","self","opponent","isSystem","isSelf","alignment","getStore","Settings","appearance","DialogAlignment","center","Collection","hasDateTitle","dateTitle","addDateGroup","add","addAuthorGroup","addMessage","addMarkedIndicator","addNewMessagesIndicator","getLastAuthorId","DateManager","cachedDateGroups","getDateTitle","date","shortDate","DateFormatter","formatByTemplate","DateTemplate","timestampWithTimezoneOffset","getTime","getTimezoneOffset","localDateInJSON","Date","toJSON","INDEX_BETWEEN_DATE_AND_TIME","CollectionManager","firstIteration","dateManager","formatMessageCollection","messageCollection","collection","markedMessageId","isLastMessage","lastReadMessageId","inited","formatAuthorGroup","blockManager","lastMessageId","lastReadId","MessageComponents","DefaultMessage","FileMessage","SmileMessage","CallInviteMessage","DeletedMessage","SystemMessage","UnsupportedMessage","ChatCreationMessage","OwnChatCreationMessage","ChatCopilotCreationMessage","CopilotMessage","SupportVoteMessage","SupportSessionNumberMessage","SupportChatCreationMessage","ConferenceCreationMessage","ZoomInviteMessage","CheckInMessage","SupervisorUpdateFeatureMessage","SupervisorEnableFeatureMessage","ChatCopilotAddedUsersMessage","SignMessage","GeneralChatCreationMessage","GeneralChannelCreationMessage","ChannelCreationMessage","CallMessage","StartDialogMessage","HiddenMessage","VoteMessage","MessageList","directives","element","binding","instance","observer","beforeUnmount","DialogStatus","FadeAnimation","messageMenuClass","Function","windowFocused","messageMenuIsActiveForId","dialogInited","formattedCollection","getCollectionManager","isHistoryLimitExceeded","isAvailable","tariffRestrictions","showDialogStatus","some","showEmptyState","created","initContextMenu","initCollectionManager","initObserverManager","subscribeToEvents","unsubscribeFromEvents","subscribe","onClickMessageContextMenu","onMessageContextMenuClick","unsubscribe","insertTextQuote","Quote","prepareQuoteText","withNewLine","replace","insertMention","mentionText","mentionReplacement","getMentionBbCode","openReplyPanel","params","key","isAltOrOption","avatarMenu","openMenu","currentTarget","eventData","openMessageMenu","getData","isCombination","isCmdOrCtrl","messageMenu","onMessageMouseUp","waitForSelectionToUpdate","selection","window","getSelection","showQuoteButton","MessageMenuClass","events","onCloseMenu","getMessageComponentName","MessageComponentManager","getName","collectionManager"],"mappings":"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"}