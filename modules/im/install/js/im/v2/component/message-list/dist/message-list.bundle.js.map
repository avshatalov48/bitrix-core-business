{"version":3,"file":"message-list.bundle.js","sources":["../src/components/dialog-loader.js","../src/classes/message-component-manager.js","../src/classes/avatar-menu.js","../src/classes/message-menu.js","../src/components/block/date-group-title.js","../src/components/block/date-group.js","../src/components/block/author-group.js","../src/components/block/new-messages.js","../src/components/block/marked-messages.js","../src/components/empty-state.js","../src/classes/collection-manager.js","../src/utils/message-components.js","../src/message-list.js"],"sourcesContent":["import { type JsonObject } from 'main.core';\n\nimport '../css/dialog-loader.css';\n\n// @vue/component\nexport const DialogLoader = {\n\tname: 'DialogLoader',\n\tprops:\n\t{\n\t\tfullHeight: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-dialog-loader__container\" :class=\"{'--full-height': fullHeight}\">\n\t\t\t<div class=\"bx-im-dialog-loader__spinner\"></div>\n\t\t\t<div class=\"bx-im-dialog-loader__text\">{{ loc('IM_DIALOG_CHAT_LOADER_TEXT') }}</div>\n\t\t</div>\n\t`,\n};\n","import { Utils } from 'im.v2.lib.utils';\nimport { Core } from 'im.v2.application.core';\nimport { MessageComponent } from 'im.v2.const';\nimport { SmileManager } from 'im.v2.lib.smile-manager';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { ImModelMessage } from 'im.v2.model';\n\nconst serverComponentList = new Set([\n\tMessageComponent.unsupported,\n\tMessageComponent.chatCreation,\n\tMessageComponent.ownChatCreation,\n\tMessageComponent.conferenceCreation,\n\tMessageComponent.callInvite,\n\tMessageComponent.copilotCreation,\n\tMessageComponent.copilotMessage,\n\tMessageComponent.supportVote,\n\tMessageComponent.supportSessionNumber,\n\tMessageComponent.zoomInvite,\n\tMessageComponent.copilotAddedUsers,\n\tMessageComponent.supervisorUpdateFeature,\n\tMessageComponent.supervisorEnableFeature,\n\tMessageComponent.sign,\n]);\n\nexport class MessageComponentManager\n{\n\t#message: ImModelMessage;\n\t#store: Store;\n\n\tconstructor(message: ImModelMessage)\n\t{\n\t\tthis.#message = message;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tgetName(): $Values<typeof MessageComponent>\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn MessageComponent.deleted;\n\t\t}\n\n\t\tif (this.#isServerComponent())\n\t\t{\n\t\t\treturn this.#message.componentId;\n\t\t}\n\n\t\tif (this.#isSystemMessage())\n\t\t{\n\t\t\treturn MessageComponent.system;\n\t\t}\n\n\t\tif (this.#hasFiles())\n\t\t{\n\t\t\treturn MessageComponent.file;\n\t\t}\n\n\t\tif (this.#isEmojiOnly() || this.#hasSmilesOnly())\n\t\t{\n\t\t\treturn MessageComponent.smile;\n\t\t}\n\n\t\treturn MessageComponent.default;\n\t}\n\n\t#isServerComponent(): boolean\n\t{\n\t\treturn serverComponentList.has(this.#message.componentId);\n\t}\n\n\t#hasFiles(): boolean\n\t{\n\t\treturn this.#message.files.length > 0;\n\t}\n\n\t#hasText(): boolean\n\t{\n\t\treturn this.#message.text.length > 0;\n\t}\n\n\t#hasAttach(): boolean\n\t{\n\t\treturn this.#message.attach.length > 0;\n\t}\n\n\t#isEmptyMessage(): boolean\n\t{\n\t\treturn !this.#hasText() && !this.#hasFiles() && !this.#hasAttach();\n\t}\n\n\t#isDeletedMessage(): boolean\n\t{\n\t\treturn this.#message.isDeleted || this.#isEmptyMessage();\n\t}\n\n\t#isSystemMessage(): boolean\n\t{\n\t\treturn this.#message.authorId === 0;\n\t}\n\n\t#isEmojiOnly(): boolean\n\t{\n\t\tif (this.#message.replyId > 0)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#isForward())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.#hasOnlyText())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn Utils.text.isEmojiOnly(this.#message.text);\n\t}\n\n\t#hasSmilesOnly(): boolean\n\t{\n\t\tif (this.#message.replyId > 0)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.#isForward())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.#hasOnlyText())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// todo: need to sync with getSmileRatio in lib/parser/src/functions/smile.js\n\t\tconst smileManager = SmileManager.getInstance();\n\t\tconst smiles = smileManager.smileList?.smiles ?? [];\n\t\tconst sortedSmiles = [...smiles].sort((a, b) => {\n\t\t\treturn b.typing.localeCompare(a.typing);\n\t\t});\n\t\tconst pattern = sortedSmiles.map((smile) => {\n\t\t\treturn Utils.text.escapeRegex(smile.typing);\n\t\t}).join('|');\n\n\t\tconst replacedText = this.#message.text.replaceAll(new RegExp(pattern, 'g'), '');\n\t\tconst hasOnlySmiles = replacedText.trim().length === 0;\n\n\t\tconst matchOnlySmiles = new RegExp(`(?:(?:${pattern})\\\\s*){4,}`);\n\n\t\treturn hasOnlySmiles && !matchOnlySmiles.test(this.#message.text);\n\t}\n\n\t#hasOnlyText(): boolean\n\t{\n\t\tif (!this.#hasText())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !this.#hasFiles() && !this.#hasAttach();\n\t}\n\n\t#isForward(): boolean\n\t{\n\t\treturn this.#store.getters['messages/isForward'](this.#message.id);\n\t}\n}\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Messenger } from 'im.public';\nimport { BaseMenu } from 'im.v2.lib.menu';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { EventType, ChatActionType, ChatType } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { showKickUserConfirm } from 'im.v2.lib.confirm';\nimport { ChatService } from 'im.v2.provider.service';\n\nimport type { ImModelUser, ImModelChat } from 'im.v2.model';\nimport type { MenuItem } from 'im.v2.lib.menu';\n\ntype AvatarMenuContext = {\n\tuser: ImModelUser,\n\tdialog: ImModelChat\n};\n\nexport class AvatarMenu extends BaseMenu\n{\n\tcontext: AvatarMenuContext;\n\tpermissionManager: PermissionManager;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.id = 'bx-im-avatar-context-menu';\n\t\tthis.permissionManager = PermissionManager.getInstance();\n\t}\n\n\tgetMenuOptions(): Object\n\t{\n\t\treturn {\n\t\t\t...super.getMenuOptions(),\n\t\t\tclassName: this.getMenuClassName(),\n\t\t\tangle: true,\n\t\t\toffsetLeft: 21,\n\t\t};\n\t}\n\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getMentionItem(),\n\t\t\tthis.getSendItem(),\n\t\t\tthis.getProfileItem(),\n\t\t\tthis.getKickItem(),\n\t\t];\n\t}\n\n\tgetMentionItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_AVATAR_MENU_MENTION_2'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.insertMention, {\n\t\t\t\t\tmentionText: this.context.user.name,\n\t\t\t\t\tmentionReplacement: Utils.text.getMentionBbCode(this.context.user.id, this.context.user.name),\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetSendItem(): ?MenuItem\n\t{\n\t\tif (this.context.dialog.type === ChatType.user)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_AVATAR_MENU_SEND_MESSAGE'),\n\t\t\tonclick: () => {\n\t\t\t\tMessenger.openChat(this.context.user.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetProfileItem(): ?MenuItem\n\t{\n\t\tif (this.isBot())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_AVATAR_MENU_OPEN_PROFILE'),\n\t\t\thref: Utils.user.getProfileLink(this.context.user.id),\n\t\t\tonclick: () => {\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetKickItem(): ?MenuItem\n\t{\n\t\tconst canKick = this.permissionManager.canPerformAction(ChatActionType.kick, this.context.dialog.dialogId);\n\t\tif (!canKick)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_AVATAR_MENU_KICK'),\n\t\t\tonclick: async () => {\n\t\t\t\tthis.menuInstance.close();\n\t\t\t\tconst userChoice = await showKickUserConfirm();\n\t\t\t\tif (userChoice === true)\n\t\t\t\t{\n\t\t\t\t\tconst chatService = new ChatService();\n\t\t\t\t\tchatService.kickUserFromChat(this.context.dialog.dialogId, this.context.user.id);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\tisUser(): boolean\n\t{\n\t\treturn this.store.getters['chats/isUser'](this.context.user.id);\n\t}\n\n\tisBot(): boolean\n\t{\n\t\tif (!this.isUser())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst user: ImModelUser = this.store.getters['users/get'](this.context.user.id);\n\n\t\treturn user.bot === true;\n\t}\n}\n","import { Loc, Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { BaseMenu } from 'im.v2.lib.menu';\nimport { Parser } from 'im.v2.lib.parser';\nimport { EntityCreator } from 'im.v2.lib.entity-creator';\nimport { MessageService, DiskService } from 'im.v2.provider.service';\nimport { EventType, PlacementType } from 'im.v2.const';\nimport { MarketManager } from 'im.v2.lib.market';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport '../css/message-menu.css';\n\nimport 'ui.notification';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\nimport type { ImModelMessage, ImModelChat, ImModelFile } from 'im.v2.model';\n\nexport class MessageMenu extends BaseMenu\n{\n\tcontext: ImModelMessage & {dialogId: string};\n\tdiskService: DiskService;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis.id = 'bx-im-message-context-menu';\n\t\tthis.diskService = new DiskService();\n\t\tthis.marketManager = MarketManager.getInstance();\n\t}\n\n\tgetMenuOptions(): Object\n\t{\n\t\treturn {\n\t\t\t...super.getMenuOptions(),\n\t\t\tclassName: this.getMenuClassName(),\n\t\t\tangle: true,\n\t\t\toffsetLeft: 11,\n\t\t};\n\t}\n\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getReplyItem(),\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getCopyFileItem(),\n\t\t\tthis.getPinItem(),\n\t\t\tthis.getForwardItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getMarkItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getCreateItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDownloadFileItem(),\n\t\t\tthis.getSaveToDisk(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getEditItem(),\n\t\t\tthis.getDeleteItem(),\n\t\t];\n\t}\n\n\tgetReplyItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_REPLY'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.replyMessage, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetForwardItem(): ?MenuItem\n\t{\n\t\tif (this.#isDeletedMessage() || Type.isString(this.context.id))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_FORWARD'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.dialog.showForwardPopup, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCopyItem(): ?MenuItem\n\t{\n\t\tif (this.context.text.trim().length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY'),\n\t\t\tonclick: () => {\n\t\t\t\tconst textToCopy = Parser.prepareCopy(this.context);\n\t\t\t\tif (BX.clipboard?.copy(textToCopy))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_SUCCESS'),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCopyFileItem(): ?MenuItem\n\t{\n\t\tif (this.context.files.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_FILE'),\n\t\t\tonclick: () => {\n\t\t\t\tconst textToCopy = Parser.prepareCopyFile(this.context);\n\t\t\t\tif (BX.clipboard?.copy(textToCopy))\n\t\t\t\t{\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_COPY_FILE_SUCCESS'),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetPinItem(): MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isPinned = this.store.getters['messages/pin/isPinned']({\n\t\t\tchatId: this.context.chatId,\n\t\t\tmessageId: this.context.id,\n\t\t});\n\n\t\treturn {\n\t\t\ttext: isPinned ? Loc.getMessage('IM_DIALOG_CHAT_MENU_UNPIN') : Loc.getMessage('IM_DIALOG_CHAT_MENU_PIN'),\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tif (isPinned)\n\t\t\t\t{\n\t\t\t\t\tmessageService.unpinMessage(this.context.chatId, this.context.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmessageService.pinMessage(this.context.chatId, this.context.id);\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetFavoriteItem(): MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isInFavorite = this.store.getters['sidebar/favorites/isFavoriteMessage'](this.context.chatId, this.context.id);\n\n\t\tconst menuItemText = isInFavorite\n\t\t\t? Loc.getMessage('IM_DIALOG_CHAT_MENU_REMOVE_FROM_SAVED')\n\t\t\t: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE')\n\t\t;\n\n\t\treturn {\n\t\t\ttext: menuItemText,\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tif (isInFavorite)\n\t\t\t\t{\n\t\t\t\t\tmessageService.removeMessageFromFavorite(this.context.id);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tmessageService.addMessageToFavorite(this.context.id);\n\t\t\t\t}\n\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMarkItem(): ?MenuItem\n\t{\n\t\tconst canUnread = this.context.viewed && !this.#isOwnMessage();\n\n\t\tconst dialog: ImModelChat = this.store.getters['chats/getByChatId'](this.context.chatId);\n\t\tconst isMarked = this.context.id === dialog.markedId;\n\t\tif (!canUnread || isMarked)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_MARK'),\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tmessageService.markMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCreateItem(): MenuItem\n\t{\n\t\tif (this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE'),\n\t\t\titems: [\n\t\t\t\tthis.getCreateTaskItem(),\n\t\t\t\tthis.getCreateMeetingItem(),\n\t\t\t\t...this.getMarketItems(),\n\t\t\t],\n\t\t};\n\t}\n\n\tgetCreateTaskItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE_TASK'),\n\t\t\tonclick: () => {\n\t\t\t\tconst entityCreator = new EntityCreator(this.context.chatId);\n\t\t\t\tvoid entityCreator.createTaskForMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetCreateMeetingItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_CREATE_MEETING'),\n\t\t\tonclick: () => {\n\t\t\t\tconst entityCreator = new EntityCreator(this.context.chatId);\n\t\t\t\tvoid entityCreator.createMeetingForMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetEditItem(): ?MenuItem\n\t{\n\t\tif (!this.#isOwnMessage() || this.#isDeletedMessage() || this.#isForwardedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_EDIT'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.textarea.editMessage, {\n\t\t\t\t\tmessageId: this.context.id,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetDeleteItem(): ?MenuItem\n\t{\n\t\tif (!this.#isOwnMessage() || this.#isDeletedMessage())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_DELETE'),\n\t\t\tclassName: 'menu-popup-no-icon bx-im-dialog-chat__message-menu_delete',\n\t\t\tonclick: () => {\n\t\t\t\tconst messageService = new MessageService({ chatId: this.context.chatId });\n\t\t\t\tvoid messageService.deleteMessage(this.context.id);\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tgetMarketItems(): MenuItem[]\n\t{\n\t\tconst { dialogId, id } = this.context;\n\t\tconst placements = this.marketManager.getAvailablePlacementsByType(PlacementType.contextMenu, dialogId);\n\t\tconst marketMenuItem = [];\n\t\tif (placements.length > 0)\n\t\t{\n\t\t\tmarketMenuItem.push(this.getDelimiter());\n\t\t}\n\n\t\tconst context = { messageId: id, dialogId };\n\n\t\tplacements.forEach((placement) => {\n\t\t\tmarketMenuItem.push({\n\t\t\t\ttext: placement.title,\n\t\t\t\tonclick: () => {\n\t\t\t\t\tMarketManager.openSlider(placement, context);\n\t\t\t\t\tthis.menuInstance.close();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\n\t\t// (10 items + 1 delimiter), because we don't want to show long context menu.\n\t\tconst itemLimit = 11;\n\n\t\treturn marketMenuItem.slice(0, itemLimit);\n\t}\n\n\tgetDownloadFileItem(): ?MenuItem\n\t{\n\t\tconst file = this.#getMessageFile();\n\t\tif (!file)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\thtml: Utils.file.createDownloadLink(\n\t\t\t\tLoc.getMessage('IM_DIALOG_CHAT_MENU_DOWNLOAD_FILE'),\n\t\t\t\tfile.urlDownload,\n\t\t\t\tfile.name,\n\t\t\t),\n\t\t\tonclick: function() {\n\t\t\t\tthis.menuInstance.close();\n\t\t\t}.bind(this),\n\t\t};\n\t}\n\n\tgetSaveToDisk(): ?MenuItem\n\t{\n\t\tconst file = this.#getMessageFile();\n\t\tif (!file)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE_ON_DISK'),\n\t\t\tonclick: function() {\n\t\t\t\tvoid this.diskService.save(file.id).then(() => {\n\t\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\t\tcontent: Loc.getMessage('IM_DIALOG_CHAT_MENU_SAVE_ON_DISK_SUCCESS'),\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t}.bind(this),\n\t\t};\n\t}\n\n\tgetDelimiter(): MenuItem\n\t{\n\t\treturn {\n\t\t\tdelimiter: true,\n\t\t};\n\t}\n\n\t#isOwnMessage(): boolean\n\t{\n\t\treturn this.context.authorId === Core.getUserId();\n\t}\n\n\t#isDeletedMessage(): boolean\n\t{\n\t\treturn this.context.isDeleted;\n\t}\n\n\t#getMessageFile(): ?ImModelFile\n\t{\n\t\tif (this.context.files.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\t// for now, we have only one file in one message. In the future we need to change this logic.\n\t\treturn this.store.getters['files/get'](this.context.files[0]);\n\t}\n\n\t#isForwardedMessage(): boolean\n\t{\n\t\treturn Type.isStringFilled(this.context.forward.id);\n\t}\n}\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const DateGroupTitle = {\n\tprops:\n\t{\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-date-group-title__container\">\n\t\t\t<div class=\"bx-im-message-list-date-group-title__text\">{{ title }}</div>\n\t\t</div>\n\t`,\n};\n","import { DialogBlockType as BlockType } from 'im.v2.const';\n\nimport { DateGroupTitle } from './date-group-title';\n\nimport { type FormattedCollectionItem } from '../../classes/collection-manager';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const DateGroup = {\n\tname: 'DateGroup',\n\tcomponents: { DateGroupTitle },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tBlockType: () => BlockType,\n\t\tdateGroup(): FormattedCollectionItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-date-group__container\">\n\t\t\t<DateGroupTitle :title=\"dateGroup.date.title\" />\n\t\t\t<template v-for=\"dateGroupItem in dateGroup.items\" >\n\t\t\t\t<slot\n\t\t\t\t\tname=\"dateGroupItem\"\n\t\t\t\t\t:dateGroupItem=\"dateGroupItem\"\n\t\t\t\t\t:isMarkedBlock=\"dateGroupItem.type === BlockType.markedMessages\"\n\t\t\t\t\t:isNewMessagesBlock=\"dateGroupItem.type === BlockType.newMessages\"\n\t\t\t\t\t:isAuthorBlock=\"dateGroupItem.type === BlockType.authorGroup\"\n\t\t\t\t></slot>\n\t\t\t</template>\n\t\t</div>\n\t`,\n};\n","import { Avatar, AvatarSize } from 'im.v2.component.elements';\n\nimport type { JsonObject } from 'main.core';\n\nimport type { AuthorGroupItem } from '../../classes/collection-manager';\n\n// @vue/component\nexport const AuthorGroup = {\n\tname: 'AuthorGroup',\n\tcomponents: { Avatar },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['avatarClick'],\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tauthorGroup(): AuthorGroupItem\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonAvatarClick(event: PointerEvent): void\n\t\t{\n\t\t\tthis.$emit('avatarClick', {\n\t\t\t\tdialogId: this.authorGroup.avatar.avatarId,\n\t\t\t\t$event: event,\n\t\t\t});\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-author-group__container\" :class=\"'--' + authorGroup.messageType\">\n\t\t\t<div v-if=\"authorGroup.avatar.isNeeded\" class=\"bx-im-message-list-author-group__avatar\">\n\t\t\t\t<Avatar\n\t\t\t\t\t:dialogId=\"authorGroup.avatar.avatarId\"\n\t\t\t\t\t:size=\"AvatarSize.L\"\n\t\t\t\t\t@click=\"onAvatarClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-message-list__content\">\n\t\t\t\t<template v-for=\"(message, index) in authorGroup.items\">\n\t\t\t\t\t<slot name=\"message\" :message=\"message\" :index=\"index\"></slot>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const NewMessagesBlock = {\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-new-message__container\">\n\t\t\t<div class=\"bx-im-message-list-new-message__text\">\n\t\t\t\t{{ loc('IM_DIALOG_CHAT_BLOCK_NEW_MESSAGES_2') }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\n// @vue/component\nexport const MarkedMessagesBlock = {\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-new-message__container\">\n\t\t\t<div class=\"bx-im-message-list-new-message__text\">\n\t\t\t\t{{ loc('IM_DIALOG_CHAT_BLOCK_MARKED_MESSAGES') }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { EventType } from 'im.v2.const';\n\nimport '../css/empty-state.css';\n\nimport type { JsonObject } from 'main.core';\n\nconst defaultMessages = [\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_1'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_2'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_3'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_4'),\n\tLoc.getMessage('IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_5'),\n];\n\n// @vue/component\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tdefaultMessages: () => defaultMessages,\n\t},\n\tmethods:\n\t{\n\t\tonMessageClick(text: string): void\n\t\t{\n\t\t\tEventEmitter.emit(EventType.textarea.insertText, { text });\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list-empty-state__container\">\n\t\t\t<div class=\"bx-im-message-list-empty-state__content\">\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__icon\"></div>\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__title\">{{ loc('IM_MESSAGE_LIST_EMPTY_STATE_TITLE') }}</div>\n\t\t\t\t<div class=\"bx-im-message-list-empty-state__action-list\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for=\"(message, index) in defaultMessages\"\n\t\t\t\t\t\t:key=\"index\"\n\t\t\t\t\t\t@click=\"onMessageClick(message)\"\n\t\t\t\t\t\tclass=\"bx-im-message-list-empty-state__action-list_item\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ message }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { DialogBlockType as BlockType, MessageType, Settings, DialogAlignment } from 'im.v2.const';\nimport { DateFormatter, DateTemplate } from 'im.v2.lib.date-formatter';\n\nimport type { ImModelMessage, ImModelChat } from 'im.v2.model';\n\nexport type FormattedCollectionItem = {\n\ttype: BlockType.dateGroup,\n\tdate: {\n\t\tid: string,\n\t\ttitle: string\n\t},\n\titems: Array<AuthorGroupItem | NewMessagesItem | MarkedMessageItem>\n};\n\nexport type AuthorGroupItem = {\n\ttype: BlockType.authorGroup,\n\tuserId: number,\n\tmessageType: MessageType.opponent | MessageType.self | MessageType.system,\n\tavatar: {\n\t\tisNeeded: boolean,\n\t\tavatarId: string\n\t},\n\titems: ImModelMessage[]\n};\n\nexport type NewMessagesItem = {\n\ttype: BlockType.newMessages\n};\n\nexport type MarkedMessageItem = {\n\ttype: BlockType.markedMessages\n};\n\nexport class CollectionManager\n{\n\tstore: Object;\n\tdialogId: number;\n\tfirstIteration: boolean = true;\n\tinitialLastReadMessage: boolean;\n\tinitialMarkedId: boolean;\n\tcachedDateGroups: {\n\t\tid: number,\n\t\ttitle: string\n\t} = {};\n\n\tconstructor(dialogId)\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.dialogId = dialogId;\n\t}\n\n\tformatMessageCollection(messageCollection: ImModelMessage[]): FormattedCollectionItem[]\n\t{\n\t\tconst dateGroups = {};\n\t\tconst collection = [];\n\t\tlet lastDateItems = null;\n\t\tlet lastAuthorId = null;\n\t\tlet lastAuthorItems = null;\n\n\t\tconst dialog: ImModelChat = this.store.getters['chats/get'](this.dialogId);\n\t\tconst { markedId, inited } = dialog;\n\t\tlet markInserted = false;\n\t\tconst lastReadId = this.store.getters['chats/getLastReadId'](this.dialogId);\n\n\t\tif (this.firstIteration)\n\t\t{\n\t\t\tthis.initialLastReadMessage = lastReadId;\n\t\t\tthis.initialMarkedId = markedId;\n\t\t}\n\n\t\tif (markedId !== this.initialMarkedId && markedId !== 0)\n\t\t{\n\t\t\tthis.initialMarkedId = markedId;\n\t\t\tthis.initialLastReadMessage = null;\n\t\t}\n\n\t\tmessageCollection.forEach((message: ImModelMessage, index) => {\n\t\t\tconst dateGroup = this.getDateGroup(message.date);\n\t\t\t// new date = new date group + new author group\n\t\t\tif (!dateGroups[dateGroup.title])\n\t\t\t{\n\t\t\t\tdateGroups[dateGroup.title] = dateGroup.id;\n\t\t\t\tlastDateItems = [];\n\t\t\t\tcollection.push({\n\t\t\t\t\ttype: BlockType.dateGroup,\n\t\t\t\t\tdate: dateGroup,\n\t\t\t\t\titems: lastDateItems\n\t\t\t\t});\n\t\t\t\tlastAuthorId = null;\n\t\t\t}\n\n\t\t\t// marked messages\n\t\t\tif (message.id === this.initialMarkedId)\n\t\t\t{\n\t\t\t\tlastDateItems.push({\n\t\t\t\t\ttype: BlockType.markedMessages\n\t\t\t\t});\n\t\t\t\tlastAuthorId = null;\n\t\t\t\tmarkInserted = true;\n\t\t\t}\n\n\t\t\t// new author = new author group\n\t\t\tif (message.authorId !== lastAuthorId)\n\t\t\t{\n\t\t\t\tlastAuthorId = message.authorId;\n\t\t\t\tlastAuthorItems = [];\n\n\t\t\t\tlastDateItems.push({\n\t\t\t\t\ttype: BlockType.authorGroup,\n\t\t\t\t\tuserId: message.authorId,\n\t\t\t\t\tavatar: this.getAvatarConfig(message),\n\t\t\t\t\tmessageType: this.getMessageType(message),\n\t\t\t\t\titems: lastAuthorItems\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// add current message to last active author group\n\t\t\tlastAuthorItems.push(message);\n\n\t\t\t// new messages block\n\t\t\tconst isLastMessage = index === messageCollection.length - 1;\n\t\t\tif (!markInserted && !isLastMessage && message.id === this.initialLastReadMessage)\n\t\t\t{\n\t\t\t\tlastDateItems.push({\n\t\t\t\t\ttype: BlockType.newMessages\n\t\t\t\t});\n\t\t\t\tlastAuthorId = null;\n\t\t\t}\n\t\t});\n\n\t\tif (inited)\n\t\t{\n\t\t\tthis.firstIteration = false;\n\t\t}\n\n\n\t\treturn collection;\n\t}\n\n\tgetDateGroup(date: Date): {id: number, title: string}\n\t{\n\t\tconst INDEX_BETWEEN_DATE_AND_TIME = 10;\n\t\t// 2022-10-25T14:58:44.000Z => 2022-10-25\n\t\tconst shortDate = date.toJSON().slice(0, INDEX_BETWEEN_DATE_AND_TIME);\n\t\tif (this.cachedDateGroups[shortDate])\n\t\t{\n\t\t\treturn this.cachedDateGroups[shortDate];\n\t\t}\n\n\t\tthis.cachedDateGroups[shortDate] = {\n\t\t\tid: shortDate,\n\t\t\ttitle: DateFormatter.formatByTemplate(date, DateTemplate.dateGroup)\n\t\t};\n\n\t\treturn this.cachedDateGroups[shortDate];\n\t}\n\n\tgetAvatarConfig(message: ImModelMessage): {isNeeded: boolean, avatarId: string}\n\t{\n\t\tconst messageType = this.getMessageType(message);\n\t\tconst isSystem = messageType === MessageType.system;\n\t\tconst isSelf = messageType === MessageType.self;\n\n\t\tconst alignment = this.store.getters['application/settings/get'](Settings.appearance.alignment);\n\t\tlet isNeeded = true;\n\t\tif (alignment === DialogAlignment.left)\n\t\t{\n\t\t\tisNeeded = !isSystem;\n\t\t}\n\t\telse if (alignment === DialogAlignment.center)\n\t\t{\n\t\t\tisNeeded = !isSelf && !isSystem;\n\t\t}\n\n\t\treturn {\n\t\t\tisNeeded,\n\t\t\tavatarId: message.authorId.toString(),\n\t\t};\n\t}\n\n\tgetMessageType(message: ImModelMessage): string\n\t{\n\t\tif (!message.authorId)\n\t\t{\n\t\t\treturn MessageType.system;\n\t\t}\n\n\t\tif (message.authorId === Core.getUserId())\n\t\t{\n\t\t\treturn MessageType.self;\n\t\t}\n\n\t\treturn MessageType.opponent;\n\t}\n}\n","import { FileMessage } from 'im.v2.component.message.file';\nimport { DefaultMessage } from 'im.v2.component.message.default';\nimport { CallInviteMessage } from 'im.v2.component.message.call-invite';\nimport { DeletedMessage } from 'im.v2.component.message.deleted';\nimport { UnsupportedMessage } from 'im.v2.component.message.unsupported';\nimport { SmileMessage } from 'im.v2.component.message.smile';\nimport { SystemMessage } from 'im.v2.component.message.system';\nimport { ChatCreationMessage } from 'im.v2.component.message.chat-creation';\nimport { ChatCopilotCreationMessage } from 'im.v2.component.message.copilot.creation';\nimport { CopilotMessage } from 'im.v2.component.message.copilot.answer';\nimport { ChatCopilotAddedUsersMessage } from 'im.v2.component.message.copilot.added-users';\nimport { SupportVoteMessage } from 'im.v2.component.message.support.vote';\nimport { SupportSessionNumberMessage } from 'im.v2.component.message.support.session-number';\nimport { ConferenceCreationMessage } from 'im.v2.component.message.conference-creation';\nimport { SupervisorUpdateFeatureMessage } from 'im.v2.component.message.supervisor.update-feature';\nimport { SupervisorEnableFeatureMessage } from 'im.v2.component.message.supervisor.enable-feature';\nimport { SignMessage } from 'im.v2.component.message.sign';\nimport { OwnChatCreationMessage } from 'im.v2.component.message.own-chat-creation';\nimport { ZoomInviteMessage } from 'im.v2.component.message.zoom-invite';\n\nexport const messageComponents = {\n\tDefaultMessage,\n\tFileMessage,\n\tSmileMessage,\n\tCallInviteMessage,\n\tDeletedMessage,\n\tSystemMessage,\n\tUnsupportedMessage,\n\tChatCreationMessage,\n\tOwnChatCreationMessage,\n\tChatCopilotCreationMessage,\n\tCopilotMessage,\n\tSupportVoteMessage,\n\tSupportSessionNumberMessage,\n\tConferenceCreationMessage,\n\tZoomInviteMessage,\n\tSupervisorUpdateFeatureMessage,\n\tSupervisorEnableFeatureMessage,\n\tChatCopilotAddedUsersMessage,\n\tSignMessage,\n};\n","import { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, EventType, MessageComponent } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { DialogStatus } from 'im.v2.component.elements';\n\nimport { DialogLoader } from './components/dialog-loader';\nimport { MessageComponentManager } from './classes/message-component-manager';\nimport { AvatarMenu } from './classes/avatar-menu';\nimport { MessageMenu } from './classes/message-menu';\n\nimport { DateGroup } from './components/block/date-group';\nimport { AuthorGroup } from './components/block/author-group';\nimport { NewMessagesBlock } from './components/block/new-messages';\nimport { MarkedMessagesBlock } from './components/block/marked-messages';\nimport { EmptyState } from './components/empty-state';\nimport { CollectionManager, type FormattedCollectionItem } from './classes/collection-manager';\nimport { messageComponents } from './utils/message-components';\n\nimport './css/message-list.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { BitrixVueComponentProps } from 'ui.vue3';\nimport type { ImModelChat, ImModelMessage, ImModelUser } from 'im.v2.model';\n\n// @vue/component\nexport const MessageList = {\n\tname: 'MessageList',\n\tdirectives: {\n\t\t'message-observer': {\n\t\t\tmounted(element, binding)\n\t\t\t{\n\t\t\t\tbinding.instance.observer.observeMessage(element);\n\t\t\t},\n\t\t\tbeforeUnmount(element, binding)\n\t\t\t{\n\t\t\t\tbinding.instance.observer.unobserveMessage(element);\n\t\t\t},\n\t\t},\n\t},\n\tcomponents: {\n\t\tDateGroup,\n\t\tAuthorGroup,\n\t\tNewMessagesBlock,\n\t\tMarkedMessagesBlock,\n\t\tDialogStatus,\n\t\tDialogLoader,\n\t\tEmptyState,\n\t\t...messageComponents,\n\t},\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tmessages: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t\tobserver: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['showQuoteButton'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tmessageMenuIsActiveForId: 0,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tuser(): ImModelUser\n\t\t{\n\t\t\treturn this.$store.getters['users/get'](this.dialogId, true);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.user;\n\t\t},\n\t\tdialogInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tmessageCollection(): ImModelMessage[]\n\t\t{\n\t\t\treturn this.messages;\n\t\t},\n\t\tformattedCollection(): FormattedCollectionItem[]\n\t\t{\n\t\t\tif (!this.dialogInited && this.messageCollection.length === 0)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn this.getCollectionManager().formatMessageCollection(this.messageCollection);\n\t\t},\n\t\tnoMessages(): boolean\n\t\t{\n\t\t\treturn this.formattedCollection.length === 0;\n\t\t},\n\t\tshowDialogStatus(): boolean\n\t\t{\n\t\t\treturn this.messageCollection.some((message) => {\n\t\t\t\treturn message.id === this.dialog.lastMessageId;\n\t\t\t});\n\t\t},\n\t\tstatusComponent(): BitrixVueComponentProps\n\t\t{\n\t\t\treturn DialogStatus;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.initContextMenu();\n\t\tthis.initCollectionManager();\n\t},\n\tmounted()\n\t{\n\t\tthis.subscribeToEvents();\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.unsubscribeFromEvents();\n\t},\n\tmethods:\n\t{\n\t\tneedToShowAvatarMenuFor(user: ImModelUser): boolean\n\t\t{\n\t\t\tif (!user)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst isCurrentUser = user.id === Core.getUserId();\n\t\t\tconst isBotChat = this.isUser && this.user.bot === true;\n\n\t\t\treturn !isCurrentUser && !isBotChat;\n\t\t},\n\t\tsubscribeToEvents(): void\n\t\t{\n\t\t\tEventEmitter.subscribe(EventType.dialog.onClickMessageContextMenu, this.onMessageContextMenuClick);\n\t\t},\n\t\tunsubscribeFromEvents(): void\n\t\t{\n\t\t\tEventEmitter.unsubscribe(EventType.dialog.onClickMessageContextMenu, this.onMessageContextMenuClick);\n\t\t},\n\t\tinitCollectionManager()\n\t\t{\n\t\t\tthis.getCollectionManager();\n\t\t},\n\t\tinitContextMenu()\n\t\t{\n\t\t\tthis.messageMenu = new MessageMenu();\n\t\t\tthis.messageMenu.subscribe(MessageMenu.events.onCloseMenu, () => {\n\t\t\t\tthis.messageMenuIsActiveForId = 0;\n\t\t\t});\n\n\t\t\tthis.avatarMenu = new AvatarMenu();\n\t\t},\n\t\tonAvatarClick(params: { dialogId: string, $event: PointerEvent })\n\t\t{\n\t\t\tconst { dialogId, $event: event } = params;\n\t\t\tconst user: ImModelUser = this.$store.getters['users/get'](dialogId);\n\t\t\tif (!this.needToShowAvatarMenuFor(user))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Utils.key.isAltOrOption(event))\n\t\t\t{\n\t\t\t\tEventEmitter.emit(EventType.textarea.insertMention, {\n\t\t\t\t\tmentionText: user.name,\n\t\t\t\t\tmentionReplacement: Utils.text.getMentionBbCode(user.id, user.name),\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.avatarMenu.openMenu({ user, dialog: this.dialog }, event.currentTarget);\n\t\t},\n\t\tonMessageContextMenuClick(eventData: BaseEvent<{ message: ImModelMessage, event: PointerEvent }>)\n\t\t{\n\t\t\tconst { message, event } = eventData.getData();\n\n\t\t\tconst context = { dialogId: this.dialogId, ...message };\n\t\t\tthis.messageMenu.openMenu(context, event.currentTarget);\n\t\t\tthis.messageMenuIsActiveForId = message.id;\n\t\t},\n\t\tasync onMessageMouseUp(message: ImModelMessage, event: MouseEvent)\n\t\t{\n\t\t\tawait Utils.browser.waitForSelectionToUpdate();\n\t\t\tconst selection = window.getSelection().toString().trim();\n\t\t\tif (selection.length === 0 || this.isGuest)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.$emit('showQuoteButton', message, event);\n\t\t},\n\t\tgetMessageComponentName(message: ImModelMessage): $Values<typeof MessageComponent>\n\t\t{\n\t\t\treturn (new MessageComponentManager(message)).getName();\n\t\t},\n\t\tgetCollectionManager(): CollectionManager\n\t\t{\n\t\t\tif (!this.collectionManager)\n\t\t\t{\n\t\t\t\tthis.collectionManager = new CollectionManager(this.dialogId);\n\t\t\t}\n\n\t\t\treturn this.collectionManager;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-list__container\">\n\t\t\t<DialogLoader v-if=\"!dialogInited\" :fullHeight=\"noMessages\" />\n\t\t\t<EmptyState v-else-if=\"noMessages && isUser\" />\n\t\t\t<DateGroup v-for=\"dateGroup in formattedCollection\" :key=\"dateGroup.date.id\" :item=\"dateGroup\">\n\t\t\t\t<!-- Slot for every date group item -->\n\t\t\t\t<template #dateGroupItem=\"{ dateGroupItem, isMarkedBlock, isNewMessagesBlock, isAuthorBlock }\">\n\t\t\t\t\t<MarkedMessagesBlock v-if=\"isMarkedBlock\" data-id=\"newMessages\" />\n\t\t\t\t\t<NewMessagesBlock v-else-if=\"isNewMessagesBlock\" data-id=\"newMessages\" />\n\t\t\t\t\t<AuthorGroup v-else-if=\"isAuthorBlock\" :item=\"dateGroupItem\" @avatarClick=\"onAvatarClick\">\n\t\t\t\t\t\t<!-- Slot for every message -->\n\t\t\t\t\t\t<template #message=\"{ message, index }\">\n\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\tv-message-observer\n\t\t\t\t\t\t\t\t:is=\"getMessageComponentName(message)\"\n\t\t\t\t\t\t\t\t:withTitle=\"index === 0\"\n\t\t\t\t\t\t\t\t:item=\"message\"\n\t\t\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t\t\t:key=\"message.id\"\n\t\t\t\t\t\t\t\t:menuIsActiveForId=\"messageMenuIsActiveForId\"\n\t\t\t\t\t\t\t\t:data-viewed=\"message.viewed\"\n\t\t\t\t\t\t\t\t@mouseup=\"onMessageMouseUp(message, $event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</component>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</AuthorGroup>\n\t\t\t\t</template>\n\t\t\t</DateGroup>\n\t\t\t<component :is=\"statusComponent\" v-if=\"showDialogStatus\" :dialogId=\"dialogId\" />\n\t\t</div>\n\t`,\n};\n"],"names":["DialogLoader","name","props","fullHeight","type","Boolean","default","data","methods","loc","phraseCode","$Bitrix","Loc","getMessage","template","serverComponentList","Set","MessageComponent","unsupported","chatCreation","ownChatCreation","conferenceCreation","callInvite","copilotCreation","copilotMessage","supportVote","supportSessionNumber","zoomInvite","copilotAddedUsers","supervisorUpdateFeature","supervisorEnableFeature","sign","MessageComponentManager","constructor","message","Core","getStore","getName","deleted","componentId","system","file","smile","has","files","length","text","attach","isDeleted","authorId","replyId","Utils","isEmojiOnly","smileManager","SmileManager","getInstance","smiles","smileList","sortedSmiles","sort","a","b","typing","localeCompare","pattern","map","escapeRegex","join","replacedText","replaceAll","RegExp","hasOnlySmiles","trim","matchOnlySmiles","test","getters","id","AvatarMenu","BaseMenu","permissionManager","PermissionManager","getMenuOptions","className","getMenuClassName","angle","offsetLeft","getMenuItems","getMentionItem","getSendItem","getProfileItem","getKickItem","onclick","EventEmitter","emit","EventType","textarea","insertMention","mentionText","context","user","mentionReplacement","getMentionBbCode","menuInstance","close","dialog","ChatType","Messenger","openChat","isBot","href","getProfileLink","canKick","canPerformAction","ChatActionType","kick","dialogId","userChoice","showKickUserConfirm","chatService","ChatService","kickUserFromChat","isUser","store","bot","MessageMenu","diskService","DiskService","marketManager","MarketManager","getReplyItem","getCopyItem","getCopyFileItem","getPinItem","getForwardItem","getDelimiter","getMarkItem","getFavoriteItem","getCreateItem","getDownloadFileItem","getSaveToDisk","getEditItem","getDeleteItem","replyMessage","messageId","Type","isString","showForwardPopup","textToCopy","Parser","prepareCopy","BX","clipboard","copy","UI","Notification","Center","notify","content","prepareCopyFile","isPinned","chatId","messageService","MessageService","unpinMessage","pinMessage","isInFavorite","menuItemText","removeMessageFromFavorite","addMessageToFavorite","canUnread","viewed","isMarked","markedId","markMessage","items","getCreateTaskItem","getCreateMeetingItem","getMarketItems","entityCreator","EntityCreator","createTaskForMessage","createMeetingForMessage","editMessage","deleteMessage","placements","getAvailablePlacementsByType","PlacementType","contextMenu","marketMenuItem","push","forEach","placement","title","openSlider","itemLimit","slice","html","createDownloadLink","urlDownload","bind","save","then","delimiter","getUserId","isStringFilled","forward","DateGroupTitle","String","required","DateGroup","components","item","Object","computed","BlockType","dateGroup","AuthorGroup","Avatar","emits","AvatarSize","authorGroup","onAvatarClick","event","$emit","avatar","avatarId","$event","NewMessagesBlock","MarkedMessagesBlock","defaultMessages","EmptyState","onMessageClick","insertText","CollectionManager","firstIteration","cachedDateGroups","formatMessageCollection","messageCollection","dateGroups","collection","lastDateItems","lastAuthorId","lastAuthorItems","inited","markInserted","lastReadId","initialLastReadMessage","initialMarkedId","index","getDateGroup","date","markedMessages","userId","getAvatarConfig","messageType","getMessageType","isLastMessage","newMessages","INDEX_BETWEEN_DATE_AND_TIME","shortDate","toJSON","DateFormatter","formatByTemplate","DateTemplate","isSystem","MessageType","isSelf","self","alignment","Settings","appearance","isNeeded","DialogAlignment","left","center","toString","opponent","messageComponents","DefaultMessage","FileMessage","SmileMessage","CallInviteMessage","DeletedMessage","SystemMessage","UnsupportedMessage","ChatCreationMessage","OwnChatCreationMessage","ChatCopilotCreationMessage","CopilotMessage","SupportVoteMessage","SupportSessionNumberMessage","ConferenceCreationMessage","ZoomInviteMessage","SupervisorUpdateFeatureMessage","SupervisorEnableFeatureMessage","ChatCopilotAddedUsersMessage","SignMessage","MessageList","directives","mounted","element","binding","instance","observer","observeMessage","beforeUnmount","unobserveMessage","DialogStatus","messages","Array","messageMenuIsActiveForId","$store","dialogInited","formattedCollection","getCollectionManager","noMessages","showDialogStatus","some","lastMessageId","statusComponent","created","initContextMenu","initCollectionManager","subscribeToEvents","unsubscribeFromEvents","needToShowAvatarMenuFor","isCurrentUser","isBotChat","subscribe","onClickMessageContextMenu","onMessageContextMenuClick","unsubscribe","messageMenu","events","onCloseMenu","avatarMenu","params","key","isAltOrOption","openMenu","currentTarget","eventData","getData","onMessageMouseUp","browser","waitForSelectionToUpdate","selection","window","getSelection","isGuest","getMessageComponentName","collectionManager"],"mappings":"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"}