{"version":3,"file":"registry.bundle.js","sources":["../src/recent/classes/recent-data-extractor.js","../src/recent/recent.js","../src/chat/classes/delete.js","../src/chat/classes/chat-data-extractor.js","../src/chat/classes/load.js","../src/chat/classes/create.js","../src/chat/classes/update.js","../src/chat/classes/rename.js","../src/chat/classes/mute.js","../src/chat/classes/pin.js","../src/chat/classes/read.js","../src/chat/classes/user.js","../src/chat/chat.js","../../../lib/access/src/classes/access-service.js","../src/message/classes/load.js","../src/message/classes/pin.js","../src/message/classes/edit.js","../src/message/classes/delete.js","../src/message/classes/mark.js","../src/message/classes/favorite.js","../src/message/message.js","../src/sending/sending.js","../src/notification/notification.js","../src/disk/disk.js","../src/uploading/classes/uploader-wrapper.js","../src/uploading/uploading.js","../src/settings/settings.js","../src/lines/lines.js","../src/copilot/copilot.js","../src/comments/comments.js"],"sourcesContent":["import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, UserRole, MessageStatus, FakeMessagePrefix } from 'im.v2.const';\n\nimport type { ImModelMessage } from 'im.v2.model';\nimport type {\n\tRecentRestResult,\n\tRawUser,\n\tRawChat,\n\tRawRecentItem,\n\tRawMessage,\n\tRawCopilot,\n} from '../../types/rest';\n\ntype RecentFile = {\n\tid: number,\n\tname: string,\n\ttype: string,\n};\n\ntype ExtractionResult = {\n\tusers: RawUser[],\n\tchats: RawChat[],\n\tmessages: RawMessage[],\n\tfiles: RecentFile[],\n\trecentItems: RawRecentItem[],\n\tcopilot?: RawCopilot,\n};\n\nexport class RecentDataExtractor\n{\n\t#restResult: RecentRestResult;\n\t#withBirthdays: boolean;\n\n\t#users: { [id: string]: RawUser } = {};\n\t#chats: { [id: string]: RawChat } = {};\n\t#messages: { [id: string]: RawMessage } = {};\n\t#files: { [id: string]: RecentFile } = {};\n\t#recentItems: { [id: string]: RawRecentItem } = {};\n\n\tconstructor(params: { rawData: RecentRestResult, withBirthdays?: boolean })\n\t{\n\t\tconst { rawData, withBirthdays = true } = params;\n\t\tthis.#withBirthdays = withBirthdays;\n\t\tthis.#restResult = rawData;\n\t}\n\n\tgetItems(): ExtractionResult\n\t{\n\t\tconst { items = [], copilot } = this.#restResult;\n\t\titems.forEach((item: RawRecentItem) => {\n\t\t\tthis.#extractUser(item);\n\t\t\tthis.#extractChat(item);\n\t\t\tthis.#extractMessage(item);\n\t\t\tthis.#extractRecentItem(item);\n\t\t});\n\n\t\tthis.#extractBirthdayItems();\n\n\t\treturn {\n\t\t\tusers: Object.values(this.#users),\n\t\t\tchats: Object.values(this.#chats),\n\t\t\tmessages: Object.values(this.#messages),\n\t\t\tfiles: Object.values(this.#files),\n\t\t\trecentItems: Object.values(this.#recentItems),\n\t\t\tcopilot,\n\t\t};\n\t}\n\n\t#extractUser(item: RawRecentItem)\n\t{\n\t\tif (item.user?.id && !this.#users[item.user.id])\n\t\t{\n\t\t\tthis.#users[item.user.id] = item.user;\n\t\t}\n\t}\n\n\t#extractChat(item: RawRecentItem)\n\t{\n\t\tif (item.chat)\n\t\t{\n\t\t\tthis.#chats[item.id] = this.#prepareGroupChat(item);\n\n\t\t\tif (item.user.id && !this.#chats[item.user.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForAdditionalUser(item.user);\n\t\t\t}\n\t\t}\n\t\telse if (item.user.id)\n\t\t{\n\t\t\tconst existingRecentItem = Core.getStore().getters['recent/get'](item.user.id);\n\t\t\t// we should not update real chat with \"default\" chat data\n\t\t\tif (!existingRecentItem || !item.options.default_user_record)\n\t\t\t{\n\t\t\t\tthis.#chats[item.user.id] = this.#prepareChatForUser(item);\n\t\t\t}\n\t\t}\n\t}\n\n\t#extractMessage(item: RawRecentItem): void\n\t{\n\t\tconst message = item.message;\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (message.id === 0)\n\t\t{\n\t\t\tmessage.id = `${FakeMessagePrefix}-${item.id}`;\n\t\t}\n\n\t\tlet viewedByOthers = false;\n\t\tif (message.status === MessageStatus.delivered)\n\t\t{\n\t\t\tviewedByOthers = true;\n\t\t}\n\n\t\tconst existingMessage: ImModelMessage = Core.getStore().getters['messages/getById'](message.id);\n\t\t// recent has shortened attach format, we should not rewrite attach if model has it\n\t\tif (Type.isArrayFilled(existingMessage?.attach))\n\t\t{\n\t\t\tdelete message.attach;\n\t\t}\n\n\t\tif (Type.isPlainObject(message.file))\n\t\t{\n\t\t\tconst file: RecentFile = message.file;\n\t\t\tif (existingMessage)\n\t\t\t{\n\t\t\t\t// recent doesn't know about several files in one message,\n\t\t\t\t// we should not rewrite message files, so we merge it.\n\t\t\t\tmessage.files = this.#mergeFileIds(existingMessage, file.id);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmessage.files = [file.id];\n\t\t\t}\n\n\t\t\tconst existingFile = Core.getStore().getters['files/get'](file.id);\n\t\t\t// recent has shortened file format, we should not rewrite file if model has it\n\t\t\tif (!existingFile)\n\t\t\t{\n\t\t\t\tthis.#files[file.id] = file;\n\t\t\t}\n\t\t}\n\n\t\tthis.#messages[message.id] = { ...message, viewedByOthers };\n\t}\n\n\t#extractRecentItem(item: RawRecentItem): void\n\t{\n\t\tconst messageId = item.message?.id ?? 0;\n\t\tthis.#recentItems[item.id] = { ...item, messageId };\n\t}\n\n\t#extractBirthdayItems()\n\t{\n\t\tif (!this.#withBirthdays)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { birthdayList = [] } = this.#restResult;\n\t\tbirthdayList.forEach((item) => {\n\t\t\tif (!this.#users[item.id])\n\t\t\t{\n\t\t\t\tthis.#users[item.id] = item;\n\t\t\t}\n\n\t\t\tif (!this.#chats[item.id])\n\t\t\t{\n\t\t\t\tthis.#chats[item.id] = this.#prepareChatForAdditionalUser(item);\n\t\t\t}\n\n\t\t\tif (!this.#recentItems[item.id])\n\t\t\t{\n\t\t\t\tconst messageId = `${FakeMessagePrefix}-${item.id}`;\n\t\t\t\tthis.#recentItems[item.id] = { ...this.#getBirthdayPlaceholder(item), messageId };\n\t\t\t\tthis.#messages[messageId] = { id: messageId };\n\t\t\t}\n\t\t});\n\t}\n\n\t#prepareGroupChat(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\t...item.chat,\n\t\t\tcounter: item.counter,\n\t\t\tdialogId: item.id,\n\t\t\tcopilot: item.copilot,\n\t\t};\n\t}\n\n\t#prepareChatForUser(item: RawRecentItem): RawChat\n\t{\n\t\treturn {\n\t\t\tchatId: item.chat_id,\n\t\t\tavatar: item.user.avatar,\n\t\t\tcolor: item.user.color,\n\t\t\tdialogId: item.id,\n\t\t\tname: item.user.name,\n\t\t\ttype: ChatType.user,\n\t\t\tcounter: item.counter,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#prepareChatForAdditionalUser(user: RawUser): RawChat\n\t{\n\t\treturn {\n\t\t\tdialogId: user.id,\n\t\t\tavatar: user.avatar,\n\t\t\tcolor: user.color,\n\t\t\tname: user.name,\n\t\t\ttype: ChatType.user,\n\t\t\trole: UserRole.member,\n\t\t};\n\t}\n\n\t#getBirthdayPlaceholder(item: RawRecentItem): { id: string, isBirthdayPlaceholder: true }\n\t{\n\t\treturn {\n\t\t\tid: item.id,\n\t\t\tisBirthdayPlaceholder: true,\n\t\t};\n\t}\n\n\t#mergeFileIds(existingMessage: ImModelMessage, fileId: number): number[]\n\t{\n\t\tconst existingMessageFilesIds = existingMessage.files.map((id) => {\n\t\t\treturn Number.parseInt(id, 10);\n\t\t});\n\t\tconst setOfFileIds = new Set([...existingMessageFilesIds, fileId]);\n\n\t\treturn [...setOfFileIds];\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod, Layout } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { CopilotManager } from 'im.v2.lib.copilot';\nimport { LayoutManager } from 'im.v2.lib.layout';\n\nimport { RecentDataExtractor } from './classes/recent-data-extractor';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem } from 'im.v2.model';\n\nexport class RecentService\n{\n\tstatic instance = null;\n\n\tdataIsPreloaded: boolean = false;\n\tfirstPageIsLoaded: boolean = false;\n\titemsPerPage: number = 50;\n\tisLoading: boolean = false;\n\tpagesLoaded: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\tlastMessageDate: string = null;\n\n\tstatic getInstance(): RecentService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\t// region public\n\tgetCollection(): ImModelRecentItem[]\n\t{\n\t\treturn Core.getStore().getters['recent/getRecentCollection'];\n\t}\n\n\tasync loadFirstPage({ ignorePreloadedItems = false } = {}): Promise\n\t{\n\t\tif (this.dataIsPreloaded && !ignorePreloadedItems)\n\t\t{\n\t\t\tLogger.warn('Im.RecentList: first page was preloaded');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\tconst result = await this.requestItems({ firstPage: true });\n\t\tthis.firstPageIsLoaded = true;\n\n\t\treturn result;\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tsetPreloadedData(params)\n\t{\n\t\tLogger.warn('Im.RecentList: setting preloaded data', params);\n\t\tconst { items, hasMore } = params;\n\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.dataIsPreloaded = true;\n\n\t\tthis.updateModels(params);\n\t}\n\n\thideChat(dialogId: string): void\n\t{\n\t\tLogger.warn('Im.RecentList: hide chat', dialogId);\n\t\tconst recentItem = Core.getStore().getters['recent/get'](dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/delete', { id: dialogId });\n\n\t\tconst chatIsOpened = Core.getStore().getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tLayoutManager.getInstance().clearCurrentLayoutEntityId();\n\t\t\tvoid LayoutManager.getInstance().deleteLastOpenedElementById(dialogId);\n\t\t}\n\n\t\tCore.getRestClient().callMethod(RestMethod.imRecentHide, { DIALOG_ID: dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: hide chat error', error);\n\t\t\t});\n\t}\n\t// endregion public\n\n\tasync requestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst queryParams = this.getQueryParams(firstPage);\n\n\t\tconst result = await Core.getRestClient().callMethod(this.getQueryMethod(), queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.RecentList: page request error', error);\n\t\t\t});\n\n\t\tthis.pagesLoaded++;\n\t\tLogger.warn(`Im.RecentList: ${firstPage ? 'First' : this.pagesLoaded} page request result`, result.data());\n\t\tconst { items, hasMore } = result.data();\n\t\tthis.lastMessageDate = this.getLastMessageDate(items);\n\t\tif (!hasMore)\n\t\t{\n\t\t\tthis.hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.isLoading = false;\n\n\t\treturn this.updateModels(result.data());\n\t}\n\n\tgetQueryMethod(): string\n\t{\n\t\treturn RestMethod.imRecentList;\n\t}\n\n\tgetQueryParams(firstPage: boolean): JsonObject\n\t{\n\t\treturn {\n\t\t\tSKIP_OPENLINES: 'Y',\n\t\t\tLIMIT: this.itemsPerPage,\n\t\t\tLAST_MESSAGE_DATE: firstPage ? null : this.lastMessageDate,\n\t\t\tGET_ORIGINAL_TEXT: 'Y',\n\t\t\tPARSE_TEXT: 'Y',\n\t\t};\n\t}\n\n\tgetModelSaveMethod(): string\n\t{\n\t\treturn 'recent/setRecent';\n\t}\n\n\tupdateModels(rawData): Promise\n\t{\n\t\tconst extractor = new RecentDataExtractor({ rawData, ...this.getExtractorOptions() });\n\t\tconst extractedItems = extractor.getItems();\n\t\tconst {\n\t\t\tusers,\n\t\t\tchats,\n\t\t\tmessages,\n\t\t\tfiles,\n\t\t\trecentItems,\n\t\t\tcopilot,\n\t\t} = extractedItems;\n\t\tLogger.warn('RecentService: prepared data for models', extractedItems);\n\n\t\tconst usersPromise = Core.getStore().dispatch('users/set', users);\n\t\tconst dialoguesPromise = Core.getStore().dispatch('chats/set', chats);\n\t\tconst messagesPromise = Core.getStore().dispatch('messages/store', messages);\n\t\tconst filesPromise = Core.getStore().dispatch('files/set', files);\n\t\tconst recentPromise = Core.getStore().dispatch(this.getModelSaveMethod(), recentItems);\n\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleRecentListResponse(copilot);\n\n\t\treturn Promise.all([\n\t\t\tusersPromise,\n\t\t\tdialoguesPromise,\n\t\t\tmessagesPromise,\n\t\t\tfilesPromise,\n\t\t\trecentPromise,\n\t\t\tcopilotPromise,\n\t\t]);\n\t}\n\n\tgetLastMessageDate(items: Array): string\n\t{\n\t\tif (items.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn items.slice(-1)[0].message.date;\n\t}\n\n\tgetExtractorOptions(): { withBirthdays?: boolean }\n\t{\n\t\treturn {};\n\t}\n}\n","import { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\n\nimport type { Store } from 'ui.vue3.vuex';\n\ntype RestResult = {\n\tresult: boolean,\n};\n\nexport class DeleteService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync deleteChat(dialogId: string): Promise<RestResult>\n\t{\n\t\tLogger.warn(`ChatService: deleteChat, dialogId: ${dialogId}`);\n\n\t\tconst deleteResult = await runAction(RestMethod.imV2ChatDelete, {\n\t\t\tdata: { dialogId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: deleteChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tawait this.#updateModels(dialogId);\n\n\t\treturn deleteResult;\n\t}\n\n\tasync deleteCollab(dialogId: string): Promise<RestResult>\n\t{\n\t\tLogger.warn(`ChatService: deleteCollab, dialogId: ${dialogId}`);\n\n\t\tconst deleteResult = await runAction(RestMethod.socialnetworkCollabDelete, {\n\t\t\tdata: { dialogId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: deleteCollab error:', error);\n\t\t\tthrow error;\n\t\t});\n\n\t\tawait this.#updateModels(dialogId);\n\n\t\treturn deleteResult;\n\t}\n\n\t#updateModels(dialogId: string): Promise\n\t{\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { inited: false },\n\t\t});\n\n\t\tvoid this.#store.dispatch('recent/delete', { id: dialogId });\n\n\t\tconst chat = this.#store.getters['chats/get'](dialogId, true);\n\t\tvoid this.#store.dispatch('messages/clearChatCollection', { chatId: chat.chatId });\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { RawSession } from 'imopenlines.v2.provider.service';\nimport type {\n\tChatLoadRestResult,\n\tRawChat,\n\tRawFile,\n\tRawUser,\n\tRawShortUser,\n\tRawMessage,\n\tRawCommentInfo,\n\tRawCollabInfo,\n\tRawPin,\n\tRawReaction,\n\tRawCopilot,\n} from '../../types/rest';\n\nexport class ChatDataExtractor\n{\n\t#restResult: ChatLoadRestResult;\n\n\tconstructor(restResult: ChatLoadRestResult)\n\t{\n\t\tthis.#restResult = restResult;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#restResult.chat.id;\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#restResult.chat.dialogId;\n\t}\n\n\tisOpenlinesChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.lines;\n\t}\n\n\tisCopilotChat(): boolean\n\t{\n\t\treturn this.#restResult.chat.type === ChatType.copilot;\n\t}\n\n\tgetChats(): RawChat[]\n\t{\n\t\tconst mainChat = {\n\t\t\t...this.#restResult.chat,\n\t\t\thasPrevPage: this.#restResult.hasPrevPage,\n\t\t\thasNextPage: this.#restResult.hasNextPage,\n\t\t\ttariffRestrictions: this.#restResult.tariffRestrictions,\n\t\t};\n\t\tconst chats = {\n\t\t\t[this.#restResult.chat.dialogId]: mainChat,\n\t\t};\n\t\tthis.#restResult.users.forEach((user) => {\n\t\t\tif (chats[user.id])\n\t\t\t{\n\t\t\t\tchats[user.id] = { ...chats[user.id], ...UserManager.getDialogForUser(user) };\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tchats[user.id] = UserManager.getDialogForUser(user);\n\t\t\t}\n\t\t});\n\n\t\treturn Object.values(chats);\n\t}\n\n\tgetFiles(): RawFile[]\n\t{\n\t\treturn this.#restResult.files ?? [];\n\t}\n\n\tgetUsers(): RawUser[]\n\t{\n\t\treturn this.#restResult.users ?? [];\n\t}\n\n\tgetAdditionalUsers(): RawShortUser[]\n\t{\n\t\treturn this.#restResult.usersShort ?? [];\n\t}\n\n\tgetMessages(): RawMessage[]\n\t{\n\t\treturn this.#restResult.messages ?? [];\n\t}\n\n\tgetCommentInfo(): RawCommentInfo[]\n\t{\n\t\treturn this.#restResult.commentInfo ?? [];\n\t}\n\n\tgetCollabInfo(): ?RawCollabInfo\n\t{\n\t\treturn this.#restResult.collabInfo ?? null;\n\t}\n\n\tgetMessagesToStore(): RawMessage[]\n\t{\n\t\treturn this.#restResult.additionalMessages ?? [];\n\t}\n\n\tgetPinnedMessageIds(): number[]\n\t{\n\t\tconst pinnedMessageIds = [];\n\t\tconst pins: RawPin[] = this.#restResult.pins ?? [];\n\t\tpins.forEach((pin) => {\n\t\t\tpinnedMessageIds.push(pin.messageId);\n\t\t});\n\n\t\treturn pinnedMessageIds;\n\t}\n\n\tgetReactions(): RawReaction[]\n\t{\n\t\treturn this.#restResult.reactions ?? [];\n\t}\n\n\tgetCopilot(): RawCopilot\n\t{\n\t\treturn this.#restResult.copilot;\n\t}\n\n\tgetSession(): RawSession\n\t{\n\t\treturn this.#restResult.session;\n\t}\n}\n","import { Feature, FeatureManager } from 'im.v2.lib.feature';\nimport { Loc, Type } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { AccessErrorCode } from 'im.v2.lib.access';\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, Layout } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { MessageService } from 'im.v2.provider.service';\nimport { UserManager } from 'im.v2.lib.user';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Utils } from 'im.v2.lib.utils';\nimport { CopilotManager } from 'im.v2.lib.copilot';\nimport { OpenLinesManager } from 'imopenlines.v2.lib.openlines';\n\nimport { ChatDataExtractor } from './chat-data-extractor';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport type { ChatLoadRestResult, CommentInfoRestResult } from '../../types/rest';\n\ntype UpdateModelsResult = {\n\tdialogId: string,\n\tchatId: number,\n};\n\ntype RequestChatError = {\n\tcode: $Values<typeof AccessErrorCode> | number,\n\tcustomData: Array | null,\n\tmessage: string,\n};\n\nexport class LoadService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tloadChat(dialogId: string): Promise\n\t{\n\t\tconst params = { dialogId };\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatShallowLoad, params);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoad, params);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tdialogId,\n\t\t\tmessageId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t};\n\n\t\treturn this.#requestChat(RestMethod.imV2ChatLoadInContext, params);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\tif (!Utils.dialog.isExternalId(dialogId))\n\t\t{\n\t\t\treturn Promise.resolve(dialogId);\n\t\t}\n\n\t\treturn runAction(RestMethod.imV2ChatGetDialogId, {\n\t\t\tdata: { externalId: dialogId },\n\t\t})\n\t\t\t.then((result: {dialogId: string}) => {\n\t\t\t\treturn result.dialogId;\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error preparing external id', error);\n\t\t\t});\n\t}\n\n\tasync loadComments(postId: number): Promise\n\t{\n\t\tconst params = {\n\t\t\tpostId,\n\t\t\tmessageLimit: MessageService.getMessageRequestLimit(),\n\t\t\tautoJoin: true,\n\t\t\tcreateIfNotExists: true,\n\t\t};\n\n\t\tconst { chatId } = await this.#requestChat(RestMethod.imV2ChatLoad, params);\n\n\t\treturn this.#store.dispatch('messages/comments/set', {\n\t\t\tmessageId: postId,\n\t\t\tchatId,\n\t\t});\n\t}\n\n\tasync loadCommentInfo(channelDialogId: string): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](channelDialogId, true);\n\t\tconst messages = this.#store.getters['messages/getByChatId'](dialog.chatId);\n\t\tconst messageIds = messages.map((message: ImModelMessage) => message.id);\n\t\tconst { commentInfo, usersShort }: CommentInfoRestResult = await runAction(\n\t\t\tRestMethod.imV2ChatMessageCommentInfoList,\n\t\t\t{ data: { messageIds } },\n\t\t)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading comment info', error);\n\t\t\t});\n\n\t\tconst userManager = new UserManager();\n\n\t\tvoid this.#store.dispatch('messages/comments/set', commentInfo);\n\t\tvoid userManager.addUsersToModel(usersShort);\n\t}\n\n\tresetChat(dialogId: string): Promise\n\t{\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId, true);\n\t\tthis.#store.dispatch('messages/clearChatCollection', { chatId: dialog.chatId });\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { inited: false },\n\t\t});\n\t}\n\n\tasync #requestChat(actionName: string, params: Object<string, any>): Promise<{ dialogId: string, chatId: number }>\n\t{\n\t\tconst { dialogId, messageId } = params;\n\t\tthis.#markDialogAsLoading(dialogId);\n\n\t\tconst actionResult = await runAction(actionName, { data: params })\n\t\t\t.catch((errors: RequestChatError[]) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChatService: Load: error loading chat', errors);\n\t\t\t\tthis.#handleChatLoadError(errors);\n\t\t\t\tthis.#markDialogAsNotLoaded(dialogId);\n\t\t\t\tthrow errors;\n\t\t\t});\n\n\t\tif (this.#needLayoutRedirect(actionResult))\n\t\t{\n\t\t\treturn this.#redirectToLayout(actionResult, messageId);\n\t\t}\n\n\t\tconst {\n\t\t\tdialogId: loadedDialogId,\n\t\t\tchatId,\n\t\t} = await this.#updateModels(actionResult);\n\n\t\tif (this.#isDialogLoadedMarkNeeded(actionName))\n\t\t{\n\t\t\tawait this.#markDialogAsLoaded(loadedDialogId);\n\t\t}\n\n\t\treturn { dialogId: loadedDialogId, chatId };\n\t}\n\n\t#markDialogAsLoading(dialogId: string)\n\t{\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: true,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tinited: true,\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#markDialogAsNotLoaded(dialogId: string): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tloading: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#isDialogLoadedMarkNeeded(actionName: string): boolean\n\t{\n\t\treturn actionName !== RestMethod.imV2ChatShallowLoad;\n\t}\n\n\tasync #updateModels(restResult: ChatLoadRestResult): Promise<UpdateModelsResult>\n\t{\n\t\tconst extractor = new ChatDataExtractor(restResult);\n\n\t\tconst chatsPromise = this.#store.dispatch('chats/set', extractor.getChats());\n\t\tconst filesPromise = this.#store.dispatch('files/set', extractor.getFiles());\n\n\t\tconst userManager = new UserManager();\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#store.dispatch('users/set', extractor.getUsers()),\n\t\t\tuserManager.addUsersToModel(extractor.getAdditionalUsers()),\n\t\t]);\n\t\tconst messagesPromise = Promise.all([\n\t\t\tthis.#store.dispatch('messages/setChatCollection', {\n\t\t\t\tmessages: extractor.getMessages(),\n\t\t\t\tclearCollection: true,\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/store', extractor.getMessagesToStore()),\n\t\t\tthis.#store.dispatch('messages/pin/setPinned', {\n\t\t\t\tchatId: extractor.getChatId(),\n\t\t\t\tpinnedMessages: extractor.getPinnedMessageIds(),\n\t\t\t}),\n\t\t\tthis.#store.dispatch('messages/reactions/set', extractor.getReactions()),\n\t\t\tthis.#store.dispatch('messages/comments/set', extractor.getCommentInfo()),\n\t\t]);\n\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleChatLoadResponse(extractor.getCopilot());\n\n\t\tconst openLinesPromise = OpenLinesManager.handleChatLoadResponse(extractor.getSession());\n\n\t\tconst collabPromise = this.#store.dispatch('chats/collabs/set', {\n\t\t\tchatId: extractor.getChatId(),\n\t\t\tcollabInfo: extractor.getCollabInfo(),\n\t\t});\n\n\t\tawait Promise.all([\n\t\t\tchatsPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\tmessagesPromise,\n\t\t\tcopilotPromise,\n\t\t\topenLinesPromise,\n\t\t\tcollabPromise,\n\t\t]);\n\n\t\treturn { dialogId: extractor.getDialogId(), chatId: extractor.getChatId() };\n\t}\n\n\t#needLayoutRedirect(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\treturn this.#needRedirectToCopilotLayout(actionResult) || this.#needRedirectToOpenLinesLayout(actionResult);\n\t}\n\n\t#redirectToLayout(actionResult: ChatLoadRestResult, contextId: number = 0): Promise\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\t\tLayoutManager.getInstance().setLastOpenedElement(Layout.chat.name, '');\n\n\t\tif (this.#needRedirectToCopilotLayout(actionResult))\n\t\t{\n\t\t\treturn Messenger.openCopilot(extractor.getDialogId(), contextId);\n\t\t}\n\n\t\tif (this.#needRedirectToOpenLinesLayout(actionResult))\n\t\t{\n\t\t\treturn Messenger.openLines(extractor.getDialogId());\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#needRedirectToCopilotLayout(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\t\tconst currentLayoutName = LayoutManager.getInstance().getLayout().name;\n\n\t\treturn extractor.isCopilotChat() && currentLayoutName !== Layout.copilot.name;\n\t}\n\n\t#needRedirectToOpenLinesLayout(actionResult: ChatLoadRestResult): boolean\n\t{\n\t\tconst optionOpenLinesV2Activated = FeatureManager.isFeatureAvailable(Feature.openLinesV2);\n\n\t\tif (optionOpenLinesV2Activated)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst extractor = new ChatDataExtractor(actionResult);\n\n\t\treturn extractor.isOpenlinesChat() && Type.isStringFilled(extractor.getDialogId());\n\t}\n\n\t#handleChatLoadError(errors: RequestChatError[]): void\n\t{\n\t\tconst [firstError] = errors;\n\t\tif (firstError.code === AccessErrorCode.chatNotFound)\n\t\t{\n\t\t\tthis.#showNotification(Loc.getMessage('IM_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t}\n\t}\n\n\t#showNotification(text: string)\n\t{\n\t\tBX.UI.Notification.Center.notify({ content: text });\n\t}\n}\n","import { Type } from 'main.core';\nimport { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod, UserRole, ChatType } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ChatConfig, RestChatConfig, RestCreateCollabConfig } from '../types/chat';\n\ntype CreateCollabResult = {\n\tCHAT_ID: number,\n};\n\nconst PRIVATE_CHAT = 'CHAT';\nconst OPEN_CHAT = 'OPEN';\n\nexport class CreateService\n{\n\t#restClient: RestClient;\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync createChat(chatConfig: ChatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\tLogger.warn('ChatService: createChat', chatConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(chatConfig);\n\n\t\tconst createResult: RestResult = await this.#restClient.callMethod(RestMethod.imV2ChatAdd, {\n\t\t\tfields: preparedFields,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: createChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tconst { chatId: newChatId } = createResult.data();\n\n\t\tLogger.warn('ChatService: createChat result', newChatId);\n\t\tconst newDialogId = `chat${newChatId}`;\n\t\tthis.#addChatToModel(newDialogId, preparedFields);\n\t\tthis.#sendAnalytics(newDialogId);\n\n\t\treturn { newDialogId, newChatId };\n\t}\n\n\tasync createCollab(collabConfig: RestCreateCollabConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\tLogger.warn('ChatService: createCollab', collabConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(collabConfig);\n\n\t\tconst params = {\n\t\t\townerId: preparedFields.ownerId,\n\t\t\tname: preparedFields.title,\n\t\t\tdescription: preparedFields.description,\n\t\t\tavatarId: preparedFields.avatar,\n\t\t\tmoderatorMembers: Utils.user.prepareSelectorIds(collabConfig.moderatorMembers),\n\t\t\tpermissions: collabConfig.permissions,\n\t\t\toptions: collabConfig.options,\n\t\t};\n\n\t\tconst createResult: CreateCollabResult = await runAction(RestMethod.socialnetworkCollabCreate, {\n\t\t\tdata: params,\n\t\t}).catch(([error]) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: createCollab error:', error);\n\t\t\tthrow error;\n\t\t});\n\n\t\tconst { chatId: newChatId } = createResult;\n\n\t\tLogger.warn('ChatService: createCollab result', newChatId);\n\t\tconst newDialogId = `chat${newChatId}`;\n\t\tthis.#addCollabToModel(newDialogId, preparedFields);\n\t\tthis.#sendAnalytics(newDialogId);\n\n\t\treturn { newDialogId, newChatId };\n\t}\n\n\tasync #prepareFields(chatConfig: ChatConfig): RestChatConfig\n\t{\n\t\tconst preparedConfig = { ...chatConfig };\n\t\tif (preparedConfig.avatar)\n\t\t{\n\t\t\tpreparedConfig.avatar = await Utils.file.getBase64(chatConfig.avatar);\n\t\t}\n\n\t\tpreparedConfig.managers = preparedConfig.managers ?? [];\n\t\tpreparedConfig.members = preparedConfig.members ?? [];\n\t\tconst allMembers = [...preparedConfig.members, ...preparedConfig.managers];\n\t\tif (preparedConfig.ownerId)\n\t\t{\n\t\t\tallMembers.push(preparedConfig.ownerId);\n\t\t}\n\t\tpreparedConfig.members = [...new Set(allMembers)];\n\n\t\tconst result = {\n\t\t\ttype: preparedConfig.type?.toUpperCase(),\n\t\t\tentityType: preparedConfig.entityType?.toUpperCase(),\n\t\t\ttitle: preparedConfig.title,\n\t\t\tavatar: preparedConfig.avatar,\n\t\t\tdescription: preparedConfig.description,\n\t\t\tusers: preparedConfig.members,\n\t\t\tmemberEntities: preparedConfig.memberEntities,\n\t\t\tmanagers: preparedConfig.managers,\n\t\t\townerId: preparedConfig.ownerId,\n\t\t\tsearchable: preparedConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\tmanageUsersAdd: preparedConfig.manageUsersAdd,\n\t\t\tmanageUsersDelete: preparedConfig.manageUsersDelete,\n\t\t\tmanageUi: preparedConfig.manageUi,\n\t\t\tmanageSettings: preparedConfig.manageSettings,\n\t\t\tmanageMessages: preparedConfig.manageMessages,\n\t\t\tconferencePassword: preparedConfig.conferencePassword,\n\t\t\tcopilotMainRole: preparedConfig.copilotMainRole,\n\t\t};\n\n\t\tObject.entries(result).forEach(([key, value]) => {\n\t\t\tif (Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tdelete result[key];\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t#addCollabToModel(newDialogId: string, collabConfig: RestCreateCollabConfig): void\n\t{\n\t\tthis.#store.dispatch('chats/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: ChatType.collab,\n\t\t\tname: collabConfig.title,\n\t\t});\n\t}\n\n\t#addChatToModel(newDialogId: string, chatConfig: RestChatConfig): void\n\t{\n\t\tlet chatType = chatConfig.searchable === 'Y' ? OPEN_CHAT : PRIVATE_CHAT;\n\t\tif (Type.isStringFilled(chatConfig.entityType))\n\t\t{\n\t\t\tchatType = chatConfig.entityType.toLowerCase();\n\t\t}\n\n\t\tif (Type.isStringFilled(chatConfig.type))\n\t\t{\n\t\t\tchatType = chatConfig.type.toLowerCase();\n\t\t}\n\n\t\tthis.#store.dispatch('chats/set', {\n\t\t\tdialogId: newDialogId,\n\t\t\ttype: chatType.toLowerCase(),\n\t\t\tname: chatConfig.title,\n\t\t\tuserCounter: chatConfig.users.length,\n\t\t\trole: UserRole.owner,\n\t\t\tpermissions: {\n\t\t\t\tmanageUi: chatConfig.manageUi,\n\t\t\t\tmanageSettings: chatConfig.manageSettings,\n\t\t\t\tmanageUsersAdd: chatConfig.manageUsersAdd,\n\t\t\t\tmanageUsersDelete: chatConfig.manageUsersDelete,\n\t\t\t\tmanageMessages: chatConfig.manageMessages,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendAnalytics(dialogId)\n\t{\n\t\tAnalytics.getInstance().ignoreNextChatOpen(dialogId);\n\t}\n}\n","import { Type } from 'main.core';\nimport { isResizableImage, resizeImage } from 'ui.uploader.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Core } from 'im.v2.application.core';\nimport { getChatRoleForUser } from 'im.v2.lib.role-manager';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type {\n\tRestUpdateChatConfig,\n\tUpdateChatConfig,\n\tUpdateCollabConfig,\n\tGetMemberEntitiesConfig,\n} from '../types/chat';\n\nexport class UpdateService\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync prepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\tif (!isResizableImage(avatarFile))\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\treturn Promise.reject(new Error('UpdateService: prepareAvatar: incorrect image'));\n\t\t}\n\n\t\tconst MAX_AVATAR_SIZE = 180;\n\t\tconst { preview: resizedAvatar } = await resizeImage(avatarFile, {\n\t\t\twidth: MAX_AVATAR_SIZE,\n\t\t\theight: MAX_AVATAR_SIZE,\n\t\t});\n\n\t\treturn resizedAvatar;\n\t}\n\n\tasync changeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\tLogger.warn('ChatService: changeAvatar', chatId, avatarFile);\n\t\tconst avatarInBase64 = await Utils.file.getBase64(avatarFile);\n\n\t\treturn runAction(RestMethod.imV2ChatUpdateAvatar, {\n\t\t\tdata: {\n\t\t\t\tid: chatId,\n\t\t\t\tavatar: avatarInBase64,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: changeAvatar error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n\n\tasync updateChat(chatId: number, chatConfig: UpdateChatConfig): Promise<boolean>\n\t{\n\t\tLogger.warn(`ChatService: updateChat, chatId: ${chatId}`, chatConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(chatConfig);\n\n\t\tconst updateResult: RestResult = await runAction(RestMethod.imV2ChatUpdate, {\n\t\t\tdata: {\n\t\t\t\tid: chatId,\n\t\t\t\tfields: preparedFields,\n\t\t\t},\n\t\t\tid: chatId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: updateChat error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\n\t\tLogger.warn('ChatService: updateChat result', updateResult);\n\n\t\tconst dialogId = `chat${chatId}`;\n\t\tawait this.#updateChatInModel(dialogId, chatConfig);\n\n\t\treturn updateResult;\n\t}\n\n\tasync updateCollab(dialogId: string, collabConfig: UpdateCollabConfig): Promise<boolean>\n\t{\n\t\tLogger.warn(`ChatService: updateCollab, dialogId: ${dialogId}`, collabConfig);\n\n\t\tconst preparedFields = await this.#prepareFields(collabConfig);\n\n\t\tlet payload = {\n\t\t\tdialogId,\n\t\t\tname: preparedFields.title,\n\t\t\tdescription: preparedFields.description,\n\t\t\tavatarId: preparedFields.avatar,\n\t\t};\n\n\t\tif (collabConfig.groupSettings)\n\t\t{\n\t\t\tconst groupSettings = collabConfig.groupSettings;\n\t\t\tpayload = {\n\t\t\t\t...payload,\n\t\t\t\townerId: groupSettings.ownerId,\n\t\t\t\taddModeratorMembers: Utils.user.prepareSelectorIds(groupSettings.addModeratorMembers),\n\t\t\t\tdeleteModeratorMembers: Utils.user.prepareSelectorIds(groupSettings.deleteModeratorMembers),\n\t\t\t\tpermissions: groupSettings.permissions,\n\t\t\t\toptions: groupSettings.options,\n\t\t\t};\n\t\t}\n\n\t\tconst updateResult: RestResult = await runAction(RestMethod.socialnetworkCollabUpdate, {\n\t\t\tdata: payload,\n\t\t}).catch(([error]) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: updateCollab error:', error);\n\t\t\tthrow error;\n\t\t});\n\n\t\tLogger.warn('ChatService: updateCollab result', updateResult);\n\n\t\treturn updateResult;\n\t}\n\n\tasync getMemberEntities(chatId: number): Promise<GetMemberEntitiesConfig>\n\t{\n\t\treturn runAction(RestMethod.imV2ChatMemberEntitiesList, {\n\t\t\tdata: { chatId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ChatService: getMemberEntities error:', error);\n\t\t\tthrow new Error(error);\n\t\t});\n\t}\n\n\tasync #prepareFields(chatConfig: UpdateChatConfig): RestUpdateChatConfig\n\t{\n\t\tconst result = {\n\t\t\ttitle: chatConfig.title,\n\t\t\tdescription: chatConfig.description,\n\t\t\townerId: chatConfig.ownerId,\n\t\t\tsearchable: chatConfig.isAvailableInSearch ? 'Y' : 'N',\n\t\t\tmanageUi: chatConfig.manageUi,\n\t\t\tmanageUsersAdd: chatConfig.manageUsersAdd,\n\t\t\tmanageUsersDelete: chatConfig.manageUsersDelete,\n\t\t\tmanageMessages: chatConfig.manageMessages,\n\t\t\taddedMemberEntities: chatConfig.addedMemberEntities,\n\t\t\tdeletedMemberEntities: chatConfig.deletedMemberEntities,\n\t\t\taddedManagers: chatConfig.addedManagers,\n\t\t\tdeletedManagers: chatConfig.deletedManagers,\n\t\t};\n\n\t\tif (chatConfig.avatar)\n\t\t{\n\t\t\tresult.avatar = await Utils.file.getBase64(chatConfig.avatar);\n\t\t}\n\n\t\tObject.entries(result).forEach(([key, value]) => {\n\t\t\tif (Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tdelete result[key];\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\t#updateChatInModel(dialogId: string, chatConfig: UpdateChatConfig): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tname: chatConfig.title,\n\t\t\t\tdescription: chatConfig.description,\n\t\t\t\townerId: chatConfig.ownerId,\n\t\t\t\tmanagerList: chatConfig.managers,\n\t\t\t\ttype: chatConfig.type,\n\t\t\t\trole: getChatRoleForUser(chatConfig),\n\t\t\t\tpermissions: {\n\t\t\t\t\tmanageUi: chatConfig.manageUi,\n\t\t\t\t\tmanageUsersAdd: chatConfig.manageUsersAdd,\n\t\t\t\t\tmanageUsersDelete: chatConfig.manageUsersDelete,\n\t\t\t\t\tmanageMessages: chatConfig.manageMessages,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class RenameService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\tLogger.warn('ChatService: renameChat', dialogId, newName);\n\t\tif (newName === '')\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tconst dialog = this.#store.getters['chats/get'](dialogId);\n\t\tconst oldName = dialog.name;\n\n\t\tthis.#updateChatTitleInModel(dialogId, newName);\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUpdateTitle, {\n\t\t\tdialog_id: dialogId,\n\t\t\ttitle: newName,\n\t\t}).catch(() => {\n\t\t\tthis.#updateChatTitleInModel(dialogId, oldName);\n\n\t\t\tthrow new Error('Chat rename error');\n\t\t});\n\t}\n\n\t#updateChatTitleInModel(dialogId: string, title: string)\n\t{\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { name: title },\n\t\t});\n\t}\n}\n","import { Runtime } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class MuteService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#sendMuteRequestDebounced: Function;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\n\t\tconst DEBOUNCE_TIME = 500;\n\t\tthis.#sendMuteRequestDebounced = Runtime.debounce(this.#sendMuteRequest, DEBOUNCE_TIME);\n\t}\n\n\tmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: muteChat', dialogId);\n\t\tthis.#store.dispatch('chats/mute', { dialogId });\n\t\tconst queryParams = { dialog_id: dialogId, action: 'Y' };\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tLogger.warn('ChatService: unmuteChat', dialogId);\n\t\tthis.#store.dispatch('chats/unmute', { dialogId });\n\t\tconst queryParams = { dialog_id: dialogId, action: 'N' };\n\n\t\tthis.#sendMuteRequestDebounced(queryParams);\n\t}\n\n\t#sendMuteRequest(queryParams: {dialog_id: string, action: 'Y' | 'N'}): Promise\n\t{\n\t\tconst { dialog_id: dialogId, action } = queryParams;\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatMute, queryParams).catch((error) => {\n\t\t\tconst actionText = action === 'Y' ? 'muting' : 'unmuting';\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`Im.RecentList: error ${actionText} chat`, error);\n\n\t\t\tconst actionType = action === 'Y' ? 'chats/unmute' : 'chats/mute';\n\t\t\tthis.#store.dispatch(actionType, { dialogId });\n\t\t});\n\t}\n}","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: pinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tconst queryParams = { DIALOG_ID: dialogId, ACTION: 'Y' };\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('PinService: error pinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', { id: dialogId, action: false });\n\t\t});\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tLogger.warn('PinService: unpinChat', dialogId);\n\t\tthis.#store.dispatch('recent/pin', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tconst queryParams = { DIALOG_ID: dialogId, ACTION: 'N' };\n\t\tthis.#restClient.callMethod(RestMethod.imRecentPin, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('PinService: error unpinning chat', error);\n\t\t\tthis.#store.dispatch('recent/pin', { id: dialogId, action: true });\n\t\t});\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, ChatType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat, ImModelRecentItem } from 'im.v2.model';\n\ntype ReadResult = {\n\tchatId: number,\n\tcounter: number,\n\tlastId: number,\n\tviewedMessages: number[]\n};\n\nconst READ_TIMEOUT = 300;\n\nexport class ReadService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\t#messagesToRead: {[chatId: string]: Set<number>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\treadAll(): Promise\n\t{\n\t\tLogger.warn('ReadService: readAll');\n\t\tthis.#store.dispatch('chats/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\n\t\treturn this.#restClient.callMethod(RestMethod.imV2ChatReadAll)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: readAll error', error);\n\t\t\t});\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: readDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { counter: 0 },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading chat', error);\n\t\t\t});\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: unreadDialog', dialogId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatUnread, { dialogId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error setting chat as unread', error);\n\t\t\t\tthis.#store.dispatch('recent/unread', { id: dialogId, action: false });\n\t\t\t});\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tif (!this.#messagesToRead[chatId])\n\t\t{\n\t\t\tthis.#messagesToRead[chatId] = new Set();\n\t\t}\n\t\tthis.#messagesToRead[chatId].add(messageId);\n\n\t\tclearTimeout(this.readTimeout);\n\t\tthis.readTimeout = setTimeout(() => {\n\t\t\tObject.entries(this.#messagesToRead).forEach(([rawChatId, messageIds]) => {\n\t\t\t\tthis.#readMessagesForChat(rawChatId, messageIds);\n\t\t\t});\n\t\t}, READ_TIMEOUT);\n\t}\n\n\tasync #readMessagesForChat(rawChatId: string, messageIds: Set<number>)\n\t{\n\t\tconst queueChatId = Number.parseInt(rawChatId, 10);\n\t\tLogger.warn('ReadService: readMessages', messageIds);\n\t\tif (messageIds.size === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst copiedMessageIds = [...messageIds];\n\t\tdelete this.#messagesToRead[queueChatId];\n\n\t\tconst readMessagesCount = await this.#readMessageOnClient(queueChatId, copiedMessageIds);\n\n\t\tLogger.warn('ReadService: readMessage, need to reduce counter by', readMessagesCount);\n\t\tawait this.#decreaseChatCounter(queueChatId, readMessagesCount);\n\n\t\tconst readResult = await this.#readMessageOnServer(queueChatId, copiedMessageIds)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ReadService: error reading message', error);\n\t\t\t});\n\n\t\tthis.#checkChatCounter(readResult);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tLogger.warn('ReadService: clear dialog mark', dialogId);\n\t\tconst dialog: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](dialogId);\n\t\tif (dialog.markedId === 0 && !recentItem?.unread)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: false,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tmarkedId: 0,\n\t\t\t},\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatRead, {\n\t\t\tdialogId,\n\t\t\tonlyRecent: 'Y',\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('ReadService: error clearing dialog mark', error);\n\t\t});\n\t}\n\n\t#readMessageOnClient(chatId: number, messageIds: number[]): Promise<number>\n\t{\n\t\tconst maxMessageId = Math.max(...messageIds);\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (maxMessageId > dialog.lastReadId)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\t\tfields: {\n\t\t\t\t\tlastId: maxMessageId,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/readMessages', {\n\t\t\tchatId,\n\t\t\tmessageIds,\n\t\t});\n\t}\n\n\t#decreaseCommentCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\tconst counters = {\n\t\t\t[chat.parentChatId]: {\n\t\t\t\t[chatId]: newCounter,\n\t\t\t},\n\t\t};\n\n\t\treturn Core.getStore().dispatch('counters/setCommentCounters', counters);\n\t}\n\n\t#decreaseChatCounter(chatId: number, readMessagesCount: number): Promise\n\t{\n\t\tconst chat = this.#getDialogByChatId(chatId);\n\t\tif (chat.type === ChatType.comment)\n\t\t{\n\t\t\treturn this.#decreaseCommentCounter(chatId, readMessagesCount);\n\t\t}\n\n\t\tlet newCounter = chat.counter - readMessagesCount;\n\t\tif (newCounter < 0)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\n\t\treturn this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialogIdByChatId(chatId),\n\t\t\tfields: { counter: newCounter },\n\t\t});\n\t}\n\n\t#readMessageOnServer(chatId: number, messageIds: number[]): Promise\n\t{\n\t\tLogger.warn('ReadService: readMessages on server', messageIds);\n\n\t\treturn runAction(RestMethod.imV2ChatMessageRead, {\n\t\t\tdata: {\n\t\t\t\tchatId,\n\t\t\t\tids: messageIds,\n\t\t\t\tactionUuid: UuidManager.getInstance().getActionUuid(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#checkChatCounter(readResult: ReadResult)\n\t{\n\t\tif (!readResult)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst { chatId, counter } = readResult;\n\n\t\tconst dialog = this.#getDialogByChatId(chatId);\n\t\tif (dialog.counter > counter)\n\t\t{\n\t\t\tLogger.warn('ReadService: counter from server is lower than local one', dialog.counter, counter);\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: dialog.dialogId,\n\t\t\t\tfields: { counter },\n\t\t\t});\n\t\t}\n\t}\n\n\t#getDialogIdByChatId(chatId: number): number\n\t{\n\t\tconst dialog = this.#store.getters['chats/getByChatId'](chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn dialog.dialogId;\n\t}\n\n\t#getDialogByChatId(chatId: number): ?ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId);\n\t}\n}\n","import 'ui.notification';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Loc } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Messenger } from 'im.public';\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod, UserRole } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelChat } from 'im.v2.model';\n\ntype RestError = {\n\tanswer: {\n\t\terror: string,\n\t\terror_description: string,\n\t},\n\tstatus: number,\n};\n\nconst DeleteUserErrorCode = {\n\tuserInvitedFromStructure: 'USER_INVITED_FROM_STRUCTURE',\n\tuserNotFound: 'USER_NOT_FOUND',\n};\n\nexport class UserService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tchat_id: addConfig.chatId,\n\t\t\tusers: addConfig.members,\n\t\t\thide_history: !addConfig.showHistory,\n\t\t};\n\n\t\treturn this.#restClient.callMethod(RestMethod.imChatUserAdd, queryParams);\n\t}\n\n\tasync kickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tconst queryParams = { dialogId, userId };\n\t\ttry\n\t\t{\n\t\t\tawait this.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.#onChatKickError(error);\n\t\t}\n\t}\n\n\tasync kickUserFromCollab(dialogId: string, userId: number)\n\t{\n\t\tconst USER_ENTITY_ID = 'user';\n\t\tconst members = [[USER_ENTITY_ID, userId]];\n\n\t\tconst payload = {\n\t\t\tdata: { dialogId, members },\n\t\t};\n\n\t\ttry\n\t\t{\n\t\t\tawait runAction(RestMethod.socialnetworkMemberDelete, payload);\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\tconsole.error('UserService: error kicking from collab', errors);\n\t\t\tthis.#showNotification(Loc.getMessage('IM_MESSAGE_SERVICE_KICK_COLLAB_DEFAULT_ERROR'));\n\t\t}\n\t}\n\n\tasync leaveChat(dialogId: string)\n\t{\n\t\tconst queryParams = { dialogId, userId: Core.getUserId() };\n\t\ttry\n\t\t{\n\t\t\tawait this.#restClient.callMethod(RestMethod.imV2ChatDeleteUser, queryParams);\n\t\t\tthis.#onChatLeave(dialogId);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tthis.#onChatLeaveError(error);\n\t\t}\n\t}\n\n\tasync leaveCollab(dialogId: string)\n\t{\n\t\tconst payload = {\n\t\t\tdata: { dialogId },\n\t\t};\n\n\t\ttry\n\t\t{\n\t\t\tawait runAction(RestMethod.socialnetworkMemberLeave, payload);\n\n\t\t\tthis.#onChatLeave(dialogId);\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\tconsole.error('UserService: leave collab error', errors);\n\t\t\tthis.#showNotification(Loc.getMessage('IM_MESSAGE_SERVICE_LEAVE_COLLAB_DEFAULT_ERROR'));\n\t\t}\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tLogger.warn(`UserService: join chat ${dialogId}`);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\trole: UserRole.member,\n\t\t\t},\n\t\t});\n\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatJoin, {\n\t\t\tdialogId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('UserService: error joining chat', error);\n\t\t});\n\t}\n\n\taddManager(dialogId: string, userId: number)\n\t{\n\t\tLogger.warn(`UserService: add manager ${userId} to ${dialogId}`);\n\t\tconst { managerList }: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (managerList.includes(userId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst newManagerList = [...managerList, userId];\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { managerList: newManagerList },\n\t\t});\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tdialogId,\n\t\t\t\tuserIds: [userId],\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatAddManagers, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: add manager error', error);\n\t\t\t});\n\t}\n\n\tremoveManager(dialogId: string, userId: number): void\n\t{\n\t\tLogger.warn(`UserService: remove manager ${userId} from ${dialogId}`);\n\t\tconst { managerList }: ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (!managerList.includes(userId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst newManagerList = managerList.filter((managerId) => managerId !== userId);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { managerList: newManagerList },\n\t\t});\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tdialogId,\n\t\t\t\tuserIds: [userId],\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatDeleteManagers, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: remove manager error', error);\n\t\t\t});\n\t}\n\n\t#onChatLeave(dialogId: string): void\n\t{\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { inited: false },\n\t\t});\n\t\tvoid this.#store.dispatch('recent/delete', { id: dialogId });\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tLayoutManager.getInstance().clearCurrentLayoutEntityId();\n\t\t\tvoid LayoutManager.getInstance().deleteLastOpenedElementById(dialogId);\n\t\t}\n\t}\n\n\t#onChatKickError(error: RestError)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('UserService: error kicking from chat', error);\n\n\t\tconst NotificationTextByErrorCode = {\n\t\t\t[DeleteUserErrorCode.userInvitedFromStructure]: Loc.getMessage('IM_MESSAGE_SERVICE_KICK_CHAT_STRUCTURE_ERROR_MSGVER_1'),\n\t\t\tdefault: Loc.getMessage('IM_MESSAGE_SERVICE_KICK_CHAT_DEFAULT_ERROR'),\n\t\t};\n\n\t\tconst errorCode = this.#getErrorCode(error);\n\t\tconst notificationText = NotificationTextByErrorCode[errorCode] ?? NotificationTextByErrorCode.default;\n\t\tthis.#showNotification(notificationText);\n\t}\n\n\t#onChatLeaveError(error: RestError)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('UserService: error leaving chat', error);\n\n\t\tconst NotificationTextByErrorCode = {\n\t\t\t[DeleteUserErrorCode.userInvitedFromStructure]: Loc.getMessage('IM_MESSAGE_SERVICE_LEAVE_CHAT_STRUCTURE_ERROR'),\n\t\t\tdefault: Loc.getMessage('IM_MESSAGE_SERVICE_LEAVE_CHAT_DEFAULT_ERROR'),\n\t\t};\n\n\t\tconst errorCode = this.#getErrorCode(error);\n\t\tconst notificationText = NotificationTextByErrorCode[errorCode] ?? NotificationTextByErrorCode.default;\n\t\tthis.#showNotification(notificationText);\n\t}\n\n\t#showNotification(text: string): void\n\t{\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: text,\n\t\t\tautoHideDelay: 5000,\n\t\t});\n\t}\n\n\t#getErrorCode(error: RestError): string\n\t{\n\t\tconst { answer: { error: errorCode } } = error;\n\n\t\treturn errorCode;\n\t}\n}\n","import { DeleteService } from './classes/delete';\nimport { LoadService } from './classes/load';\nimport { CreateService } from './classes/create';\nimport { UpdateService } from './classes/update';\nimport { RenameService } from './classes/rename';\nimport { MuteService } from './classes/mute';\nimport { PinService } from './classes/pin';\nimport { ReadService } from './classes/read';\nimport { UserService } from './classes/user';\n\nimport type { UpdateChatConfig, GetMemberEntitiesConfig } from './types/chat';\n\nexport class ChatService\n{\n\t#loadService: LoadService;\n\t#createService: CreateService;\n\t#updateService: UpdateService;\n\t#renameService: RenameService;\n\t#muteService: MuteService;\n\t#pinService: PinService;\n\t#readService: ReadService;\n\t#userService: UserService;\n\t#deleteService: DeleteService;\n\n\tconstructor()\n\t{\n\t\tthis.#initServices();\n\t}\n\n\t// region 'load'\n\tloadChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChat(dialogId);\n\t}\n\n\tloadChatWithMessages(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithMessages(dialogId);\n\t}\n\n\tloadChatWithContext(dialogId: string, messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadChatWithContext(dialogId, messageId);\n\t}\n\n\tloadComments(postId: number): Promise\n\t{\n\t\treturn this.#loadService.loadComments(postId);\n\t}\n\n\tloadCommentInfo(channelDialogId: string): Promise\n\t{\n\t\treturn this.#loadService.loadCommentInfo(channelDialogId);\n\t}\n\n\tprepareDialogId(dialogId: string): Promise<string>\n\t{\n\t\treturn this.#loadService.prepareDialogId(dialogId);\n\t}\n\n\tresetChat(dialogId: string): Promise\n\t{\n\t\treturn this.#loadService.resetChat(dialogId);\n\t}\n\t// endregion 'load'\n\n\t// region 'create'\n\tcreateChat(chatConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\treturn this.#createService.createChat(chatConfig);\n\t}\n\n\tcreateCollab(collabConfig): Promise<{ newDialogId: string, newChatId: number }>\n\t{\n\t\treturn this.#createService.createCollab(collabConfig);\n\t}\n\t// endregion 'create'\n\n\t// region 'update'\n\tprepareAvatar(avatarFile: File): Promise<File>\n\t{\n\t\treturn this.#updateService.prepareAvatar(avatarFile);\n\t}\n\n\tchangeAvatar(chatId: number, avatarFile: File): Promise\n\t{\n\t\treturn this.#updateService.changeAvatar(chatId, avatarFile);\n\t}\n\n\tupdateChat(chatId: number, chatConfig: UpdateChatConfig): Promise<boolean>\n\t{\n\t\treturn this.#updateService.updateChat(chatId, chatConfig);\n\t}\n\n\tupdateCollab(dialogId: string, collabConfig): Promise<boolean>\n\t{\n\t\treturn this.#updateService.updateCollab(dialogId, collabConfig);\n\t}\n\n\tgetMemberEntities(chatId: number): Promise<GetMemberEntitiesConfig>\n\t{\n\t\treturn this.#updateService.getMemberEntities(chatId);\n\t}\n\t// endregion 'update'\n\n\t// region 'delete'\n\tdeleteChat(dialogId: string): Promise\n\t{\n\t\treturn this.#deleteService.deleteChat(dialogId);\n\t}\n\n\tdeleteCollab(dialogId: string): Promise\n\t{\n\t\treturn this.#deleteService.deleteCollab(dialogId);\n\t}\n\t// endregion 'delete'\n\n\t// region 'rename'\n\trenameChat(dialogId: string, newName: string): Promise\n\t{\n\t\treturn this.#renameService.renameChat(dialogId, newName);\n\t}\n\t// endregion 'rename'\n\n\t// region 'mute'\n\tmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.muteChat(dialogId);\n\t}\n\n\tunmuteChat(dialogId: string)\n\t{\n\t\tthis.#muteService.unmuteChat(dialogId);\n\t}\n\t// endregion 'mute'\n\n\t// region 'pin'\n\tpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.pinChat(dialogId);\n\t}\n\n\tunpinChat(dialogId: string)\n\t{\n\t\tthis.#pinService.unpinChat(dialogId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'read'\n\treadAll(): Promise\n\t{\n\t\treturn this.#readService.readAll();\n\t}\n\n\treadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.readDialog(dialogId);\n\t}\n\n\tunreadDialog(dialogId: string)\n\t{\n\t\tthis.#readService.unreadDialog(dialogId);\n\t}\n\n\treadMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#readService.readMessage(chatId, messageId);\n\t}\n\n\tclearDialogMark(dialogId: string)\n\t{\n\t\tthis.#readService.clearDialogMark(dialogId);\n\t}\n\t// endregion 'read'\n\n\t// region 'user'\n\tleaveChat(dialogId: string)\n\t{\n\t\tthis.#userService.leaveChat(dialogId);\n\t}\n\n\tleaveCollab(dialogId: string)\n\t{\n\t\tvoid this.#userService.leaveCollab(dialogId);\n\t}\n\n\tkickUserFromChat(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromChat(dialogId, userId);\n\t}\n\n\tkickUserFromCollab(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.kickUserFromCollab(dialogId, userId);\n\t}\n\n\taddToChat(addConfig: {chatId: number, members: string[], showHistory: boolean}): Promise\n\t{\n\t\treturn this.#userService.addToChat(addConfig);\n\t}\n\n\tjoinChat(dialogId: string)\n\t{\n\t\tthis.#userService.joinChat(dialogId);\n\t}\n\n\taddManager(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.addManager(dialogId, userId);\n\t}\n\n\tremoveManager(dialogId: string, userId: number)\n\t{\n\t\tthis.#userService.removeManager(dialogId, userId);\n\t}\n\t// endregion 'user\n\n\t#initServices()\n\t{\n\t\tthis.#loadService = new LoadService();\n\t\tthis.#createService = new CreateService();\n\t\tthis.#updateService = new UpdateService();\n\t\tthis.#renameService = new RenameService();\n\t\tthis.#muteService = new MuteService();\n\t\tthis.#pinService = new PinService();\n\t\tthis.#readService = new ReadService();\n\t\tthis.#userService = new UserService();\n\t\tthis.#deleteService = new DeleteService();\n\t}\n}\n","import { RestMethod } from 'im.v2.const';\nimport { runAction, type RunActionError } from 'im.v2.lib.rest';\n\nexport const AccessErrorCode = {\n\taccessDenied: 'ACCESS_DENIED',\n\tchatNotFound: 'CHAT_NOT_FOUND',\n\tmessageNotFound: 'MESSAGE_NOT_FOUND',\n\tmessageAccessDenied: 'MESSAGE_ACCESS_DENIED',\n\tmessageAccessDeniedByTariff: 'MESSAGE_ACCESS_DENIED_BY_TARIFF',\n};\n\nexport type AccessCheckResult = { hasAccess: boolean, errorCode?: string };\n\nexport const AccessService = {\n\tasync checkMessageAccess(messageId: number): Promise<AccessCheckResult>\n\t{\n\t\tconst payload = { data: { messageId } };\n\n\t\ttry\n\t\t{\n\t\t\tawait runAction(RestMethod.imV2AccessCheck, payload);\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\treturn handleAccessError(errors);\n\t\t}\n\n\t\treturn Promise.resolve({ hasAccess: true });\n\t},\n};\n\nconst handleAccessError = (errors: RunActionError[]): AccessCheckResult => {\n\tconst [error] = errors;\n\tconst availableCodes = Object.values(AccessErrorCode);\n\tif (!availableCodes.includes(error.code))\n\t{\n\t\tconsole.error('AccessService: error checking access', error.code);\n\n\t\t// we need to handle all types of errors on this stage\n\t\t// but for now we let user through in case of unknown error\n\t\treturn { hasAccess: true };\n\t}\n\n\treturn { hasAccess: false, errorCode: error.code };\n};\n","import { Loc } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { callBatch, runAction } from 'im.v2.lib.rest';\nimport { UserManager } from 'im.v2.lib.user';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\nimport { CopilotManager } from 'im.v2.lib.copilot';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\nimport { AccessErrorCode } from '../../../../../lib/access/src/classes/access-service';\nimport type { PaginationRestResult } from '../types/message';\nimport type { RawMessage, RawCommentInfo, RawTariffRestrictions } from '../../types/rest';\n\nexport class LoadService\n{\n\tstatic MESSAGE_REQUEST_LIMIT = 25;\n\n\t#store: Store;\n\t#chatId: number;\n\t#userManager: UserManager;\n\n\t#preparedHistoryMessages: RawMessage[] = [];\n\t#preparedUnreadMessages: RawMessage[] = [];\n\t#isLoading: boolean = false;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#userManager = new UserManager();\n\n\t\tthis.#chatId = chatId;\n\t}\n\n\tasync loadUnread(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadUnread');\n\t\tconst lastUnreadMessageId = this.#store.getters['messages/getLastId'](this.#chatId);\n\t\tif (!lastUnreadMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastUnreadMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: { lastId: lastUnreadMessageId },\n\t\t\torder: { id: 'ASC' },\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\tconst result: PaginationRestResult = await runAction(RestMethod.imV2ChatMessageTail, { data: query })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadUnread error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t});\n\n\t\tLogger.warn('MessageService: loadUnread result', result);\n\t\tthis.#preparedUnreadMessages = result.messages;\n\n\t\tconst rawData: PaginationRestResult = {\n\t\t\t...result,\n\t\t\ttariffRestrictions: this.#prepareTariffRestrictions(result.tariffRestrictions),\n\t\t};\n\t\tawait this.#updateModels(rawData);\n\n\t\tthis.#isLoading = false;\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync loadHistory(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#getDialog().hasPrevPage)\n\t\t{\n\t\t\treturn Promise.resolve(false);\n\t\t}\n\t\tLogger.warn('MessageService: loadHistory');\n\t\tconst lastHistoryMessageId = this.#store.getters['messages/getFirstId'](this.#chatId);\n\t\tif (!lastHistoryMessageId)\n\t\t{\n\t\t\tLogger.warn('MessageService: no lastHistoryMessageId, cant load unread');\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\tconst query = {\n\t\t\tchatId: this.#chatId,\n\t\t\tfilter: { lastId: lastHistoryMessageId },\n\t\t\torder: { id: 'DESC' },\n\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t};\n\n\t\tconst result: PaginationRestResult = await runAction(RestMethod.imV2ChatMessageTail, { data: query })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t});\n\n\t\tLogger.warn('MessageService: loadHistory result', result);\n\t\tthis.#preparedHistoryMessages = result.messages;\n\n\t\tconst hasPrevPage = result.hasNextPage;\n\t\tconst rawData = { ...result, hasPrevPage, hasNextPage: null };\n\t\tawait this.#updateModels(rawData);\n\n\t\tthis.#isLoading = false;\n\n\t\treturn Promise.resolve();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#preparedHistoryMessages.length > 0;\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedHistoryMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedHistoryMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedHistoryMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#preparedUnreadMessages.length > 0;\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\tif (!this.hasPreparedUnreadMessages())\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages: this.#preparedUnreadMessages,\n\t\t}).then(() => {\n\t\t\tthis.#preparedUnreadMessages = [];\n\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tasync loadFirstPage(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadFirstPage for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t\torder: { id: 'ASC' },\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageTail, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadFirstPage error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadFirstPage result', restResult);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tawait this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage: false,\n\t\t\t\thasNextPage: restResult.hasNextPage,\n\t\t\t},\n\t\t});\n\t\tthis.#isLoading = false;\n\t}\n\n\tloadContext(messageId: number): Promise\n\t{\n\t\tconst query = {\n\t\t\t[RestMethod.imV2ChatMessageGetContext]: {\n\t\t\t\tid: messageId,\n\t\t\t\trange: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t\t[RestMethod.imV2ChatMessageRead]: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tids: [messageId],\n\t\t\t},\n\t\t};\n\t\tLogger.warn('MessageService: loadContext for: ', messageId);\n\t\tthis.#isLoading = true;\n\n\t\treturn callBatch(query)\n\t\t\t.then((data) => {\n\t\t\t\tLogger.warn('MessageService: loadContext result', data);\n\n\t\t\t\treturn this.#handleLoadedMessages(data[RestMethod.imV2ChatMessageGetContext]);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#sendAnalytics(error);\n\t\t\t\tthis.#handleLoadContextError(error);\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadContext error:', error);\n\t\t\t\tthrow new Error(error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#isLoading = false;\n\t\t\t});\n\t}\n\n\tasync loadContextByChatId(chatId: number): Promise<number>\n\t{\n\t\tconst queryParams = {\n\t\t\tdata: { commentChatId: chatId },\n\t\t};\n\t\tconst result = await runAction(RestMethod.imV2ChatMessageGetContext, queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadHistory error:', error);\n\t\t\t});\n\n\t\tconst commentInfo: RawCommentInfo[] = result.commentInfo;\n\t\tconst targetCommentInfo: ?RawCommentInfo = commentInfo.find((item) => {\n\t\t\treturn item.chatId === chatId;\n\t\t});\n\t\tconst targetMessageId = targetCommentInfo?.messageId;\n\n\t\tLogger.warn('MessageService: loadContextByChatId result', result);\n\t\tvoid this.#handleLoadedMessages(result);\n\n\t\treturn targetMessageId;\n\t}\n\n\treloadMessageList(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadChatOnExit for: ', this.#chatId);\n\t\tlet targetMessageId = 0;\n\t\tif (this.#getDialog().chatId <= 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tif (this.#getDialog().markedId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().markedId;\n\t\t}\n\t\telse if (this.#getDialog().savedPositionMessageId)\n\t\t{\n\t\t\ttargetMessageId = this.#getDialog().savedPositionMessageId;\n\t\t}\n\n\t\tconst wasInitedBefore = this.#getDialog().inited;\n\t\tthis.#setDialogInited(false);\n\t\tif (targetMessageId)\n\t\t{\n\t\t\treturn this.loadContext(targetMessageId)\n\t\t\t\t.catch(() => {})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t\t});\n\t\t}\n\n\t\treturn this.loadInitialMessages()\n\t\t\t.catch(() => {})\n\t\t\t.finally(() => {\n\t\t\t\tthis.#setDialogInited(true, wasInitedBefore);\n\t\t\t});\n\t}\n\n\tasync loadInitialMessages(): Promise\n\t{\n\t\tLogger.warn('MessageService: loadInitialMessages for: ', this.#chatId);\n\t\tthis.#isLoading = true;\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tchatId: this.#chatId,\n\t\t\t\tlimit: LoadService.MESSAGE_REQUEST_LIMIT,\n\t\t\t},\n\t\t};\n\t\tconst restResult = await runAction(RestMethod.imV2ChatMessageList, payload)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('MessageService: loadInitialMessages error:', error);\n\t\t\t\tthis.#isLoading = false;\n\t\t\t\tthrow new Error(error);\n\t\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages result', restResult);\n\t\trestResult.messages = this.#prepareInitialMessages(restResult.messages);\n\n\t\tawait this.#handleLoadedMessages(restResult);\n\t\tthis.#isLoading = false;\n\t}\n\n\t#prepareInitialMessages(rawMessages: RawMessage[]): RawMessage[]\n\t{\n\t\tif (rawMessages.length === 0)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst lastMessageId = this.#getDialog().lastMessageId;\n\t\tconst newMaxId = Math.max(...rawMessages.map((message) => message.id));\n\t\tif (newMaxId >= lastMessageId)\n\t\t{\n\t\t\treturn rawMessages;\n\t\t}\n\n\t\tconst messagesCollection: ImModelMessage[] = this.#store.getters['messages/getByChatId'](this.#chatId);\n\t\tconst additionalMessages = messagesCollection.filter((message) => {\n\t\t\treturn message.id > newMaxId;\n\t\t});\n\t\tLogger.warn('MessageService: loadInitialMessages: local id is higher than server one', additionalMessages);\n\n\t\treturn [...rawMessages, ...additionalMessages];\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#isLoading;\n\t}\n\n\t#handleLoadedMessages(restResult): Promise\n\t{\n\t\tconst { messages } = restResult;\n\t\tconst messagesPromise = this.#store.dispatch('messages/setChatCollection', {\n\t\t\tmessages,\n\t\t\tclearCollection: true,\n\t\t});\n\t\tconst updateModelsPromise = this.#updateModels(restResult);\n\n\t\treturn Promise.all([messagesPromise, updateModelsPromise]);\n\t}\n\n\t#updateModels(rawData: PaginationRestResult): Promise\n\t{\n\t\tconst {\n\t\t\tfiles,\n\t\t\tusers,\n\t\t\tusersShort,\n\t\t\treactions,\n\t\t\thasPrevPage,\n\t\t\thasNextPage,\n\t\t\tadditionalMessages,\n\t\t\tcommentInfo,\n\t\t\tcopilot,\n\t\t\ttariffRestrictions,\n\t\t} = rawData;\n\n\t\tconst dialogPromise = this.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields: {\n\t\t\t\thasPrevPage,\n\t\t\t\thasNextPage,\n\t\t\t\ttariffRestrictions,\n\t\t\t},\n\t\t});\n\t\tconst usersPromise = Promise.all([\n\t\t\tthis.#userManager.setUsersToModel(users),\n\t\t\tthis.#userManager.addUsersToModel(usersShort),\n\t\t]);\n\t\tconst filesPromise = this.#store.dispatch('files/set', files);\n\t\tconst reactionsPromise = this.#store.dispatch('messages/reactions/set', reactions);\n\t\tconst additionalMessagesPromise = this.#store.dispatch('messages/store', additionalMessages);\n\t\tconst commentInfoPromise = this.#store.dispatch('messages/comments/set', commentInfo);\n\t\tconst copilotManager = new CopilotManager();\n\t\tconst copilotPromise = copilotManager.handleChatLoadResponse(copilot);\n\n\t\treturn Promise.all([\n\t\t\tdialogPromise,\n\t\t\tfilesPromise,\n\t\t\tusersPromise,\n\t\t\treactionsPromise,\n\t\t\tadditionalMessagesPromise,\n\t\t\tcommentInfoPromise,\n\t\t\tcopilotPromise,\n\t\t]);\n\t}\n\n\t#setDialogInited(flag: boolean, wasInitedBefore: boolean = true)\n\t{\n\t\tconst fields = {\n\t\t\tinited: flag,\n\t\t\tloading: !flag,\n\t\t};\n\t\tif (flag === true && !wasInitedBefore)\n\t\t{\n\t\t\tdelete fields.inited;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: this.#getDialog().dialogId,\n\t\t\tfields,\n\t\t});\n\t}\n\n\t#prepareTariffRestrictions(restrictions: RawTariffRestrictions): RawTariffRestrictions\n\t{\n\t\tconst dialogId = this.#getDialog().dialogId;\n\t\tconst chat: ?ImModelChat = this.#store.getters['chats/get'](dialogId);\n\t\tif (!chat)\n\t\t{\n\t\t\treturn restrictions;\n\t\t}\n\n\t\tconst { tariffRestrictions: { isHistoryLimitExceeded } } = chat;\n\t\tif (isHistoryLimitExceeded === true)\n\t\t{\n\t\t\treturn {\n\t\t\t\t...restrictions,\n\t\t\t\tisHistoryLimitExceeded: true,\n\t\t\t};\n\t\t}\n\n\t\treturn restrictions;\n\t}\n\n\t#getDialog(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n\n\t#handleLoadContextError(error): void\n\t{\n\t\tif (error.code !== AccessErrorCode.messageNotFound)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#showNotification(Loc.getMessage('IM_CONTENT_CHAT_CONTEXT_MESSAGE_NOT_FOUND'));\n\t}\n\n\t#showNotification(text: string)\n\t{\n\t\tBX.UI.Notification.Center.notify({ content: text });\n\t}\n\n\t#sendAnalytics(error)\n\t{\n\t\tif (error.code !== AccessErrorCode.messageNotFound)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst chat = this.#getDialog();\n\t\tconst dialogId = chat.dialogId;\n\t\tAnalytics.getInstance().messageDelete.onNotFoundNotification({ dialogId });\n\t}\n}\n","import { RestClient } from 'rest.client';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\nexport class PinService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: pin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessagePin, { id: messageId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Dialog: PinManager: error pinning message', error);\n\t\t\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\t\t\tchatId,\n\t\t\t\t\tmessageId,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tLogger.warn(`Dialog: PinManager: unpin message ${messageId}`);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageUnpin, { id: messageId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Dialog: PinManager: error unpinning message', error);\n\t\t\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\t\t\tchatId,\n\t\t\t\t\tmessageId,\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport type { ImModelMessage } from 'im.v2.model';\n\nexport class EditService\n{\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tLogger.warn('MessageService: editMessageText', messageId, text);\n\t\tconst message = this.#getMessage(messageId);\n\t\tif (!message)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#updateMessageModel(messageId, text);\n\n\t\tconst payload = {\n\t\t\tdata: {\n\t\t\t\tid: messageId,\n\t\t\t\tfields: { message: text },\n\t\t\t},\n\t\t};\n\n\t\trunAction(RestMethod.imV2ChatMessageUpdate, payload)\n\t\t\t.catch((error) => {\n\t\t\t\tLogger.error('MessageService: editMessageText error:', error);\n\t\t\t});\n\t}\n\n\t#updateMessageModel(messageId: number, text: string): void\n\t{\n\t\tconst message = this.#getMessage(messageId);\n\t\tconst isEdited = message.viewedByOthers;\n\n\t\tCore.getStore().dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\ttext,\n\t\t\t\tisEdited,\n\t\t\t},\n\t\t});\n\t}\n\n\t#getMessage(messageId: number): ImModelMessage | null\n\t{\n\t\treturn Core.getStore().getters['messages/getById'](messageId);\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { RestMethod, EventType, ChatType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\n\nimport type { ImModelChat, ImModelMessage, ImModelRecentItem } from 'im.v2.model';\n\nexport class DeleteService\n{\n\t#store: Store;\n\t#chatId: number;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync deleteMessage(messageId: number | string)\n\t{\n\t\tLogger.warn('MessageService: deleteMessage', messageId);\n\n\t\tif (Utils.text.isUuidV4(messageId))\n\t\t{\n\t\t\tthis.#deleteTemporaryMessage(messageId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#sendDeleteEvent(messageId);\n\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tif (this.#canDeleteCompletely(message))\n\t\t{\n\t\t\tvoid this.#completeMessageDelete(message);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#shallowMessageDelete(message);\n\t}\n\n\t#shallowMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: message.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tisDeleted: true,\n\t\t\t\tfiles: [],\n\t\t\t\tattach: [],\n\t\t\t\treplyId: 0,\n\t\t\t},\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#canDeleteCompletely(message: ImModelMessage): boolean\n\t{\n\t\tconst alwaysCompleteDeleteChats = [ChatType.channel, ChatType.openChannel, ChatType.generalChannel];\n\t\tconst neverCompleteDeleteChats = [ChatType.comment, ChatType.lines];\n\n\t\tconst chat = this.#getChat();\n\t\tif (alwaysCompleteDeleteChats.includes(chat.type))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tif (neverCompleteDeleteChats.includes(chat.type))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !message.viewedByOthers;\n\t}\n\n\t#completeMessageDelete(message: ImModelMessage): Promise\n\t{\n\t\tconst chat = this.#getChat();\n\t\tif (message.id === chat.lastMessageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(message.id);\n\t\t\tthis.#updateRecentForCompleteDelete(newLastId);\n\t\t\tthis.#updateChatForCompleteDelete(newLastId);\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: message.id,\n\t\t});\n\n\t\treturn this.#deleteMessageOnServer(message.id);\n\t}\n\n\t#updateRecentForCompleteDelete(newLastId: number)\n\t{\n\t\tconst chat = this.#getChat();\n\t\tif (!newLastId)\n\t\t{\n\t\t\tthis.#store.dispatch('recent/delete', { id: chat.dialogId });\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('recent/update', {\n\t\t\tid: chat.dialogId,\n\t\t\tfields: { messageId: newLastId },\n\t\t});\n\t}\n\n\t#updateChatForCompleteDelete(newLastId)\n\t{\n\t\tconst chat = this.#getChat();\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: chat.dialogId,\n\t\t\tfields: {\n\t\t\t\tlastMessageId: newLastId,\n\t\t\t\tlastId: newLastId,\n\t\t\t},\n\t\t});\n\t\tthis.#store.dispatch('chats/clearLastMessageViews', {\n\t\t\tdialogId: chat.dialogId,\n\t\t});\n\t}\n\n\t#deleteMessageOnServer(messageId: number): Promise\n\t{\n\t\treturn runAction(RestMethod.imV2ChatMessageDelete, {\n\t\t\tdata: { id: messageId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: deleteMessage error:', error);\n\t\t});\n\t}\n\n\t#deleteTemporaryMessage(messageId: string)\n\t{\n\t\tconst chat = this.#getChat();\n\t\tconst recentItem: ImModelRecentItem = this.#store.getters['recent/get'](chat.dialogId);\n\t\tif (recentItem.messageId === messageId)\n\t\t{\n\t\t\tconst newLastId = this.#getPreviousMessageId(messageId);\n\t\t\tthis.#store.dispatch('recent/update', {\n\t\t\t\tid: chat.dialogId,\n\t\t\t\tfields: { messageId: newLastId },\n\t\t\t});\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: messageId,\n\t\t});\n\t}\n\n\t#getPreviousMessageId(messageId: number): number\n\t{\n\t\tconst previousMessage: ImModelMessage = this.#store.getters['messages/getPreviousMessage']({\n\t\t\tmessageId,\n\t\t\tchatId: this.#chatId,\n\t\t});\n\n\t\treturn previousMessage?.id ?? 0;\n\t}\n\n\t#sendDeleteEvent(messageId: number)\n\t{\n\t\tEventEmitter.emit(EventType.dialog.onMessageDeleted, { messageId });\n\t}\n\n\t#getChat(): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](this.#chatId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nexport class MarkService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tmarkMessage(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: markMessage', messageId);\n\t\tconst { dialogId } = this.#store.getters['chats/getByChatId'](this.#chatId);\n\t\tthis.#store.dispatch('recent/unread', {\n\t\t\tid: dialogId,\n\t\t\taction: true,\n\t\t});\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: { markedId: messageId },\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imV2ChatMessageMark, {\n\t\t\tdialogId,\n\t\t\tid: messageId\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error marking message', error);\n\t\t});\n\t}\n}\n","import { Loc } from 'main.core';\nimport { Store } from 'ui.vue3.vuex';\nimport { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport 'ui.notification';\n\nexport class FavoriteService\n{\n\t#chatId: number;\n\t#store: Store;\n\t#restClient: RestClient;\n\n\tconstructor(chatId: number)\n\t{\n\t\tthis.#chatId = chatId;\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: addMessageToFavorite', messageId);\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteAdd, {\n\t\t\tMESSAGE_ID: messageId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error adding message to favorite', error);\n\t\t});\n\t\tBX.UI.Notification.Center.notify({\n\t\t\tcontent: Loc.getMessage('IM_MESSAGE_SERVICE_ADD_MESSAGE_TO_FAVORITE_SUCCESS'),\n\t\t});\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tLogger.warn('MessageService: removeMessageFromFavorite', messageId);\n\t\tthis.#store.dispatch('sidebar/favorites/deleteByMessageId', {\n\t\t\tchatId: this.#chatId,\n\t\t\tmessageId,\n\t\t});\n\t\tthis.#restClient.callMethod(RestMethod.imChatFavoriteDelete, {\n\t\t\tMESSAGE_ID: messageId,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessageService: error removing message from favorite', error);\n\t\t});\n\t}\n}\n","import { LoadService } from './classes/load';\nimport { PinService } from './classes/pin';\nimport { EditService } from './classes/edit';\nimport { DeleteService } from './classes/delete';\nimport { MarkService } from './classes/mark';\nimport { FavoriteService } from './classes/favorite';\n\nexport class MessageService\n{\n\t#loadService: LoadService;\n\t#pinService: PinService;\n\t#editService: EditService;\n\t#deleteService: DeleteService;\n\t#markService: MarkService;\n\t#favoriteService: FavoriteService;\n\n\tstatic getMessageRequestLimit(): number\n\t{\n\t\treturn LoadService.MESSAGE_REQUEST_LIMIT;\n\t}\n\n\tconstructor(params: {chatId: number})\n\t{\n\t\tconst { chatId } = params;\n\t\tthis.#initServices(chatId);\n\t}\n\n\t#initServices(chatId: number)\n\t{\n\t\tthis.#loadService = new LoadService(chatId);\n\t\tthis.#editService = new EditService();\n\t\tthis.#deleteService = new DeleteService(chatId);\n\t\tthis.#pinService = new PinService();\n\t\tthis.#markService = new MarkService(chatId);\n\t\tthis.#favoriteService = new FavoriteService(chatId);\n\t}\n\n\t// region 'pagination'\n\tloadUnread(): Promise\n\t{\n\t\treturn this.#loadService.loadUnread();\n\t}\n\n\tloadHistory(): Promise\n\t{\n\t\treturn this.#loadService.loadHistory();\n\t}\n\n\thasPreparedHistoryMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedHistoryMessages();\n\t}\n\n\tdrawPreparedHistoryMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedHistoryMessages();\n\t}\n\n\thasPreparedUnreadMessages(): boolean\n\t{\n\t\treturn this.#loadService.hasPreparedUnreadMessages();\n\t}\n\n\tdrawPreparedUnreadMessages(): Promise\n\t{\n\t\treturn this.#loadService.drawPreparedUnreadMessages();\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.#loadService.isLoading();\n\t}\n\t// endregion 'pagination'\n\n\t// region 'context'\n\tloadContext(messageId: number): Promise\n\t{\n\t\treturn this.#loadService.loadContext(messageId);\n\t}\n\n\tloadContextByChatId(chatId: number): Promise<number>\n\t{\n\t\treturn this.#loadService.loadContextByChatId(chatId);\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\treturn this.#loadService.loadFirstPage();\n\t}\n\t// endregion 'context\n\n\t// region 'reload messages'\n\treloadMessageList(): Promise\n\t{\n\t\treturn this.#loadService.reloadMessageList();\n\t}\n\n\tloadInitialMessages(): Promise\n\t{\n\t\treturn this.#loadService.loadInitialMessages();\n\t}\n\t// endregion 'reload messages'\n\n\t// region 'pin'\n\tpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.pinMessage(chatId, messageId);\n\t}\n\n\tunpinMessage(chatId: number, messageId: number)\n\t{\n\t\tthis.#pinService.unpinMessage(chatId, messageId);\n\t}\n\t// endregion 'pin'\n\n\t// region 'mark'\n\tmarkMessage(messageId: number)\n\t{\n\t\tthis.#markService.markMessage(messageId);\n\t}\n\t// endregion 'mark'\n\n\t// region 'favorite'\n\taddMessageToFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.addMessageToFavorite(messageId);\n\t}\n\n\tremoveMessageFromFavorite(messageId: number)\n\t{\n\t\tthis.#favoriteService.removeMessageFromFavorite(messageId);\n\t}\n\t// endregion 'favorite'\n\n\t// region 'edit'\n\teditMessageText(messageId: number, text: string)\n\t{\n\t\tthis.#editService.editMessageText(messageId, text);\n\t}\n\t// endregion 'edit'\n\n\t// region 'delete'\n\tdeleteMessage(messageId: number | string): Promise\n\t{\n\t\tthis.#deleteService.deleteMessage(messageId);\n\t}\n\t// endregion 'delete'\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction, type RunActionError } from 'im.v2.lib.rest';\nimport { Core } from 'im.v2.application.core';\nimport { EventType, RestMethod, DialogScrollThreshold, ChatType } from 'im.v2.const';\n\nimport { MessageService } from '../registry';\n\nimport type { Store } from 'ui.vue3.vuex';\nimport type { JsonObject, JsonValue } from 'main.core';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\ntype BaseMessageParams = {\n\tdialogId: string,\n\ttext: string,\n\ttempMessageId?: string,\n};\n\ntype PlainMessageParams = BaseMessageParams & {\n\treplyId?: number,\n\tforwardIds?: number[],\n};\n\ntype CopilotMessageParams = BaseMessageParams & {\n\tcopilot: {\n\t\tpromptCode: string,\n\t},\n};\n\ntype FileMessageParams = BaseMessageParams & {\n\tfileIds: string[],\n};\n\ntype PreparedMessage = {\n\ttemporaryId: string,\n\tchatId: number,\n\tdialogId: string,\n\tauthorId: number,\n\treplyId: number,\n\tforward: {userId: number, id: string},\n\tforwardIds: {[string]: number},\n\ttext: string,\n\tparams: JsonObject,\n\tcopilot: JsonObject,\n\tunread: boolean,\n\tsending: boolean,\n\tviewedByOthers: boolean,\n};\n\nexport type ForwardedEntityConfig = {\n\tid: number,\n\ttitle: string,\n};\n\nexport type PanelContext = {\n\tmessageId: number,\n\t[prop: string]: JsonValue,\n}\n\nexport class SendingService\n{\n\t#store: Store;\n\n\tstatic instance: SendingService = null;\n\n\tstatic getInstance(): SendingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tasync sendMessage(params: PlainMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage', params);\n\t\tconst message = this.#prepareMessage(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync #addLoadingMessage(message: PreparedMessage): Promise<void>\n\t{\n\t\treturn this.#store.dispatch('messages/addLoadingMessage', {\n\t\t\tmessage,\n\t\t});\n\t}\n\n\tasync sendMessageWithFiles(params: FileMessageParams): Promise<void>\n\t{\n\t\tconst { text = '', fileIds = [] } = params;\n\t\tif (!Type.isStringFilled(text) && !Type.isArrayFilled(fileIds))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage with files', params);\n\t\tconst message: PreparedMessage = this.#prepareMessageWithFiles(params);\n\n\t\tawait this.#handlePagination(message.dialogId);\n\t\tawait this.#addLoadingMessage(message);\n\t\tawait this.#addMessageToRecent(message);\n\t\tawait this.#clearLastMessageViews(message.dialogId);\n\n\t\tthis.#sendScrollEvent({\n\t\t\tforce: true,\n\t\t\tdialogId: message.dialogId,\n\t\t});\n\t}\n\n\tasync forwardMessages(params: PlainMessageParams): Promise\n\t{\n\t\tconst { forwardIds, dialogId, text } = params;\n\t\tif (!Type.isArrayFilled(forwardIds))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tLogger.warn('SendingService: forwardMessages', params);\n\n\t\tawait this.#handlePagination(dialogId);\n\n\t\tlet commentMessage = null;\n\t\tif (Type.isStringFilled(text))\n\t\t{\n\t\t\tcommentMessage = this.#prepareMessage(params);\n\t\t\tawait this.#addMessageToModels(commentMessage);\n\t\t}\n\n\t\tconst sortForwardIds = [...forwardIds].sort();\n\t\tconst forwardUuidMap = this.#getForwardUuidMap(sortForwardIds);\n\t\tconst forwardedMessages = this.#prepareForwardMessages(params, forwardUuidMap);\n\n\t\tawait this.#addForwardsToModels(forwardedMessages);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId });\n\t\ttry\n\t\t{\n\t\t\tconst requestParams = this.#prepareSendForwardRequest({ forwardUuidMap, commentMessage, dialogId });\n\t\t\tconst response = await this.#sendMessageToServer(requestParams);\n\t\t\tLogger.warn('SendingService: forwardMessage result -', response);\n\t\t\tthis.#handleForwardMessageResponse({ response, dialogId, commentMessage });\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\tthis.#handleForwardMessageError({ commentMessage, forwardUuidMap });\n\t\t\tthis.#logSendErrors(errors, 'forwardMessage');\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tasync retrySendMessage(params: { tempMessageId: string, dialogId: string }): Promise\n\t{\n\t\tconst { tempMessageId, dialogId } = params;\n\t\tconst unsentMessage: ImModelMessage = this.#store.getters['messages/getById'](tempMessageId);\n\t\tif (!unsentMessage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#removeMessageError(tempMessageId);\n\t\tconst message = this.#prepareMessage({\n\t\t\ttext: unsentMessage.text,\n\t\t\tdialogId,\n\t\t\ttempMessageId: unsentMessage.id,\n\t\t\treplyId: unsentMessage.replyId,\n\t\t});\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync sendCopilotPrompt(params: CopilotMessageParams): Promise\n\t{\n\t\tconst { text = '' } = params;\n\t\tif (!Type.isStringFilled(text))\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendCopilotPrompt', params);\n\t\tconst message = this.#preparePrompt(params);\n\n\t\treturn this.#processMessageSending(message);\n\t}\n\n\tasync #processMessageSending(message: PreparedMessage): Promise\n\t{\n\t\tawait this.#handleAddingMessageToModels(message);\n\n\t\treturn this.#sendAndProcessMessage(message);\n\t}\n\n\tasync #handleAddingMessageToModels(message)\n\t{\n\t\tawait this.#handlePagination(message.dialogId);\n\t\tawait this.#addMessageToModels(message);\n\n\t\tthis.#sendScrollEvent({ force: true, dialogId: message.dialogId });\n\t}\n\n\tasync #sendAndProcessMessage(message: PreparedMessage): Promise\n\t{\n\t\tconst sendResult = await this.#sendMessageToServer(message)\n\t\t\t.catch((errors) => {\n\t\t\t\tthis.#updateMessageError(message.temporaryId);\n\t\t\t\tthis.#logSendErrors(errors, 'sendAndProcessMessage');\n\t\t\t});\n\n\t\tLogger.warn('SendingService: sendAndProcessMessage result -', sendResult);\n\t\tconst { id } = sendResult;\n\t\tif (!id)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#updateModels({\n\t\t\toldId: message.temporaryId,\n\t\t\tnewId: id,\n\t\t\tdialogId: message.dialogId,\n\t\t});\n\n\t\treturn Promise.resolve();\n\t}\n\n\t#prepareMessage(params: PlainMessageParams): PreparedMessage\n\t{\n\t\tconst { text, tempMessageId, dialogId, replyId, forwardIds } = params;\n\n\t\tconst defaultFields = {\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tunread: false,\n\t\t\tsending: true,\n\t\t};\n\n\t\treturn {\n\t\t\ttext,\n\t\t\tdialogId,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\ttemporaryId: tempMessageId ?? Utils.text.getUuidV4(),\n\t\t\treplyId,\n\t\t\tforwardIds,\n\t\t\tviewedByOthers: this.#needToSetAsViewed(dialogId),\n\t\t\t...defaultFields,\n\t\t};\n\t}\n\n\t#prepareMessageWithFiles(params: FileMessageParams): PreparedMessage\n\t{\n\t\tconst { fileIds } = params;\n\t\tif (!Type.isArrayFilled(fileIds))\n\t\t{\n\t\t\tthrow new Error('SendingService: sendMessageWithFile: no fileId provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tparams: { FILE_ID: fileIds },\n\t\t};\n\t}\n\n\t#preparePrompt(params: CopilotMessageParams): PreparedMessage\n\t{\n\t\tconst { copilot } = params;\n\t\tif (!copilot || !copilot.promptCode)\n\t\t{\n\t\t\tthrow new Error('SendingService: preparePrompt: no code provided');\n\t\t}\n\n\t\treturn {\n\t\t\t...this.#prepareMessage(params),\n\t\t\tcopilot,\n\t\t};\n\t}\n\n\t#handlePagination(dialogId: string): Promise\n\t{\n\t\tif (!this.#getDialog(dialogId).hasNextPage)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tLogger.warn('SendingService: sendMessage: there are unread pages, move to chat end');\n\t\tconst messageService = new MessageService({ chatId: this.#getDialog(dialogId).chatId });\n\n\t\treturn messageService.loadContext(this.#getDialog(dialogId).lastMessageId).then(() => {\n\t\t\tthis.#sendScrollEvent({ dialogId });\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SendingService: loadContext error', error);\n\t\t});\n\t}\n\n\t#addMessageToModels(message: PreparedMessage): Promise\n\t{\n\t\tthis.#addMessageToRecent(message);\n\n\t\tvoid this.#clearLastMessageViews(message.dialogId);\n\n\t\treturn this.#store.dispatch('messages/add', message);\n\t}\n\n\t#addMessageToRecent(message: PreparedMessage)\n\t{\n\t\tconst hasMessageText: boolean = Type.isStringFilled(message.text);\n\t\tconst hasMessageFile: boolean = Type.isArrayFilled(message.params?.FILE_ID);\n\n\t\tif (hasMessageText || hasMessageFile)\n\t\t{\n\t\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\t\tid: message.dialogId,\n\t\t\t\tfields: { messageId: message.temporaryId },\n\t\t\t});\n\t\t}\n\t}\n\n\t#sendMessageToServer(message: PreparedMessage): Promise\n\t{\n\t\tconst fields = {};\n\n\t\tif (message.replyId)\n\t\t{\n\t\t\tfields.replyId = message.replyId;\n\t\t}\n\n\t\tif (message.forwardIds)\n\t\t{\n\t\t\tfields.forwardIds = message.forwardIds;\n\t\t}\n\n\t\tif (message.text)\n\t\t{\n\t\t\tfields.message = message.text;\n\t\t\tfields.templateId = message.temporaryId;\n\t\t}\n\n\t\tif (message.copilot)\n\t\t{\n\t\t\tfields.copilot = message.copilot;\n\t\t}\n\n\t\tconst queryData = {\n\t\t\tdialogId: message.dialogId.toString(),\n\t\t\tfields,\n\t\t};\n\n\t\treturn runAction(RestMethod.imV2ChatMessageSend, { data: queryData });\n\t}\n\n\t#updateModels(params: { oldId: string, newId: number, dialogId: string })\n\t{\n\t\tconst { oldId, newId, dialogId } = params;\n\t\tvoid this.#store.dispatch('messages/updateWithId', {\n\t\t\tid: oldId,\n\t\t\tfields: { id: newId },\n\t\t});\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\tlastId: newId,\n\t\t\t\tlastMessageId: newId,\n\t\t\t},\n\t\t});\n\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: { messageId: newId },\n\t\t});\n\t}\n\n\t#updateMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: { error: true },\n\t\t});\n\t}\n\n\t#removeMessageError(messageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: messageId,\n\t\t\tfields: {\n\t\t\t\tsending: true,\n\t\t\t\terror: false,\n\t\t\t},\n\t\t});\n\t}\n\n\t#sendScrollEvent(params: {force: boolean, dialogId: string} = {})\n\t{\n\t\tconst { force = false, dialogId } = params;\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, {\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t\tthreshold: force ? DialogScrollThreshold.none : DialogScrollThreshold.halfScreenUp,\n\t\t});\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId, true);\n\t}\n\n\t#getDialogByChatId(chatId: number): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/getByChatId'](chatId, true);\n\t}\n\n\t#needToSetAsViewed(dialogId: string): boolean\n\t{\n\t\treturn this.#store.getters['users/bots/isNetwork'](dialogId);\n\t}\n\n\t#handleForwardMessageResponse(params: { response: Object, dialogId: string, commentMessage: PreparedMessage })\n\t{\n\t\tconst { response, dialogId, commentMessage } = params;\n\t\tconst { id, uuidMap } = response;\n\n\t\tif (id)\n\t\t{\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: commentMessage.temporaryId,\n\t\t\t\tnewId: id,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t}\n\t\tObject.entries(uuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tthis.#updateModels({\n\t\t\t\toldId: uuid,\n\t\t\t\tnewId: messageId,\n\t\t\t\tdialogId,\n\t\t\t});\n\t\t});\n\t}\n\n\t#handleForwardMessageError({ commentMessage, forwardUuidMap })\n\t{\n\t\tif (commentMessage)\n\t\t{\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: commentMessage.temporaryId,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t}\n\n\t\tObject.keys(forwardUuidMap).forEach((uuid: string) => {\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: uuid,\n\t\t\t\tfields: { error: true },\n\t\t\t});\n\t\t});\n\t}\n\n\t#prepareForwardMessages(params: PlainMessageParams, forwardUuidMap: {[string]: number}): PreparedMessage[]\n\t{\n\t\tconst { forwardIds, dialogId } = params;\n\t\tif (forwardIds.length === 0)\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst preparedMessages = [];\n\t\tObject.entries(forwardUuidMap).forEach(([uuid: string, messageId: number]) => {\n\t\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\t\tif (!message)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tpreparedMessages.push({\n\t\t\t\t...this.#prepareMessage({ dialogId, text: message.text, tempMessageId: uuid, replyId: message.replyId }),\n\t\t\t\tforward: this.#prepareForwardParams(messageId),\n\t\t\t\tattach: message.attach,\n\t\t\t\tisDeleted: message.isDeleted,\n\t\t\t\tfiles: message.files,\n\t\t\t});\n\t\t});\n\n\t\treturn preparedMessages;\n\t}\n\n\t#prepareForwardParams(messageId: number): { id: string, userId: number, chatType: string, chatTitle: string }\n\t{\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](messageId);\n\t\tconst chat = this.#getDialogByChatId(message.chatId);\n\n\t\tconst isForward = this.#store.getters['messages/isForward'](messageId);\n\n\t\tconst userId = isForward ? message.forward.userId : message.authorId;\n\t\tconst chatType = isForward ? message.forward.chatType : chat.type;\n\t\tlet chatTitle = isForward ? message.forward.chatTitle : chat.name;\n\t\tif (chatType === ChatType.channel)\n\t\t{\n\t\t\tchatTitle = null;\n\t\t}\n\n\t\treturn {\n\t\t\tid: this.#buildForwardContextId(message.chatId, messageId),\n\t\t\tuserId,\n\t\t\tchatType,\n\t\t\tchatTitle,\n\t\t};\n\t}\n\n\t#prepareSendForwardRequest(params: {\n\t\tforwardUuidMap: { [string]: number },\n\t\tcommentMessage: ?PreparedMessage,\n\t\tdialogId: string\n\t}): { dialogId: string, forwardIds: { [string]: number }, text?: string, temporaryId?: string }\n\t{\n\t\tconst { dialogId, forwardUuidMap, commentMessage } = params;\n\n\t\tconst requestPrams = {\n\t\t\tdialogId,\n\t\t\tforwardIds: forwardUuidMap,\n\t\t};\n\n\t\tif (commentMessage)\n\t\t{\n\t\t\trequestPrams.text = commentMessage.text;\n\t\t\trequestPrams.temporaryId = commentMessage.temporaryId;\n\t\t}\n\n\t\treturn requestPrams;\n\t}\n\n\t#addForwardsToModels(forwardedMessages: PreparedMessage[]): Promise\n\t{\n\t\tconst addPromises = [];\n\t\tforwardedMessages.forEach((message) => {\n\t\t\taddPromises.push(this.#addMessageToModels(message));\n\t\t});\n\n\t\treturn Promise.all(addPromises);\n\t}\n\n\t#getForwardUuidMap(forwardIds: number[]): { [string]: number }\n\t{\n\t\tconst uuidMap = {};\n\t\tforwardIds.forEach((id) => {\n\t\t\tuuidMap[Utils.text.getUuidV4()] = id;\n\t\t});\n\n\t\treturn uuidMap;\n\t}\n\n\t#buildForwardContextId(chatId: number, messageId: number): string\n\t{\n\t\tconst dialogId = this.#getDialogByChatId(chatId).dialogId;\n\t\tif (dialogId.startsWith('chat'))\n\t\t{\n\t\t\treturn `${dialogId}/${messageId}`;\n\t\t}\n\n\t\tconst currentUser = Core.getUserId();\n\n\t\treturn `${dialogId}:${currentUser}/${messageId}`;\n\t}\n\n\t#logSendErrors(errors: RunActionError[], methodName: string)\n\t{\n\t\terrors.forEach((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(`SendingService: ${methodName} error: code: ${error.code} message: ${error.message}`);\n\t\t});\n\t}\n\n\t#clearLastMessageViews(dialogId: string): Promise<any>\n\t{\n\t\treturn this.#store.dispatch('chats/clearLastMessageViews', {\n\t\t\tdialogId,\n\t\t});\n\t}\n}\n","import { Runtime, Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { NotificationTypesCodes, RestMethod } from 'im.v2.const';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { NotificationGetRestResult, NotificationItemRest } from './types/notification';\n\nexport class NotificationService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\tlimitPerPage: Number = 50;\n\tisLoading: boolean = false;\n\n\tlastId: number = 0;\n\tlastType: number = 0;\n\thasMoreItemsToLoad: boolean = true;\n\n\tnotificationsToDelete: Set<number> = new Set();\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t\tthis.deleteWithDebounce = Runtime.debounce(this.deleteRequest, 500, this);\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tloadFirstPage(): Promise\n\t{\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems({ firstPage: true });\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.isLoading || !this.hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\t\tthis.isLoading = true;\n\n\t\treturn this.requestItems();\n\t}\n\n\tdelete(notificationId: number)\n\t{\n\t\tthis.notificationsToDelete.add(notificationId);\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\t\tthis.store.dispatch('notifications/deleteFromSearch', { id: notificationId });\n\n\t\tthis.deleteWithDebounce();\n\t}\n\n\tsendConfirmAction(notificationId: number, value: string)\n\t{\n\t\tconst requestParams = {\n\t\t\tNOTIFY_ID: notificationId,\n\t\t\tNOTIFY_VALUE: value,\n\t\t};\n\n\t\tthis.store.dispatch('notifications/delete', { id: notificationId });\n\n\t\tthis.restClient.callMethod('im.notify.confirm', requestParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t}\n\n\tasync sendQuickAnswer(params)\n\t{\n\t\tconst { id, text, callbackSuccess = () => {}, callbackError = () => {} } = params;\n\n\t\ttry\n\t\t{\n\t\t\tconst response = await this.restClient.callMethod(RestMethod.imNotifyAnswer, {\n\t\t\t\tnotify_id: id,\n\t\t\t\tanswer_text: text,\n\t\t\t});\n\t\t\tcallbackSuccess(response);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(error);\n\t\t\tcallbackError();\n\t\t}\n\t}\n\n\tdeleteRequest()\n\t{\n\t\tconst idsToDelete = [...this.notificationsToDelete];\n\n\t\tthis.restClient.callMethod('im.notify.delete', { id: idsToDelete })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\n\t\tthis.notificationsToDelete.clear();\n\t}\n\n\trequestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst imNotifyGetQueryParams = {\n\t\t\tLIMIT: this.limitPerPage,\n\t\t\tCONVERT_TEXT: 'Y',\n\t\t};\n\t\tconst batchQueryParams = {\n\t\t\t[RestMethod.imNotifyGet]: [RestMethod.imNotifyGet, imNotifyGetQueryParams],\n\t\t};\n\n\t\tif (firstPage)\n\t\t{\n\t\t\tbatchQueryParams[RestMethod.imNotifySchemaGet] = [RestMethod.imNotifySchemaGet, {}];\n\t\t}\n\t\telse\n\t\t{\n\t\t\timNotifyGetQueryParams.LAST_ID = this.lastId;\n\t\t\timNotifyGetQueryParams.LAST_TYPE = this.lastType;\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.restClient.callBatch(batchQueryParams, (response) => {\n\t\t\t\tLogger.warn('im.notify.get: result', response);\n\t\t\t\tresolve(this.handleResponse(response));\n\t\t\t});\n\t\t});\n\t}\n\n\thandleResponse(response: Object): Promise\n\t{\n\t\tconst imNotifyGetResponse = response[RestMethod.imNotifyGet].data();\n\t\tthis.hasMoreItemsToLoad = !this.isLastPage(imNotifyGetResponse.notifications);\n\t\tif (imNotifyGetResponse.notifications.length === 0)\n\t\t{\n\t\t\tLogger.warn('im.notify.get: no notifications', imNotifyGetResponse);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.lastId = this.getLastItemId(imNotifyGetResponse.notifications);\n\t\tthis.lastType = this.getLastItemType(imNotifyGetResponse.notifications);\n\n\t\treturn this.updateModels(imNotifyGetResponse).then(() => {\n\t\t\tthis.isLoading = false;\n\n\t\t\tif (response[RestMethod.imNotifySchemaGet])\n\t\t\t{\n\t\t\t\treturn response[RestMethod.imNotifySchemaGet].data();\n\t\t\t}\n\n\t\t\treturn {};\n\t\t});\n\t}\n\n\tupdateModels(imNotifyGetResponse: NotificationGetRestResult): Promise\n\t{\n\t\tthis.userManager.setUsersToModel(imNotifyGetResponse.users);\n\n\t\treturn this.store.dispatch('notifications/initialSet', imNotifyGetResponse);\n\t}\n\n\tgetLastItemId(collection: NotificationItemRest[]): number\n\t{\n\t\treturn collection[collection.length - 1].id;\n\t}\n\n\tgetLastItemType(collection: NotificationItemRest[]): number\n\t{\n\t\treturn this.getItemType(collection[collection.length - 1]);\n\t}\n\n\tgetItemType(item: NotificationItemRest): number\n\t{\n\t\treturn item.notify_type === NotificationTypesCodes.confirm\n\t\t\t? NotificationTypesCodes.confirm\n\t\t\t: NotificationTypesCodes.simple\n\t\t;\n\t}\n\n\tisLastPage(notifications: Array): boolean\n\t{\n\t\tif (!Type.isArrayFilled(notifications))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn notifications.length < this.limitPerPage;\n\t}\n\n\tdestroy()\n\t{\n\t\tLogger.warn('Notification service destroyed');\n\t}\n}\n","import { RestClient } from 'rest.client';\n\nimport { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class DiskService\n{\n\t#restClient: RestClient;\n\n\tconstructor()\n\t{\n\t\tthis.#restClient = Core.getRestClient();\n\t}\n\n\tdelete({ chatId, fileId }): Promise\n\t{\n\t\tconst queryParams = { chat_id: chatId, file_id: fileId };\n\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileDelete, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('DiskService: error deleting file', error);\n\t\t});\n\t}\n\n\tsave(fileId: number): Promise\n\t{\n\t\tconst queryParams = { file_id: fileId };\n\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileSave, queryParams).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('DiskService: error saving file on disk', error);\n\t\t});\n\t}\n}\n","import { BaseEvent, EventEmitter } from 'main.core.events';\nimport { Uploader, UploaderEvent } from 'ui.uploader.core';\n\nimport { EventType } from 'im.v2.const';\n\nimport type { UploaderFile } from 'ui.uploader.core';\nimport type { MessageWithFile } from '../types/uploading';\n\ntype UploaderWrapperOptions = {\n\tdiskFolderId: number,\n\tuploaderId: string,\n\tchatId: number,\n\tdialogId: string,\n\tautoUpload: boolean,\n}\n\nconst MAX_FILES_IN_ONE_MESSAGE = 10;\n\nexport class UploaderWrapper extends EventEmitter\n{\n\t#uploaderRegistry: {[uploaderId: string]: Uploader} = {};\n\t#onUploadCancelHandler: Function;\n\n\tstatic eventNamespace = 'BX.Messenger.v2.Service.Uploading.UploaderWrapper';\n\n\tstatic events = {\n\t\tonFileAddStart: 'onFileAddStart',\n\t\tonFileAdd: 'onFileAdd',\n\t\tonFileUploadStart: 'onFileUploadStart',\n\t\tonFileUploadProgress: 'onFileUploadProgress',\n\t\tonFileUploadComplete: 'onFileUploadComplete',\n\t\tonFileUploadError: 'onFileUploadError',\n\t\tonFileUploadCancel: 'onFileUploadCancel',\n\t\tonMaxFileCountExceeded: 'onMaxFileCountExceeded',\n\t\tonUploadComplete: 'onUploadComplete',\n\t};\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace(UploaderWrapper.eventNamespace);\n\n\t\tthis.#onUploadCancelHandler = this.#onUploadCancel.bind(this);\n\t\tEventEmitter.subscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n\n\tcreateUploader(options: UploaderWrapperOptions)\n\t{\n\t\tconst { diskFolderId, uploaderId, autoUpload = false, chatId, dialogId } = options;\n\n\t\tthis.#uploaderRegistry[uploaderId] = new Uploader({\n\t\t\tautoUpload,\n\t\t\tcontroller: 'disk.uf.integration.diskUploaderController',\n\t\t\tmultiple: true,\n\t\t\tcontrollerOptions: {\n\t\t\t\tfolderId: diskFolderId,\n\t\t\t\tchat: {\n\t\t\t\t\tchatId,\n\t\t\t\t\tdialogId,\n\t\t\t\t},\n\t\t\t},\n\t\t\timageResizeWidth: 1280,\n\t\t\timageResizeHeight: 1280,\n\t\t\timageResizeMode: 'contain',\n\t\t\timageResizeFilter: (file: UploaderFile) => {\n\t\t\t\treturn !file.getCustomData('sendAsFile') && file.getExtension() !== 'gif';\n\t\t\t},\n\t\t\timageResizeMimeType: 'image/jpeg',\n\t\t\timageResizeMimeTypeMode: 'force',\n\t\t\timagePreviewHeight: 720,\n\t\t\timagePreviewWidth: 720,\n\t\t\ttreatOversizeImageAsFile: true,\n\t\t\tignoreUnknownImageTypes: true,\n\t\t\tmaxFileSize: null,\n\t\t\tevents: {\n\t\t\t\t[UploaderEvent.FILE_ADD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAddStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_START]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadStart, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ADD]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileAdd, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_PROGRESS]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadProgress, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tconst { file } = event.getData();\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadComplete, { file, uploaderId });\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.FILE_ERROR]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onFileUploadError, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.MAX_FILE_COUNT_EXCEEDED]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onMaxFileCountExceeded, event);\n\t\t\t\t},\n\t\t\t\t[UploaderEvent.UPLOAD_COMPLETE]: (event) => {\n\t\t\t\t\tthis.emit(UploaderWrapper.events.onUploadComplete, { uploaderId });\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].setAutoUpload(true);\n\t\tthis.#uploaderRegistry[uploaderId].start();\n\t}\n\n\tdestroyUploader(uploaderId: string)\n\t{\n\t\tthis.#uploaderRegistry[uploaderId].destroy({ removeFilesFromServer: false });\n\t}\n\n\taddFiles(tasks: MessageWithFile[]): UploaderFile[]\n\t{\n\t\tconst firstTenTasks = tasks.slice(0, MAX_FILES_IN_ONE_MESSAGE);\n\n\t\tconst addedFiles = [];\n\t\tfirstTenTasks.forEach((task) => {\n\t\t\tconst file = this.#addFile(task);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\taddedFiles.push(file);\n\t\t\t}\n\t\t});\n\n\t\treturn addedFiles;\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderRegistry[uploaderId].getFiles();\n\t}\n\n\t#addFile(task: MessageWithFile): ?UploaderFile\n\t{\n\t\treturn this.#uploaderRegistry[task.uploaderId].addFile(\n\t\t\ttask.file,\n\t\t\t{\n\t\t\t\tid: task.tempFileId,\n\t\t\t\tcustomData: {\n\t\t\t\t\tdialogId: task.dialogId,\n\t\t\t\t\tchatId: task.chatId,\n\t\t\t\t\ttempMessageId: task.tempMessageId,\n\t\t\t\t\tsendAsFile: task.sendAsFile,\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t}\n\n\t#onUploadCancel(event: BaseEvent)\n\t{\n\t\tconst { tempFileId, tempMessageId } = event.getData();\n\t\tif (!tempFileId || !tempMessageId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#removeFileFromUploader(tempFileId);\n\t\tthis.emit(UploaderWrapper.events.onFileUploadCancel, { tempMessageId, tempFileId });\n\t}\n\n\t#removeFileFromUploader(tempFileId: string)\n\t{\n\t\tconst uploaderList = Object.values(this.#uploaderRegistry);\n\t\tfor (const uploader of uploaderList)\n\t\t{\n\t\t\tif (!uploader.getFile)\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst file = uploader.getFile(tempFileId);\n\t\t\tif (file)\n\t\t\t{\n\t\t\t\tfile.remove();\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.uploader.cancel, this.#onUploadCancelHandler);\n\t}\n}\n","import { BaseEvent } from 'main.core.events';\nimport { getFilesFromDataTransfer, isFilePasted } from 'ui.uploader.core';\nimport { runAction } from 'im.v2.lib.rest';\n\nimport { Core } from 'im.v2.application.core';\nimport { FileStatus, FileType, RestMethod } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UploaderWrapper } from './classes/uploader-wrapper';\nimport { SendingService } from '../registry';\n\nimport type { ImModelChat, ImModelUser, ImModelMessage } from 'im.v2.model';\nimport type { UploaderFile, UploaderError } from 'ui.uploader.core';\nimport type { Store } from 'ui.vue3.vuex';\nimport type { RestClient } from 'rest.client';\nimport type {\n\tMessageWithFile,\n\tFileFromDisk,\n\tFileCommitParams,\n\tUploadFilesParams,\n\tUploadFromClipboardParams,\n\tUploadFromInputParams,\n\tUploadFromDragAndDrop,\n} from './types/uploading';\n\nexport class UploadingService\n{\n\t#store: Store;\n\t#restClient: RestClient;\n\t#isRequestingDiskFolderId: boolean = false;\n\t#diskFolderIdRequestPromise: { [string]: Promise } = {};\n\t#uploaderWrapper: UploaderWrapper;\n\t#sendingService: SendingService;\n\t#uploaderFilesRegistry: {\n\t\t[uploaderId: string]: {\n\t\t\tautoUpload: boolean,\n\t\t\twasSent: boolean,\n\t\t\ttext: string,\n\t\t\tdialogId: string,\n\t\t\ttempMessageId: string,\n\t\t\tpreviewCreatedStatus: { [string]: boolean },\n\t\t\tpreviewSentStatus: { [string]: boolean }\n\t\t}\n\t} = {};\n\n\tstatic instance = null;\n\n\tstatic getInstance(): UploadingService\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#restClient = Core.getRestClient();\n\t\tthis.#sendingService = SendingService.getInstance();\n\t\tthis.#initUploader();\n\t}\n\n\tasync uploadFromClipboard(params: UploadFromClipboardParams): Promise<{files: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { clipboardEvent, dialogId, autoUpload, imagesOnly } = params;\n\n\t\tconst { clipboardData } = clipboardEvent;\n\t\tif (!clipboardData || !isFilePasted(clipboardData))\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tclipboardEvent.preventDefault();\n\n\t\tlet files: File[] = await getFilesFromDataTransfer(clipboardData);\n\t\tif (imagesOnly)\n\t\t{\n\t\t\tfiles = files.filter((file) => Utils.file.isImage(file.name));\n\t\t\tif (imagesOnly.length === 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\tconst { uploaderFiles, uploaderId } = await this.#addFiles({\n\t\t\tfiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t});\n\n\t\tif (uploaderFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn uploaderId;\n\t}\n\n\tasync uploadFromInput(params: UploadFromInputParams): Promise<string>\n\t{\n\t\tconst { event, sendAsFile, autoUpload, dialogId } = params;\n\t\tconst rawFiles = Object.values(event.target.files);\n\t\tif (rawFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tconst { uploaderId } = await this.#addFiles({\n\t\t\tfiles: rawFiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t\tsendAsFile,\n\t\t});\n\n\t\treturn uploaderId;\n\t}\n\n\tasync uploadFromDragAndDrop(params: UploadFromDragAndDrop): Promise<string>\n\t{\n\t\tconst { event, dialogId, autoUpload, sendAsFile } = params;\n\t\tevent.preventDefault();\n\n\t\tconst rawFiles = await getFilesFromDataTransfer(event.dataTransfer);\n\t\tif (rawFiles.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\tconst { uploaderId } = await this.#addFiles({\n\t\t\tfiles: rawFiles,\n\t\t\tdialogId,\n\t\t\tautoUpload,\n\t\t\tsendAsFile,\n\t\t});\n\n\t\treturn uploaderId;\n\t}\n\n\t#createUploader(params: { dialogId: string, autoUpload: boolean }): Promise<string>\n\t{\n\t\tconst { dialogId, autoUpload } = params;\n\n\t\tconst uploaderId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn this.checkDiskFolderId(dialogId).then((diskFolderId: number) => {\n\t\t\tthis.#uploaderWrapper.createUploader({\n\t\t\t\tdiskFolderId,\n\t\t\t\tuploaderId,\n\t\t\t\tautoUpload,\n\t\t\t\tchatId,\n\t\t\t\tdialogId,\n\t\t\t});\n\n\t\t\treturn uploaderId;\n\t\t});\n\t}\n\n\t#addFiles(params: UploadFilesParams): Promise<{uploaderFiles: UploaderFile[], uploaderId: string}>\n\t{\n\t\tconst { files, dialogId, autoUpload, sendAsFile = false } = params;\n\n\t\treturn this.#createUploader({ dialogId, autoUpload }).then((uploaderId: string) => {\n\t\t\tconst filesForUploader = [];\n\t\t\tfiles.forEach((file) => {\n\t\t\t\tconst preparedFile = this.#prepareFileForUploader(file, dialogId, uploaderId, sendAsFile);\n\t\t\t\tfilesForUploader.push(preparedFile);\n\t\t\t});\n\n\t\t\tconst addedFiles = this.#uploaderWrapper.addFiles(filesForUploader);\n\t\t\tthis.#registerFiles(uploaderId, addedFiles, dialogId, autoUpload);\n\n\t\t\treturn {\n\t\t\t\tuploaderFiles: addedFiles,\n\t\t\t\tuploaderId,\n\t\t\t};\n\t\t});\n\t}\n\n\tgetFiles(uploaderId): UploaderFile[]\n\t{\n\t\treturn this.#uploaderWrapper.getFiles(uploaderId);\n\t}\n\n\tstart(uploaderId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = true;\n\t\tthis.#uploaderWrapper.start(uploaderId);\n\t}\n\n\tuploadFileFromDisk(files, dialogId)\n\t{\n\t\tObject.values(files).forEach((file) => {\n\t\t\tconst messageWithFile = this.#prepareFileFromDisk(file, dialogId);\n\n\t\t\tthis.#addFileFromDiskToModel(messageWithFile).then(() => {\n\t\t\t\tconst message = {\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\tfileIds: [messageWithFile.tempFileId],\n\t\t\t\t\tdialogId: messageWithFile.dialogId,\n\t\t\t\t};\n\n\t\t\t\treturn this.#sendingService.sendMessageWithFiles(message);\n\t\t\t}).then(() => {\n\t\t\t\tthis.commitFile({\n\t\t\t\t\tchatId: messageWithFile.chatId,\n\t\t\t\t\ttemporaryFileId: messageWithFile.tempFileId,\n\t\t\t\t\ttempMessageId: messageWithFile.tempMessageId,\n\t\t\t\t\trealFileId: messageWithFile.file.id.slice(1),\n\t\t\t\t\tfromDisk: true,\n\t\t\t\t});\n\t\t\t}).catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('SendingService: sendFilesFromDisk error:', error);\n\t\t\t});\n\t\t});\n\t}\n\n\t#addFileFromDiskToModel(messageWithFile: MessageWithFile): Promise\n\t{\n\t\treturn this.#store.dispatch('files/add', {\n\t\t\tid: messageWithFile.tempFileId,\n\t\t\tchatId: messageWithFile.chatId,\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: messageWithFile.file.name,\n\t\t\ttype: Utils.file.getFileTypeByExtension(messageWithFile.file.ext),\n\t\t\textension: messageWithFile.file.ext,\n\t\t\tsize: messageWithFile.file.sizeInt,\n\t\t\tstatus: FileStatus.wait,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t});\n\t}\n\n\t#initUploader()\n\t{\n\t\tthis.#uploaderWrapper = new UploaderWrapper();\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAddStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#addFileToStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileAdd, (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId } = event.getData();\n\t\t\tthis.#updateFilePreviewInStore(file);\n\t\t\tthis.#setPreviewCreatedStatus(uploaderId, file.getId());\n\t\t\tthis.#tryToSendMessage(uploaderId);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadStart, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileSizeInStore(file);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadProgress, (event: BaseEvent) => {\n\t\t\tconst { file } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), file.getProgress(), FileStatus.upload);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadComplete, async (event: BaseEvent) => {\n\t\t\tconst { file, uploaderId }: {file: UploaderFile, uploaderId: string} = event.getData();\n\t\t\tconst serverFileId: number = file.getServerFileId().toString().slice(1);\n\t\t\tconst temporaryFileId: string = file.getId();\n\t\t\tthis.#setFileMapping({ serverFileId, temporaryFileId });\n\n\t\t\tthis.#updateFileProgress(temporaryFileId, file.getProgress(), FileStatus.wait);\n\n\t\t\tawait this.#uploadPreview(file);\n\t\t\tthis.#setPreviewSentStatus(uploaderId, temporaryFileId);\n\n\t\t\tvoid this.#tryCommit(uploaderId);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadError, (event: BaseEvent) => {\n\t\t\tconst { file, error } = event.getData();\n\t\t\tthis.#updateFileProgress(file.getId(), 0, FileStatus.error);\n\t\t\tthis.#setMessageError(file.getCustomData('tempMessageId'));\n\t\t\tthis.#showError(error);\n\t\t\tLogger.error('UploadingService: upload error', error);\n\t\t});\n\n\t\tthis.#uploaderWrapper.subscribe(UploaderWrapper.events.onFileUploadCancel, (event: BaseEvent) => {\n\t\t\tconst { tempMessageId, tempFileId } = event.getData();\n\t\t\tthis.#cancelUpload(tempMessageId, tempFileId);\n\t\t});\n\t}\n\n\t#setFileMapping(options: {serverFileId: number, temporaryFileId: string})\n\t{\n\t\tvoid this.#store.dispatch('files/setTemporaryFileMapping', options);\n\t}\n\n\tcheckDiskFolderId(dialogId: string): Promise<number>\n\t{\n\t\tif (this.#getDiskFolderId(dialogId) > 0)\n\t\t{\n\t\t\treturn Promise.resolve(this.#getDiskFolderId(dialogId));\n\t\t}\n\n\t\tif (this.#isRequestingDiskFolderId)\n\t\t{\n\t\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t\t}\n\n\t\tthis.#diskFolderIdRequestPromise[dialogId] = this.#requestDiskFolderId(dialogId);\n\n\t\treturn this.#diskFolderIdRequestPromise[dialogId];\n\t}\n\n\t#requestDiskFolderId(dialogId: string): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.#isRequestingDiskFolderId = true;\n\n\t\t\tconst chatId = this.#getChatId(dialogId);\n\t\t\tthis.#restClient.callMethod(RestMethod.imDiskFolderGet, { chat_id: chatId }).then((response) => {\n\t\t\t\tconst { ID: diskFolderId } = response.data();\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\tthis.#store.commit('chats/update', {\n\t\t\t\t\tdialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tdiskFolderId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tresolve(diskFolderId);\n\t\t\t}).catch((error) => {\n\t\t\t\tthis.#isRequestingDiskFolderId = false;\n\t\t\t\treject(error);\n\t\t\t});\n\t\t});\n\t}\n\n\tcommitFile(params: FileCommitParams)\n\t{\n\t\tconst { temporaryFileId, tempMessageId, chatId, realFileId, fromDisk, messageText = '', sendAsFile = false } = params;\n\n\t\tconst fileIdParams = {};\n\t\tif (fromDisk)\n\t\t{\n\t\t\tfileIdParams.disk_id = realFileId;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfileIdParams.upload_id = realFileId.toString().slice(1);\n\t\t}\n\n\t\tthis.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: messageText,\n\t\t\ttemplate_id: tempMessageId,\n\t\t\tfile_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\t...fileIdParams,\n\t\t}).catch((error) => {\n\t\t\tthis.#setMessageError(tempMessageId);\n\t\t\tthis.#updateFileProgress(temporaryFileId, 0, FileStatus.error);\n\t\t\tLogger.error('commitFile error', error);\n\t\t});\n\t}\n\n\tcommitMessage(uploaderId: string): Promise\n\t{\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\tconst fileIds = this.#uploaderWrapper.getFiles(uploaderId).map((file) => {\n\t\t\treturn file.getServerFileId().toString().slice(1);\n\t\t});\n\n\t\tconst sendAsFile = this.#uploaderWrapper.getFiles(uploaderId).every((file) => {\n\t\t\treturn file.getCustomData('sendAsFile');\n\t\t});\n\n\t\treturn this.#restClient.callMethod(RestMethod.imDiskFileCommit, {\n\t\t\tchat_id: chatId,\n\t\t\tmessage: this.#uploaderFilesRegistry[uploaderId].text,\n\t\t\ttemplate_id: this.#uploaderFilesRegistry[uploaderId].tempMessageId,\n\t\t\t// file_template_id: temporaryFileId,\n\t\t\tas_file: sendAsFile ? 'Y' : 'N',\n\t\t\tupload_id: fileIds,\n\t\t});\n\t}\n\n\tasync #tryCommit(uploaderId: string)\n\t{\n\t\tif (!this.#readyToCommit(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.commitMessage(uploaderId);\n\t\tthis.#uploaderWrapper.destroyUploader(uploaderId);\n\t}\n\n\tasync #uploadPreview(file: UploaderFile): Promise\n\t{\n\t\tif (\n\t\t\tthis.#getFileType(file.getBinary()) === FileType.file\n\t\t\t|| file.getExtension() === 'gif'\n\t\t)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst id = file.getServerFileId().toString().slice(1);\n\t\tconst previewFile = file.getClientPreview();\n\t\tif (!previewFile)\n\t\t{\n\t\t\tfile.setCustomData('sendAsFile', true);\n\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tconst formData = new FormData();\n\t\tformData.append('id', id);\n\t\tformData.append('previewFile', previewFile, `preview_${file.getName()}.jpg`);\n\n\t\treturn runAction(RestMethod.imDiskFilePreviewUpload, { data: formData }).catch((error) => {\n\t\t\tLogger.error('imDiskFilePreviewUpload request error', error);\n\t\t});\n\t}\n\n\t#prepareFileForUploader(file: File, dialogId: string, uploaderId, sendAsFile: boolean): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst tempFileId = Utils.text.getUuidV4();\n\t\tconst chatId = this.#getChatId(dialogId);\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tfile,\n\t\t\tdialogId,\n\t\t\tchatId,\n\t\t\tuploaderId,\n\t\t\tsendAsFile,\n\t\t};\n\t}\n\n\t#updateFileProgress(id: string, progress: number, status: string)\n\t{\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid,\n\t\t\tfields: {\n\t\t\t\tprogress: (progress === 100 ? 99 : progress),\n\t\t\t\tstatus,\n\t\t\t},\n\t\t});\n\t}\n\n\t#cancelUpload(tempMessageId: string, tempFileId)\n\t{\n\t\tconst message: ImModelMessage = this.#store.getters['messages/getById'](tempMessageId);\n\t\tif (message)\n\t\t{\n\t\t\tvoid this.#store.dispatch('messages/delete', { id: tempMessageId });\n\t\t\tvoid this.#store.dispatch('files/delete', { id: tempFileId });\n\n\t\t\tconst chat: ImModelChat = this.#store.getters['chats/getByChatId'](message.chatId);\n\t\t\tconst lastMessageId: string | number = this.#store.getters['messages/findLastChatMessageId'](message.chatId);\n\n\t\t\tif (lastMessageId > -1)\n\t\t\t{\n\t\t\t\tvoid this.#store.dispatch('recent/update', {\n\t\t\t\t\tid: chat.dialogId,\n\t\t\t\t\tfields: {\n\t\t\t\t\t\tmessageId: lastMessageId,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvoid this.#store.dispatch('recent/delete', {\n\t\t\t\t\tid: chat.dialogId,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t#addFileToStore(file: UploaderFile)\n\t{\n\t\tconst taskId = file.getId();\n\t\tconst fileBinary = file.getBinary();\n\t\tconst previewData = this.#preparePreview(file);\n\t\tconst asFile = file.getCustomData('sendAsFile');\n\n\t\tvoid this.#store.dispatch('files/add', {\n\t\t\tid: taskId,\n\t\t\tchatId: file.getCustomData('chatId'),\n\t\t\tauthorId: Core.getUserId(),\n\t\t\tname: fileBinary.name,\n\t\t\tsize: file.getSize(),\n\t\t\ttype: asFile ? FileType.file : this.#getFileType(fileBinary),\n\t\t\textension: this.#getFileExtension(fileBinary),\n\t\t\tstatus: file.isFailed() ? FileStatus.error : FileStatus.progress,\n\t\t\tprogress: 0,\n\t\t\tauthorName: this.#getCurrentUser().name,\n\t\t\t...previewData,\n\t\t});\n\t}\n\n\t#updateFilePreviewInStore(file: UploaderFile)\n\t{\n\t\tconst previewData = this.#preparePreview(file);\n\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\t...previewData,\n\t\t\t},\n\t\t});\n\t}\n\n\t#updateFileSizeInStore(file: UploaderFile)\n\t{\n\t\tvoid this.#store.dispatch('files/update', {\n\t\t\tid: file.getId(),\n\t\t\tfields: {\n\t\t\t\tsize: file.getSize(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#preparePreview(file: UploaderFile): { image: { width: number, height: number }, urlPreview: Blob }\n\t{\n\t\tif (file.getCustomData('sendAsFile'))\n\t\t{\n\t\t\treturn {};\n\t\t}\n\n\t\tconst preview = {\n\t\t\tblob: file.getPreviewUrl(),\n\t\t\twidth: file.getPreviewWidth(),\n\t\t\theight: file.getPreviewHeight(),\n\t\t};\n\n\t\tconst previewData = {};\n\t\tif (preview.blob)\n\t\t{\n\t\t\tpreviewData.image = {\n\t\t\t\twidth: preview.width,\n\t\t\t\theight: preview.height,\n\t\t\t};\n\n\t\t\tpreviewData.urlPreview = preview.blob;\n\t\t}\n\n\t\tif (file.getClientPreview())\n\t\t{\n\t\t\tpreviewData.urlShow = URL.createObjectURL(file.getBinary());\n\t\t}\n\n\t\treturn previewData;\n\t}\n\n\t#getDiskFolderId(dialogId: string): number\n\t{\n\t\treturn this.#getDialog(dialogId).diskFolderId;\n\t}\n\n\t#getFileType(file: File): string\n\t{\n\t\tlet fileType = FileType.file;\n\t\tif (file.type.startsWith('image'))\n\t\t{\n\t\t\tfileType = FileType.image;\n\t\t}\n\t\telse if (file.type.startsWith('video'))\n\t\t{\n\t\t\tfileType = FileType.video;\n\t\t}\n\n\t\treturn fileType;\n\t}\n\n\t#getFileExtension(file: File): string\n\t{\n\t\treturn file.name.split('.').splice(-1)[0];\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn this.#store.getters['users/get'](userId);\n\t}\n\n\t#getChatId(dialogId: string): ?number\n\t{\n\t\treturn this.#getDialog(dialogId)?.chatId;\n\t}\n\n\t#registerFiles(uploaderId: string, files: UploaderFile[], dialogId: string, autoUpload: boolean)\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\tthis.#uploaderFilesRegistry[uploaderId] = {\n\t\t\t\tpreviewCreatedStatus: {},\n\t\t\t\tpreviewSentStatus: {},\n\t\t\t\tdialogId,\n\t\t\t\ttext: '',\n\t\t\t\tautoUpload,\n\t\t\t};\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tconst fileId = file.getId();\n\t\t\tif (!this.#uploaderFilesRegistry[uploaderId].previewCreatedStatus)\n\t\t\t{\n\t\t\t\tthis.#uploaderFilesRegistry[uploaderId].previewCreatedStatus = {};\n\t\t\t}\n\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].previewCreatedStatus[fileId] = false;\n\t\t\tthis.#uploaderFilesRegistry[uploaderId].previewSentStatus[fileId] = false;\n\t\t});\n\t}\n\n\t#setPreviewCreatedStatus(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].previewCreatedStatus[fileId] = true;\n\t}\n\n\t#setPreviewSentStatus(uploaderId: string, fileId: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].previewSentStatus[fileId] = true;\n\t}\n\n\t#setMessagesText(uploaderId: string, text: string)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].text = text;\n\t}\n\n\t#setAutoUpload(uploaderId: string, autoUploadFlag: boolean)\n\t{\n\t\tthis.#uploaderFilesRegistry[uploaderId].autoUpload = autoUploadFlag;\n\t}\n\n\t// we don't use it now, because we always send several files in ONE message\n\t// noinspection JSUnusedGlobalSymbols\n\tsendSeparateMessagesWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessages(uploaderId);\n\t}\n\n\tsendMessageWithFiles(params: { uploaderId: string, text: string})\n\t{\n\t\tconst { uploaderId, text } = params;\n\n\t\tthis.#setMessagesText(uploaderId, text);\n\t\tthis.#setAutoUpload(uploaderId, true);\n\t\tthis.#tryToSendMessage(uploaderId);\n\t}\n\n\t#createMessagesFromFiles(uploaderId): {comment: {text: string, dialogId: string}, files: []}\n\t{\n\t\tconst messagesToSend = {\n\t\t\tcomment: {},\n\t\t\tfiles: [],\n\t\t};\n\n\t\tconst files = this.getFiles(uploaderId);\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\t\tconst hasText = text.length > 0;\n\n\t\t// if we have more than one file and text, we need to send text message first\n\t\tif (files.length > 1 && hasText)\n\t\t{\n\t\t\tmessagesToSend.comment = { dialogId, text };\n\t\t}\n\n\t\tfiles.forEach((file) => {\n\t\t\tif (file.getError())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\n\t\t\tfile.setCustomData('messageId', messageId);\n\t\t\tif (files.length === 1 && hasText)\n\t\t\t{\n\t\t\t\tfile.setCustomData('messageText', text);\n\t\t\t}\n\n\t\t\tmessagesToSend.files.push({\n\t\t\t\tfileIds: [file.getId()],\n\t\t\t\ttempMessageId: file.getCustomData('tempMessageId'),\n\t\t\t\tdialogId,\n\t\t\t\ttext: file.getCustomData('messageText') ?? '',\n\t\t\t});\n\t\t});\n\n\t\treturn messagesToSend;\n\t}\n\n\t#createMessageFromFiles(uploaderId): {text: string, dialogId: string, tempMessageId: string, fileIds: []}\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tthis.#uploaderFilesRegistry[uploaderId].tempMessageId = tempMessageId;\n\n\t\tconst fileIds = [];\n\t\tconst files = this.getFiles(uploaderId);\n\t\tfiles.forEach((file) => {\n\t\t\tif (!file.getError())\n\t\t\t{\n\t\t\t\tfileIds.push(file.getId());\n\t\t\t}\n\t\t});\n\n\t\tconst text = this.#uploaderFilesRegistry[uploaderId].text;\n\t\tconst dialogId = this.#uploaderFilesRegistry[uploaderId].dialogId;\n\n\t\treturn {\n\t\t\tfileIds,\n\t\t\ttempMessageId,\n\t\t\tdialogId,\n\t\t\ttext,\n\t\t};\n\t}\n\n\t#readyToAddMessages(uploaderId): boolean\n\t{\n\t\tif (\n\t\t\t!this.#uploaderFilesRegistry[uploaderId]\n\t\t\t|| !this.#uploaderFilesRegistry[uploaderId].autoUpload\n\t\t\t|| this.#uploaderFilesRegistry[uploaderId].wasSent\n\t\t)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { previewCreatedStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(previewCreatedStatus).every((flag) => flag === true);\n\t}\n\n\t#readyToCommit(uploaderId: string): boolean\n\t{\n\t\tif (!this.#uploaderFilesRegistry[uploaderId])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { previewSentStatus } = this.#uploaderFilesRegistry[uploaderId];\n\n\t\treturn Object.values(previewSentStatus).every((flag) => flag === true);\n\t}\n\n\t#tryToSendMessage(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\n\t\tconst message = this.#createMessageFromFiles(uploaderId);\n\t\tvoid this.#sendingService.sendMessageWithFiles(message);\n\t\tthis.start(uploaderId);\n\t}\n\n\t// we don't use it now, because we always send several files in ONE message\n\t// noinspection JSUnusedGlobalSymbols\n\t#tryToSendMessages(uploaderId: string)\n\t{\n\t\tif (!this.#readyToAddMessages(uploaderId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#uploaderFilesRegistry[uploaderId].wasSent = true;\n\t\tconst { comment, files } = this.#createMessagesFromFiles(uploaderId);\n\t\tif (comment.text)\n\t\t{\n\t\t\tvoid this.#sendingService.sendMessage(comment);\n\t\t}\n\n\t\tfiles.forEach((message) => {\n\t\t\tvoid this.#sendingService.sendMessageWithFiles(message);\n\t\t});\n\t\tthis.start(uploaderId);\n\t}\n\n\t#prepareFileFromDisk(file: FileFromDisk, dialogId: string): MessageWithFile\n\t{\n\t\tconst tempMessageId = Utils.text.getUuidV4();\n\t\tconst realFileId = file.id.slice(1); // 'n123' => '123'\n\t\tconst tempFileId = `${tempMessageId}|${realFileId}`;\n\n\t\treturn {\n\t\t\ttempMessageId,\n\t\t\ttempFileId,\n\t\t\tdialogId,\n\t\t\tfile,\n\t\t\tchatId: this.#getDialog(dialogId).chatId,\n\t\t};\n\t}\n\n\t#showError(error: UploaderError)\n\t{\n\t\tif (error.getCode() === 'MAX_FILE_SIZE_EXCEEDED')\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\tcontent: `${error.getMessage()}<br>${error.getDescription()}`,\n\t\t\t});\n\t\t}\n\t}\n\n\t#setMessageError(tempMessageId: string)\n\t{\n\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\tid: tempMessageId,\n\t\t\tfields: {\n\t\t\t\terror: true,\n\t\t\t},\n\t\t});\n\t}\n\n\tdestroy()\n\t{\n\t\tthis.#uploaderWrapper.destroy();\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { runAction } from 'im.v2.lib.rest';\n\nexport class SettingsService\n{\n\tchangeSetting(settingName: string, value: any): Promise\n\t{\n\t\tLogger.warn('SettingsService: changeSetting', settingName, value);\n\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t[settingName]: value,\n\t\t});\n\n\t\treturn runAction(RestMethod.imV2SettingsGeneralUpdate, {\n\t\t\tdata: {\n\t\t\t\tuserId: Core.getUserId(),\n\t\t\t\tname: settingName,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('SettingsService: changeSetting error', error);\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\n\nexport class LinesService\n{\n\tasync getDialogIdByUserCode(userCode: string): Promise<string>\n\t{\n\t\tconst result = await Core.getRestClient().callMethod(RestMethod.linesDialogGet, {\n\t\t\tUSER_CODE: userCode,\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('LinesService: error getting dialog id', error);\n\t\t});\n\n\t\tconst { dialog_id: dialogId } = result.data();\n\n\t\treturn dialogId;\n\t}\n}\n","import { ChatType } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { ChatService } from '../registry';\n\nexport class CopilotService\n{\n\tasync createChat({ roleCode }: {roleCode: string}): Promise<string>\n\t{\n\t\tconst chatService = new ChatService();\n\t\tconst { newDialogId, newChatId } = await chatService.createChat({\n\t\t\ttype: ChatType.copilot,\n\t\t\tcopilotMainRole: roleCode,\n\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\tthis.#sendAnalytics({ chatId: newChatId, dialogId: newDialogId });\n\n\t\tawait chatService.loadChatWithMessages(newDialogId)\n\t\t\t.catch((error) => {\n\t\t\t\tthis.#onCreateError(error);\n\t\t\t});\n\n\t\treturn newDialogId;\n\t}\n\n\t#onCreateError(error: Error)\n\t{\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error('Copilot chat create error', error);\n\t\tthrow new Error('Copilot chat create error');\n\t}\n\n\t#sendAnalytics({ chatId, dialogId })\n\t{\n\t\tAnalytics.getInstance().copilot.onCreateChat(chatId);\n\t\tAnalytics.getInstance().ignoreNextChatOpen(dialogId);\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { runAction } from 'im.v2.lib.rest';\nimport { RestMethod } from 'im.v2.const';\n\nimport type { ImModelChat } from 'im.v2.model';\n\nexport const CommentsService = {\n\tsubscribe(messageId: number): Promise\n\t{\n\t\tCore.getStore().dispatch('messages/comments/subscribe', messageId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentSubscribe, {\n\t\t\tdata: {\n\t\t\t\tpostId: messageId,\n\t\t\t\tcreateIfNotExists: true,\n\t\t\t\tautoJoin: true,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: subscribe error', error);\n\t\t});\n\t},\n\n\tunsubscribe(messageId: number): Promise\n\t{\n\t\tCore.getStore().dispatch('messages/comments/unsubscribe', messageId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentUnsubscribe, {\n\t\t\tdata: {\n\t\t\t\tpostId: messageId,\n\t\t\t\tcreateIfNotExists: true,\n\t\t\t\tautoJoin: true,\n\t\t\t},\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: unsubscribe error', error);\n\t\t});\n\t},\n\n\treadAllChannelComments(channelDialogId: string): Promise\n\t{\n\t\tconst chat: ImModelChat = Core.getStore().getters['chats/get'](channelDialogId, true);\n\t\tconst currentChannelCounter: number = Core.getStore().getters['counters/getChannelCommentsCounter'](chat.chatId);\n\t\tif (currentChannelCounter === 0)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tCore.getStore().dispatch('counters/readAllChannelComments', chat.chatId);\n\n\t\treturn runAction(RestMethod.imV2ChatCommentReadAll, {\n\t\t\tdata: { dialogId: channelDialogId },\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('CommentsService: readAllChannelComments error', error);\n\t\t});\n\t},\n};\n"],"names":["RecentDataExtractor","constructor","params","rawData","withBirthdays","getItems","items","copilot","forEach","item","users","Object","values","chats","messages","files","recentItems","user","id","chat","existingRecentItem","Core","getStore","getters","options","default_user_record","message","FakeMessagePrefix","viewedByOthers","status","MessageStatus","delivered","existingMessage","Type","isArrayFilled","attach","isPlainObject","file","existingFile","messageId","birthdayList","counter","dialogId","chatId","chat_id","avatar","color","name","type","ChatType","role","UserRole","member","isBirthdayPlaceholder","fileId","existingMessageFilesIds","map","Number","parseInt","setOfFileIds","Set","RecentService","dataIsPreloaded","firstPageIsLoaded","itemsPerPage","isLoading","pagesLoaded","hasMoreItemsToLoad","lastMessageDate","getInstance","instance","getCollection","loadFirstPage","ignorePreloadedItems","Logger","warn","Promise","resolve","result","requestItems","firstPage","loadNextPage","setPreloadedData","hasMore","getLastMessageDate","updateModels","hideChat","recentItem","dispatch","chatIsOpened","LayoutManager","clearCurrentLayoutEntityId","deleteLastOpenedElementById","getRestClient","callMethod","RestMethod","imRecentHide","DIALOG_ID","catch","error","console","queryParams","getQueryParams","getQueryMethod","data","imRecentList","SKIP_OPENLINES","LIMIT","LAST_MESSAGE_DATE","GET_ORIGINAL_TEXT","PARSE_TEXT","getModelSaveMethod","extractor","getExtractorOptions","extractedItems","usersPromise","dialoguesPromise","messagesPromise","filesPromise","recentPromise","copilotManager","CopilotManager","copilotPromise","handleRecentListResponse","all","length","slice","date","DeleteService","deleteChat","deleteResult","runAction","imV2ChatDelete","Error","deleteCollab","socialnetworkCollabDelete","fields","inited","ChatDataExtractor","restResult","getChatId","getDialogId","isOpenlinesChat","lines","isCopilotChat","getChats","mainChat","hasPrevPage","hasNextPage","tariffRestrictions","UserManager","getDialogForUser","getFiles","getUsers","getAdditionalUsers","usersShort","getMessages","getCommentInfo","commentInfo","getCollabInfo","collabInfo","getMessagesToStore","additionalMessages","getPinnedMessageIds","pinnedMessageIds","pins","pin","push","getReactions","reactions","getCopilot","getSession","session","LoadService","loadChat","imV2ChatShallowLoad","loadChatWithMessages","messageLimit","MessageService","getMessageRequestLimit","imV2ChatLoad","loadChatWithContext","imV2ChatLoadInContext","prepareDialogId","Utils","dialog","isExternalId","imV2ChatGetDialogId","externalId","then","loadComments","postId","autoJoin","createIfNotExists","loadCommentInfo","channelDialogId","messageIds","imV2ChatMessageCommentInfoList","userManager","addUsersToModel","resetChat","actionName","actionResult","errors","loadedDialogId","loading","chatsPromise","clearCollection","pinnedMessages","handleChatLoadResponse","openLinesPromise","OpenLinesManager","collabPromise","contextId","setLastOpenedElement","Layout","Messenger","openCopilot","openLines","currentLayoutName","getLayout","optionOpenLinesV2Activated","FeatureManager","isFeatureAvailable","Feature","openLinesV2","isStringFilled","firstError","code","AccessErrorCode","chatNotFound","Loc","getMessage","text","BX","UI","Notification","Center","notify","content","PRIVATE_CHAT","OPEN_CHAT","CreateService","createChat","chatConfig","preparedFields","createResult","imV2ChatAdd","newChatId","newDialogId","createCollab","collabConfig","ownerId","title","description","avatarId","moderatorMembers","prepareSelectorIds","permissions","socialnetworkCollabCreate","preparedConfig","getBase64","managers","members","allMembers","toUpperCase","entityType","memberEntities","searchable","isAvailableInSearch","manageUsersAdd","manageUsersDelete","manageUi","manageSettings","manageMessages","conferencePassword","copilotMainRole","entries","key","value","isUndefined","collab","chatType","toLowerCase","userCounter","owner","Analytics","ignoreNextChatOpen","UpdateService","prepareAvatar","avatarFile","isResizableImage","reject","MAX_AVATAR_SIZE","preview","resizedAvatar","resizeImage","width","height","changeAvatar","avatarInBase64","imV2ChatUpdateAvatar","updateChat","updateResult","imV2ChatUpdate","updateCollab","payload","groupSettings","addModeratorMembers","deleteModeratorMembers","socialnetworkCollabUpdate","getMemberEntities","imV2ChatMemberEntitiesList","addedMemberEntities","deletedMemberEntities","addedManagers","deletedManagers","managerList","getChatRoleForUser","RenameService","renameChat","newName","oldName","imChatUpdateTitle","dialog_id","MuteService","DEBOUNCE_TIME","Runtime","debounce","muteChat","action","unmuteChat","imChatMute","actionText","actionType","PinService","pinChat","ACTION","imRecentPin","unpinChat","READ_TIMEOUT","ReadService","readAll","imV2ChatReadAll","readDialog","imV2ChatRead","unreadDialog","imV2ChatUnread","readMessage","add","clearTimeout","readTimeout","setTimeout","rawChatId","clearDialogMark","markedId","unread","onlyRecent","queueChatId","size","copiedMessageIds","readMessagesCount","readResult","maxMessageId","Math","max","lastReadId","lastId","newCounter","counters","parentChatId","comment","imV2ChatMessageRead","ids","actionUuid","UuidManager","getActionUuid","DeleteUserErrorCode","userInvitedFromStructure","userNotFound","UserService","addToChat","addConfig","hide_history","showHistory","imChatUserAdd","kickUserFromChat","userId","imV2ChatDeleteUser","kickUserFromCollab","USER_ENTITY_ID","socialnetworkMemberDelete","leaveChat","getUserId","leaveCollab","socialnetworkMemberLeave","joinChat","imV2ChatJoin","addManager","includes","newManagerList","userIds","imV2ChatAddManagers","removeManager","filter","managerId","imV2ChatDeleteManagers","NotificationTextByErrorCode","default","errorCode","notificationText","autoHideDelay","answer","ChatService","accessDenied","messageNotFound","messageAccessDenied","messageAccessDeniedByTariff","loadUnread","lastUnreadMessageId","query","order","limit","MESSAGE_REQUEST_LIMIT","imV2ChatMessageTail","loadHistory","lastHistoryMessageId","hasPreparedHistoryMessages","drawPreparedHistoryMessages","hasPreparedUnreadMessages","drawPreparedUnreadMessages","loadContext","imV2ChatMessageGetContext","range","callBatch","finally","loadContextByChatId","commentChatId","targetCommentInfo","find","targetMessageId","reloadMessageList","savedPositionMessageId","wasInitedBefore","loadInitialMessages","imV2ChatMessageList","rawMessages","lastMessageId","newMaxId","messagesCollection","updateModelsPromise","dialogPromise","setUsersToModel","reactionsPromise","additionalMessagesPromise","commentInfoPromise","flag","restrictions","isHistoryLimitExceeded","messageDelete","onNotFoundNotification","pinMessage","imV2ChatMessagePin","unpinMessage","imV2ChatMessageUnpin","EditService","editMessageText","imV2ChatMessageUpdate","isEdited","deleteMessage","isUuidV4","isDeleted","replyId","alwaysCompleteDeleteChats","channel","openChannel","generalChannel","neverCompleteDeleteChats","newLastId","imV2ChatMessageDelete","previousMessage","EventEmitter","emit","EventType","onMessageDeleted","MarkService","markMessage","imV2ChatMessageMark","FavoriteService","addMessageToFavorite","imChatFavoriteAdd","MESSAGE_ID","removeMessageFromFavorite","imChatFavoriteDelete","SendingService","sendMessage","sendMessageWithFiles","fileIds","force","forwardMessages","forwardIds","commentMessage","sortForwardIds","sort","forwardUuidMap","forwardedMessages","requestParams","response","retrySendMessage","tempMessageId","unsentMessage","sendCopilotPrompt","sendResult","temporaryId","oldId","newId","defaultFields","authorId","sending","getUuidV4","FILE_ID","promptCode","messageService","hasMessageText","hasMessageFile","templateId","queryData","toString","imV2ChatMessageSend","scrollToBottom","threshold","DialogScrollThreshold","none","halfScreenUp","uuidMap","uuid","keys","preparedMessages","forward","isForward","chatTitle","requestPrams","addPromises","startsWith","currentUser","methodName","NotificationService","store","restClient","limitPerPage","lastType","notificationsToDelete","deleteWithDebounce","deleteRequest","delete","notificationId","sendConfirmAction","NOTIFY_ID","NOTIFY_VALUE","sendQuickAnswer","callbackSuccess","callbackError","imNotifyAnswer","notify_id","answer_text","idsToDelete","clear","imNotifyGetQueryParams","CONVERT_TEXT","batchQueryParams","imNotifyGet","imNotifySchemaGet","LAST_ID","LAST_TYPE","handleResponse","imNotifyGetResponse","isLastPage","notifications","getLastItemId","getLastItemType","collection","getItemType","notify_type","NotificationTypesCodes","confirm","simple","destroy","DiskService","file_id","imDiskFileDelete","save","imDiskFileSave","MAX_FILES_IN_ONE_MESSAGE","UploaderWrapper","setEventNamespace","eventNamespace","bind","subscribe","uploader","cancel","createUploader","diskFolderId","uploaderId","autoUpload","Uploader","controller","multiple","controllerOptions","folderId","imageResizeWidth","imageResizeHeight","imageResizeMode","imageResizeFilter","getCustomData","getExtension","imageResizeMimeType","imageResizeMimeTypeMode","imagePreviewHeight","imagePreviewWidth","treatOversizeImageAsFile","ignoreUnknownImageTypes","maxFileSize","events","UploaderEvent","FILE_ADD_START","event","onFileAddStart","FILE_UPLOAD_START","onFileUploadStart","FILE_ADD","getData","onFileAdd","FILE_UPLOAD_PROGRESS","onFileUploadProgress","FILE_UPLOAD_COMPLETE","onFileUploadComplete","ERROR","onFileUploadError","FILE_ERROR","MAX_FILE_COUNT_EXCEEDED","onMaxFileCountExceeded","UPLOAD_COMPLETE","onUploadComplete","start","setAutoUpload","destroyUploader","removeFilesFromServer","addFiles","tasks","firstTenTasks","addedFiles","task","unsubscribe","addFile","tempFileId","customData","sendAsFile","onFileUploadCancel","uploaderList","getFile","remove","UploadingService","uploadFromClipboard","clipboardEvent","imagesOnly","clipboardData","isFilePasted","preventDefault","getFilesFromDataTransfer","isImage","uploaderFiles","uploadFromInput","rawFiles","target","uploadFromDragAndDrop","dataTransfer","uploadFileFromDisk","messageWithFile","commitFile","temporaryFileId","realFileId","fromDisk","checkDiskFolderId","messageText","fileIdParams","disk_id","upload_id","imDiskFileCommit","template_id","file_template_id","as_file","FileStatus","commitMessage","getServerFileId","every","sendSeparateMessagesWithFiles","filesForUploader","preparedFile","getFileTypeByExtension","ext","extension","sizeInt","wait","progress","authorName","getId","getProgress","upload","serverFileId","imDiskFolderGet","ID","commit","getBinary","FileType","previewFile","getClientPreview","setCustomData","formData","FormData","append","getName","imDiskFilePreviewUpload","taskId","fileBinary","previewData","asFile","getSize","isFailed","blob","getPreviewUrl","getPreviewWidth","getPreviewHeight","image","urlPreview","urlShow","URL","createObjectURL","fileType","video","split","splice","previewCreatedStatus","previewSentStatus","autoUploadFlag","messagesToSend","hasText","getError","wasSent","getCode","getDescription","SettingsService","changeSetting","settingName","imV2SettingsGeneralUpdate","LinesService","getDialogIdByUserCode","userCode","linesDialogGet","USER_CODE","CopilotService","roleCode","chatService","onCreateChat","CommentsService","imV2ChatCommentSubscribe","imV2ChatCommentUnsubscribe","readAllChannelComments","currentChannelCounter","imV2ChatCommentReadAll"],"mappings":"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"}