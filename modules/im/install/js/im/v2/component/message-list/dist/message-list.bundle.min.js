this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,t,s,a,i,n,o,r,l,c,g,d,u,h,m,M,p,v,b,I,L,C,_,f,y,B,E,A,x,F,P,S,T,H,k,D,G,O,w,N,X,U,K,R,j,$,V,Y,q,z,Q,W){"use strict";const Z={name:"DialogLoader",props:{fullHeight:{type:Boolean,default:true}},data(){return{}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-dialog-loader__container" :class="{'--full-height': fullHeight}">\n\t\t\t<div class="bx-im-dialog-loader__spinner"></div>\n\t\t\t<div class="bx-im-dialog-loader__text">{{ loc('IM_DIALOG_CHAT_LOADER_TEXT') }}</div>\n\t\t</div>\n\t`};class J extends n.UserMenu{constructor(){super();this.id="bx-im-avatar-context-menu"}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:true,offsetLeft:21}}getMenuItems(){return[this.getMentionItem(),this.getSendItem(),this.getProfileItem(),this.getKickItem()]}}var ee=babelHelpers.classPrivateFieldLooseKey("isOwnMessage");var te=babelHelpers.classPrivateFieldLooseKey("isDeletedMessage");var se=babelHelpers.classPrivateFieldLooseKey("getMessageFile");var ae=babelHelpers.classPrivateFieldLooseKey("isForwardedMessage");var ie=babelHelpers.classPrivateFieldLooseKey("isRealMessage");var ne=babelHelpers.classPrivateFieldLooseKey("onDelete");var oe=babelHelpers.classPrivateFieldLooseKey("isDeletionCancelled");class re extends n.BaseMenu{constructor(){super();Object.defineProperty(this,oe,{value:me});Object.defineProperty(this,ne,{value:he});Object.defineProperty(this,ie,{value:ue});Object.defineProperty(this,ae,{value:de});Object.defineProperty(this,se,{value:ge});Object.defineProperty(this,te,{value:ce});Object.defineProperty(this,ee,{value:le});this.id="bx-im-message-context-menu";this.diskService=new l.DiskService;this.marketManager=c.MarketManager.getInstance()}getMenuOptions(){return{...super.getMenuOptions(),className:this.getMenuClassName(),angle:true,offsetLeft:11}}getMenuItems(){return[this.getReplyItem(),this.getCopyItem(),this.getCopyLinkItem(),this.getCopyFileItem(),this.getPinItem(),this.getForwardItem(),this.getDelimiter(),this.getMarkItem(),this.getFavoriteItem(),this.getDelimiter(),this.getCreateItem(),this.getDelimiter(),this.getDownloadFileItem(),this.getSaveToDisk(),this.getDelimiter(),this.getEditItem(),this.getDeleteItem(),this.getDelimiter(),this.getSelectItem()]}getSelectItem(){if(babelHelpers.classPrivateFieldLooseBase(this,te)[te]()||!babelHelpers.classPrivateFieldLooseBase(this,ie)[ie]()){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_SELECT"),onclick:()=>{b.EventEmitter.emit(_.EventType.dialog.openBulkActionsMode,{messageId:this.context.id});this.menuInstance.close()}}}getReplyItem(){return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_REPLY"),onclick:()=>{b.EventEmitter.emit(_.EventType.textarea.replyMessage,{messageId:this.context.id,dialogId:this.context.dialogId});this.menuInstance.close()}}}getForwardItem(){if(babelHelpers.classPrivateFieldLooseBase(this,te)[te]()||!babelHelpers.classPrivateFieldLooseBase(this,ie)[ie]()){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_FORWARD"),onclick:()=>{b.EventEmitter.emit(_.EventType.dialog.showForwardPopup,{messagesIds:[this.context.id]});this.menuInstance.close()}}}getCopyItem(){if(this.context.text.trim().length===0){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_COPY"),onclick:async()=>{const e=o.Parser.prepareCopy(this.context);await g.Utils.text.copyToClipboard(e);BX.UI.Notification.Center.notify({content:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_COPY_SUCCESS")});this.menuInstance.close()}}}getCopyLinkItem(){return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_COPY_LINK"),onclick:()=>{var e;const t=g.Utils.text.getMessageLink(this.context.dialogId,this.context.id);if((e=BX.clipboard)!=null&&e.copy(t)){BX.UI.Notification.Center.notify({content:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_COPY_LINK_SUCCESS")})}this.menuInstance.close()}}}getCopyFileItem(){if(this.context.files.length!==1){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_COPY_FILE"),onclick:()=>{var e;const t=o.Parser.prepareCopyFile(this.context);if((e=BX.clipboard)!=null&&e.copy(t)){BX.UI.Notification.Center.notify({content:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_COPY_FILE_SUCCESS")})}this.menuInstance.close()}}}getPinItem(){const e=p.PermissionManager.getInstance().canPerformActionByRole(_.ActionByRole.pinMessage,this.context.dialogId);if(babelHelpers.classPrivateFieldLooseBase(this,te)[te]()||!e){return null}const t=this.store.getters["messages/pin/isPinned"]({chatId:this.context.chatId,messageId:this.context.id});return{text:t?v.Loc.getMessage("IM_DIALOG_CHAT_MENU_UNPIN"):v.Loc.getMessage("IM_DIALOG_CHAT_MENU_PIN"),onclick:()=>{const e=new l.MessageService({chatId:this.context.chatId});if(t){e.unpinMessage(this.context.chatId,this.context.id)}else{e.pinMessage(this.context.chatId,this.context.id)}this.menuInstance.close()}}}getFavoriteItem(){if(babelHelpers.classPrivateFieldLooseBase(this,te)[te]()){return null}const e=this.store.getters["sidebar/favorites/isFavoriteMessage"](this.context.chatId,this.context.id);const t=e?v.Loc.getMessage("IM_DIALOG_CHAT_MENU_REMOVE_FROM_SAVED"):v.Loc.getMessage("IM_DIALOG_CHAT_MENU_SAVE");return{text:t,onclick:()=>{const t=new l.MessageService({chatId:this.context.chatId});if(e){t.removeMessageFromFavorite(this.context.id)}else{t.addMessageToFavorite(this.context.id)}this.menuInstance.close()}}}getMarkItem(){const e=this.context.viewed&&!babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]();const t=this.store.getters["chats/getByChatId"](this.context.chatId);const s=this.context.id===t.markedId;if(!e||s){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_MARK"),onclick:()=>{const e=new l.MessageService({chatId:this.context.chatId});e.markMessage(this.context.id);this.menuInstance.close()}}}getCreateItem(){if(babelHelpers.classPrivateFieldLooseBase(this,te)[te]()){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_CREATE"),items:[this.getCreateTaskItem(),this.getCreateMeetingItem(),...this.getMarketItems()]}}getCreateTaskItem(){return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_CREATE_TASK"),onclick:()=>{const e=new r.EntityCreator(this.context.chatId);void e.createTaskForMessage(this.context.id);this.menuInstance.close()}}}getCreateMeetingItem(){return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_CREATE_MEETING"),onclick:()=>{const e=new r.EntityCreator(this.context.chatId);void e.createMeetingForMessage(this.context.id);this.menuInstance.close()}}}getEditItem(){if(!babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]()||babelHelpers.classPrivateFieldLooseBase(this,te)[te]()||babelHelpers.classPrivateFieldLooseBase(this,ae)[ae]()){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_EDIT"),onclick:()=>{b.EventEmitter.emit(_.EventType.textarea.editMessage,{messageId:this.context.id,dialogId:this.context.dialogId});this.menuInstance.close()}}}getDeleteItem(){if(babelHelpers.classPrivateFieldLooseBase(this,te)[te]()){return null}const e=p.PermissionManager.getInstance();const t=e.canPerformActionByRole(_.ActionByRole.deleteOthersMessage,this.context.dialogId);if(!babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]()&&!t){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_DELETE"),className:"menu-popup-no-icon bx-im-dialog-chat__message-menu_delete",onclick:babelHelpers.classPrivateFieldLooseBase(this,ne)[ne].bind(this)}}getMarketItems(){const{dialogId:e,id:t}=this.context;const s=this.marketManager.getAvailablePlacementsByType(_.PlacementType.contextMenu,e);const a=[];if(s.length>0){a.push(this.getDelimiter())}const i={messageId:t,dialogId:e};s.forEach((e=>{a.push({text:e.title,onclick:()=>{c.MarketManager.openSlider(e,i);this.menuInstance.close()}})}));const n=11;return a.slice(0,n)}getDownloadFileItem(){const e=babelHelpers.classPrivateFieldLooseBase(this,se)[se]();if(!e){return null}return{html:g.Utils.file.createDownloadLink(v.Loc.getMessage("IM_DIALOG_CHAT_MENU_DOWNLOAD_FILE"),e.urlDownload,e.name),onclick:function(){this.menuInstance.close()}.bind(this)}}getSaveToDisk(){const e=babelHelpers.classPrivateFieldLooseBase(this,se)[se]();if(!e){return null}return{text:v.Loc.getMessage("IM_DIALOG_CHAT_MENU_SAVE_ON_DISK"),onclick:function(){void this.diskService.save(e.id).then((()=>{BX.UI.Notification.Center.notify({content:v.Loc.getMessage("IM_SERVICE_FILE_SAVED_ON_DISK_SUCCESS")})}));this.menuInstance.close()}.bind(this)}}getDelimiter(){return{delimiter:true}}}function le(){return this.context.authorId===C.Core.getUserId()}function ce(){return this.context.isDeleted}function ge(){if(this.context.files.length!==1){return null}return this.store.getters["files/get"](this.context.files[0])}function de(){return v.Type.isStringFilled(this.context.forward.id)}function ue(){return this.store.getters["messages/isRealMessage"](this.context.id)}async function he(){const{id:e,dialogId:t,chatId:s}=this.context;I.Analytics.getInstance().messageDelete.onClickDelete({messageId:e,dialogId:t});this.menuInstance.close();if(await babelHelpers.classPrivateFieldLooseBase(this,oe)[oe]()){return}const a=new l.MessageService({chatId:s});void a.deleteMessage(e)}async function me(){const{id:e,dialogId:t}=this.context;if(!i.ChannelManager.isChannel(t)){return false}const s=await d.showDeleteChannelPostConfirm();if(!s){I.Analytics.getInstance().messageDelete.onCancel({messageId:e,dialogId:t});return true}return false}var Me=babelHelpers.classPrivateFieldLooseKey("dialogId");var pe=babelHelpers.classPrivateFieldLooseKey("observer");var ve=babelHelpers.classPrivateFieldLooseKey("initObserver");var be=babelHelpers.classPrivateFieldLooseKey("sendVisibleEvent");var Ie=babelHelpers.classPrivateFieldLooseKey("sendNotVisibleEvent");var Le=babelHelpers.classPrivateFieldLooseKey("getThreshold");var Ce=babelHelpers.classPrivateFieldLooseKey("getMessageIdFromElement");class _e{constructor(e){Object.defineProperty(this,Ce,{value:Ae});Object.defineProperty(this,Le,{value:Ee});Object.defineProperty(this,Ie,{value:Be});Object.defineProperty(this,be,{value:ye});Object.defineProperty(this,ve,{value:fe});Object.defineProperty(this,Me,{writable:true,value:void 0});Object.defineProperty(this,pe,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]=e;babelHelpers.classPrivateFieldLooseBase(this,ve)[ve]()}observeMessage(e){babelHelpers.classPrivateFieldLooseBase(this,pe)[pe].observe(e)}unobserveMessage(e){babelHelpers.classPrivateFieldLooseBase(this,pe)[pe].unobserve(e)}}function fe(){babelHelpers.classPrivateFieldLooseBase(this,pe)[pe]=new IntersectionObserver((e=>{e.forEach((e=>{const t=babelHelpers.classPrivateFieldLooseBase(this,Ce)[Ce](e.target);if(!t||!e.rootBounds){return}const s=e.isIntersecting&&e.intersectionRatio>=.99;const a=e.intersectionRect.height>=e.rootBounds.height/2.2;if(s||a){babelHelpers.classPrivateFieldLooseBase(this,be)[be](t)}else{babelHelpers.classPrivateFieldLooseBase(this,Ie)[Ie](t)}}))}),{threshold:babelHelpers.classPrivateFieldLooseBase(this,Le)[Le]()})}function ye(e){b.EventEmitter.emit(_.EventType.dialog.onMessageIsVisible,{messageId:e,dialogId:babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]})}function Be(e){b.EventEmitter.emit(_.EventType.dialog.onMessageIsNotVisible,{messageId:e,dialogId:babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]})}function Ee(){const e=Array.from({length:101}).fill(0);return e.map(((e,t)=>t*.01))}function Ae(e){return Number(e.dataset.id)}const xe={props:{title:{type:String,required:true}},data(){return{}},template:`\n\t\t<div class="bx-im-message-list-date-group-title__container">\n\t\t\t<div class="bx-im-message-list-date-group-title__text">{{ title }}</div>\n\t\t</div>\n\t`};const Fe={name:"DateGroup",components:{DateGroupTitle:xe},props:{item:{type:Object,required:true}},data(){return{}},computed:{BlockType:()=>_.DialogBlockType,dateGroup(){return this.item}},template:`\n\t\t<div class="bx-im-message-list-date-group__container">\n\t\t\t<DateGroupTitle :title="dateGroup.dateTitle" />\n\t\t\t<template v-for="dateGroupItem in dateGroup.items" >\n\t\t\t\t<slot\n\t\t\t\t\tname="dateGroupItem"\n\t\t\t\t\t:dateGroupItem="dateGroupItem"\n\t\t\t\t\t:isMarkedBlock="dateGroupItem.type === BlockType.markedMessages"\n\t\t\t\t\t:isNewMessagesBlock="dateGroupItem.type === BlockType.newMessages"\n\t\t\t\t\t:isAuthorBlock="dateGroupItem.type === BlockType.authorGroup"\n\t\t\t\t></slot>\n\t\t\t</template>\n\t\t</div>\n\t`};const Pe=new Set([_.MessageComponent.default,_.MessageComponent.copilotMessage,_.MessageComponent.checkIn,_.MessageComponent.FeedbackFormMessage,_.MessageComponent.ImOpenLinesMessage,_.MessageComponent.ImOpenLinesForm]);const Se={name:"MessageSelectButton",props:{message:{type:Object,required:true}},computed:{messageItem(){return this.message},selectedMessages(){return this.$store.getters["messages/select/getCollection"]},bulkActionMessageLimit(){const e=v.Extension.getSettings("im.v2.component.message-list");return e.get("multipleActionMessageLimit")},isMessageSelected(){return this.$store.getters["messages/select/isMessageSelected"](this.messageItem.id)},isSelectionLimitReached(){return this.selectedMessages.size===this.bulkActionMessageLimit&&!this.isMessageSelected},isRealMessage(){return this.$store.getters["messages/isRealMessage"](this.messageItem.id)},canSelectMessage(){if(this.messageItem.isDeleted||!this.isRealMessage){return false}return Pe.has(this.messageItem.componentId)}},methods:{onSelectMessage(){if(!this.canSelectMessage){return}if(this.isSelectionLimitReached){this.showNotification(this.loc("IM_MESSAGE_LIST_MAX_LIMIT_SELECTED_MESSAGES"));return}this.$store.dispatch("messages/select/toggle",this.messageItem.id)},showNotification(e){BX.UI.Notification.Center.notify({content:e})},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div @click="onSelectMessage" class="bx-im-message-list-select-button__container">\n\t\t\t<div\n\t\t\t\tv-if="canSelectMessage"\n\t\t\t\tclass="bx-im-message-list-select-button__checkbox-circle"\n\t\t\t\t:class="{'--selected': isMessageSelected}"\n\t\t\t/>\n\t\t</div>\n\t`};const Te={name:"AuthorGroup",components:{MessageAvatar:m.MessageAvatar,MessageSelectButton:Se},props:{item:{type:Object,required:true},contextDialogId:{type:String,required:true},withAvatarMenu:{type:Boolean,default:true}},emits:["avatarClick"],computed:{AvatarSize:()=>m.AvatarSize,contextDialog(){return this.$store.getters["chats/get"](this.contextDialogId,true)},contextUser(){return this.$store.getters["users/get"](this.contextDialogId,true)},isUser(){return this.contextDialog.type===_.ChatType.user},isBulkActionsMode(){return this.$store.getters["messages/select/getBulkActionsMode"]},authorGroup(){return this.item},authorDialogId(){return this.authorGroup.avatar.avatarId},firstMessageIdInAuthorGroup(){return this.authorGroup.messages[0].id},avatarMenuAvailable(){if(!this.withAvatarMenu){return false}const e=this.$store.getters["users/get"](this.authorDialogId);if(!e){return false}const t=new M.CopilotManager;if(t.isCopilotBot(this.authorDialogId)){return false}const s=e.id===C.Core.getUserId();if(s){return false}const a=this.isUser&&this.contextUser.type===_.UserType.bot;if(a){return false}const i=p.PermissionManager.getInstance();return i.canPerformActionByRole(_.ActionByRole.openAvatarMenu,this.contextDialogId)},containerClasses(){const e=[`--${this.authorGroup.messageType}`];if(!this.avatarMenuAvailable){e.push("--no-menu")}if(this.isBulkActionsMode){e.push("--is-bulk-actions-mode")}if(this.authorGroup.avatar.isNeeded){e.push("--has-avatar")}return e}},methods:{isAvatarNeeded(e){const t=this.authorGroup.messages.length-1;return this.authorGroup.avatar.isNeeded&&e===t},onAvatarClick(e){if(!this.avatarMenuAvailable){return}this.$emit("avatarClick",{dialogId:this.authorGroup.avatar.avatarId,$event:e})},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-message-list-author-group__container" :class="containerClasses">\n\t\t\t<template v-for="(message, index) in authorGroup.messages">\n\t\t\t\t<Transition name="bx-im-select-button-transition">\n\t\t\t\t\t<MessageSelectButton v-if="isBulkActionsMode" :message="message" />\n\t\t\t\t</Transition>\n\t\t\t\t<div v-if="isAvatarNeeded(index)" class="bx-im-message-list-author-group__avatar">\n\t\t\t\t\t<MessageAvatar\n\t\t\t\t\t\t:messageId="firstMessageIdInAuthorGroup"\n\t\t\t\t\t\t:authorId="authorGroup.avatar.avatarId"\n\t\t\t\t\t\t:size="AvatarSize.L"\n\t\t\t\t\t\t@click="onAvatarClick"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<slot name="message" :message="message" :index="index"></slot>\n\t\t\t</template>\n\t\t</div>\n\t`};const He={data(){return{}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-message-list-new-message__container">\n\t\t\t<div class="bx-im-message-list-new-message__text">\n\t\t\t\t{{ loc('IM_DIALOG_CHAT_BLOCK_NEW_MESSAGES_2') }}\n\t\t\t</div>\n\t\t</div>\n\t`};const ke={data(){return{}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-message-list-new-message__container">\n\t\t\t<div class="bx-im-message-list-new-message__text">\n\t\t\t\t{{ loc('IM_DIALOG_CHAT_BLOCK_MARKED_MESSAGES') }}\n\t\t\t</div>\n\t\t</div>\n\t`};const De=[v.Loc.getMessage("IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_1"),v.Loc.getMessage("IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_2"),v.Loc.getMessage("IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_3"),v.Loc.getMessage("IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_4"),v.Loc.getMessage("IM_MESSAGE_LIST_EMPTY_STATE_DEFAULT_MESSAGE_5")];const Ge={name:"EmptyState",props:{dialogId:{type:String,required:true}},data(){return{}},computed:{defaultMessages:()=>De},methods:{onMessageClick(e){b.EventEmitter.emit(_.EventType.textarea.insertText,{text:e,dialogId:this.dialogId})},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-message-list-empty-state__container">\n\t\t\t<div class="bx-im-message-list-empty-state__content">\n\t\t\t\t<div class="bx-im-message-list-empty-state__icon"></div>\n\t\t\t\t<div class="bx-im-message-list-empty-state__title">{{ loc('IM_MESSAGE_LIST_EMPTY_STATE_TITLE') }}</div>\n\t\t\t\t<div class="bx-im-message-list-empty-state__action-list">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-for="(message, index) in defaultMessages"\n\t\t\t\t\t\t:key="index"\n\t\t\t\t\t\t@click="onMessageClick(message)"\n\t\t\t\t\t\tclass="bx-im-message-list-empty-state__action-list_item"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ message }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const Oe={name:"HistoryLimitBanner",props:{noMessages:{type:Boolean,required:true},dialogId:{type:String,required:true}},computed:{title(){return L.FeatureManager.chatHistory.getLimitTitle()},subtitle(){return L.FeatureManager.chatHistory.getLimitSubtitle()},buttonText(){return L.FeatureManager.chatHistory.getLearnMoreText()}},mounted(){this.sendAnalytics()},methods:{onButtonClick(){I.Analytics.getInstance().historyLimit.onDialogBannerClick({dialogId:this.dialogId});L.FeatureManager.chatHistory.openFeatureSlider()},sendAnalytics(){I.Analytics.getInstance().historyLimit.onDialogLimitExceeded({dialogId:this.dialogId,noMessages:this.noMessages})}},template:`\n\t\t<div class="bx-im-message-list-history-banner__container" :class="{'--no-messages': noMessages}">\n\t\t\t<div class="bx-im-message-list-history-banner__left">\n\t\t\t\t<div class="bx-im-message-list-history-banner__title">\n\t\t\t\t\t<div class="bx-im-message-list-history-banner__icon bx-im-messenger__lock-icon"></div>\n\t\t\t\t\t<div class="bx-im-message-list-history-banner__title_text --ellipsis" :title="title">\n\t\t\t\t\t\t{{ title }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-message-list-history-banner__subtitle --line-clamp-2" :title="subtitle">\n\t\t\t\t\t{{ subtitle }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-message-list-history-banner__right">\n\t\t\t\t<div class="bx-im-message-list-history-banner__button" @click="onButtonClick">\n\t\t\t\t\t{{ buttonText }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};var we=babelHelpers.classPrivateFieldLooseKey("getAvatarConfig");var Ne=babelHelpers.classPrivateFieldLooseKey("getMessageType");var Xe=babelHelpers.classPrivateFieldLooseKey("checkIfAvatarIsNeeded");class Ue{constructor(){Object.defineProperty(this,Xe,{value:je});Object.defineProperty(this,Ne,{value:Re});Object.defineProperty(this,we,{value:Ke})}getAuthorBlock(e){return{type:_.DialogBlockType.authorGroup,userId:e.authorId,avatar:babelHelpers.classPrivateFieldLooseBase(this,we)[we](e),messageType:babelHelpers.classPrivateFieldLooseBase(this,Ne)[Ne](e)}}getMarkedBlock(){return{type:_.DialogBlockType.markedMessages}}getNewMessagesBlock(){return{type:_.DialogBlockType.newMessages}}}function Ke(e){return{isNeeded:babelHelpers.classPrivateFieldLooseBase(this,Xe)[Xe](e),avatarId:e.authorId.toString()}}function Re(e){if(!e.authorId){return _.MessageType.system}if(e.authorId===C.Core.getUserId()){return _.MessageType.self}return _.MessageType.opponent}function je(e){const t=babelHelpers.classPrivateFieldLooseBase(this,Ne)[Ne](e);const s=t===_.MessageType.system;if(s){return false}const a=t===_.MessageType.self;const i=C.Core.getStore().getters["application/settings/get"](_.Settings.appearance.alignment);if(i===_.DialogAlignment.center){return!a}return true}var $e=babelHelpers.classPrivateFieldLooseKey("blockManager");var Ve=babelHelpers.classPrivateFieldLooseKey("collection");var Ye=babelHelpers.classPrivateFieldLooseKey("currentDateTitles");var qe=babelHelpers.classPrivateFieldLooseKey("markedIndicatorInserted");var ze=babelHelpers.classPrivateFieldLooseKey("lastDateItems");var Qe=babelHelpers.classPrivateFieldLooseKey("lastAuthorId");var We=babelHelpers.classPrivateFieldLooseKey("lastAuthorItems");var Ze=babelHelpers.classPrivateFieldLooseKey("clearLastAuthor");class Je{constructor(){Object.defineProperty(this,Ze,{value:et});Object.defineProperty(this,$e,{writable:true,value:void 0});Object.defineProperty(this,Ve,{writable:true,value:[]});Object.defineProperty(this,Ye,{writable:true,value:new Set});Object.defineProperty(this,qe,{writable:true,value:false});Object.defineProperty(this,ze,{writable:true,value:[]});Object.defineProperty(this,Qe,{writable:true,value:null});Object.defineProperty(this,We,{writable:true,value:[]});babelHelpers.classPrivateFieldLooseBase(this,$e)[$e]=new Ue}get(){return babelHelpers.classPrivateFieldLooseBase(this,Ve)[Ve]}hasDateTitle(e){return babelHelpers.classPrivateFieldLooseBase(this,Ye)[Ye].has(e)}addDateGroup(e){babelHelpers.classPrivateFieldLooseBase(this,Ye)[Ye].add(e);babelHelpers.classPrivateFieldLooseBase(this,ze)[ze]=[];babelHelpers.classPrivateFieldLooseBase(this,Ve)[Ve].push({dateTitle:e,items:babelHelpers.classPrivateFieldLooseBase(this,ze)[ze]});babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze]()}addAuthorGroup(e){babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe]=e.authorId;babelHelpers.classPrivateFieldLooseBase(this,We)[We]=[];babelHelpers.classPrivateFieldLooseBase(this,ze)[ze].push({...babelHelpers.classPrivateFieldLooseBase(this,$e)[$e].getAuthorBlock(e),messages:babelHelpers.classPrivateFieldLooseBase(this,We)[We]})}addMessage(e){babelHelpers.classPrivateFieldLooseBase(this,We)[We].push(e)}addMarkedIndicator(){babelHelpers.classPrivateFieldLooseBase(this,ze)[ze].push(babelHelpers.classPrivateFieldLooseBase(this,$e)[$e].getMarkedBlock());babelHelpers.classPrivateFieldLooseBase(this,qe)[qe]=true;babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze]()}addNewMessagesIndicator(){if(babelHelpers.classPrivateFieldLooseBase(this,qe)[qe]){return}babelHelpers.classPrivateFieldLooseBase(this,ze)[ze].push(babelHelpers.classPrivateFieldLooseBase(this,$e)[$e].getNewMessagesBlock());babelHelpers.classPrivateFieldLooseBase(this,Ze)[Ze]()}getLastAuthorId(){return babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe]}}function et(){babelHelpers.classPrivateFieldLooseBase(this,Qe)[Qe]=null}var tt=babelHelpers.classPrivateFieldLooseKey("getLocalShortDate");class st{constructor(){Object.defineProperty(this,tt,{value:at});this.cachedDateGroups={}}getDateTitle(e){const t=babelHelpers.classPrivateFieldLooseBase(this,tt)[tt](e);if(this.cachedDateGroups[t]){return this.cachedDateGroups[t]}this.cachedDateGroups[t]=f.DateFormatter.formatByTemplate(e,f.DateTemplate.dateGroup);return this.cachedDateGroups[t]}}function at(e){const t=e.getTime()-e.getTimezoneOffset()*6e4;const s=new Date(t).toJSON();const a=10;return s.slice(0,a)}var it=babelHelpers.classPrivateFieldLooseKey("setInitialValues");var nt=babelHelpers.classPrivateFieldLooseKey("handleMarkedMessageId");var ot=babelHelpers.classPrivateFieldLooseKey("getLastReadMessageId");var rt=babelHelpers.classPrivateFieldLooseKey("getDialog");class lt{constructor(e){Object.defineProperty(this,rt,{value:ut});Object.defineProperty(this,ot,{value:dt});Object.defineProperty(this,nt,{value:gt});Object.defineProperty(this,it,{value:ct});this.firstIteration=true;this.dialogId=e;this.dateManager=new st}formatMessageCollection(e){const t=new Je;babelHelpers.classPrivateFieldLooseBase(this,it)[it]();babelHelpers.classPrivateFieldLooseBase(this,nt)[nt]();e.forEach(((s,a)=>{const i=this.dateManager.getDateTitle(s.date);if(!t.hasDateTitle(i)){t.addDateGroup(i)}if(s.id===this.markedMessageId){t.addMarkedIndicator()}if(s.authorId!==t.getLastAuthorId()){t.addAuthorGroup(s)}t.addMessage(s);const n=a===e.length-1;if(!n&&s.id===this.lastReadMessageId){t.addNewMessagesIndicator()}}));const{inited:s}=babelHelpers.classPrivateFieldLooseBase(this,rt)[rt]();if(s){this.firstIteration=false}return t.get()}formatAuthorGroup(e){const t=new Ue;return{...t.getAuthorBlock(e),messages:[e]}}}function ct(){if(!this.firstIteration){return}const{markedId:e}=babelHelpers.classPrivateFieldLooseBase(this,rt)[rt]();this.lastReadMessageId=babelHelpers.classPrivateFieldLooseBase(this,ot)[ot]();this.markedMessageId=e}function gt(){const{markedId:e}=babelHelpers.classPrivateFieldLooseBase(this,rt)[rt]();if(e===this.markedMessageId||e===0){return}this.markedMessageId=e;this.lastReadMessageId=null}function dt(){const{lastMessageId:e}=babelHelpers.classPrivateFieldLooseBase(this,rt)[rt]();const t=C.Core.getStore().getters["chats/getLastReadId"](this.dialogId);if(t===e){return 0}return t}function ut(){return C.Core.getStore().getters["chats/get"](this.dialogId)}const ht={DefaultMessage:B.DefaultMessage,FileMessage:y.FileMessage,SmileMessage:F.SmileMessage,CallInviteMessage:E.CallInviteMessage,DeletedMessage:A.DeletedMessage,SystemMessage:P.SystemMessage,UnsupportedMessage:x.UnsupportedMessage,ChatCreationMessage:S.ChatCreationMessage,OwnChatCreationMessage:R.OwnChatCreationMessage,ChatCopilotCreationMessage:T.ChatCopilotCreationMessage,CopilotMessage:H.CopilotMessage,SupportVoteMessage:D.SupportVoteMessage,SupportSessionNumberMessage:G.SupportSessionNumberMessage,SupportChatCreationMessage:O.SupportChatCreationMessage,ConferenceCreationMessage:w.ConferenceCreationMessage,ZoomInviteMessage:j.ZoomInviteMessage,CheckInMessage:K.CheckInMessage,SupervisorUpdateFeatureMessage:N.SupervisorUpdateFeatureMessage,SupervisorEnableFeatureMessage:X.SupervisorEnableFeatureMessage,ChatCopilotAddedUsersMessage:k.ChatCopilotAddedUsersMessage,SignMessage:U.SignMessage,GeneralChatCreationMessage:$.GeneralChatCreationMessage,GeneralChannelCreationMessage:V.GeneralChannelCreationMessage,ChannelCreationMessage:Y.ChannelCreationMessage,CallMessage:W.CallMessage,StartDialogMessage:q.StartDialogMessage,FeedbackFormMessage:Q.FeedbackFormMessage,HiddenMessage:z.HiddenMessage};const mt={name:"MessageList",directives:{"message-observer":{mounted(e,t){t.instance.observer.observeMessage(e)},beforeUnmount(e,t){t.instance.observer.unobserveMessage(e)}}},components:{DateGroup:Fe,AuthorGroup:Te,NewMessagesBlock:He,MarkedMessagesBlock:ke,DialogStatus:m.DialogStatus,DialogLoader:Z,EmptyState:Ge,FadeAnimation:s.FadeAnimation,HistoryLimitBanner:Oe,...ht},props:{dialogId:{type:String,required:true},messageMenuClass:{type:Function,default:re}},data(){return{windowFocused:false,messageMenuIsActiveForId:0}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},user(){return this.$store.getters["users/get"](this.dialogId,true)},messageCollection(){return this.$store.getters["messages/getByChatId"](this.dialog.chatId)},isUser(){return this.dialog.type===_.ChatType.user},dialogInited(){return this.dialog.inited},formattedCollection(){if(!this.dialogInited&&this.messageCollection.length===0){return[]}return this.getCollectionManager().formatMessageCollection(this.messageCollection)},noMessages(){return this.formattedCollection.length===0},isHistoryLimitExceeded(){return!L.FeatureManager.chatHistory.isAvailable()&&this.dialog.tariffRestrictions.isHistoryLimitExceeded},showDialogStatus(){return this.messageCollection.some((e=>e.id===this.dialog.lastMessageId))},showEmptyState(){return this.dialogInited&&this.noMessages&&this.isUser&&!this.isHistoryLimitExceeded}},created(){this.initContextMenu();this.initCollectionManager();this.initObserverManager()},mounted(){this.subscribeToEvents()},beforeUnmount(){this.unsubscribeFromEvents()},methods:{subscribeToEvents(){b.EventEmitter.subscribe(_.EventType.dialog.onClickMessageContextMenu,this.onMessageContextMenuClick)},unsubscribeFromEvents(){b.EventEmitter.unsubscribe(_.EventType.dialog.onClickMessageContextMenu,this.onMessageContextMenuClick)},insertTextQuote(e){b.EventEmitter.emit(_.EventType.textarea.insertText,{text:t.Quote.prepareQuoteText(e),withNewLine:true,replace:false,dialogId:this.dialogId})},insertMention(e){b.EventEmitter.emit(_.EventType.textarea.insertMention,{mentionText:e.name,mentionReplacement:g.Utils.text.getMentionBbCode(e.id,e.name),dialogId:this.dialogId})},openReplyPanel(e){b.EventEmitter.emit(_.EventType.textarea.replyMessage,{messageId:e,dialogId:this.dialogId})},onAvatarClick(e){const{dialogId:t,$event:s}=e;const a=this.$store.getters["users/get"](t);if(g.Utils.key.isAltOrOption(s)){this.insertMention(a);return}this.avatarMenu.openMenu({user:a,dialog:this.dialog},s.currentTarget)},onMessageContextMenuClick(e){const t=p.PermissionManager.getInstance();if(!t.canPerformActionByRole(_.ActionByRole.openMessageMenu,this.dialogId)){return}const{message:s,event:a,dialogId:i}=e.getData();if(i!==this.dialogId){return}if(g.Utils.key.isCombination(a,["Alt+Ctrl"])){this.insertTextQuote(s);return}if(g.Utils.key.isCmdOrCtrl(a)){this.openReplyPanel(s.id);return}const n={dialogId:this.dialogId,...s};this.messageMenu.openMenu(n,a.currentTarget);this.messageMenuIsActiveForId=s.id},async onMessageMouseUp(e,t){await g.Utils.browser.waitForSelectionToUpdate();const s=window.getSelection().toString().trim();if(s.length===0){return}b.EventEmitter.emit(_.EventType.dialog.showQuoteButton,{message:e,event:t})},initObserverManager(){this.observer=new _e(this.dialogId)},initContextMenu(){const e=this.messageMenuClass;this.messageMenu=new e;this.messageMenu.subscribe(re.events.onCloseMenu,(()=>{this.messageMenuIsActiveForId=0}));this.avatarMenu=new J},getMessageComponentName(e){return new a.MessageComponentManager(e).getName()},initCollectionManager(){this.collectionManager=new lt(this.dialogId)},getCollectionManager(){return this.collectionManager}},template:`\n\t\t<slot v-if="!dialogInited" name="loader">\n\t\t\t<DialogLoader />\n\t\t</slot>\n\t\t<FadeAnimation :duration="200">\n\t\t\t<div v-if="dialogInited" class="bx-im-message-list__container">\n\t\t\t\t<EmptyState v-if="showEmptyState" :dialogId="dialogId" />\n\t\t\t\t<slot name="before-messages" :getMessageComponentName="getMessageComponentName"></slot>\n\t\t\t\t<HistoryLimitBanner v-if="isHistoryLimitExceeded" :dialogId="dialogId" :noMessages="noMessages" />\n\t\t\t\t<DateGroup v-for="dateGroup in formattedCollection" :key="dateGroup.dateTitle" :item="dateGroup">\n\t\t\t\t\t\x3c!-- Slot for every date group item --\x3e\n\t\t\t\t\t<template #dateGroupItem="{ dateGroupItem, isMarkedBlock, isNewMessagesBlock, isAuthorBlock }">\n\t\t\t\t\t\t<MarkedMessagesBlock v-if="isMarkedBlock" data-id="newMessages" />\n\t\t\t\t\t\t<NewMessagesBlock v-else-if="isNewMessagesBlock" data-id="newMessages" />\n\t\t\t\t\t\t<AuthorGroup \n\t\t\t\t\t\t\tv-else-if="isAuthorBlock" \n\t\t\t\t\t\t\t:item="dateGroupItem"\n\t\t\t\t\t\t\t:contextDialogId="dialogId"\n\t\t\t\t\t\t\t@avatarClick="onAvatarClick"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\x3c!-- Slot for every message --\x3e\n\t\t\t\t\t\t\t<template #message="{ message, index }">\n\t\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t\tv-message-observer\n\t\t\t\t\t\t\t\t\t:is="getMessageComponentName(message)"\n\t\t\t\t\t\t\t\t\t:withTitle="index === 0"\n\t\t\t\t\t\t\t\t\t:item="message"\n\t\t\t\t\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t\t\t\t\t:key="message.id"\n\t\t\t\t\t\t\t\t\t:menuIsActiveForId="messageMenuIsActiveForId"\n\t\t\t\t\t\t\t\t\t:data-viewed="message.viewed"\n\t\t\t\t\t\t\t\t\t@mouseup="onMessageMouseUp(message, $event)"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</component>\n\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t</AuthorGroup>\n\t\t\t\t\t</template>\n\t\t\t\t</DateGroup>\n\t\t\t\t<DialogStatus v-if="showDialogStatus" :dialogId="dialogId" />\n\t\t\t</div>\n\t\t</FadeAnimation>\n\t`};e.MessageList=mt;e.AvatarMenu=J;e.MessageMenu=re;e.AuthorGroup=Te;e.MessageComponents=ht;e.CollectionManager=lt})(this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Animation,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.OpenLines.v2.Component.Message,BX.OpenLines.v2.Component.Message,BX.OpenLines.v2.Component.Message,BX.Messenger.v2.Component.Message);
//# sourceMappingURL=message-list.bundle.map.js