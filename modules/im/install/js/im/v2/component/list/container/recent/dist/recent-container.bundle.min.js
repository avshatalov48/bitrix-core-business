this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,n,a,o,s,r,c,i,l,h,C,m,p,u,d,_,M){"use strict";const E={components:{MessengerMenu:l.MessengerMenu,MenuItem:l.MenuItem},emits:["showUnread"],data(){return{showPopup:false}},computed:{menuConfig(){return{id:"im-recent-header-menu",width:284,bindElement:this.$refs["icon"]||{},offsetTop:4,padding:0}},unreadCounter(){return this.$store.getters["counters/getTotalChatCounter"]}},methods:{onIconClick(){this.showPopup=true},onReadAllClick(){(new i.ChatService).readAll();this.showPopup=false},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div @click="onIconClick" class="bx-im-list-container-recent__header-menu_icon" :class="{'--active': showPopup}" ref="icon"></div>\n\t\t<MessengerMenu v-if="showPopup" :config="menuConfig" @close="showPopup = false">\n\t\t\t<MenuItem\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_READ_ALL')"\n\t\t\t\t@click="onReadAllClick"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="false"\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_SHOW_UNREAD_ONLY')"\n\t\t\t\t:counter="unreadCounter"\n\t\t\t\t:disabled="true"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="false"\n\t\t\t\t:title="loc('IM_RECENT_HEADER_MENU_CHAT_GROUPS_TITLE')"\n\t\t\t\t:subtitle="loc('IM_RECENT_HEADER_MENU_CHAT_GROUPS_SUBTITLE')"\n\t\t\t\t:disabled="true"\n\t\t\t/>\n\t\t</MessengerMenu>\n\t`};const T={emits:["articleOpen"],data(){return{}},methods:{openHelpArticle(){const t="17412872";_.openHelpdeskArticle(t);this.$emit("articleOpen")},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-create-chat-help__container">\n\t\t\t<div @click="openHelpArticle" class="bx-im-create-chat-help__content">\n\t\t\t\t<div class="bx-im-create-chat-help__icon"></div>\n\t\t\t\t<div class="bx-im-create-chat-help__text">{{ loc('IM_RECENT_CREATE_CHAT_WHAT_TO_CHOOSE') }}</div>\t\n\t\t\t</div>\n\t\t</div>\n\t`};const g={name:"NewBadge",methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-create-chat-menu-new-badge__container">\n\t\t\t<div class="bx-im-create-chat-menu-new-badge__content">{{ loc('IM_RECENT_CREATE_COLLAB_NEW_BADGE') }}</div>\n\t\t</div>\n\t`};const v={name:"DescriptionBanner",emits:["close"],computed:{preparedText(){return M.Loc.getMessage("IM_RECENT_CREATE_COLLAB_DESCRIPTION_BANNER",{"[color_highlight]":'<span class="bx-im-create-chat-menu-description-banner__highlight">',"[/color_highlight]":"</span>"})}},template:`\n\t\t<div class="bx-im-create-chat-menu-description-banner__container">\n\t\t\t<div class="bx-im-create-chat-menu-description-banner__content" v-html="preparedText"></div>\n\t\t\t<div class="bx-im-create-chat-menu-description-banner__close-icon" @click.stop="$emit('close')"></div>\n\t\t</div>\n\t`};const I={[h.ChatType.chat]:h.PromoId.createGroupChat,[h.ChatType.videoconf]:h.PromoId.createConference,[h.ChatType.channel]:h.PromoId.createChannel};const b={components:{MessengerMenu:l.MessengerMenu,MenuItem:l.MenuItem,CreateChatHelp:T,CreateChatPromo:l.CreateChatPromo,NewBadge:g,DescriptionBanner:v},data(){return{showPopup:false,chatTypeToCreate:"",showPromo:false,showCollabDescription:false}},computed:{ChatType:()=>h.ChatType,MenuItemIcon:()=>l.MenuItemIcon,menuConfig(){return{id:"im-create-chat-menu",width:275,bindElement:this.$refs.icon||{},offsetTop:4,padding:0}},collabAvailable(){const t=m.PermissionManager.getInstance().canPerformActionByUserType(h.ActionByUserType.createCollab);const e=d.FeatureManager.isFeatureAvailable(d.Feature.collabCreationAvailable);const n=d.FeatureManager.isFeatureAvailable(d.Feature.collabAvailable);return t&&n&&e},canCreateChat(){return m.PermissionManager.getInstance().canPerformActionByUserType(h.ActionByUserType.createChat)},canCreateChannel(){return m.PermissionManager.getInstance().canPerformActionByUserType(h.ActionByUserType.createChannel)},canCreateConference(){return m.PermissionManager.getInstance().canPerformActionByUserType(h.ActionByUserType.createConference)}},created(){this.showCollabDescription=p.PromoManager.getInstance().needToShow(h.PromoId.createCollabDescription)},methods:{onChatCreateClick(t){C.Analytics.getInstance().chatCreate.onStartClick(t);this.chatTypeToCreate=t;const e=p.PromoManager.getInstance().needToShow(this.getPromoType());if(e){this.showPromo=true;this.showPopup=false;return}this.startChatCreation();this.showPopup=false},onPromoContinueClick(){p.PromoManager.getInstance().markAsWatched(this.getPromoType());this.startChatCreation();this.showPromo=false;this.showPopup=false;this.chatTypeToCreate=""},onCollabDescriptionClose(){p.PromoManager.getInstance().markAsWatched(h.PromoId.createCollabDescription);this.showCollabDescription=false},startChatCreation(){const{name:t,entityId:e}=this.$store.getters["application/getLayout"];if(t===h.Layout.createChat.name&&e===this.chatTypeToCreate){return}u.CreateChatManager.getInstance().startChatCreation(this.chatTypeToCreate)},getPromoType(){var t;return(t=I[this.chatTypeToCreate])!=null?t:""},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div\n\t\t\tclass="bx-im-list-container-recent__create-chat_icon"\n\t\t\t:class="{'--active': showPopup}"\n\t\t\t@click="showPopup = true"\n\t\t\tref="icon"\n\t\t></div>\n\t\t<MessengerMenu v-if="showPopup" :config="menuConfig" @close="showPopup = false">\n\t\t\t<MenuItem\n\t\t\t\tv-if="canCreateChat"\n\t\t\t\t:icon="MenuItemIcon.chat"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_GROUP_CHAT_TITLE_V2')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_GROUP_CHAT_SUBTITLE_V2')"\n\t\t\t\t@click="onChatCreateClick(ChatType.chat)"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="canCreateChannel"\n\t\t\t\t:icon="MenuItemIcon.channel"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_CHANNEL_TITLE_V2')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_CHANNEL_SUBTITLE_V3')"\n\t\t\t\t@click="onChatCreateClick(ChatType.channel)"\n\t\t\t/>\n\t\t\t<MenuItem\n\t\t\t\tv-if="collabAvailable"\n\t\t\t\t:icon="MenuItemIcon.collab"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_COLLAB_TITLE')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_COLLAB_SUBTITLE')"\n\t\t\t\t@click="onChatCreateClick(ChatType.collab)"\n\t\t\t>\n\t\t\t\t<template #after-title><NewBadge /></template>\n\t\t\t\t<template #below-content><DescriptionBanner v-if="showCollabDescription" @close="onCollabDescriptionClose" /></template>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tv-if="canCreateConference"\n\t\t\t\t:icon="MenuItemIcon.conference"\n\t\t\t\t:title="loc('IM_RECENT_CREATE_CONFERENCE_TITLE')"\n\t\t\t\t:subtitle="loc('IM_RECENT_CREATE_CONFERENCE_SUBTITLE_V2')"\n\t\t\t\t@click="onChatCreateClick(ChatType.videoconf)"\n\t\t\t/>\n\t\t\t<template #footer>\n\t\t\t\t<CreateChatHelp @articleOpen="showPopup = false" />\n\t\t\t</template>\n\t\t</MessengerMenu>\n\t\t<CreateChatPromo\n\t\t\tv-if="showPromo"\n\t\t\t:chatType="chatTypeToCreate"\n\t\t\t@continue="onPromoContinueClick"\n\t\t\t@close="showPromo = false"\n\t\t/>\n\t`};const f=Object.freeze({chats:true,users:true});const y={name:"RecentListContainer",components:{HeaderMenu:E,CreateChatMenu:b,ChatSearchInput:s.ChatSearchInput,RecentList:o.RecentList,ChatSearch:r.ChatSearch},emits:["selectEntity"],data(){return{searchMode:false,unreadOnlyMode:false,searchQuery:"",isSearchLoading:false}},computed:{searchConfig:()=>f,canCreateChat(){const t=[h.ActionByUserType.createChat,h.ActionByUserType.createCollab,h.ActionByUserType.createChannel,h.ActionByUserType.createConference];return t.some((t=>m.PermissionManager.getInstance().canPerformActionByUserType(t)))}},created(){c.Logger.warn("List: Recent container created");e.EventEmitter.subscribe(h.EventType.recent.openSearch,this.onOpenSearch);M.Event.bind(document,"mousedown",this.onDocumentClick)},beforeUnmount(){e.EventEmitter.unsubscribe(h.EventType.recent.openSearch,this.onOpenSearch);M.Event.unbind(document,"mousedown",this.onDocumentClick)},methods:{onChatClick(t){this.$emit("selectEntity",{layoutName:h.Layout.chat.name,entityId:t})},onOpenSearch(){this.searchMode=true},onCloseSearch(){this.searchMode=false;this.searchQuery=""},onUpdateSearch(t){this.searchMode=true;this.searchQuery=t},onDocumentClick(t){const n=t.composedPath().includes(this.$refs["recent-container"]);if(!n){e.EventEmitter.emit(h.EventType.search.close)}},onLoading(t){this.isSearchLoading=t},async onItemClick(t){const{dialogId:o,nativeEvent:s}=t;void n.Messenger.openChat(o);if(!a.Utils.key.isAltOrOption(s)){e.EventEmitter.emit(h.EventType.search.close)}}},template:`\n\t\t<div class="bx-im-list-container-recent__scope bx-im-list-container-recent__container" ref="recent-container">\n\t\t\t<div class="bx-im-list-container-recent__header_container">\n\t\t\t\t<HeaderMenu @showUnread="unreadOnlyMode = true" />\n\t\t\t\t<div class="bx-im-list-container-recent__search-input_container">\n\t\t\t\t\t<ChatSearchInput \n\t\t\t\t\t\t:searchMode="searchMode" \n\t\t\t\t\t\t:isLoading="searchMode && isSearchLoading"\n\t\t\t\t\t\t@openSearch="onOpenSearch"\n\t\t\t\t\t\t@closeSearch="onCloseSearch"\n\t\t\t\t\t\t@updateSearch="onUpdateSearch"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<CreateChatMenu v-if="canCreateChat" />\n\t\t\t</div>\n\t\t\t<div class="bx-im-list-container-recent__elements_container">\n\t\t\t\t<div class="bx-im-list-container-recent__elements">\n\t\t\t\t\t<ChatSearch \n\t\t\t\t\t\tv-show="searchMode" \n\t\t\t\t\t\t:searchMode="searchMode"\n\t\t\t\t\t\t:searchQuery="searchQuery"\n\t\t\t\t\t\t:searchConfig="searchConfig"\n\t\t\t\t\t\t:saveSearchHistory="true"\n\t\t\t\t\t\t@loading="onLoading"\n\t\t\t\t\t\t@clickItem="onItemClick"\n\t\t\t\t\t/>\n\t\t\t\t\t<RecentList v-show="!searchMode && !unreadOnlyMode" @chatClick="onChatClick" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};t.RecentListContainer=y})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.List,BX.Messenger.v2.Component,BX.Messenger.v2.Component,BX.Messenger.v2.Lib,BX.Messenger.v2.Service,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX);
//# sourceMappingURL=recent-container.bundle.map.js