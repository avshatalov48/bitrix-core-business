{"version":3,"file":"ast-processor.bundle.js","sources":["../../shared/src/get-by-index.js","../src/ast-processor.js"],"sourcesContent":["import { Type } from 'main.core';\n\nexport function getByIndex<T>(array: Array<T>, index: number): ?T\n{\n\tif (!Type.isArray(array))\n\t{\n\t\tthrow new TypeError('array is not a array');\n\t}\n\n\tif (!Type.isInteger(index))\n\t{\n\t\tthrow new TypeError('index is not a integer');\n\t}\n\n\tconst preparedIndex = index < 0 ? array.length + index : index;\n\n\treturn array[preparedIndex];\n};\n","import { Type } from 'main.core';\nimport { getByIndex } from '../../shared';\n\ntype ParsedSelector = {\n\tnodeName: string,\n\tprops: Array<{key: string, value: any}>,\n};\n\nexport class AstProcessor\n{\n\t/**\n\t * Makes flat list from AST\n\t */\n\tstatic flattenAst(ast): Array<any>\n\t{\n\t\tif (ast && ast.getChildren)\n\t\t{\n\t\t\tconst children = ast.getChildren();\n\n\t\t\treturn [\n\t\t\t\t...children,\n\t\t\t\t...children.flatMap((node) => {\n\t\t\t\t\treturn AstProcessor.flattenAst(node);\n\t\t\t\t}),\n\t\t\t];\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Parses selector\n\t */\n\tstatic parseSelector(selector: string): Array<ParsedSelector | '>'>\n\t{\n\t\tconst regex = /(\\w+)\\[(.*?)]|\\s*(>)\\s*|\\w+/g;\n\t\tconst matches = [...selector.matchAll(regex)];\n\n\t\treturn matches.map(([fullMatch: string, nodeName: ?string, rawProps: ?string, arrow: ?string]) => {\n\t\t\tif (arrow)\n\t\t\t{\n\t\t\t\treturn '>';\n\t\t\t}\n\n\t\t\tif (rawProps)\n\t\t\t{\n\t\t\t\tconst propsRegexp = /(\\w+)=[\"'](.*?)[\"']/g;\n\t\t\t\tconst propsMatches = [...rawProps.matchAll(propsRegexp)];\n\t\t\t\tconst props = propsMatches.map(([, key: string, value: string]) => {\n\t\t\t\t\treturn [key, value];\n\t\t\t\t});\n\n\t\t\t\treturn {\n\t\t\t\t\tnodeName,\n\t\t\t\t\tprops,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tnodeName: fullMatch,\n\t\t\t\tprops: [],\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * @private\n\t */\n\tstatic matchesNodeWithSelector(node, selector: ParsedSelector): boolean\n\t{\n\t\tif (node && node.constructor.name === selector.nodeName)\n\t\t{\n\t\t\tif (selector.props.length > 0)\n\t\t\t{\n\t\t\t\treturn selector.props.every(([key, value]) => {\n\t\t\t\t\tconst propValue = (() => {\n\t\t\t\t\t\tconst name = `${key.charAt(0).toUpperCase()}${key.slice(1)}`;\n\t\t\t\t\t\tif (Type.isFunction(node[`get${name}`]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn node[`get${name}`]();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Type.isFunction(node[`is${name}`]))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn node[`is${name}`]();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})();\n\n\t\t\t\t\tif (['true', 'false'].includes(value))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn propValue === (value === 'true');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn propValue === value;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Finds parent node by parsed selector\n\t */\n\tstatic findParentNode(node, selector: ParsedSelector): ?any\n\t{\n\t\tif (node)\n\t\t{\n\t\t\tconst parent = node.getParent();\n\n\t\t\tif (AstProcessor.matchesNodeWithSelector(parent, selector))\n\t\t\t{\n\t\t\t\treturn parent;\n\t\t\t}\n\n\t\t\treturn AstProcessor.findParentNode(parent, selector);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Find elements by selector\n\t */\n\tstatic findElements(ast, selector: string): Array<any>\n\t{\n\t\tconst flattenedAst = AstProcessor.flattenAst(ast);\n\t\tconst parsedSelector = AstProcessor.parseSelector(selector);\n\t\tconst lastSelector = getByIndex(parsedSelector, -1);\n\n\t\tlet checkClosestParent = false;\n\n\t\treturn parsedSelector.reduceRight((acc: Array<any>, currentSelector: ParsedSelector) => {\n\t\t\tif (Type.isPlainObject(currentSelector))\n\t\t\t{\n\t\t\t\tif (currentSelector === lastSelector)\n\t\t\t\t{\n\t\t\t\t\treturn acc.filter((node) => {\n\t\t\t\t\t\treturn AstProcessor.matchesNodeWithSelector(node, currentSelector);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (checkClosestParent)\n\t\t\t\t{\n\t\t\t\t\tcheckClosestParent = false;\n\n\t\t\t\t\treturn acc.filter((node) => {\n\t\t\t\t\t\treturn AstProcessor.matchesNodeWithSelector(node.getParent(), currentSelector);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn acc.filter((node) => {\n\t\t\t\t\treturn AstProcessor.findParentNode(node, currentSelector) !== null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (currentSelector === '>')\n\t\t\t{\n\t\t\t\tcheckClosestParent = true;\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, flattenedAst);\n\t}\n\n\t/**\n\t * Reduces AST\n\t */\n\tstatic reduceAst(ast, reducer: (node: any, children?: Array<any>) => any | null): any\n\t{\n\t\tconst children = ast.getChildren?.().reduce((acc, child) => {\n\t\t\tconst preparedChild = [AstProcessor.reduceAst(child, reducer)].flat();\n\t\t\tif (!Type.isNil(preparedChild))\n\t\t\t{\n\t\t\t\tacc.replaceChild(child, ...preparedChild);\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, ast);\n\n\t\treturn reducer(ast, children);\n\t}\n}\n"],"names":["getByIndex","array","index","Type","isArray","TypeError","isInteger","preparedIndex","length","AstProcessor","flattenAst","ast","getChildren","children","flatMap","node","parseSelector","selector","regex","matches","matchAll","map","fullMatch","nodeName","rawProps","arrow","propsRegexp","propsMatches","props","key","value","matchesNodeWithSelector","constructor","name","every","propValue","charAt","toUpperCase","slice","isFunction","includes","findParentNode","parent","getParent","findElements","flattenedAst","parsedSelector","lastSelector","checkClosestParent","reduceRight","acc","currentSelector","isPlainObject","filter","reduceAst","reducer","reduce","child","preparedChild","flat","isNil","replaceChild"],"mappings":"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"}