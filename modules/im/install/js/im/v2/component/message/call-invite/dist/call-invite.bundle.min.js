this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,s,n,i,a,o,l,r,c){"use strict";const g="#00ace3";const m={name:"CallInviteMessage",components:{ButtonComponent:o.Button,BaseMessage:l.BaseMessage,DefaultMessageContent:r.DefaultMessageContent,MessageHeader:r.MessageHeader},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withTitle:{type:Boolean,default:true}},computed:{ButtonSize:()=>o.ButtonSize,ButtonIcon:()=>o.ButtonIcon,buttonColorScheme(){return{backgroundColor:"transparent",borderColor:g,iconColor:g,textColor:g,hoverColor:"transparent"}},message(){return this.item},componentParams(){return this.item.componentParams},canSetReactions(){return a.Type.isNumber(this.message.id)},isAvailable(){if(this.$store.getters["recent/calls/hasActiveCall"](this.dialogId)&&n.CallManager.getInstance().getCurrentCallDialogId()===this.dialogId){return true}if(this.$store.getters["recent/calls/hasActiveCall"]()){return false}const t=n.CallManager.getInstance().chatCanBeCalled(this.dialogId);const e=i.PermissionManager.getInstance().canPerformAction(s.ChatActionType.call,this.dialogId);return t&&e},inviteTitle(){return this.loc("IM_MESSENGER_MESSAGE_CALL_INVITE_TITLE_2")},descriptionTitle(){return this.loc("IM_MESSENGER_MESSAGE_CALL_INVITE_DESCRIPTION")}},methods:{loc(t,e={}){return this.$Bitrix.Loc.getMessage(t,e)},onCallButtonClick(t){if(c.Utils.key.isAltOrOption(t)){c.Utils.browser.openLink(this.componentParams.link)}else{e.Messenger.startVideoCall(this.dialogId)}}},template:`\n\t\t<BaseMessage :dialogId="dialogId" :item="item">\n\t\t\t<div class="bx-im-message-call-invite__scope bx-im-message-call-invite__container">\n\t\t\t\t<MessageHeader :withTitle="withTitle" :item="item" />\n\t\t\t\t<div class="bx-im-message-call-invite__content-container">\n\t\t\t\t\t<div class="bx-im-message-call-invite__image"></div>\n\t\t\t\t\t<div class="bx-im-message-call-invite__content">\n\t\t\t\t\t\t<div class="bx-im-message-call-invite__title">\n\t\t\t\t\t\t\t{{ inviteTitle }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="bx-im-message-call-invite__description">\n\t\t\t\t\t\t\t{{ descriptionTitle }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div v-if="isAvailable" class="bx-im-message-call-invite__buttons_container">\n\t\t\t\t\t\t\t<div class="bx-im-message-call-invite__buttons_item">\n\t\t\t\t\t\t\t\t<ButtonComponent\n\t\t\t\t\t\t\t\t\t:size="ButtonSize.L"\n\t\t\t\t\t\t\t\t\t:icon="ButtonIcon.Call"\n\t\t\t\t\t\t\t\t\t:customColorScheme="buttonColorScheme"\n\t\t\t\t\t\t\t\t\t:isRounded="true"\n\t\t\t\t\t\t\t\t\t:text="loc('IM_MESSENGER_MESSAGE_CALL_INVITE_BUTTON_JOIN')"\n\t\t\t\t\t\t\t\t\t@click="onCallButtonClick"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<DefaultMessageContent :item="item" :dialogId="dialogId" :withText="false" :withAttach="false" />\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`};t.CallInviteMessage=m})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Lib);
//# sourceMappingURL=call-invite.bundle.map.js