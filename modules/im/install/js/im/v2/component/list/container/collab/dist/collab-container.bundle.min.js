this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,n,a,s,i,o,l,r){"use strict";const c={name:"CollabListContainer",components:{CollabList:e.CollabList,CreateChatPromo:n.CreateChatPromo},emits:["selectEntity"],computed:{ChatType:()=>a.ChatType,canCreate(){const t=i.FeatureManager.isFeatureAvailable(i.Feature.collabCreationAvailable);const e=r.PermissionManager.getInstance().canPerformActionByUserType(a.ActionByUserType.createCollab);return t&&e}},created(){o.Logger.warn("List: Collab container created")},methods:{onChatClick(t){this.$emit("selectEntity",{layoutName:a.Layout.collab.name,entityId:t})},onCreateClick(){s.Analytics.getInstance().chatCreate.onStartClick(a.ChatType.collab);this.startCollabCreation()},startCollabCreation(){l.CreateChatManager.getInstance().startChatCreation(a.ChatType.collab)},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-list-container-collab__container">\n\t\t\t<div class="bx-im-list-container-collab__header_container">\n\t\t\t\t<div class="bx-im-list-container-collab__header_title">\n\t\t\t\t\t{{ loc('IM_LIST_CONTAINER_COLLAB_HEADER_TITLE') }}\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-if="canCreate"\n\t\t\t\t\t@click="onCreateClick" \n\t\t\t\t\tclass="bx-im-list-container-collab__header_create-collab"\n\t\t\t\t></div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-list-container-collab__elements_container">\n\t\t\t\t<div class="bx-im-list-container-collab__elements">\n\t\t\t\t\t<CollabList @chatClick="onChatClick" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};t.CollabListContainer=c})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Messenger.v2.Component.List,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=collab-container.bundle.map.js