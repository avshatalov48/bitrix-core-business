{"version":3,"file":"formatter.bundle.js","sources":["../src/node-formatter.js","../src/formatter.js"],"sourcesContent":["import { Type } from 'main.core';\nimport {\n\tBBCodeNode,\n\ttypeof BBCodeElementNode,\n\ttypeof BBCodeRootNode,\n\ttypeof BBCodeTextNode,\n} from 'ui.bbcode.model';\nimport { type FormatterData, typeof Formatter, type FormatterElement } from './formatter';\n\nexport type ConvertCallbackOptions = {\n\tnode: BBCodeElementNode | BBCodeRootNode | BBCodeTextNode,\n\tformatter: Formatter,\n\tdata: FormatterData,\n};\n\nexport type ValidateCallbackOptions = ConvertCallbackOptions & {};\nexport type BeforeConvertCallbackOptions = ConvertCallbackOptions & {};\nexport type ForChildCallbackOptions = ConvertCallbackOptions & {\n\telement: FormatterElement,\n};\nexport type AfterCallbackOptions = ForChildCallbackOptions & {};\nexport type FormatterCallbackResult = Object | null;\n\nexport type NodeFormatterOptions = {\n\tname: string | Array<string>,\n\tconvert: (ConvertCallbackOptions) => FormatterCallbackResult,\n\tvalidate?: (ValidateCallbackOptions) => boolean,\n\tbefore?: (BeforeConvertCallbackOptions) => BBCodeNode | null,\n\tafter?: (AfterCallbackOptions) => FormatterCallbackResult,\n\tforChild?: (ForChildCallbackOptions) => FormatterCallbackResult,\n\tformatter?: Formatter,\n};\n\ntype DefaultNodeConverterOptions = ConvertCallbackOptions | BeforeConvertCallbackOptions;\ntype DefaultElementConverterOptions = ForChildCallbackOptions | AfterCallbackOptions;\n\nconst nameSymbol: Symbol = Symbol('name');\nconst groupSymbol: Symbol = Symbol('group');\nconst validateSymbol: Symbol = Symbol('validate');\nconst beforeSymbol: Symbol = Symbol('before');\nconst convertSymbol: Symbol = Symbol('convert');\nconst forChildSymbol: Symbol = Symbol('forChild');\nconst afterSymbol: Symbol = Symbol('after');\nconst formatterSymbol: Symbol = Symbol('formatter');\n\nconst defaultValidator = () => true;\nconst defaultNodeConverter = ({ node }: DefaultNodeConverterOptions) => node;\nconst defaultElementConverter = ({ element }: DefaultElementConverterOptions) => element;\n\nexport class NodeFormatter\n{\n\t[nameSymbol]: string = 'unknown';\n\t[groupSymbol]: ?Array<string> = null;\n\t[validateSymbol]: (ValidateCallbackOptions) => boolean;\n\t[beforeSymbol]: (BeforeConvertCallbackOptions) => FormatterCallbackResult = null;\n\t[convertSymbol]: (ConvertCallbackOptions) => FormatterCallbackResult = null;\n\t[forChildSymbol]: (ForChildCallbackOptions) => FormatterCallbackResult = null;\n\t[afterSymbol]: (AfterCallbackOptions) => FormatterCallbackResult = null;\n\n\tconstructor(options: NodeFormatterOptions = {})\n\t{\n\t\tif (Type.isArray(options.name))\n\t\t{\n\t\t\tthis[groupSymbol] = [...options.name];\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setName(options.name);\n\t\t}\n\n\t\tif (!Type.isNil(options.formatter))\n\t\t{\n\t\t\tthis.setFormatter(options.formatter);\n\t\t}\n\n\t\tthis.setValidate(options.validate);\n\t\tthis.setBefore(options.before);\n\t\tthis.setConvert(options.convert);\n\t\tthis.setForChild(options.forChild);\n\t\tthis.setAfter(options.after);\n\t}\n\n\tsetName(name: string)\n\t{\n\t\tif (!Type.isStringFilled(name))\n\t\t{\n\t\t\tthrow new TypeError('Name is not a string');\n\t\t}\n\n\t\tthis[nameSymbol] = name;\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this[nameSymbol];\n\t}\n\n\tsetValidate(callback: (ValidateCallbackOptions) => boolean)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[validateSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[validateSymbol] = defaultValidator;\n\t\t}\n\t}\n\n\tvalidate(options: ValidateCallbackOptions): boolean\n\t{\n\t\tconst result: ?boolean = this[validateSymbol](options);\n\t\tif (Type.isBoolean(result))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new TypeError(`Validate callback for \"${this.getName()}\" returned not boolean`);\n\t}\n\n\tsetBefore(callback: (BeforeConvertCallbackOptions) => FormatterCallbackResult)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[beforeSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[beforeSymbol] = defaultNodeConverter;\n\t\t}\n\t}\n\n\trunBefore(options: BeforeConvertCallbackOptions): FormatterCallbackResult\n\t{\n\t\treturn this[beforeSymbol](options);\n\t}\n\n\tsetConvert(callback: (ConvertCallbackOptions) => FormatterCallbackResult)\n\t{\n\t\tif (!Type.isFunction(callback))\n\t\t{\n\t\t\tthrow new TypeError('Convert is not a function');\n\t\t}\n\n\t\tthis[convertSymbol] = callback;\n\t}\n\n\trunConvert(options: ConvertCallbackOptions): FormatterCallbackResult\n\t{\n\t\treturn this[convertSymbol](options);\n\t}\n\n\tsetForChild(callback: (ForChildCallbackOptions) => FormatterCallbackResult)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[forChildSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[forChildSymbol] = defaultElementConverter;\n\t\t}\n\t}\n\n\trunForChild(options: ForChildCallbackOptions): FormatterCallbackResult\n\t{\n\t\treturn this[forChildSymbol](options);\n\t}\n\n\tsetAfter(callback: (AfterCallbackOptions) => FormatterCallbackResult)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[afterSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis[afterSymbol] = defaultElementConverter;\n\t\t}\n\t}\n\n\trunAfter(options: AfterCallbackOptions): FormatterCallbackResult\n\t{\n\t\treturn this[afterSymbol](options);\n\t}\n\n\tsetFormatter(formatter: Formatter)\n\t{\n\t\tthis[formatterSymbol] = formatter;\n\t}\n\n\tgetFormatter(): Formatter\n\t{\n\t\treturn this[formatterSymbol];\n\t}\n}\n","import { Type } from 'main.core';\nimport { BBCodeFragmentNode, BBCodeNode, BBCodeScheme } from 'ui.bbcode.model';\nimport { BBCodeParser } from 'ui.bbcode.parser';\nimport { NodeFormatter, type BeforeConvertCallbackOptions } from './node-formatter';\n\nexport * from './node-formatter';\n\nexport type FormatterData = {\n\t[key: string]: any,\n};\n\nexport type UnknownNodeCallbackOptions = {\n\tnode: BBCodeNode,\n\tformatter: Formatter,\n\tdata: FormatterData,\n};\n\nexport type FormatterOptions = {\n\tformatters: Array<NodeFormatter>,\n\tonUnknown: (UnknownNodeCallbackOptions) => BBCodeNode | null,\n};\n\nexport type FormatterFormatOptions = {\n\tsource: BBCodeNode | string,\n\tdata?: FormatterData,\n};\n\nexport interface FormatterElement\n{\n\tappendChild(): void\n}\n\nconst formattersSymbol: Symbol = Symbol('formatters');\nconst onUnknownSymbol: Symbol = Symbol('onUnknown');\nconst dataSymbol: Symbol = Symbol('data');\n\n/**\n * @memberOf BX.UI.BBCode\n */\nexport class Formatter\n{\n\t[formattersSymbol]: Map<any, any> = new Map();\n\t[onUnknownSymbol]: (UnknownNodeCallbackOptions) => NodeFormatter | null = null;\n\t[dataSymbol]: FormatterData | null = null;\n\n\tconstructor(options: FormatterOptions = {})\n\t{\n\t\tthis.setNodeFormatters(options.formatters);\n\t\tif (Type.isNil(options.onUnknown))\n\t\t{\n\t\t\tthis.setOnUnknown(this.getDefaultUnknownNodeCallback());\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setOnUnknown(options.onUnknown);\n\t\t}\n\t}\n\n\tisElement(source): boolean\n\t{\n\t\treturn Type.isObject(source) && Type.isFunction(source.appendChild);\n\t}\n\n\tstatic prepareSourceNode(source: BBCodeNode | string): BBCodeNode | null\n\t{\n\t\tif (source instanceof BBCodeNode)\n\t\t{\n\t\t\treturn source;\n\t\t}\n\n\t\tif (Type.isString(source))\n\t\t{\n\t\t\treturn (new BBCodeParser()).parse(source);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tsetData(data: FormatterData)\n\t{\n\t\tthis[dataSymbol] = data;\n\t}\n\n\tgetData(): FormatterData\n\t{\n\t\treturn this[dataSymbol];\n\t}\n\n\tsetNodeFormatters(formatters: Array<NodeFormatter>)\n\t{\n\t\tif (Type.isArrayFilled(formatters))\n\t\t{\n\t\t\tformatters.forEach((formatter: NodeFormatter) => {\n\t\t\t\tthis.setNodeFormatter(formatter);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetNodeFormatter(formatter: NodeFormatter)\n\t{\n\t\tif (formatter instanceof NodeFormatter)\n\t\t{\n\t\t\tthis[formattersSymbol].set(formatter.getName(), formatter);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('formatter is not a NodeFormatter instance.');\n\t\t}\n\t}\n\n\tgetDefaultUnknownNodeCallback(): (UnknownNodeCallbackOptions) => NodeFormatter | null\n\t{\n\t\tthrow new TypeError('Must be implemented in subclass');\n\t}\n\n\tsetOnUnknown(callback: (UnknownNodeCallbackOptions) => NodeFormatter | null)\n\t{\n\t\tif (Type.isFunction(callback))\n\t\t{\n\t\t\tthis[onUnknownSymbol] = callback;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('OnUnknown callback is not a function.');\n\t\t}\n\t}\n\n\trunOnUnknown(options: UnknownNodeCallbackOptions): NodeFormatter | null\n\t{\n\t\tconst result: NodeFormatter | null = this[onUnknownSymbol](options);\n\t\tif (result instanceof NodeFormatter || Type.isNull(result))\n\t\t{\n\t\t\treturn result;\n\t\t}\n\n\t\tthrow new TypeError('OnUnknown callback returned not NodeFormatter instance or null.');\n\t}\n\n\tgetNodeFormatter(node: BBCodeNode): NodeFormatter | null\n\t{\n\t\tconst formatter: ?NodeFormatter = this[formattersSymbol].get(node.getName());\n\t\tif (formatter instanceof NodeFormatter)\n\t\t{\n\t\t\treturn formatter;\n\t\t}\n\n\t\treturn this.runOnUnknown({ node, formatter: this });\n\t}\n\n\tgetNodeFormatters(): Array<NodeFormatter>\n\t{\n\t\treturn this[formattersSymbol];\n\t}\n\n\tformat(options: FormatterFormatOptions): DocumentFragment | HTMLElement | Text | null\n\t{\n\t\tif (!Type.isPlainObject(options))\n\t\t{\n\t\t\tthrow new TypeError('options is not a object');\n\t\t}\n\n\t\tconst { source, data = {} } = options;\n\t\tif (!Type.isUndefined(data) && !Type.isPlainObject(data))\n\t\t{\n\t\t\tthrow new TypeError('options.data is not a object');\n\t\t}\n\n\t\tthis.setData(data);\n\n\t\tconst sourceNode: ?BBCodeNode = Formatter.prepareSourceNode(source);\n\t\tif (Type.isNull(sourceNode))\n\t\t{\n\t\t\tthrow new TypeError('options.source is not a BBCodeNode or string');\n\t\t}\n\n\t\tconst nodeFormatter: NodeFormatter = this.getNodeFormatter(sourceNode);\n\t\tconst isValidNode: boolean = nodeFormatter.validate({\n\t\t\tnode: sourceNode,\n\t\t\tformatter: this,\n\t\t\tdata,\n\t\t});\n\t\tif (!isValidNode)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst preparedNode: ?BBCodeNode = nodeFormatter.runBefore({\n\t\t\tnode: sourceNode,\n\t\t\tformatter: this,\n\t\t\tdata,\n\t\t});\n\t\tif (Type.isNull(preparedNode))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst convertedElement: ?HTMLElement = nodeFormatter.runConvert({\n\t\t\tnode: preparedNode,\n\t\t\tformatter: this,\n\t\t\tdata,\n\t\t});\n\t\tif (Type.isNull(convertedElement))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tpreparedNode.getChildren().forEach((childNode: BBCodeNode) => {\n\t\t\tconst childElement: ?HTMLElement = this.format({ source: childNode, data });\n\t\t\tif (childElement !== null)\n\t\t\t{\n\t\t\t\tconst convertedChildElement: ?HTMLElement = nodeFormatter.runForChild({\n\t\t\t\t\tnode: childNode,\n\t\t\t\t\telement: childElement,\n\t\t\t\t\tformatter: this,\n\t\t\t\t\tdata,\n\t\t\t\t});\n\n\t\t\t\tif (convertedChildElement !== null && this.isElement(convertedElement))\n\t\t\t\t{\n\t\t\t\t\tconvertedElement.appendChild(convertedChildElement);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn nodeFormatter.runAfter({\n\t\t\tnode: preparedNode,\n\t\t\telement: convertedElement,\n\t\t\tformatter: this,\n\t\t\tdata,\n\t\t});\n\t}\n}\n"],"names":["nameSymbol","Symbol","groupSymbol","validateSymbol","beforeSymbol","convertSymbol","forChildSymbol","afterSymbol","formatterSymbol","defaultValidator","defaultNodeConverter","node","defaultElementConverter","element","NodeFormatter","constructor","options","Type","isArray","name","setName","isNil","formatter","setFormatter","setValidate","validate","setBefore","before","setConvert","convert","setForChild","forChild","setAfter","after","isStringFilled","TypeError","getName","callback","isFunction","result","isBoolean","runBefore","runConvert","runForChild","runAfter","getFormatter","formattersSymbol","onUnknownSymbol","dataSymbol","Formatter","Map","setNodeFormatters","formatters","onUnknown","setOnUnknown","getDefaultUnknownNodeCallback","isElement","source","isObject","appendChild","prepareSourceNode","BBCodeNode","isString","BBCodeParser","parse","setData","data","getData","isArrayFilled","forEach","setNodeFormatter","set","runOnUnknown","isNull","getNodeFormatter","get","getNodeFormatters","format","isPlainObject","isUndefined","sourceNode","nodeFormatter","isValidNode","preparedNode","convertedElement","getChildren","childNode","childElement","convertedChildElement"],"mappings":"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"}