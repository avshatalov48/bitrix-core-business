{"version":3,"file":"permission.bundle.js","sources":["../src/const/action-config.js","../src/permission.js"],"sourcesContent":["import { UserRole, ChatActionType } from 'im.v2.const';\n\nexport const MinimalRoleForAction = {\n\t[ChatActionType.readMessage]: UserRole.member,\n\t[ChatActionType.setReaction]: UserRole.member,\n\t[ChatActionType.openMessageMenu]: UserRole.member,\n\t[ChatActionType.openAvatarMenu]: UserRole.member,\n\t[ChatActionType.openSidebarMenu]: UserRole.member,\n\t[ChatActionType.subscribeToComments]: UserRole.member,\n\n\t[ChatActionType.openComments]: UserRole.guest,\n\t[ChatActionType.openSidebar]: UserRole.guest,\n};\n","import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { ChatType, ChatActionType, ChatActionGroup, UserRole } from 'im.v2.const';\n\nimport { MinimalRoleForAction } from './const/action-config';\n\nimport type { ImModelChat } from 'im.v2.model';\n\ntype ChatTypeItem = $Keys<typeof ChatType>;\ntype ActionTypeItem = $Keys<typeof ChatActionType>;\ntype ActionGroupItem = $Keys<typeof ChatActionGroup>;\ntype ActionGroup = ActionTypeItem[];\ntype RoleItem = $Keys<typeof UserRole>;\n\ntype RawPermissions = {\n\tbyChatType: PermissionsByChatType,\n\tactionGroups: {},\n\tactionGroupsDefaults: {},\n};\n\ntype PermissionsByRole = {\n\t[operation: ActionTypeItem]: RoleItem,\n};\n\ntype PermissionsByChatType = {\n\t[chatType: ChatTypeItem | 'default']: {\n\t\t[operation: ActionTypeItem]: RoleItem,\n\t}\n};\n\ntype PermissionsGroupDefaults = {\n\t[chatType: ChatTypeItem]: {\n\t\t[group: ActionGroupItem]: RoleItem,\n\t}\n};\n\nconst DEFAULT_TYPE = 'default';\n\nexport class PermissionManager\n{\n\tstatic #instance: PermissionManager;\n\n\t#rolePermissions: PermissionsByRole = {};\n\t#chatTypePermissions: PermissionsByChatType = {};\n\t#actionGroups: Object<ActionGroupItem, ActionGroup> = {};\n\t#actionGroupsDefaultRoles: PermissionsGroupDefaults = {};\n\n\tstatic getInstance(): PermissionManager\n\t{\n\t\tif (!this.#instance)\n\t\t{\n\t\t\tthis.#instance = new this();\n\t\t}\n\n\t\treturn this.#instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tPermissionManager.getInstance();\n\t}\n\n\tconstructor()\n\t{\n\t\tconst { permissions } = Core.getApplicationData();\n\t\tLogger.warn('PermissionManager: permission from server', permissions);\n\t\tthis.#init(permissions);\n\t}\n\n\tcanPerformAction(actionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\treturn this.#canPerformActionByRole(actionType, dialogId)\n\t\t\t&& this.#canPerformActionByChatType(actionType, dialogId)\n\t\t\t&& this.#canPerformActionByChatSettings(actionType, dialogId);\n\t}\n\n\tgetDefaultRolesForActionGroups(chatType?: ChatTypeItem): Object<ActionGroupItem, RoleItem>\n\t{\n\t\tif (!this.#actionGroupsDefaultRoles[chatType])\n\t\t{\n\t\t\treturn this.#actionGroupsDefaultRoles[DEFAULT_TYPE];\n\t\t}\n\n\t\treturn this.#actionGroupsDefaultRoles[chatType];\n\t}\n\n\t#init(rawPermissions: RawPermissions)\n\t{\n\t\tthis.#rolePermissions = MinimalRoleForAction;\n\t\tif (!rawPermissions)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tconst { byChatType, actionGroups, actionGroupsDefaults } = rawPermissions;\n\t\tthis.#chatTypePermissions = this.#prepareChatTypePermissions(byChatType);\n\t\tthis.#actionGroups = actionGroups;\n\t\tthis.#actionGroupsDefaultRoles = actionGroupsDefaults;\n\t}\n\n\t#canPerformActionByRole(actionType, dialogId): boolean\n\t{\n\t\tconst { role: userRole }: ImModelChat = this.#getDialog(dialogId);\n\t\tif (Type.isUndefined(this.#rolePermissions[actionType]))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconst minimalRole = this.#rolePermissions[actionType];\n\n\t\treturn this.#checkMinimalRole(minimalRole, userRole);\n\t}\n\n\t#canPerformActionByChatType(rawActionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\tlet actionType = rawActionType;\n\t\tconst dialog: ImModelChat = this.#getDialog(dialogId);\n\t\tconst { role: userRole, owner: chatOwner } = dialog;\n\t\tlet { type: chatType } = dialog;\n\n\t\tif (Type.isUndefined(this.#chatTypePermissions[chatType]))\n\t\t{\n\t\t\tchatType = DEFAULT_TYPE;\n\t\t}\n\n\t\t// for kick check if users can leave this type of chat\n\t\tif (actionType === ChatActionType.kick)\n\t\t{\n\t\t\tactionType = ChatActionType.leave;\n\t\t}\n\n\t\tconst isOwner = chatOwner === Core.getUserId();\n\t\tif (actionType === ChatActionType.leave && isOwner)\n\t\t{\n\t\t\tactionType = ChatActionType.leaveOwner;\n\t\t}\n\n\t\tif (Type.isUndefined(this.#chatTypePermissions[chatType]?.[actionType]))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconst minimalRole = this.#chatTypePermissions[chatType][actionType];\n\n\t\treturn this.#checkMinimalRole(minimalRole, userRole);\n\t}\n\n\t#canPerformActionByChatSettings(actionType: ActionTypeItem, dialogId: string): boolean\n\t{\n\t\tconst { role: userRole, type: chatType, permissions: chatPermissions } = this.#getDialog(dialogId);\n\t\tif (chatType === ChatType.user)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconst actionGroup = this.#getGroupByAction(actionType);\n\t\tif (!actionGroup)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet minimalRoleForGroup = chatPermissions[actionGroup];\n\t\tif (!minimalRoleForGroup)\n\t\t{\n\t\t\tminimalRoleForGroup = UserRole.member;\n\t\t}\n\n\t\treturn this.#checkMinimalRole(minimalRoleForGroup, userRole);\n\t}\n\n\t#getGroupByAction(actionType: ActionTypeItem): ?ActionGroupItem\n\t{\n\t\tconst searchResult = Object.entries(this.#actionGroups).find(([_, groupActions]) => {\n\t\t\treturn groupActions.includes(actionType);\n\t\t});\n\n\t\tif (!searchResult)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst [groupName] = searchResult;\n\n\t\treturn groupName;\n\t}\n\n\t#prepareChatTypePermissions(permissionsByChatType: PermissionsByChatType): PermissionsByChatType\n\t{\n\t\tconst preparedPermissions = { ...permissionsByChatType };\n\n\t\tconst SERVER_USER_CHAT_TYPE = 'private';\n\t\tpreparedPermissions[ChatType.user] = preparedPermissions[SERVER_USER_CHAT_TYPE];\n\n\t\treturn preparedPermissions;\n\t}\n\n\t#checkMinimalRole(minimalRole: RoleItem, roleToCheck: RoleItem): boolean\n\t{\n\t\tif (minimalRole === UserRole.none)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst roleWeights = {};\n\t\tObject.values(UserRole).forEach((role, index) => {\n\t\t\troleWeights[role] = index;\n\t\t});\n\n\t\treturn roleWeights[roleToCheck] >= roleWeights[minimalRole];\n\t}\n\n\t#getDialog(dialogId: string): ImModelChat\n\t{\n\t\treturn Core.getStore().getters['chats/get'](dialogId, true);\n\t}\n}\n"],"names":["MinimalRoleForAction","ChatActionType","readMessage","UserRole","member","setReaction","openMessageMenu","openAvatarMenu","openSidebarMenu","subscribeToComments","openComments","guest","openSidebar","DEFAULT_TYPE","PermissionManager","getInstance","init","constructor","permissions","Core","getApplicationData","Logger","warn","canPerformAction","actionType","dialogId","getDefaultRolesForActionGroups","chatType","rawPermissions","byChatType","actionGroups","actionGroupsDefaults","role","userRole","Type","isUndefined","minimalRole","rawActionType","dialog","owner","chatOwner","type","kick","leave","isOwner","getUserId","leaveOwner","chatPermissions","ChatType","user","actionGroup","minimalRoleForGroup","searchResult","Object","entries","find","_","groupActions","includes","groupName","permissionsByChatType","preparedPermissions","SERVER_USER_CHAT_TYPE","roleToCheck","none","roleWeights","values","forEach","index","getStore","getters"],"mappings":";;;;;;;CAEO,MAAMA,oBAAoB,GAAG;GACnC,CAACC,0BAAc,CAACC,WAAW,GAAGC,oBAAQ,CAACC,MAAM;GAC7C,CAACH,0BAAc,CAACI,WAAW,GAAGF,oBAAQ,CAACC,MAAM;GAC7C,CAACH,0BAAc,CAACK,eAAe,GAAGH,oBAAQ,CAACC,MAAM;GACjD,CAACH,0BAAc,CAACM,cAAc,GAAGJ,oBAAQ,CAACC,MAAM;GAChD,CAACH,0BAAc,CAACO,eAAe,GAAGL,oBAAQ,CAACC,MAAM;GACjD,CAACH,0BAAc,CAACQ,mBAAmB,GAAGN,oBAAQ,CAACC,MAAM;GAErD,CAACH,0BAAc,CAACS,YAAY,GAAGP,oBAAQ,CAACQ,KAAK;GAC7C,CAACV,0BAAc,CAACW,WAAW,GAAGT,oBAAQ,CAACQ;CACxC,CAAC;;CC0BD,MAAME,YAAY,GAAG,SAAS;CAAC;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAE/B,CAAO,MAAMC,iBAAiB,CAC9B;GAQC,OAAOC,WAAW,GAClB;KACC,IAAI,yCAAC,IAAI,uBAAU,EACnB;OACC,4CAAI,0BAAa,IAAI,IAAI,EAAE;;KAG5B,+CAAO,IAAI;;GAGZ,OAAOC,IAAI,GACX;KACCF,iBAAiB,CAACC,WAAW,EAAE;;GAGhCE,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA,OArBsC;;KAAE;OAAA;OAAA,OACM;;KAAE;OAAA;OAAA,OACM;;KAAE;OAAA;OAAA,OACF;;KAmBrD,MAAM;OAAEC;MAAa,GAAGC,2BAAI,CAACC,kBAAkB,EAAE;KACjDC,uBAAM,CAACC,IAAI,CAAC,2CAA2C,EAAEJ,WAAW,CAAC;KACrE,4CAAI,gBAAOA,WAAW;;GAGvBK,gBAAgB,CAACC,UAA0B,EAAEC,QAAgB,EAC7D;KACC,OAAO,4CAAI,oDAAyBD,UAAU,EAAEC,QAAQ,6CACpD,IAAI,4DAA6BD,UAAU,EAAEC,QAAQ,CAAC,4CACtD,IAAI,oEAAiCD,UAAU,EAAEC,QAAQ,CAAC;;GAG/DC,8BAA8B,CAACC,QAAuB,EACtD;KACC,IAAI,CAAC,4CAAI,wDAA2BA,QAAQ,CAAC,EAC7C;OACC,OAAO,4CAAI,wDAA2Bd,YAAY,CAAC;;KAGpD,OAAO,4CAAI,wDAA2Bc,QAAQ,CAAC;;CAmIjD;CAAC,gBAhIMC,cAA8B,EACpC;GACC,4CAAI,wCAAoB5B,oBAAoB;GAC5C,IAAI,CAAC4B,cAAc,EACnB;KACC;;GAED,MAAM;KAAEC,UAAU;KAAEC,YAAY;KAAEC;IAAsB,GAAGH,cAAc;GACzE,4CAAI,wFAAwB,IAAI,4DAA6BC,UAAU,CAAC;GACxE,4CAAI,kCAAiBC,YAAY;GACjC,4CAAI,0DAA6BC,oBAAoB;CACtD;CAAC,kCAEuBP,UAAU,EAAEC,QAAQ,EAC5C;GACC,MAAM;KAAEO,IAAI,EAAEC;IAAuB,2CAAG,IAAI,0BAAYR,QAAQ,CAAC;GACjE,IAAIS,cAAI,CAACC,WAAW,CAAC,4CAAI,sCAAkBX,UAAU,CAAC,CAAC,EACvD;KACC,OAAO,IAAI;;GAGZ,MAAMY,WAAW,GAAG,4CAAI,sCAAkBZ,UAAU,CAAC;GAErD,+CAAO,IAAI,wCAAmBY,WAAW,EAAEH,QAAQ;CACpD;CAAC,sCAE2BI,aAA6B,EAAEZ,QAAgB,EAC3E;GAAA;GACC,IAAID,UAAU,GAAGa,aAAa;GAC9B,MAAMC,MAAmB,2CAAG,IAAI,0BAAYb,QAAQ,CAAC;GACrD,MAAM;KAAEO,IAAI,EAAEC,QAAQ;KAAEM,KAAK,EAAEC;IAAW,GAAGF,MAAM;GACnD,IAAI;KAAEG,IAAI,EAAEd;IAAU,GAAGW,MAAM;GAE/B,IAAIJ,cAAI,CAACC,WAAW,CAAC,4CAAI,8CAAsBR,QAAQ,CAAC,CAAC,EACzD;KACCA,QAAQ,GAAGd,YAAY;;;;GAIxB,IAAIW,UAAU,KAAKvB,0BAAc,CAACyC,IAAI,EACtC;KACClB,UAAU,GAAGvB,0BAAc,CAAC0C,KAAK;;GAGlC,MAAMC,OAAO,GAAGJ,SAAS,KAAKrB,2BAAI,CAAC0B,SAAS,EAAE;GAC9C,IAAIrB,UAAU,KAAKvB,0BAAc,CAAC0C,KAAK,IAAIC,OAAO,EAClD;KACCpB,UAAU,GAAGvB,0BAAc,CAAC6C,UAAU;;GAGvC,IAAIZ,cAAI,CAACC,WAAW,0BAAC,4CAAI,8CAAsBR,QAAQ,CAAC,qBAAnC,sBAAsCH,UAAU,CAAC,CAAC,EACvE;KACC,OAAO,IAAI;;GAGZ,MAAMY,WAAW,GAAG,4CAAI,8CAAsBT,QAAQ,CAAC,CAACH,UAAU,CAAC;GAEnE,+CAAO,IAAI,wCAAmBY,WAAW,EAAEH,QAAQ;CACpD;CAAC,0CAE+BT,UAA0B,EAAEC,QAAgB,EAC5E;GACC,MAAM;KAAEO,IAAI,EAAEC,QAAQ;KAAEQ,IAAI,EAAEd,QAAQ;KAAET,WAAW,EAAE6B;IAAiB,2CAAG,IAAI,0BAAYtB,QAAQ,CAAC;GAClG,IAAIE,QAAQ,KAAKqB,oBAAQ,CAACC,IAAI,EAC9B;KACC,OAAO,IAAI;;GAGZ,MAAMC,WAAW,2CAAG,IAAI,wCAAmB1B,UAAU,CAAC;GACtD,IAAI,CAAC0B,WAAW,EAChB;KACC,OAAO,IAAI;;GAGZ,IAAIC,mBAAmB,GAAGJ,eAAe,CAACG,WAAW,CAAC;GACtD,IAAI,CAACC,mBAAmB,EACxB;KACCA,mBAAmB,GAAGhD,oBAAQ,CAACC,MAAM;;GAGtC,+CAAO,IAAI,wCAAmB+C,mBAAmB,EAAElB,QAAQ;CAC5D;CAAC,4BAEiBT,UAA0B,EAC5C;GACC,MAAM4B,YAAY,GAAGC,MAAM,CAACC,OAAO,yCAAC,IAAI,gCAAe,CAACC,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEC,YAAY,CAAC,KAAK;KACnF,OAAOA,YAAY,CAACC,QAAQ,CAAClC,UAAU,CAAC;IACxC,CAAC;GAEF,IAAI,CAAC4B,YAAY,EACjB;KACC,OAAO,IAAI;;GAGZ,MAAM,CAACO,SAAS,CAAC,GAAGP,YAAY;GAEhC,OAAOO,SAAS;CACjB;CAAC,sCAE2BC,qBAA4C,EACxE;GACC,MAAMC,mBAAmB,GAAG;KAAE,GAAGD;IAAuB;GAExD,MAAME,qBAAqB,GAAG,SAAS;GACvCD,mBAAmB,CAACb,oBAAQ,CAACC,IAAI,CAAC,GAAGY,mBAAmB,CAACC,qBAAqB,CAAC;GAE/E,OAAOD,mBAAmB;CAC3B;CAAC,4BAEiBzB,WAAqB,EAAE2B,WAAqB,EAC9D;GACC,IAAI3B,WAAW,KAAKjC,oBAAQ,CAAC6D,IAAI,EACjC;KACC,OAAO,KAAK;;GAGb,MAAMC,WAAW,GAAG,EAAE;GACtBZ,MAAM,CAACa,MAAM,CAAC/D,oBAAQ,CAAC,CAACgE,OAAO,CAAC,CAACnC,IAAI,EAAEoC,KAAK,KAAK;KAChDH,WAAW,CAACjC,IAAI,CAAC,GAAGoC,KAAK;IACzB,CAAC;GAEF,OAAOH,WAAW,CAACF,WAAW,CAAC,IAAIE,WAAW,CAAC7B,WAAW,CAAC;CAC5D;CAAC,qBAEUX,QAAgB,EAC3B;GACC,OAAON,2BAAI,CAACkD,QAAQ,EAAE,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC7C,QAAQ,EAAE,IAAI,CAAC;CAC5D;CAAC,sBA/KWX,iBAAiB;GAAA;GAAA;CAAA;;;;;;;;"}