{"version":3,"file":"collab-list.bundle.js","sources":["../src/components/empty-state.js","../src/classes/collab-service.js","../src/classes/context-menu-manager.js","../src/collab-list.js"],"sourcesContent":["// @vue/component\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-list-collab__empty\">\n\t\t\t<div class=\"bx-im-list-collab__empty_icon\"></div>\n\t\t\t<div class=\"bx-im-list-collab__empty_text\">\n\t\t\t\t{{ loc('IM_LIST_COLLAB_EMPTY') }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { RestMethod } from 'im.v2.const';\nimport { runAction } from 'im.v2.lib.rest';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { CollabRestResult, RawChat, RawMessage, RawRecentItem } from 'im.v2.provider.service';\n\nexport class CollabService\n{\n\tfirstPageIsLoaded: boolean = false;\n\t#itemsPerPage: number = 50;\n\t#isLoading: boolean = false;\n\t#pagesLoaded: number = 0;\n\t#hasMoreItemsToLoad: boolean = true;\n\t#lastMessageDate: number = 0;\n\n\tasync loadFirstPage(): Promise\n\t{\n\t\tthis.#isLoading = true;\n\n\t\tconst result = await this.#requestItems({ firstPage: true });\n\t\tthis.firstPageIsLoaded = true;\n\n\t\treturn result;\n\t}\n\n\tloadNextPage(): Promise\n\t{\n\t\tif (this.#isLoading || !this.#hasMoreItemsToLoad)\n\t\t{\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\tthis.#isLoading = true;\n\n\t\treturn this.#requestItems();\n\t}\n\n\thasMoreItemsToLoad(): boolean\n\t{\n\t\treturn this.#hasMoreItemsToLoad;\n\t}\n\n\tasync #requestItems({ firstPage = false } = {}): Promise\n\t{\n\t\tconst queryParams = {\n\t\t\tdata: {\n\t\t\t\tlimit: this.#itemsPerPage,\n\t\t\t\tfilter: {\n\t\t\t\t\tlastMessageDate: firstPage ? null : this.#lastMessageDate,\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\n\t\tconst result: CollabRestResult = await runAction(RestMethod.imV2RecentCollabTail, queryParams)\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('Im.CollabList: page request error', error);\n\t\t\t});\n\n\t\tthis.#pagesLoaded++;\n\t\tLogger.warn(`Im.CollabList: ${firstPage ? 'First' : this.#pagesLoaded} page request result`, result);\n\t\tconst { hasNextPage } = result;\n\t\tthis.#lastMessageDate = this.#getLastMessageDate(result);\n\t\tif (!hasNextPage)\n\t\t{\n\t\t\tthis.#hasMoreItemsToLoad = false;\n\t\t}\n\n\t\tthis.#isLoading = false;\n\n\t\treturn this.#updateModels(result);\n\t}\n\n\t#updateModels(restResult: CollabRestResult): Promise\n\t{\n\t\tconst { users, chats, messages, files, recentItems } = restResult;\n\t\tconst chatsWithCounters = this.#getChatsWithCounters(chats, recentItems);\n\n\t\tconst usersPromise = (new UserManager()).setUsersToModel(users);\n\t\tconst dialoguesPromise = Core.getStore().dispatch('chats/set', chatsWithCounters);\n\t\tconst messagesPromise = Core.getStore().dispatch('messages/store', messages);\n\t\tconst filesPromise = Core.getStore().dispatch('files/set', files);\n\t\tconst recentPromise = Core.getStore().dispatch('recent/setCollab', recentItems);\n\n\t\treturn Promise.all([usersPromise, dialoguesPromise, messagesPromise, filesPromise, recentPromise]);\n\t}\n\n\t#getChatsWithCounters(chats: RawChat[], recentItems: RawRecentItem[]): RawChat[]\n\t{\n\t\tconst chatMap = {};\n\t\tchats.forEach((chat) => {\n\t\t\tchatMap[chat.id] = chat;\n\t\t});\n\t\trecentItems.forEach((recentItem) => {\n\t\t\tconst { counter, chatId } = recentItem;\n\t\t\tif (counter === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tchatMap[chatId] = { ...chatMap[chatId], counter };\n\t\t});\n\n\t\treturn Object.values(chatMap);\n\t}\n\n\t#getLastMessageDate(restResult: CollabRestResult): string\n\t{\n\t\tconst messages = this.#filterPinnedItemsMessages(restResult);\n\t\tif (messages.length === 0)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\t// comparing strings in atom format works correctly because the format is lexically sortable\n\t\tlet firstMessageDate = messages[0].date;\n\t\tmessages.forEach((message) => {\n\t\t\tif (message.date < firstMessageDate)\n\t\t\t{\n\t\t\t\tfirstMessageDate = message.date;\n\t\t\t}\n\t\t});\n\n\t\treturn firstMessageDate;\n\t}\n\n\t#filterPinnedItemsMessages(restResult: CollabRestResult): RawMessage[]\n\t{\n\t\tconst { messages, recentItems } = restResult;\n\n\t\treturn messages.filter((message) => {\n\t\t\tconst chatId = message.chat_id;\n\t\t\tconst recentItem: RawRecentItem = recentItems.find((item) => {\n\t\t\t\treturn item.chatId === chatId;\n\t\t\t});\n\n\t\t\treturn recentItem.pinned === false;\n\t\t});\n\t}\n}\n","import { Loc } from 'main.core';\n\nimport { Layout } from 'im.v2.const';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { RecentMenu, type MenuItem } from 'im.v2.lib.menu';\n\nexport class CollabRecentMenu extends RecentMenu\n{\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getUnreadMessageItem(),\n\t\t\tthis.getPinMessageItem(),\n\t\t\tthis.getMuteItem(),\n\t\t\t// this.getLeaveItem(),\n\t\t];\n\t}\n\n\tgetOpenItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_LIB_MENU_OPEN'),\n\t\t\tonclick: () => {\n\t\t\t\tLayoutManager.getInstance().setLayout({\n\t\t\t\t\tname: Layout.collab.name,\n\t\t\t\t\tentityId: this.context.dialogId,\n\t\t\t\t});\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n}\n","import { Utils } from 'im.v2.lib.utils';\nimport { ListLoadingState as LoadingState } from 'im.v2.component.elements';\nimport { RecentItem } from 'im.v2.component.list.items.recent';\n\nimport { EmptyState } from './components/empty-state';\nimport { CollabService } from './classes/collab-service';\nimport { CollabRecentMenu } from './classes/context-menu-manager';\n\nimport './css/collab-list.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelRecentItem, ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const CollabList = {\n\tname: 'CollabList',\n\tcomponents: { EmptyState, LoadingState, RecentItem },\n\temits: ['chatClick'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tisLoading: false,\n\t\t\tisLoadingNextPage: false,\n\t\t\tfirstPageLoaded: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tcollection(): ImModelRecentItem[]\n\t\t{\n\t\t\treturn this.$store.getters['recent/getCollabCollection'];\n\t\t},\n\t\tpreparedItems(): ImModelRecentItem[]\n\t\t{\n\t\t\treturn [...this.collection].sort((a, b) => {\n\t\t\t\tconst firstMessage: ImModelMessage = this.$store.getters['messages/getById'](a.messageId);\n\t\t\t\tconst secondMessage: ImModelMessage = this.$store.getters['messages/getById'](b.messageId);\n\n\t\t\t\treturn secondMessage.date - firstMessage.date;\n\t\t\t});\n\t\t},\n\t\tpinnedItems(): ImModelRecentItem[]\n\t\t{\n\t\t\treturn this.preparedItems.filter((item) => {\n\t\t\t\treturn item.pinned === true;\n\t\t\t});\n\t\t},\n\t\tgeneralItems(): ImModelRecentItem[]\n\t\t{\n\t\t\treturn this.preparedItems.filter((item) => {\n\t\t\t\treturn item.pinned === false;\n\t\t\t});\n\t\t},\n\t\tisEmptyCollection(): boolean\n\t\t{\n\t\t\treturn this.collection.length === 0;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.contextMenuManager = new CollabRecentMenu();\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.contextMenuManager.destroy();\n\t},\n\tasync activated()\n\t{\n\t\tthis.isLoading = true;\n\t\tawait this.getRecentService().loadFirstPage();\n\t\tthis.firstPageLoaded = true;\n\t\tthis.isLoading = false;\n\t},\n\tmethods:\n\t{\n\t\tasync onScroll(event: Event)\n\t\t{\n\t\t\tthis.contextMenuManager.close();\n\t\t\tif (!Utils.dom.isOneScreenRemaining(event.target) || !this.getRecentService().hasMoreItemsToLoad)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.isLoadingNextPage = true;\n\t\t\tawait this.getRecentService().loadNextPage();\n\t\t\tthis.isLoadingNextPage = false;\n\t\t},\n\t\tonClick(item: ImModelRecentItem)\n\t\t{\n\t\t\tthis.$emit('chatClick', item.dialogId);\n\t\t},\n\t\tonRightClick(item: ImModelRecentItem, event: PointerEvent)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.contextMenuManager.openMenu(item, event.currentTarget);\n\t\t},\n\t\tgetRecentService(): CollabService\n\t\t{\n\t\t\tif (!this.service)\n\t\t\t{\n\t\t\t\tthis.service = new CollabService();\n\t\t\t}\n\n\t\t\treturn this.service;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-list-collab__container\">\n\t\t\t<LoadingState v-if=\"isLoading && !firstPageLoaded\" />\n\t\t\t<div v-else @scroll=\"onScroll\" class=\"bx-im-list-collab__scroll-container\">\n\t\t\t\t<EmptyState v-if=\"isEmptyCollection\" />\n\t\t\t\t<div v-if=\"pinnedItems.length > 0\" class=\"bx-im-list-collab__pinned_container\">\n\t\t\t\t\t<RecentItem\n\t\t\t\t\t\tv-for=\"item in pinnedItems\"\n\t\t\t\t\t\t:key=\"item.dialogId\"\n\t\t\t\t\t\t:item=\"item\"\n\t\t\t\t\t\t@click=\"onClick(item)\"\n\t\t\t\t\t\t@click.right=\"onRightClick(item, $event)\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-list-collab__general_container\">\n\t\t\t\t\t<RecentItem\n\t\t\t\t\t\tv-for=\"item in generalItems\"\n\t\t\t\t\t\t:key=\"item.dialogId\"\n\t\t\t\t\t\t:item=\"item\"\n\t\t\t\t\t\t@click=\"onClick(item)\"\n\t\t\t\t\t\t@click.right=\"onRightClick(item, $event)\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<LoadingState v-if=\"isLoadingNextPage\" />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n"],"names":["EmptyState","name","methods","loc","phraseCode","$Bitrix","Loc","getMessage","template","CollabService","firstPageIsLoaded","loadFirstPage","result","firstPage","loadNextPage","Promise","resolve","hasMoreItemsToLoad","queryParams","data","limit","filter","lastMessageDate","runAction","RestMethod","imV2RecentCollabTail","catch","error","console","Logger","warn","hasNextPage","restResult","users","chats","messages","files","recentItems","chatsWithCounters","usersPromise","UserManager","setUsersToModel","dialoguesPromise","Core","getStore","dispatch","messagesPromise","filesPromise","recentPromise","all","chatMap","forEach","chat","id","recentItem","counter","chatId","Object","values","length","firstMessageDate","date","message","chat_id","find","item","pinned","CollabRecentMenu","RecentMenu","getMenuItems","getUnreadMessageItem","getPinMessageItem","getMuteItem","getOpenItem","text","onclick","LayoutManager","getInstance","setLayout","Layout","collab","entityId","context","dialogId","menuInstance","close","CollabList","components","LoadingState","RecentItem","emits","isLoading","isLoadingNextPage","firstPageLoaded","computed","collection","$store","getters","preparedItems","sort","a","b","firstMessage","messageId","secondMessage","pinnedItems","generalItems","isEmptyCollection","created","contextMenuManager","beforeUnmount","destroy","activated","getRecentService","onScroll","event","Utils","dom","isOneScreenRemaining","target","onClick","$emit","onRightClick","preventDefault","openMenu","currentTarget","service"],"mappings":"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"}