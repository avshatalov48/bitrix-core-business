this.BX=this.BX||{};(function(t,e,i,s,n,o,l,a,c){"use strict";const r={view:"view",edit:"edit"};const d={props:["id","title","isChecked","isLocked","isEditable","context"],emits:["onToggleOption"],data(){return{viewMode:r.view,titleData:this.title,isCheckedValue:this.isChecked}},methods:{getId(){return this.id},getValue(){return this.isCheckedValue},setValue(t){this.isCheckedValue=t},getTitle(){var t,e;return(t=(e=this.$refs.title)==null?void 0:e.innerText)!=null?t:this.titleData},setTitle(t){this.titleData=t},setStateFromProps(t=null){this.viewMode=r.view;this.titleData=this.title;this.isCheckedValue=t===null?this.isChecked:t},getOptionClassName({isChecked:t,isLocked:e}){return["ui-ctl","ui-ctl-checkbox","ui-checkbox-list__field-item_label",{"--checked":t},{"--disabled":e},{"--editable":!(this.isViewMode||e)}]},getLabelClassName(){return["ui-ctl-label-text","ui-checkbox-list__field-item_text",{"--editable":this.isEditMode&&!this.isLocked}]},emitHandleCheckBox(t){setTimeout((()=>{const{id:t,title:e,isChecked:i,isLocked:s,isEditable:n,context:o}=this;a.EventEmitter.emit("ui:checkbox-list:check-option",{id:t,title:e,isChecked:i,isLocked:s,isEditable:n,context:o,viewMode:this.viewMode})}))},handleCheckBox(t){if(this.isLocked){t.target.checked=!t.target.checked}else{this.isCheckedValue=!this.isCheckedValue}const{id:e,title:i,isLocked:s,isCheckedValue:n,isEditable:o,context:l}=this;this.$emit("onToggleOption",{id:e,title:i,isChecked:n,isLocked:s,isEditable:o,context:l,viewMode:this.viewMode})},onToggleViewMode(){this.viewMode=this.isEditMode?r.view:r.edit;if(this.viewMode===r.view){return}void this.$nextTick((()=>this.setFocusOnTitle()))},setFocusOnTitle(){this.$refs.title.focus();const t=document.createRange();const e=window.getSelection();t.selectNodeContents(this.$refs.title);t.collapse(false);e.removeAllRanges();e.addRange(t)},onChangeTitle({target:t}){this.titleData=t.innerText}},computed:{isEditMode(){return this.viewMode===r.edit},isViewMode(){return this.viewMode===r.view},labelClassName(){return this.getLabelClassName()}},template:`\n\t\t<label\n\t\t\t:title="titleData"\n\t\t\t:class="getOptionClassName({ isChecked: isCheckedValue, isLocked })"\n\t\t\t@click="this.emitHandleCheckBox"\n\t\t>\n\t\t\t<input\n\t\t\t\ttype="checkbox"\n\t\t\t\tclass="ui-ctl-element ui-checkbox-list__field-item_input"\n\t\t\t\t:checked="isCheckedValue"\n\t\t\t\t@click="this.handleCheckBox"\n\t\t\t>\n\t\t\t<div\n\t\t\t\t:class="labelClassName"\n\t\t\t\t:contenteditable="(isViewMode || isLocked) ? 'false' : 'true'"\n\t\t\t\t@keydown.enter.prevent\n\t\t\t\t@blur="onChangeTitle"\n\t\t\t\tref="title"\n\t\t\t>\n\t\t\t\t{{ titleData }}\n\t\t\t</div>\n\t\n\t\t\t<div v-if="isLocked" class="ui-checkbox-list__field-item_locked"></div>\n\t\t\t<div\n\t\t\t\tv-else-if="isEditable"\n\t\t\t\tclass="ui-checkbox-list__field-item_edit"\n\t\t\t\t@click.prevent="onToggleViewMode"\n\t\t\t></div>\n\t\t</label>\n\t`};const h={props:["columnCount","category","options","context","isActiveSearch","isEditableOptionsTitle","onChange","setOptionRef"],emits:["onToggleOption"],components:{CheckboxListOption:d},methods:{setRef(t){if(t){this.setOptionRef(t.getId(),t)}},onToggleOption(t){this.$emit("onToggleOption",t)}},template:`\n\t\t<div\n\t\t\tv-if="options.length > 0 || !isActiveSearch"\n\t\t\tclass="ui-checkbox-list__category"\n\t\t>\n\t\t\t<div v-if="category" class="ui-checkbox-list__categories-title">\n\t\t\t\t{{ category.title }}\n\t\t\t</div>\n\t\t\t<div \n\t\t\t\tclass="ui-checkbox-list__options"\n\t\t\t\t:style="{ 'column-count': columnCount }"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tv-for="option in options"\n\t\t\t\t\t:key="option.id"\n\t\t\t\t>\n\t\t\t\t\t<checkbox-list-option\n\t\t\t\t\t\t:context="context"\n\t\t\t\t\t\t:id="option.id"\n\t\t\t\t\t\t:title="option.title"\n\t\t\t\t\t\t:isChecked="option.value"\n\t\t\t\t\t\t:isLocked="option?.locked"\n\t\t\t\t\t\t:isEditable="isEditableOptionsTitle"\n\t\t\t\t\t\t:ref="setRef"\n\t\t\t\t\t\t@onToggleOption="onToggleOption"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const p={props:["id","title"],data(){return{dataTitle:this.title,dataId:this.id,checked:false}},methods:{handleClick(t){this.checked=!this.checked;this.$emit("onToggled",this.checked)}},template:`\n\t\t<div class="ui-checkbox-list__footer-custom-element --checkbox" @click="handleClick">\n\t\t\t<input type="checkbox" :name="dataId" v-model="checked">\n\t\t\t<label :for="dataId">{{ dataTitle }}</label>\n\t\t</div>\n\t`};const u={props:["id","title","dataItems"],data(){return{dataTitle:this.title,dataId:this.id,value:null}},methods:{handleClick(t){let e=this.dataItems.findIndex((t=>t.value===this.value));if(e>=this.dataItems.length-1){e=0}else{e++}this.value=this.dataItems[e].value;this.$emit("onToggled",this.value)}},computed:{currentLabel(){var t;if(this.value===null&&c.Type.isArrayFilled(this.dataItems)){this.value=this.dataItems[0].value;return this.dataItems[0].label}return(t=this.dataItems.find((t=>t.value===this.value)))==null?void 0:t.label}},template:`\n\t\t<div class="ui-checkbox-list__footer-custom-element --texttoggle" @click="handleClick">\n\t\t\t<span class="ui-checkbox-list__texttoggle__title">{{ dataTitle }}</span>\n\t\t\t<span class="ui-checkbox-list__texttoggle__value">{{ currentLabel }}</span>\n\t\t\t<input type="hidden" :name="dataId" v-model="value">\n\t\t</div>\n\t`};const g={props:["sections"],methods:{handleClick(t){this.$emit("sectionToggled",t)},getSectionsItemClassName(t){return["ui-checkbox-list__sections-item",{"--checked":t}]}},template:`\n\t\t<div class="ui-checkbox-list__sections">\n\t\t\t<div \n\t\t\t\tv-for="section in sections"\n\t\t\t\t:key="section.key"\n\t\t\t\t:title="section.title"\n\t\t\t\t:class="getSectionsItemClassName(section.value)"\n\t\t\t\t@click="handleClick(section.key)"\n\t\t\t>\n\t\t\t\t<div class="ui-checkbox-list__check-box"></div>\n\t\t\t\t<div class="ui-checkbox-list__section_title">{{ section.title }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const m={components:{CheckboxListSections:g,CheckboxListCategory:h,CheckboxComponent:p,TextToggleComponent:u},props:["dialog","popup","columnCount","compactField","customFooterElements","lang","sections","categories","options","params","context"],data(){return{dataSections:this.sections,dataCategories:this.categories,dataCompactField:this.compactField,dataOptions:this.getPreparedDataOptions(),dataParams:this.getPreparedParams(),optionsRef:new Map,search:"",longContent:false,scrollIsBottom:true,scrollIsTop:false}},methods:{getPreparedDataOptions(){return new Map(this.options.map((t=>[t.id,t])))},getPreparedParams(){var t,e,i,s,n,o;const{params:l}=this;return{useSearch:Boolean((t=l.useSearch)!=null?t:true),useSectioning:Boolean((e=l.useSectioning)!=null?e:true),closeAfterApply:Boolean((i=l.closeAfterApply)!=null?i:true),showBackToDefaultSettings:Boolean((s=l.showBackToDefaultSettings)!=null?s:true),isEditableOptionsTitle:Boolean((n=l.isEditableOptionsTitle)!=null?n:false),destroyPopupAfterClose:Boolean((o=l.destroyPopupAfterClose)!=null?o:true)}},renderSwitcher(){if(this.dataCompactField){new BX.UI.Switcher({node:this.$refs.switcher,checked:this.dataCompactField.value,size:"small",handlers:{toggled:()=>this.handleSwitcherToggled()}})}},handleSwitcherToggled(){if(this.dataCompactField){this.dataCompactField.value=!this.dataCompactField.value}},clearSearch(){this.search=""},handleClearSearchButtonClick(){this.setFocusToSearchInput();this.clearSearch()},setFocusToSearchInput(){var t,e;(t=this.$refs)==null?void 0:(e=t.searchInput)==null?void 0:e.focus()},handleSectionsToggled(t){const e=this.dataSections.find((e=>e.key===t));if(e){e.value=!e.value}},getOptionsByCategory(t=null){return this.getOptions().filter((e=>e.categoryKey===t))},getOptions(){return this.optionsByTitle},getCheckedOptionsId(){return this.getCheckedOptions().map((t=>t.getId()))},getCheckedOptions(){return this.getOptionRefs().filter((t=>t.getValue()))},checkLongContent(){if(this.$refs.container){this.longContent=this.$refs.container.clientHeight<this.$refs.container.scrollHeight}else{this.longContent=false}},getBottomIndent(){const{scrollTop:t,clientHeight:e,scrollHeight:i}=this.$refs.container;this.scrollIsBottom=t+e<i-10},getTopIndent(){this.scrollIsTop=this.$refs.container.scrollTop},handleScroll(){this.getBottomIndent();this.getTopIndent()},handleSearchEscKeyUp(){this.$refs.container.focus();this.clearSearch()},defaultSettings(){const t=new a.BaseEvent({data:{switcher:this.dataCompactField,fields:this.getCheckedOptionsId()}});a.EventEmitter.emit(this.dialog,"onDefault",t);if(t.isDefaultPrevented()){return}this.clearSearch();const{dataCompactField:e,sections:i,categories:s,$refs:n}=this;if(e&&e.value!==e.defaultValue){n.switcher.click()}this.dataSections=i;this.dataOptions=this.getPreparedDataOptions();this.dataCategories=s;this.setDefaultValuesForOptions()},setDefaultValuesForOptions(){void this.$nextTick((()=>{this.getOptionRefs().forEach((t=>t.setValue(this.dataOptions.get(t.getId()).defaultValue)))}))},toggleOption(t){const e=this.optionsRef.get(t);if(!e){return}e.setValue(!e.getValue())},onSelectAllClick(){if(this.isAllSelected){this.deselectAll()}else{this.selectAll()}},select(t,e=true){const i=this.getOptionRefs().find((e=>e.id===t));i==null?void 0:i.setValue(e)},selectAll(){this.getOptionRefs().forEach((t=>!t.isLocked&&t.setValue(true)))},deselectAll(){this.getOptionRefs().forEach((t=>!t.isLocked&&t.setValue(false)))},getOptionRefs(){return[...this.optionsRef.values()]},cancel(){a.EventEmitter.emit(this.dialog,"onCancel");this.restoreOptionValues();this.destroyOrClosePopup()},restoreOptionValues(){this.getOptionRefs().forEach((t=>t.setStateFromProps()))},apply(){if(this.isCheckedCheckboxes){return}const t=this.getCheckedOptionsId();const e={switcher:this.dataCompactField,fields:t,data:{titles:this.getOptionTitles()}};a.EventEmitter.emit(this.dialog,"onApply",e);this.adjustOptions(t);if(this.dataParams.closeAfterApply){this.destroyOrClosePopup()}},getOptionTitles(){const t={};this.getOptionRefs().forEach((e=>{t[e.getId()]=e.getTitle()}));return t},adjustOptions(t=[]){for(const e of this.optionsRef.values()){const i=e.getId();const s=t.includes(i);this.dataOptions.set(i,{...this.dataOptions.get(i),title:e.getTitle(),value:s});void this.$nextTick((()=>e.setStateFromProps(s)))}},destroyOrClosePopup(){if(this.dataParams.destroyPopupAfterClose){this.destroyPopup()}else{this.closePopup()}},destroyPopup(){this.popup.destroy()},closePopup(){this.popup.close()},setOptionRef(t,e){this.optionsRef.set(t,e)},isAllSectionsDisabled(){return c.Type.isArrayFilled(this.dataSections)&&this.dataSections.every((t=>t.value===false))},onToggleOption(t){if(this.dataOptions.has(t.id)){const e=this.dataOptions.get(t.id);e.value=t.isChecked;this.dataOptions.set(t.id,e)}}},watch:{search(){void this.$nextTick((()=>this.checkLongContent()))},categoryBySection(){void this.$nextTick((()=>this.checkLongContent()))}},computed:{visibleOptions(){const{dataSections:t,optionsByTitle:e,dataCategories:i}=this;if(!c.Type.isArrayFilled(t)){return e}return e.filter((e=>{const s=i.find((t=>t.key===e.categoryKey));const n=t.find((t=>t.key===s.sectionKey));return n==null?void 0:n.value}))},isEmptyContent(){return c.Type.isArrayFilled(this.visibleOptions)},isNarrowWidth(){return window.innerWidth*.9<500},isSearchDisabled(){if(c.Type.isArrayFilled(this.dataSections)){return!this.dataSections.some((t=>t.value))}return false},isCheckedCheckboxes(){for(const t of this.optionsRef.values()){if(t.getValue()===true&&t.locked!==true){return false}}return true},optionsByTitle(){const t=[...this.dataOptions.values()];return t.filter((t=>t.title.toLowerCase().includes(this.search.toLowerCase())))},categoryBySection(){if(!c.Type.isArrayFilled(this.dataSections)){return this.dataCategories}return this.dataCategories.filter((t=>{const e=this.dataSections.find((e=>t.sectionKey===e.key));return e==null?void 0:e.value}))},wrapperClassName(){return["ui-checkbox-list__wrapper",{"--long":this.longContent},{"--bottom":this.scrollIsBottom},{"--top":this.scrollIsTop}]},searchClassName(){return["ui-checkbox-list__search",{"--disabled":this.isSearchDisabled}]},applyClassName(){return["ui-btn ui-btn-primary",{"ui-btn-disabled":this.isCheckedCheckboxes}]},selectAllClassName(){return["ui-checkbox-list__footer-link --select-all",{"--narrow":this.isNarrowWidth}]},switcherText(){return c.Type.isStringFilled(this.lang.switcher)?this.lang.switcher:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_SWITCHER")},placeholderText(){return c.Type.isStringFilled(this.lang.placeholder)?this.lang.placeholder:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_PLACEHOLDER")},defaultSettingsBtnText(){return c.Type.isStringFilled(this.lang.defaultBtn)?this.lang.defaultBtn:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_MSGVER_1")},applyBtnText(){return c.Type.isStringFilled(this.lang.acceptBtn)?this.lang.acceptBtn:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_ACCEPT_BUTTON")},cancelBtnText(){return c.Type.isStringFilled(this.lang.cancelBtn)?this.lang.cancelBtn:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_CANCEL_BUTTON")},selectAllBtnText(){return c.Type.isStringFilled(this.lang.selectAllBtn)?this.lang.selectAllBtn:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SELECT_ALL_MSGVER_1")},emptyStateTitleText(){if(this.isAllSectionsDisabled()){return c.Type.isStringFilled(this.lang.allSectionsDisabledTitle)?this.lang.allSectionsDisabledTitle:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_EMPTY_STATE_TITLE_MSGVER_1")}return c.Type.isStringFilled(this.lang.emptyStateTitle)?this.lang.emptyStateTitle:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_EMPTY_STATE_TITLE_MSGVER_1")},emptyStateDescriptionText(){if(this.isAllSectionsDisabled()){return""}return c.Type.isStringFilled(this.lang.emptyStateDescription)?this.lang.emptyStateDescription:c.Loc.getMessage("UI_CHECKBOX_LIST_DEFAULT_SETTINGS_EMPTY_STATE_DESCRIPTION_MSGVER_1")},isAllSelected(){const t=this.getOptionRefs().filter((t=>!t.isLocked)).every((t=>t.getValue()===true));const e=this.getOptionRefs().filter((t=>!t.isLocked)).some((t=>t.getValue()===true&&!t.isLocked));if(!t&&e&&this.$refs.selectAllCheckbox){this.$refs.selectAllCheckbox.indeterminate=true;return false}if(this.$refs.selectAllCheckbox){this.$refs.selectAllCheckbox.indeterminate=false}return t}},mounted(){this.renderSwitcher();void this.$nextTick((()=>{this.checkLongContent();this.setFocusToSearchInput()}))},template:`\n\t\t<div class="ui-checkbox-list">\n\t\t\t<div\n\t\t\t\tclass="ui-checkbox-list__header"\n\t\t\t\tv-if="dataParams.useSearch || (dataSections && dataParams.useSectioning)"\n\t\t\t>\n\t\t\t\t<div class="ui-checkbox-list__header_options">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if="dataCompactField"\n\t\t\t\t\t\tclass="ui-checkbox-list__switcher"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class="ui-checkbox-list__switcher-text">\n\t\t\t\t\t\t\t{{ switcherText }}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="switcher" ref="switcher"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if="dataParams.useSearch"\n\t\t\t\t\t\t:class="searchClassName"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class="ui-checkbox-list__search-wrapper">\n\t\t\t\t\t\t\t<div class="ui-ctl ui-ctl-textbox ui-ctl-after-icon ui-ctl-w100">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t:placeholder="placeholderText"\n\t\t\t\t\t\t\t\t\ttype="text"\n\t\t\t\t\t\t\t\t\tclass="ui-ctl-element"\n\t\t\t\t\t\t\t\t\tv-model="search"\n\t\t\t\t\t\t\t\t\t@keyup.esc.stop="handleSearchEscKeyUp"\n\t\t\t\t\t\t\t\t\tref="searchInput"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tv-if="search.length > 0"\n\t\t\t\t\t\t\t\t\t@click="handleClearSearchButtonClick"\n\t\t\t\t\t\t\t\t\tclass="ui-ctl-after ui-ctl-icon-clear ui-checkbox-list__search-clear"\n\t\t\t\t\t\t\t\t></button>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tv-else\n\t\t\t\t\t\t\t\t\tclass="ui-ctl-after ui-ctl-icon-search"\n\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<checkbox-list-sections\n\t\t\t\t\tv-if="dataSections && dataParams.useSectioning"\n\t\t\t\t\t:sections="dataSections"\n\t\t\t\t\t@sectionToggled="handleSectionsToggled"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tref="wrapper"\n\t\t\t\t:class="wrapperClassName"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref="container"\n\t\t\t\t\tclass="ui-checkbox-list__container"\n\t\t\t\t\t@scroll="handleScroll"\n\t\t\t\t\ttabindex="0"\n\t\t\t\t\tv-if="isEmptyContent"\n\t\t\t\t>\n\t\t\t\t\t<checkbox-list-category\n\t\t\t\t\t\tv-if="dataParams.useSectioning"\n\t\t\t\t\t\tv-for="category in categoryBySection"\n\t\t\t\t\t\t:key="category.key"\n\t\t\t\t\t\t:context="context"\n\t\t\t\t\t\t:category="category"\n\t\t\t\t\t\t:columnCount="columnCount"\n\t\t\t\t\t\t:options="getOptionsByCategory(category.key)"\n\t\t\t\t\t\t:isActiveSearch="search.length > 0"\n\t\t\t\t\t\t:isEditableOptionsTitle="dataParams.isEditableOptionsTitle"\n\t\t\t\t\t\t:setOptionRef="setOptionRef"\n\t\t\t\t\t\t@onToggleOption="onToggleOption"\n\t\t\t\t\t/>\n\t\n\t\t\t\t\t<checkbox-list-category\n\t\t\t\t\t\tv-else\n\t\t\t\t\t\t:context="context"\n\t\t\t\t\t\t:columnCount="columnCount"\n\t\t\t\t\t\t:options="getOptions()"\n\t\t\t\t\t\t:isActiveSearch="search.length > 0"\n\t\t\t\t\t\t:isEditableOptionsTitle="dataParams.isEditableOptionsTitle"\n\t\t\t\t\t\t:setOptionRef="setOptionRef"\n\t\t\t\t\t\t@onToggleOption="onToggleOption"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tv-else\n\t\t\t\t\tclass="ui-checkbox-list__empty"\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc="/bitrix/js/ui/dialogs/checkbox-list/images/ui-checkbox-list-empty.svg"\n\t\t\t\t\t\t:alt="emptyStateTitleText"\n\t\t\t\t\t>\n\t\t\t\t\t<div class="ui-checkbox-list__empty-title">\n\t\t\t\t\t\t{{ emptyStateTitleText }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="ui-checkbox-list__empty-description">\n\t\t\t\t\t\t{{ emptyStateDescriptionText }}\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass="ui-checkbox-list__options"\n\t\t\t\t\t\t:style="{ 'column-count': columnCount, opacity: 0 }"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class="ui-ctl"></label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class="ui-checkbox-list__footer">\n\t\t\t\t<div class="ui-checkbox-list__footer-block --left">\n\t\t\t\t\t<div\n\t\t\t\t\t\t@click="onSelectAllClick()"\n\t\t\t\t\t\t:class="selectAllClassName"\n\t\t\t\t\t>\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype="checkbox" \n\t\t\t\t\t\t\tname="selectAllCheckbox"\n\t\t\t\t\t\t\tref="selectAllCheckbox"\n\t\t\t\t\t\t\tv-model="isAllSelected"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tv-if="!isNarrowWidth"\n\t\t\t\t\t\t\tfor="selectAllCheckbox"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ selectAllBtnText }}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if="customFooterElements"\n\t\t\t\t\t\tv-for="customElement in customFooterElements"\n\t\t\t\t\t>\n\t\t\t\t\t\t<checkbox-component\n\t\t\t\t\t\t\tv-if="customElement.type === 'checkbox'"\n\t\t\t\t\t\t\t:id="customElement.id"\n\t\t\t\t\t\t\t:title="customElement.title"\n\t\t\t\t\t\t\t@onToggled="customElement.onClick"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<text-toggle-component\n\t\t\t\t\t\t\tv-if="customElement.type === 'textToggle'"\n\t\t\t\t\t\t\t:id="customElement.id"\n\t\t\t\t\t\t\t:title="customElement.title"\n\t\t\t\t\t\t\t:dataItems="customElement.dataItems"\n\t\t\t\t\t\t\t@onToggled="customElement.onClick"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="ui-checkbox-list__footer-block --right">\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if="dataParams.showBackToDefaultSettings"\n\t\t\t\t\t\tclass="ui-checkbox-list__footer-link --default"\n\t\t\t\t\t\t@click="defaultSettings()"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ defaultSettingsBtnText }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class="ui-checkbox-list__footer-block --center">\n\t\t\t\t\t<button\n\t\t\t\t\t\t@click="apply()"\n\t\t\t\t\t\t:class="applyClassName"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ applyBtnText }}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\t@click="cancel()"\n\t\t\t\t\t\tclass="ui-btn ui-btn-link"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ cancelBtnText }}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};var v=babelHelpers.classPrivateFieldLooseKey("getColumnCount");var f=babelHelpers.classPrivateFieldLooseKey("getLayoutComponent");class k extends a.EventEmitter{constructor(t){var e;super();Object.defineProperty(this,f,{value:C});Object.defineProperty(this,v,{value:T});this.layoutApp=null;this.layoutComponent=null;this.setEventNamespace("BX.UI.Dialogs.CheckboxList");this.subscribeFromOptions(t.events);this.context=c.Type.isPlainObject(t.context)?t.context:null;this.compactField=c.Type.isPlainObject(t.compactField)?t.compactField:null;this.sections=c.Type.isArray(t.sections)?t.sections:null;this.lang=c.Type.isPlainObject(t.lang)?t.lang:{};this.popup=null;this.columnCount=c.Type.isNumber(t.columnCount)?t.columnCount:4;this.popupOptions=c.Type.isPlainObject(t.popupOptions)?t.popupOptions:{};this.params=c.Type.isPlainObject(t.params)?t.params:{};const i=(e=this.params.useSectioning)!=null?e:true;if(i&&!c.Type.isArray(t.categories)){throw new Error('CheckboxList: "categories" parameter is required.')}this.categories=t.categories;if(i&&!c.Type.isArray(t.options)){throw new Error('CheckboxList: "options" parameter is required.')}this.options=t.options;this.customFooterElements=c.Type.isArrayFilled(t.customFooterElements)?t.customFooterElements:[];this.closeAfterApply=c.Type.isBoolean(t.closeAfterApply)?t.closeAfterApply:true}getPopup(){const t=c.Dom.create("div");c.Dom.addClass(t,"ui-checkbox-list__app-container");if(!this.popup){const{lang:e,layoutComponent:s,popupOptions:o}=this;const{innerWidth:l,innerHeight:a}=window;this.popup=new i.Popup({className:"ui-checkbox-list-popup",width:997,maxWidth:Math.round(l*.9),overlay:true,autoHide:true,minHeight:200,maxHeight:Math.round(a*.9),borderRadius:20,contentPadding:0,contentBackground:"transparent",animation:"fading-slide",titleBar:e.title,content:t,closeIcon:true,closeByEsc:true,...o,events:{onPopupClose:()=>s==null?void 0:s.restoreOptionValues()}});const{compactField:c,customFooterElements:r,sections:d,categories:h,options:p,popup:u,params:g,context:f}=this;this.layoutApp=n.BitrixVue.createApp(m,{compactField:c,customFooterElements:r,lang:e,sections:d,categories:h,options:p,popup:u,columnCount:babelHelpers.classPrivateFieldLooseBase(this,v)[v](),params:g,context:f,dialog:this});this.layoutComponent=this.layoutApp.mount(t)}return this.popup}show(){this.getPopup().show();babelHelpers.classPrivateFieldLooseBase(this,f)[f]().setFocusToSearchInput()}hide(){var t;(t=this.layoutComponent)==null?void 0:t.destroyOrClosePopup()}destroy(){if(!this.layoutApp){return}this.hide();this.layoutApp.unmount();this.layoutComponent=null;this.popup=null}isShown(){return this.popup&&this.popup.isShown()}getOptions(){return babelHelpers.classPrivateFieldLooseBase(this,f)[f]().getOptions()}getSelectedOptions(){return babelHelpers.classPrivateFieldLooseBase(this,f)[f]().getCheckedOptionsId()}handleSwitcherToggled(t){return babelHelpers.classPrivateFieldLooseBase(this,f)[f]().handleSwitcherToggled(t)}handleOptionToggled(t){return babelHelpers.classPrivateFieldLooseBase(this,f)[f]().toggleOption(t)}saveColumns(t,e){if(!c.Type.isArrayFilled(t)){return}t.forEach((t=>this.selectOption(t)));this.apply()}selectOption(t,e){if(e!==false){e=true}babelHelpers.classPrivateFieldLooseBase(this,f)[f]().select(t,e)}apply(){babelHelpers.classPrivateFieldLooseBase(this,f)[f]().apply()}}function T(){let{columnCount:t}=this;const{innerWidth:e}=window;if(e<=480){t=1}else if(e<=768&&t>2){t=2}return t}function C(){if(!this.layoutComponent){void this.getPopup()}return this.layoutComponent}t.CheckboxList=k})(this.BX.UI=this.BX.UI||{},BX,BX.Main,BX,BX.Vue3,BX,BX.UI,BX.Event,BX);
//# sourceMappingURL=bundle.map.js