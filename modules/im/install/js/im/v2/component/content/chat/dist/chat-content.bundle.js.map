{"version":3,"file":"chat-content.bundle.js","sources":["../../../../lib/access/src/classes/access-service.js","../src/components/content/channel/components/comments-button.js","../src/components/content/channel/classes/message-menu.js","../src/components/content/channel/components/message-list.js","../src/components/content/channel/components/dialog.js","../src/components/content/channel/components/join-panel.js","../src/components/content/channel/components/textarea.js","../src/components/content/channel/channel.js","../src/components/content/collab/components/header.js","../src/components/content/collab/collab.js","../src/components/content/multidialog/components/title.js","../src/components/content/multidialog/components/header.js","../src/components/content/multidialog/multidialog.js","../src/components/openers/chat/components/empty-state.js","../src/components/openers/chat/classes/user-service.js","../src/components/openers/chat/chat.js","../src/components/content/comments/components/subscribe-toggle.js","../src/components/content/comments/components/header.js","../src/components/content/comments/components/dialog-loader.js","../src/components/content/comments/classes/message-menu.js","../src/components/content/comments/components/message-list.js","../src/components/content/comments/components/dialog.js","../src/components/content/comments/components/textarea.js","../src/components/content/comments/components/join-panel.js","../src/components/content/comments/comments.js","../src/components/openers/comments/comments.js","../src/chat-content.js"],"sourcesContent":["import { RestMethod } from 'im.v2.const';\nimport { runAction, type RunActionError } from 'im.v2.lib.rest';\n\nexport const AccessErrorCode = {\n\taccessDenied: 'ACCESS_DENIED',\n\tchatNotFound: 'CHAT_NOT_FOUND',\n\tmessageNotFound: 'MESSAGE_NOT_FOUND',\n\tmessageAccessDenied: 'MESSAGE_ACCESS_DENIED',\n\tmessageAccessDeniedByTariff: 'MESSAGE_ACCESS_DENIED_BY_TARIFF',\n};\n\nexport type AccessCheckResult = { hasAccess: boolean, errorCode?: string };\n\nexport const AccessService = {\n\tasync checkMessageAccess(messageId: number): Promise<AccessCheckResult>\n\t{\n\t\tconst payload = { data: { messageId } };\n\n\t\ttry\n\t\t{\n\t\t\tawait runAction(RestMethod.imV2AccessCheck, payload);\n\t\t}\n\t\tcatch (errors)\n\t\t{\n\t\t\treturn handleAccessError(errors);\n\t\t}\n\n\t\treturn Promise.resolve({ hasAccess: true });\n\t},\n};\n\nconst handleAccessError = (errors: RunActionError[]): AccessCheckResult => {\n\tconst [error] = errors;\n\tconst availableCodes = Object.values(AccessErrorCode);\n\tif (!availableCodes.includes(error.code))\n\t{\n\t\tconsole.error('AccessService: error checking access', error.code);\n\n\t\t// we need to handle all types of errors on this stage\n\t\t// but for now we let user through in case of unknown error\n\t\treturn { hasAccess: true };\n\t}\n\n\treturn { hasAccess: false, errorCode: error.code };\n};\n","import '../css/comments-button.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsButton = {\n\tname: 'CommentsButton',\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tcounter: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-dialog-channel__comments-button\">\n\t\t\t<div class=\"bx-im-dialog-channel__comments-button_counter\">\n\t\t\t\t{{ counter }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { MessageMenu } from 'im.v2.component.message-list';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\n\nexport class ChannelMessageMenu extends MessageMenu\n{\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\t// this.getReplyItem(),\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getCopyLinkItem(),\n\t\t\tthis.getCopyFileItem(),\n\t\t\tthis.getPinItem(),\n\t\t\tthis.getForwardItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getMarkItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDownloadFileItem(),\n\t\t\tthis.getSaveToDisk(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getEditItem(),\n\t\t\tthis.getDeleteItem(),\n\t\t];\n\t}\n}\n","import { MessageList } from 'im.v2.component.message-list';\n\nimport { ChannelMessageMenu } from '../classes/message-menu';\n\n// @vue/component\nexport const ChannelMessageList = {\n\tname: 'ChannelMessageList',\n\tcomponents: { MessageList },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tChannelMessageMenu: () => ChannelMessageMenu,\n\t},\n\ttemplate: `\n\t\t<MessageList :dialogId=\"dialogId\" :messageMenuClass=\"ChannelMessageMenu\" />\n\t`,\n};\n","import { ChatDialog, ScrollManager } from 'im.v2.component.dialog.chat';\nimport { Layout, UserRole } from 'im.v2.const';\nimport { CommentsService } from 'im.v2.provider.service';\n\nimport { CommentsButton } from './comments-button';\n\nimport { ChannelMessageList } from './message-list';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelLayout } from 'im.v2.model';\n\n// @vue/component\nexport const ChannelDialog = {\n\tname: 'ChannelDialog',\n\tcomponents: { ChatDialog, ChannelMessageList, CommentsButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tlastScrolledChatId: 0,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tisGuest(): boolean\n\t\t{\n\t\t\treturn this.dialog.role === UserRole.guest;\n\t\t},\n\t\tisChatLayout(): boolean\n\t\t{\n\t\t\treturn this.layout.name === Layout.chat.name;\n\t\t},\n\t\tchannelComments(): number[]\n\t\t{\n\t\t\treturn this.$store.getters['counters/getChannelComments'](this.dialog.chatId);\n\t\t},\n\t\ttotalChannelCommentsCounter(): number\n\t\t{\n\t\t\tlet counter = 0;\n\t\t\tObject.values(this.channelComments).forEach((commentCounter) => {\n\t\t\t\tcounter += commentCounter;\n\t\t\t});\n\n\t\t\treturn counter;\n\t\t},\n\t\tshowCommentsButton(): boolean\n\t\t{\n\t\t\treturn this.isChatLayout && this.totalChannelCommentsCounter > 0;\n\t\t},\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.readAllChannelComments();\n\t},\n\tmethods:\n\t{\n\t\tasync onCommentsButtonClick()\n\t\t{\n\t\t\tconst chatIdToJump = this.getNextChatIdToJump();\n\t\t\tthis.lastScrolledChatId = chatIdToJump;\n\n\t\t\tconst messageIdToJump: ?number = this.$store.getters['messages/comments/getMessageIdByChatId'](chatIdToJump);\n\n\t\t\tif (messageIdToJump)\n\t\t\t{\n\t\t\t\tthis.$refs.dialog.goToMessageContext(messageIdToJump, {\n\t\t\t\t\tposition: ScrollManager.scrollPosition.messageBottom,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.goToMessageContextByCommentsChatId(chatIdToJump);\n\t\t},\n\t\tasync goToMessageContextByCommentsChatId(chatId: string)\n\t\t{\n\t\t\tthis.$refs.dialog.showLoadingBar();\n\t\t\tconst messageId = await this.$refs.dialog.getMessageService().loadContextByChatId(chatId)\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error('ChannelDialog: goToMessageContextByCommentsChatId error', error);\n\t\t\t\t});\n\t\t\tthis.$refs.dialog.hideLoadingBar();\n\n\t\t\tif (!messageId)\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChannelDialog: no messageId after loading context');\n\t\t\t}\n\n\t\t\tawait this.$nextTick();\n\t\t\tthis.$refs.dialog.getScrollManager().scrollToMessage(messageId, {\n\t\t\t\tposition: ScrollManager.scrollPosition.messageBottom,\n\t\t\t});\n\t\t\tawait this.$nextTick();\n\t\t\tthis.$refs.dialog.highlightMessage(messageId);\n\t\t},\n\t\tgetNextChatIdToJump(): number\n\t\t{\n\t\t\tconst commentChatIds = this.getCommentsChatIds();\n\t\t\tcommentChatIds.sort((a, z) => a - z);\n\t\t\tif (this.lastScrolledChatId === 0)\n\t\t\t{\n\t\t\t\treturn commentChatIds[0];\n\t\t\t}\n\n\t\t\tconst filteredChatIds = commentChatIds.filter((chatId) => chatId > this.lastScrolledChatId);\n\t\t\tif (filteredChatIds.length === 0)\n\t\t\t{\n\t\t\t\treturn commentChatIds[0];\n\t\t\t}\n\n\t\t\treturn filteredChatIds[0];\n\t\t},\n\t\tgetCommentsChatIds(): number[]\n\t\t{\n\t\t\treturn Object.keys(this.channelComments).map((chatId) => {\n\t\t\t\treturn Number(chatId);\n\t\t\t});\n\t\t},\n\t\treadAllChannelComments()\n\t\t{\n\t\t\tCommentsService.readAllChannelComments(this.dialogId);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatDialog ref=\"dialog\" :dialogId=\"dialogId\" :resetOnExit=\"isGuest\">\n\t\t\t<template #message-list>\n\t\t\t\t<ChannelMessageList :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #additional-float-button>\n\t\t\t\t<Transition name=\"float-button-transition\">\n\t\t\t\t\t<CommentsButton\n\t\t\t\t\t\tv-if=\"showCommentsButton\"\n\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t:counter=\"totalChannelCommentsCounter\"\n\t\t\t\t\t\t@click=\"onCommentsButtonClick\"\n\t\t\t\t\t\tkey=\"comments\"\n\t\t\t\t\t/>\n\t\t\t\t</Transition>\n\t\t\t</template>\n\t\t</ChatDialog>\n\t`,\n};\n","import { Button as ChatButton, ButtonColor, ButtonSize } from 'im.v2.component.elements';\nimport { ChatService } from 'im.v2.provider.service';\n\n// @vue/component\nexport const JoinPanel = {\n\tcomponents: { ChatButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t},\n\tmethods:\n\t{\n\t\tonButtonClick()\n\t\t{\n\t\t\tthis.getChatService().joinChat(this.dialogId);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat__textarea_placeholder\">\n\t\t\t<ChatButton\n\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t:color=\"ButtonColor.Primary\"\n\t\t\t\t:text=\"loc('IM_CONTENT_BLOCKED_TEXTAREA_JOIN_CHANNEL_V2')\"\n\t\t\t\t:isRounded=\"true\"\n\t\t\t\t@click=\"onButtonClick\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\n// @vue/component\nexport const ChannelTextarea = {\n\tname: 'ChannelTextarea',\n\tcomponents: { ChatTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:placeholder=\"this.loc('IM_CONTENT_CHANNEL_TEXTAREA_PLACEHOLDER')\"\n\t\t\t:withCreateMenu=\"false\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withAudioInput=\"false\"\n\t\t\tclass=\"bx-im-channel-send-panel__container\"\n\t\t/>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { ChannelDialog } from './components/dialog';\nimport { JoinPanel } from './components/join-panel';\nimport { ChannelTextarea } from './components/textarea';\n\nexport const ChannelContent = {\n\tname: 'ChannelContent',\n\tcomponents: { BaseChatContent, ChannelDialog, ChannelTextarea, JoinPanel },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #dialog>\n\t\t\t\t<ChannelDialog :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #join-panel>\n\t\t\t\t<JoinPanel :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<ChannelTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { ChatHeader } from 'im.v2.component.content.elements';\n\nimport type { JsonObject } from 'main.core';\n\ntype EntityLink = {\n\ttitle: string,\n\tclickHandler: () => void;\n};\n\nconst GROUP_ID_PARAM_NAME = 'COLLAB_GROUP_ID';\n\n// @vue/component\nexport const CollabHeader = {\n\tname: 'CollabHeader',\n\tcomponents: { ChatHeader },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tgroupId: 0,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tentityLinks(): EntityLink[]\n\t\t{\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Tasks',\n\t\t\t\t\tclickHandler: () => {\n\t\t\t\t\t\tBX.SidePanel.Instance.open(`https://kotlyarchuk.bx/workgroups/group/${this.groupId}/tasks/`);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Files',\n\t\t\t\t\tclickHandler: () => {\n\t\t\t\t\t\tBX.SidePanel.Instance.open(`https://kotlyarchuk.bx/workgroups/group/${this.groupId}/disk/path/`);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Calendar',\n\t\t\t\t\tclickHandler: () => {\n\t\t\t\t\t\tBX.SidePanel.Instance.open(`https://kotlyarchuk.bx/workgroups/group/${this.groupId}/calendar/`);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tconst urlQuery = new URLSearchParams(window.location.search);\n\t\tthis.groupId = urlQuery.get(GROUP_ID_PARAM_NAME) ?? 1;\n\t},\n\t// language=Vue\n\ttemplate: `\n\t\t<ChatHeader :dialogId=\"dialogId\" class=\"bx-im-collab-header__container\">\n\t\t\t<template #before-actions>\n\t\t\t\t<div class=\"bx-im-collab-header__links-container\">\n\t\t\t\t\t<div v-for=\"{ title, clickHandler } in entityLinks\" :key=\"title\" @click=\"clickHandler\" class=\"bx-im-collab-header__links-container_item\">\n\t\t\t\t\t\t{{ title }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { CollabHeader } from './components/header';\n\nimport './css/collab.css';\n\nexport const CollabContent = {\n\tname: 'CollabContent',\n\tcomponents: { BaseChatContent, CollabHeader },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<CollabHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { ChatTitle, EditableChatTitle } from 'im.v2.component.elements';\n\n// @vue/component\nexport const MultidialogChatTitle = {\n\tname: 'MultidialogChatTitle',\n\tcomponents: { EditableChatTitle, ChatTitle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['newTitle'],\n\tcomputed:\n\t{\n\t\tisSupportBot(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['users/bots/isSupport'](this.dialogId);\n\t\t},\n\t\tsubtitle(): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage('IM_CONTENT_CHAT_HEADER_SUPPORT_SUBTITLE');\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-chat-header__info\">\n\t\t\t<ChatTitle v-if=\"isSupportBot\" :dialogId=\"dialogId\" />\n\t\t\t<EditableChatTitle v-else :dialogId=\"dialogId\" @newTitleSubmit=\"$emit('newTitle', $event)\" />\n\t\t\t<div class=\"bx-im-chat-header__subtitle_container\">\n\t\t\t\t<div class=\"bx-im-chat-header__subtitle_content\">{{ subtitle }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { ChatHeader } from 'im.v2.component.content.elements';\n\nimport { MultidialogChatTitle } from './title';\n\n// @vue/component\nexport const MultidialogHeader = {\n\tname: 'MultidialogHeader',\n\tcomponents: { ChatHeader, MultidialogChatTitle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader :dialogId=\"dialogId\">\n\t\t\t<template #title=\"{ onNewTitleHandler }\">\n\t\t\t\t<MultidialogChatTitle\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t@newTitle=\"onNewTitleHandler\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { MultidialogHeader } from './components/header';\n\nexport const MultidialogContent = {\n\tname: 'MultidialogContent',\n\tcomponents: { BaseChatContent, MultidialogHeader },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<MultidialogHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { Loc } from 'main.core';\n\nimport { ThemeManager } from 'im.v2.lib.theme';\nimport { RecentService } from 'im.v2.provider.service';\nimport { Layout } from 'im.v2.const';\n\nimport '../css/empty-state.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelLayout } from 'im.v2.model';\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\n// @vue/component\nexport const EmptyState = {\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\ticonClass(): string\n\t\t{\n\t\t\treturn this.isEmptyRecent ? '--empty' : '--default';\n\t\t},\n\t\ttext(): string\n\t\t{\n\t\t\tif (this.isEmptyRecent)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_CONTENT_CHAT_NO_CHATS_START_MESSAGE');\n\t\t\t}\n\n\t\t\tif (this.isChannelLayout)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_CONTENT_CHANNEL_START_MESSAGE_V3');\n\t\t\t}\n\n\t\t\treturn this.loc('IM_CONTENT_CHAT_START_MESSAGE_V2');\n\t\t},\n\t\tsubtext(): string\n\t\t{\n\t\t\tif (this.isChannelLayout)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_CONTENT_CHANNEL_START_MESSAGE_SUBTITLE');\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tisEmptyRecent(): boolean\n\t\t{\n\t\t\treturn RecentService.getInstance().getCollection().length === 0;\n\t\t},\n\t\tisChannelLayout(): boolean\n\t\t{\n\t\t\treturn this.layout.name === Layout.channel.name;\n\t\t},\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat-start__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-im-content-chat-start__content\">\n\t\t\t\t<div class=\"bx-im-content-chat-start__icon\" :class=\"iconClass\"></div>\n\t\t\t\t<div class=\"bx-im-content-chat-start__title\">\n\t\t\t\t\t{{ text }}\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"subtext\" class=\"bx-im-content-chat-start__subtitle\">\n\t\t\t\t\t{{ subtext }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Type, type JsonObject } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\ntype RawUser = {\n\tid: number,\n\t[key: string]: any,\n};\ntype PullUserActivityResult = {\n\t[userId: string]: number,\n};\n\nexport class UserService\n{\n\tasync updateLastActivityDate(userId: number): Promise\n\t{\n\t\tif (this.isPullServerWithUserStatusSupport())\n\t\t{\n\t\t\tconst lastActivityDate = await this.getUserActivityFromPull(userId);\n\t\t\tif (!lastActivityDate)\n\t\t\t{\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\treturn this.updateUserModel(userId, { lastActivityDate });\n\t\t}\n\n\t\tconst userData = await this.requestUserData(userId);\n\n\t\treturn this.updateUserModel(userId, userData);\n\t}\n\n\tasync getUserActivityFromPull(userId: number): Promise<null | Date>\n\t{\n\t\tconst result: PullUserActivityResult = await Core.getPullClient().getUsersLastSeen([userId])\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: error getting user activity from P&P', error);\n\t\t\t});\n\n\t\tif (!Type.isNumber(result[userId]))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activityDateAgo = result[userId] * 1000;\n\n\t\treturn new Date(Date.now() - activityDateAgo);\n\t}\n\n\tasync requestUserData(userId: number): Promise<RawUser>\n\t{\n\t\tLogger.warn(`UserService: get actual user data for - ${userId}`);\n\t\tconst answer = await Core.getRestClient().callMethod(RestMethod.imUserGet, { ID: userId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: error getting user data', error);\n\t\t\t});\n\n\t\treturn answer.data();\n\t}\n\n\tasync updateUserModel(userId: number, userFields: JsonObject): Promise\n\t{\n\t\tLogger.warn('UserService: update user data', userFields);\n\n\t\treturn Core.getStore().dispatch('users/update', {\n\t\t\tid: userId,\n\t\t\tfields: userFields,\n\t\t});\n\t}\n\n\tisPullServerWithUserStatusSupport(): boolean\n\t{\n\t\treturn Core.getPullClient().isJsonRpc();\n\t}\n}\n","import 'ui.notification';\n\nimport { Messenger } from 'im.public';\nimport { ChatType, Layout, UserRole } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { ChannelManager } from 'im.v2.lib.channel';\nimport { ChatService } from 'im.v2.provider.service';\nimport { AccessErrorCode } from '../../../../../../../lib/access/src/classes/access-service';\nimport { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { ChannelContent } from '../../content/channel/channel';\nimport { CollabContent } from '../../content/collab/collab';\nimport { MultidialogContent } from '../../content/multidialog/multidialog';\nimport { EmptyState } from './components/empty-state';\nimport { UserService } from './classes/user-service';\n\nimport './css/default-chat-content.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelLayout } from 'im.v2.model';\n\n// @vue/component\nexport const ChatOpener = {\n\tname: 'ChatOpener',\n\tcomponents: { BaseChatContent, ChannelContent, CollabContent, MultidialogContent, EmptyState },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.user;\n\t\t},\n\t\tisChannel(): boolean\n\t\t{\n\t\t\treturn ChannelManager.isChannel(this.dialogId);\n\t\t},\n\t\tisCollab(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.collab;\n\t\t},\n\t\tisMultidialog(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['sidebar/multidialog/isSupport'](this.dialogId);\n\t\t},\n\t\tisGuest(): boolean\n\t\t{\n\t\t\treturn this.dialog.role === UserRole.guest;\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tdialogId(newValue, oldValue)\n\t\t{\n\t\t\tLogger.warn(`ChatContent: switching from ${oldValue || 'empty'} to ${newValue}`);\n\t\t\tthis.onChatChange();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tif (!this.dialogId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChatChange();\n\t},\n\tmethods:\n\t{\n\t\tasync onChatChange()\n\t\t{\n\t\t\tif (this.dialogId === '')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Utils.dialog.isExternalId(this.dialogId))\n\t\t\t{\n\t\t\t\tconst realDialogId = await this.getChatService().prepareDialogId(this.dialogId);\n\n\t\t\t\tvoid LayoutManager.getInstance().setLayout({\n\t\t\t\t\tname: Layout.chat.name,\n\t\t\t\t\tentityId: realDialogId,\n\t\t\t\t\tcontextId: this.layout.contextId,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.inited)\n\t\t\t{\n\t\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is already loaded`);\n\t\t\t\tif (this.isUser)\n\t\t\t\t{\n\t\t\t\t\tconst userId = parseInt(this.dialog.dialogId, 10);\n\t\t\t\t\tvoid this.getUserService().updateLastActivityDate(userId);\n\t\t\t\t}\n\t\t\t\telse if (this.isChannel && !this.isGuest)\n\t\t\t\t{\n\t\t\t\t\tLogger.warn(`ChatContent: channel ${this.dialogId} is loaded, loading comments metadata`);\n\t\t\t\t\tvoid this.getChatService().loadCommentInfo(this.dialogId);\n\t\t\t\t}\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.loading)\n\t\t\t{\n\t\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loading`);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.layout.contextId)\n\t\t\t{\n\t\t\t\tawait this.loadChatWithContext();\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.loadChat();\n\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChatWithContext(): Promise\n\t\t{\n\t\t\tLogger.warn(`ChatContent: loading chat ${this.dialogId} with context - ${this.layout.contextId}`);\n\n\t\t\tawait this.getChatService().loadChatWithContext(this.dialogId, this.layout.contextId)\n\t\t\t\t.catch((errors) => {\n\t\t\t\t\tthis.sendAnalytics(errors);\n\t\t\t\t\tthis.handleChatLoadError(errors);\n\t\t\t\t\tLogger.error(errors);\n\t\t\t\t\tMessenger.openChat();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loaded with context of ${this.layout.contextId}`);\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`ChatContent: loading chat ${this.dialogId}`);\n\n\t\t\tawait this.getChatService().loadChatWithMessages(this.dialogId)\n\t\t\t\t.catch((errors) => {\n\t\t\t\t\tthis.handleChatLoadError(errors);\n\t\t\t\t\tLogger.error(errors);\n\t\t\t\t\tMessenger.openChat();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loaded`);\n\t\t},\n\t\thandleChatLoadError(errors: Error[]): void\n\t\t{\n\t\t\tconst [firstError] = errors;\n\t\t\tif (firstError.code === AccessErrorCode.accessDenied)\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IM_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t\t}\n\t\t\telse if (firstError.code === AccessErrorCode.messageNotFound)\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IM_CONTENT_CHAT_CONTEXT_MESSAGE_NOT_FOUND'));\n\t\t\t}\n\t\t},\n\t\tsendAnalytics(errors: Error[])\n\t\t{\n\t\t\tconst [firstError] = errors;\n\t\t\tif (firstError.code !== AccessErrorCode.messageNotFound)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tAnalytics.getInstance().messageDelete.onNotFoundNotification({ dialogId: this.dialogId });\n\t\t},\n\t\tshowNotification(text: string)\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({ content: text });\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tgetUserService(): UserService\n\t\t{\n\t\t\tif (!this.userService)\n\t\t\t{\n\t\t\t\tthis.userService = new UserService();\n\t\t\t}\n\n\t\t\treturn this.userService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-default-chat__container\">\n\t\t\t<EmptyState v-if=\"!dialogId\" />\n\t\t\t<ChannelContent v-else-if=\"isChannel\" :dialogId=\"dialogId\" />\n\t\t\t<CollabContent v-else-if=\"isCollab\" :dialogId=\"dialogId\" />\n\t\t\t<MultidialogContent v-else-if=\"isMultidialog\" :dialogId=\"dialogId\" />\n\t\t\t<BaseChatContent v-else :dialogId=\"dialogId\" />\n\t\t</div>\n\t`,\n};\n","import { Toggle, ToggleSize } from 'im.v2.component.elements';\nimport { CommentsService } from 'im.v2.provider.service';\n\nimport '../css/follow-toggle.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const SubscribeToggle = {\n\tname: 'SubscribeToggle',\n\tcomponents: { Toggle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tToggleSize: () => ToggleSize,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tpostMessageId(): ?number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tisSubscribed(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/isUserSubscribed'](this.postMessageId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonToggleClick(): void\n\t\t{\n\t\t\tif (this.isSubscribed)\n\t\t\t{\n\t\t\t\tCommentsService.unsubscribe(this.postMessageId);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tCommentsService.subscribe(this.postMessageId);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div @click=\"onToggleClick\" class=\"bx-im-comments-header-follow__container\">\n\t\t\t<div class=\"bx-im-comments-header-follow__text\">{{ loc('IM_CONTENT_COMMENTS_FOLLOW_TOGGLE_TEXT') }}</div>\n\t\t\t<Toggle :size=\"ToggleSize.M\" :isEnabled=\"isSubscribed\" />\n\t\t</div>\n\t`,\n};\n","import { EventEmitter } from 'main.core.events';\n\nimport { EventType, ChatActionType } from 'im.v2.const';\nimport { AvatarSize, ChatAvatar } from 'im.v2.component.elements';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { ChatHeader } from 'im.v2.component.content.elements';\n\nimport { SubscribeToggle } from './subscribe-toggle';\n\nimport '../css/header.css';\n\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsHeader = {\n\tname: 'CommentsHeader',\n\tcomponents: { ChatHeader, ChatAvatar, SubscribeToggle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tchannel(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.channelId, true);\n\t\t},\n\t\tshowSubscribeToggle(): boolean\n\t\t{\n\t\t\treturn PermissionManager.getInstance().canPerformAction(ChatActionType.subscribeToComments, this.dialogId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonBackClick()\n\t\t{\n\t\t\tEventEmitter.emit(EventType.dialog.closeComments);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader\n\t\t\t:dialogId=\"dialogId\"\n\t\t\tclass=\"bx-im-comment-header__container\"\n\t\t>\n\t\t\t<template #left>\n\t\t\t\t<div @click=\"onBackClick\" class=\"bx-im-comment-header__back\"></div>\n\t\t\t\t<div class=\"bx-im-comment-header__info\">\n\t\t\t\t\t<div class=\"bx-im-comment-header__title\">{{ loc('IM_CONTENT_COMMENTS_HEADER_TITLE') }}</div>\n\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle\">\n\t\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle_avatar\">\n\t\t\t\t\t\t\t<ChatAvatar :avatarDialogId=\"channelId\" :contextDialogId=\"channelId\" :size=\"AvatarSize.XS\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle_text\">{{ channel.name }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-if=\"showSubscribeToggle\" #before-actions>\n\t\t\t\t<SubscribeToggle :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\nimport '../css/dialog-loader.css';\n\n// @vue/component\nexport const CommentsDialogLoader = {\n\tname: 'CommentsDialogLoader',\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-comments-dialog-loader__container\">\n\t\t\t<div class=\"bx-im-comments-dialog-loader__spinner\"></div>\n\t\t</div>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { MessageMenu } from 'im.v2.component.message-list';\nimport { EventType } from 'im.v2.const';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\nimport type { ImModelChat } from 'im.v2.model';\n\nexport class CommentsMessageMenu extends MessageMenu\n{\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\tif (this.isPostMessage())\n\t\t{\n\t\t\treturn [\n\t\t\t\tthis.getCopyItem(),\n\t\t\t\tthis.getCopyFileItem(),\n\t\t\t\tthis.getDelimiter(),\n\t\t\t\tthis.getDownloadFileItem(),\n\t\t\t\tthis.getSaveToDisk(),\n\t\t\t\tthis.getDelimiter(),\n\t\t\t\tthis.getOpenInChannelItem(),\n\t\t\t];\n\t\t}\n\n\t\treturn [\n\t\t\tthis.getReplyItem(),\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getCopyFileItem(),\n\t\t\t// this.getPinItem(),\n\t\t\t// this.getForwardItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\t// this.getMarkItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getCreateItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDownloadFileItem(),\n\t\t\tthis.getSaveToDisk(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getEditItem(),\n\t\t\tthis.getDeleteItem(),\n\t\t];\n\t}\n\n\tgetOpenInChannelItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_CONTENT_COMMENTS_MESSAGE_MENU_OPEN_IN_CHANNEL'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.dialog.closeComments);\n\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tisPostMessage(): boolean\n\t{\n\t\tconst { dialogId }: ImModelChat = this.store.getters['chats/getByChatId'](this.context.chatId);\n\n\t\treturn dialogId !== this.context.dialogId;\n\t}\n}\n","import {\n\tMessageList,\n\tAuthorGroup,\n\tMessageComponents,\n\tCollectionManager,\n} from 'im.v2.component.message-list';\nimport { MessageComponentManager } from 'im.v2.lib.message-component-manager';\nimport { MessageComponent } from 'im.v2.const';\n\nimport { CommentsDialogLoader } from './dialog-loader';\nimport { CommentsMessageMenu } from '../classes/message-menu';\n\nimport '../css/message-list.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsMessageList = {\n\tname: 'CommentsMessageList',\n\tcomponents: { MessageList, CommentsDialogLoader, AuthorGroup, ...MessageComponents },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tCommentsMessageMenu: () => CommentsMessageMenu,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tshowPostMessage(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited && !this.dialog.hasPrevPage;\n\t\t},\n\t\tpostMessageId(): number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tpostMessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.postMessageId);\n\t\t},\n\t\tpostAuthorGroup(): JsonObject | null\n\t\t{\n\t\t\tif (!this.dialog.inited)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst collectionManager = new CollectionManager(this.dialogId);\n\n\t\t\treturn collectionManager.formatAuthorGroup(this.postMessage);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonPostMessageMouseUp(message: ImModelMessage, event: MouseEvent)\n\t\t{\n\t\t\tthis.$refs.messageList.onMessageMouseUp(message, event);\n\t\t},\n\t\tgetMessageComponentName(message: ImModelMessage): $Values<typeof MessageComponent>\n\t\t{\n\t\t\treturn (new MessageComponentManager(message)).getName();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<MessageList\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:messageMenuClass=\"CommentsMessageMenu\"\n\t\t\tref=\"messageList\"\n\t\t>\n\t\t\t<template #loader>\n\t\t\t\t<CommentsDialogLoader />\n\t\t\t</template>\n\t\t\t<template v-if=\"showPostMessage\" #before-messages>\n\t\t\t\t<div class=\"bx-im-comments-message-list__channel-post\">\n\t\t\t\t\t<AuthorGroup :item=\"postAuthorGroup\" :contextDialogId=\"dialogId\">\n\t\t\t\t\t\t<template #message>\n\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t:is=\"getMessageComponentName(postMessage)\"\n\t\t\t\t\t\t\t\t:item=\"postMessage\"\n\t\t\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t\t\t:key=\"postMessage.id\"\n\t\t\t\t\t\t\t\t@mouseup=\"onPostMessageMouseUp(postMessage, $event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</component>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</AuthorGroup>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</MessageList>\n\t`,\n};\n","import { Logger } from 'im.v2.lib.logger';\nimport { ImModelMessage } from 'im.v2.model';\n\nimport { ChatDialog, PinnedMessages } from 'im.v2.component.dialog.chat';\n\nimport { CommentsMessageList } from './message-list';\n\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsDialog = {\n\tname: 'CommentsDialog',\n\tcomponents: { ChatDialog, CommentsMessageList, PinnedMessages },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tdialogInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tpostMessageId(): number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tpostMessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.postMessageId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tasync goToPostMessageContext()\n\t\t{\n\t\t\tconst dialog = this.$refs.dialog;\n\n\t\t\tconst postMessageIsShown = this.dialogInited && !this.dialog.hasPrevPage;\n\t\t\tif (postMessageIsShown)\n\t\t\t{\n\t\t\t\tawait dialog.getScrollManager().animatedScrollToMessage(this.postMessageId);\n\t\t\t\tdialog.highlightMessage(this.postMessageId);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdialog.showLoadingBar();\n\t\t\tawait dialog.getMessageService().loadFirstPage()\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tLogger.error('goToMessageContext error', error);\n\t\t\t\t});\n\t\t\tawait this.$nextTick();\n\t\t\tdialog.hideLoadingBar();\n\t\t\tdialog.getScrollManager().scrollToMessage(this.postMessageId);\n\t\t\tawait this.$nextTick();\n\t\t\tdialog.highlightMessage(this.postMessageId);\n\t\t},\n\t\tonPinnedPostMessageClick()\n\t\t{\n\t\t\tthis.goToPostMessageContext();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatDialog ref=\"dialog\" :dialogId=\"dialogId\" :saveScrollOnExit=\"false\" :resetOnExit=\"true\">\n\t\t\t<template v-if=\"dialogInited\" #pinned-panel>\n\t\t\t\t<PinnedMessages\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t:messages=\"[postMessage]\"\n\t\t\t\t\t@messageClick=\"onPinnedPostMessageClick\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<template #message-list>\n\t\t\t\t<CommentsMessageList :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatDialog>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\n// @vue/component\nexport const CommentsTextarea = {\n\tname: 'CommentsTextarea',\n\tcomponents: { ChatTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withAudioInput=\"false\"\n\t\t\tclass=\"bx-im-comments-send-panel__container\"\n\t\t/>\n\t`,\n};\n","import { Button as ChatButton, ButtonColor, ButtonSize } from 'im.v2.component.elements';\nimport { ChatService } from 'im.v2.provider.service';\n\n// @vue/component\nexport const JoinPanel = {\n\tcomponents: { ChatButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t},\n\tmethods:\n\t{\n\t\tonButtonClick()\n\t\t{\n\t\t\tthis.getChatService().joinChat(this.dialogId);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat__textarea_placeholder\">\n\t\t\t<ChatButton\n\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t:color=\"ButtonColor.Primary\"\n\t\t\t\t:text=\"loc('IM_CONTENT_BLOCKED_TEXTAREA_JOIN_CHANNEL_V2')\"\n\t\t\t\t:isRounded=\"true\"\n\t\t\t\t@click=\"onButtonClick\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { CommentsHeader } from './components/header';\nimport { CommentsDialog } from './components/dialog';\nimport { CommentsTextarea } from './components/textarea';\nimport { JoinPanel } from './components/join-panel';\n\nimport './css/comments-content.css';\n\nexport const CommentsContent = {\n\tname: 'CommentsContent',\n\tcomponents: { BaseChatContent, CommentsHeader, CommentsDialog, CommentsTextarea, JoinPanel },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<CommentsHeader :dialogId=\"dialogId\" :channelId=\"channelId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #dialog>\n\t\t\t\t<CommentsDialog :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #join-panel>\n\t\t\t\t<JoinPanel :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<CommentsTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import 'ui.notification';\n\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { Logger } from 'im.v2.lib.logger';\nimport { ChatService } from 'im.v2.provider.service';\n\nimport { CommentsContent } from '../../content/comments/comments';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelCommentInfo } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsOpener = {\n\tname: 'CommentsOpener',\n\tcomponents: { CommentsContent },\n\tprops:\n\t{\n\t\tpostId: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ?ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/getByChatId'](this.commentsChatId);\n\t\t},\n\t\tcommentInfo(): ImModelCommentInfo\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getByMessageId'](this.postId);\n\t\t},\n\t\tcommentsChatId(): number\n\t\t{\n\t\t\treturn this.commentInfo.chatId;\n\t\t},\n\t\tcommentsDialogId(): string\n\t\t{\n\t\t\tif (!this.dialog)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn this.dialog.dialogId;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.onCreated();\n\t},\n\tmethods:\n\t{\n\t\tasync onCreated()\n\t\t{\n\t\t\tawait this.loadChat();\n\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`CommentsContent: loading comments for post ${this.postId}`);\n\n\t\t\tawait this.getChatService().loadComments(this.postId)\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.handleChatLoadError(error);\n\t\t\t\t\tLogger.error(error);\n\t\t\t\t\tthis.$emit('close');\n\t\t\t\t});\n\n\t\t\tLogger.warn(`CommentsContent: comments for post ${this.postId} are loaded`);\n\t\t},\n\t\thandleChatLoadError(error: Error[]): void\n\t\t{\n\t\t\tconst [firstError] = error;\n\t\t\tif (firstError.code === 'ACCESS_DENIED')\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IM_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t\t}\n\t\t},\n\t\tshowNotification(text: string)\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({ content: text });\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-comments__container\">\n\t\t\t<CommentsContent :dialogId=\"commentsDialogId\" :channelId=\"channelId\" />\n\t\t</div>\n\t`,\n};\n","import { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport { EventType } from 'im.v2.const';\n\nimport { ChatOpener } from './components/openers/chat/chat';\nimport { CommentsOpener } from './components/openers/comments/comments';\n\nimport './css/chat-content.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelLayout } from 'im.v2.model';\n\n// @vue/component\nexport const ChatContent = {\n\tname: 'ChatContent',\n\tcomponents:\n\t{\n\t\tChatOpener,\n\t\tCommentsOpener,\n\t},\n\tprops:\n\t{\n\t\tentityId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tcommentsPostId: 0,\n\t\t\tcommentsAnimationFlag: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tshowComments(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/areOpened'];\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tlayout()\n\t\t{\n\t\t\tthis.closeComments();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tEventEmitter.subscribe(EventType.dialog.openComments, this.onOpenComments);\n\t\tEventEmitter.subscribe(EventType.dialog.closeComments, this.onCloseComments);\n\t},\n\tbeforeUnmount()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.dialog.openComments, this.onOpenComments);\n\t\tEventEmitter.unsubscribe(EventType.dialog.closeComments, this.onCloseComments);\n\t},\n\tmethods:\n\t{\n\t\tonOpenComments(event: BaseEvent<{ messageId: number }>)\n\t\t{\n\t\t\tconst { messageId } = event.getData();\n\t\t\tthis.commentsPostId = messageId;\n\t\t\tthis.commentsAnimationFlag = true;\n\t\t\tthis.$store.dispatch('messages/comments/setOpened', {\n\t\t\t\tchannelDialogId: this.entityId,\n\t\t\t\tcommentsPostId: this.commentsPostId,\n\t\t\t});\n\t\t},\n\t\tonCloseComments()\n\t\t{\n\t\t\tthis.closeComments();\n\t\t},\n\t\tcloseComments()\n\t\t{\n\t\t\tthis.commentsPostId = 0;\n\t\t\tthis.$store.dispatch('messages/comments/setClosed');\n\t\t},\n\t\tonCommentsAnimationEnd()\n\t\t{\n\t\t\tthis.commentsAnimationFlag = false;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatOpener :dialogId=\"entityId\" :class=\"{'--comments-show-animation': commentsAnimationFlag}\" />\n\t\t<Transition name=\"comments-content\" @after-enter=\"onCommentsAnimationEnd\">\n\t\t\t<CommentsOpener\n\t\t\t\tv-if=\"showComments\"\n\t\t\t\t:postId=\"commentsPostId\"\n\t\t\t\t:channelId=\"entityId\"\n\t\t\t/>\n\t\t</Transition>\n\t`,\n};\n"],"names":["AccessErrorCode","accessDenied","chatNotFound","messageNotFound","messageAccessDenied","messageAccessDeniedByTariff","CommentsButton","name","props","dialogId","type","String","required","counter","Number","data","computed","dialog","$store","getters","template","ChannelMessageMenu","MessageMenu","getMenuItems","getCopyItem","getCopyLinkItem","getCopyFileItem","getPinItem","getForwardItem","getDelimiter","getMarkItem","getFavoriteItem","getDownloadFileItem","getSaveToDisk","getEditItem","getDeleteItem","ChannelMessageList","components","MessageList","ChannelDialog","ChatDialog","lastScrolledChatId","layout","isGuest","role","UserRole","guest","isChatLayout","Layout","chat","channelComments","chatId","totalChannelCommentsCounter","Object","values","forEach","commentCounter","showCommentsButton","beforeUnmount","readAllChannelComments","methods","onCommentsButtonClick","chatIdToJump","getNextChatIdToJump","messageIdToJump","$refs","goToMessageContext","position","ScrollManager","scrollPosition","messageBottom","goToMessageContextByCommentsChatId","showLoadingBar","messageId","getMessageService","loadContextByChatId","catch","error","console","hideLoadingBar","$nextTick","getScrollManager","scrollToMessage","highlightMessage","commentChatIds","getCommentsChatIds","sort","a","z","filteredChatIds","filter","length","keys","map","CommentsService","JoinPanel","ChatButton","ButtonSize","ButtonColor","onButtonClick","getChatService","joinChat","chatService","ChatService","loc","phraseCode","$Bitrix","Loc","getMessage","ChannelTextarea","ChatTextarea","default","ChannelContent","BaseChatContent","GROUP_ID_PARAM_NAME","CollabHeader","ChatHeader","groupId","entityLinks","title","clickHandler","BX","SidePanel","Instance","open","created","urlQuery","URLSearchParams","window","location","search","get","CollabContent","MultidialogChatTitle","EditableChatTitle","ChatTitle","emits","isSupportBot","subtitle","MultidialogHeader","MultidialogContent","EmptyState","iconClass","isEmptyRecent","text","isChannelLayout","subtext","RecentService","getInstance","getCollection","channel","backgroundStyle","ThemeManager","getCurrentBackgroundStyle","replacements","UserService","updateLastActivityDate","userId","isPullServerWithUserStatusSupport","lastActivityDate","getUserActivityFromPull","Promise","resolve","updateUserModel","userData","requestUserData","result","Core","getPullClient","getUsersLastSeen","Type","isNumber","activityDateAgo","Date","now","Logger","warn","answer","getRestClient","callMethod","RestMethod","imUserGet","ID","userFields","getStore","dispatch","id","fields","isJsonRpc","ChatOpener","isUser","ChatType","user","isChannel","ChannelManager","isCollab","collab","isMultidialog","watch","newValue","oldValue","onChatChange","Utils","isExternalId","realDialogId","prepareDialogId","LayoutManager","setLayout","entityId","contextId","inited","parseInt","getUserService","loadCommentInfo","Analytics","onOpenChat","loading","loadChatWithContext","loadChat","errors","sendAnalytics","handleChatLoadError","Messenger","openChat","loadChatWithMessages","firstError","code","showNotification","messageDelete","onNotFoundNotification","UI","Notification","Center","notify","content","userService","SubscribeToggle","Toggle","ToggleSize","postMessageId","isSubscribed","onToggleClick","unsubscribe","subscribe","CommentsHeader","ChatAvatar","channelId","AvatarSize","showSubscribeToggle","PermissionManager","canPerformAction","ChatActionType","subscribeToComments","onBackClick","EventEmitter","emit","EventType","closeComments","CommentsDialogLoader","CommentsMessageMenu","isPostMessage","getOpenInChannelItem","getReplyItem","getCreateItem","onclick","menuInstance","close","store","context","CommentsMessageList","AuthorGroup","MessageComponents","showPostMessage","hasPrevPage","postMessage","postAuthorGroup","collectionManager","CollectionManager","formatAuthorGroup","onPostMessageMouseUp","message","event","messageList","onMessageMouseUp","getMessageComponentName","MessageComponentManager","getName","CommentsDialog","PinnedMessages","dialogInited","goToPostMessageContext","postMessageIsShown","animatedScrollToMessage","loadFirstPage","onPinnedPostMessageClick","CommentsTextarea","CommentsContent","CommentsOpener","postId","commentsChatId","commentInfo","commentsDialogId","onCreated","loadComments","$emit","ChatContent","commentsPostId","commentsAnimationFlag","showComments","openComments","onOpenComments","onCloseComments","getData","channelDialogId","onCommentsAnimationEnd"],"mappings":"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"}