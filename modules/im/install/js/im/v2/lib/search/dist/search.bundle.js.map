{"version":3,"file":"search.bundle.js","sources":["../src/get-search-config.js","../src/store-updater.js","../src/local-search.js"],"sourcesContent":["import { Type } from 'main.core';\n\ntype EntitySelectorProviderEntity = {\n\tid: string,\n\toptions: Object,\n\tdynamicLoad: boolean,\n\tdynamicSearch: boolean,\n};\n\ntype EntitySelectorRequestConfig = {\n\tdialog: {\n\t\tentities: EntitySelectorProviderEntity[],\n\t\tpreselectedItems: [],\n\t\tclearUnavailableItems: boolean,\n\t\tcontext: string,\n\t\tid: string,\n\t}\n};\n\nexport type SearchConfig = {\n\tchats: boolean,\n\tusers: boolean,\n};\n\nexport const EntityId = 'im-recent-v2';\nconst ContextId = 'IM_CHAT_SEARCH';\nconst SearchDialogId = 'im-chat-search';\n\nexport const getSearchConfig = (searchConfig: SearchConfig): EntitySelectorRequestConfig => {\n\tconst entity = {\n\t\tid: EntityId,\n\t\tdynamicLoad: true,\n\t\tdynamicSearch: true,\n\t\toptions: prepareConfigOptions(searchConfig),\n\t};\n\n\treturn {\n\t\tdialog: {\n\t\t\tentities: [\n\t\t\t\tentity,\n\t\t\t],\n\t\t\tpreselectedItems: [],\n\t\t\tclearUnavailableItems: false,\n\t\t\tcontext: ContextId,\n\t\t\tid: SearchDialogId,\n\t\t},\n\t};\n};\n\nconst prepareConfigOptions = (searchConfig: SearchConfig) => {\n\tconst options = {\n\t\twithChatByUsers: false,\n\t};\n\n\tif (!searchConfig)\n\t{\n\t\treturn { ...options, exclude: [] };\n\t}\n\n\tconst exclude = [];\n\n\tif (Type.isBoolean(searchConfig.chats) && !searchConfig.chats)\n\t{\n\t\texclude.push('chats');\n\t}\n\n\tif (Type.isBoolean(searchConfig.users) && !searchConfig.users)\n\t{\n\t\texclude.push('users');\n\t}\n\n\treturn { ...options, exclude };\n};\n","import { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\nimport { SearchEntityIdTypes } from 'im.v2.const';\n\nimport type { ImRecentProviderItem } from './types/recent-provider-item';\n\nexport class StoreUpdater\n{\n\t#store: Object;\n\t#userManager: UserManager;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t\tthis.#userManager = new UserManager();\n\t}\n\n\tupdate(items: ImRecentProviderItem[]): Promise\n\t{\n\t\tconst { users, chats } = this.#prepareDataForModels(items);\n\n\t\treturn Promise.all([\n\t\t\tthis.updateUsers(users),\n\t\t\tthis.#updateChats(chats),\n\t\t]);\n\t}\n\n\tupdateUsers(users): Promise\n\t{\n\t\treturn this.#userManager.setUsersToModel(users);\n\t}\n\n\t#updateChats(dialogues): Promise\n\t{\n\t\treturn this.#store.dispatch('chats/set', dialogues);\n\t}\n\n\t#prepareDataForModels(items: ImRecentProviderItem[]): { users: Object[], chats: Object[] }\n\t{\n\t\tconst result = {\n\t\t\tusers: [],\n\t\t\tchats: [],\n\t\t};\n\n\t\titems.forEach((item) => {\n\t\t\tconst itemData = item.customData;\n\n\t\t\tif (item.entityType === SearchEntityIdTypes.imUser)\n\t\t\t{\n\t\t\t\tresult.users.push(itemData);\n\t\t\t}\n\n\t\t\tif (item.entityType === SearchEntityIdTypes.chat)\n\t\t\t{\n\t\t\t\tresult.chats.push({\n\t\t\t\t\t...itemData,\n\t\t\t\t\tdialogId: item.id,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatType } from 'im.v2.const';\nimport { Utils } from 'im.v2.lib.utils';\n\nimport type { SearchConfig } from 'im.v2.lib.search';\nimport type { ImModelUser, ImModelChat, ImModelRecentItem } from 'im.v2.model';\n\ntype LocalSearchItem = {\n\tdialogId: string,\n\tdialog: ImModelChat,\n\tuser?: ImModelUser,\n\tdateMessage: string,\n}\n\nexport type SearchResultItem = {\n\tdialogId: string,\n\tdateMessage: string,\n};\n\nconst collator = new Intl.Collator(undefined, { sensitivity: 'base' });\n\nexport class LocalSearch\n{\n\t#searchConfig: SearchConfig | undefined;\n\t#store: Store;\n\n\tconstructor(searchConfig: SearchConfig)\n\t{\n\t\tthis.#searchConfig = searchConfig;\n\t\tthis.#store = Core.getStore();\n\t}\n\n\tsearch(query: string, localCollection: SearchResultItem[]): SearchResultItem[]\n\t{\n\t\tconst localItems = this.#getLocalItems(localCollection);\n\t\tconst result = this.#search(query, localItems);\n\n\t\treturn this.#filterByConfig(result);\n\t}\n\n\t#search(query: string, localItems: LocalSearchItem[]): SearchResultItem[]\n\t{\n\t\tconst queryWords = Utils.text.getWordsFromString(query);\n\n\t\tconst foundItems: Map<string, SearchResultItem> = new Map();\n\t\tlocalItems.forEach((localItem) => {\n\t\t\tif (this.#searchByQueryWords(localItem, queryWords))\n\t\t\t{\n\t\t\t\tfoundItems.set(localItem.dialogId, {\n\t\t\t\t\tdialogId: localItem.dialogId,\n\t\t\t\t\tdateMessage: localItem.dateMessage,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn [...foundItems.values()];\n\t}\n\n\t#getRecentListItems(): LocalSearchItem[]\n\t{\n\t\treturn this.#store.getters['recent/getSortedCollection'].map((item: ImModelRecentItem) => {\n\t\t\tconst itemDate = this.#getRecentItemDate(item);\n\n\t\t\treturn this.#prepareRecentItem(item.dialogId, itemDate);\n\t\t});\n\t}\n\n\t#prepareRecentItem(dialogId: string, dateMessage: string): LocalSearchItem[]\n\t{\n\t\tconst dialog = this.#store.getters['chats/get'](dialogId, true);\n\t\tconst isUser = dialog.type === ChatType.user;\n\n\t\tconst recentItem = { dialogId, dialog, dateMessage };\n\n\t\tif (isUser)\n\t\t{\n\t\t\trecentItem.user = this.#store.getters['users/get'](dialogId, true);\n\t\t}\n\n\t\treturn recentItem;\n\t}\n\n\t#searchByQueryWords(localItem: LocalSearchItem, queryWords: string[]): boolean\n\t{\n\t\tif (localItem.user)\n\t\t{\n\t\t\treturn this.#searchByUserFields(localItem, queryWords);\n\t\t}\n\n\t\treturn this.#searchByDialogFields(localItem, queryWords);\n\t}\n\n\t#searchByDialogFields(localItem: LocalSearchItem, queryWords: string[]): boolean\n\t{\n\t\tconst searchField = [];\n\n\t\tif (localItem.dialog.name)\n\t\t{\n\t\t\tconst dialogNameWords = Utils.text.getWordsFromString(localItem.dialog.name.toLowerCase());\n\t\t\tsearchField.push(...dialogNameWords);\n\t\t}\n\n\t\treturn this.#doesItemMatchQuery(searchField, queryWords);\n\t}\n\n\t#searchByUserFields(localItem: LocalSearchItem, queryWords: string[]): boolean\n\t{\n\t\tconst searchField = [];\n\n\t\tif (localItem.user.name)\n\t\t{\n\t\t\tconst userNameWords = Utils.text.getWordsFromString(localItem.user.name.toLowerCase());\n\t\t\tsearchField.push(...userNameWords);\n\t\t}\n\n\t\tif (localItem.user.workPosition)\n\t\t{\n\t\t\tconst workPositionWords = Utils.text.getWordsFromString(localItem.user.workPosition.toLowerCase());\n\t\t\tsearchField.push(...workPositionWords);\n\t\t}\n\n\t\treturn this.#doesItemMatchQuery(searchField, queryWords);\n\t}\n\n\t#doesItemMatchQuery(fieldsForSearch: string[], queryWords: string[]): boolean\n\t{\n\t\tlet found = 0;\n\t\tqueryWords.forEach((queryWord) => {\n\t\t\tlet queryWordsMatchCount = 0;\n\t\t\tfieldsForSearch.forEach((field) => {\n\t\t\t\tconst word = field.slice(0, queryWord.length);\n\t\t\t\tif (collator.compare(queryWord, word) === 0)\n\t\t\t\t{\n\t\t\t\t\tqueryWordsMatchCount++;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (queryWordsMatchCount > 0)\n\t\t\t{\n\t\t\t\tfound++;\n\t\t\t}\n\t\t});\n\n\t\treturn found >= queryWords.length;\n\t}\n\n\t#getLocalItems(localCollection: SearchResultItem[]): LocalSearchItem[]\n\t{\n\t\tconst recentItems = this.#getRecentListItems();\n\t\tconst localItems = this.#getLocalItemsFromDialogIds(localCollection);\n\n\t\treturn this.#mergeItems(localItems, recentItems);\n\t}\n\n\t#getLocalItemsFromDialogIds(localCollection: SearchResultItem[]): LocalSearchItem[]\n\t{\n\t\treturn localCollection.map((item) => {\n\t\t\treturn this.#prepareRecentItem(item.dialogId, item.dateMessage);\n\t\t});\n\t}\n\n\t#mergeItems(items1: LocalSearchItem[], items2: LocalSearchItem[]): LocalSearchItem[]\n\t{\n\t\tconst itemsMap = new Map();\n\t\tconst mergedArray = [...items1, ...items2];\n\n\t\tfor (const recentItem of mergedArray)\n\t\t{\n\t\t\tif (!itemsMap.has(recentItem.dialogId))\n\t\t\t{\n\t\t\t\titemsMap.set(recentItem.dialogId, recentItem);\n\t\t\t}\n\t\t}\n\n\t\treturn [...itemsMap.values()];\n\t}\n\n\t#filterByConfig(items: SearchResultItem[]): SearchResultItem[]\n\t{\n\t\tif (!this.#searchConfig)\n\t\t{\n\t\t\treturn items;\n\t\t}\n\n\t\treturn items.filter((item) => {\n\t\t\tif (this.#searchConfig.chats && item.dialogId.startsWith('chat'))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn !item.dialogId.startsWith('chat') && this.#searchConfig.users;\n\t\t});\n\t}\n\n\t#getRecentItemDate(item: ImModelRecentItem): string\n\t{\n\t\tconst dateMessage: Date = this.#store.getters['recent/getMessage'](item.dialogId)?.date;\n\t\tif (!dateMessage)\n\t\t{\n\t\t\treturn '';\n\t\t}\n\n\t\treturn dateMessage.toISOString();\n\t}\n}\n"],"names":["EntityId","ContextId","SearchDialogId","getSearchConfig","searchConfig","entity","id","dynamicLoad","dynamicSearch","options","prepareConfigOptions","dialog","entities","preselectedItems","clearUnavailableItems","context","withChatByUsers","exclude","Type","isBoolean","chats","push","users","StoreUpdater","constructor","Core","getStore","UserManager","update","items","Promise","all","updateUsers","setUsersToModel","dialogues","dispatch","result","forEach","item","itemData","customData","entityType","SearchEntityIdTypes","imUser","chat","dialogId","collator","Intl","Collator","undefined","sensitivity","LocalSearch","search","query","localCollection","localItems","queryWords","Utils","text","getWordsFromString","foundItems","Map","localItem","set","dateMessage","values","getters","map","itemDate","isUser","type","ChatType","user","recentItem","searchField","name","dialogNameWords","toLowerCase","userNameWords","workPosition","workPositionWords","fieldsForSearch","found","queryWord","queryWordsMatchCount","field","word","slice","length","compare","recentItems","items1","items2","itemsMap","mergedArray","has","filter","startsWith","date","toISOString"],"mappings":"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"}