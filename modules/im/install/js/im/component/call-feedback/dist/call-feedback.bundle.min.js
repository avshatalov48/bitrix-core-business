this.BX=this.BX||{};(function(t,e,i,l,s,a,c){"use strict";l.BitrixVue.component("bx-im-component-call-feedback",{props:{darkMode:{type:Boolean,required:false,default:false},callDetails:{type:Object,required:false,default:function t(){return{id:0,provider:"",userCount:0,browser:"",isMobile:false,isConference:false}}}},data:function t(){return{selectedRating:0,hoveredRating:0,selectedProblem:"",problemDescription:"",isFilled:false}},created:function t(){this.initProblemsList();this.selectedProblem=this.problemsList.noProblem},computed:{showTextarea:function t(){return this.selectedProblem===this.problemsList.other},wrapClasses:function t(){return["bx-im-call-feedback-wrap",this.darkMode?"bx-im-call-feedback-wrap-dark":""]}},methods:{onRatingMouseover:function t(e){this.hoveredRating=e},onRatingMouseOut:function t(e){this.hoveredRating=0},onRatingClick:function t(e){this.selectedRating=e},prepareFeedback:function t(){return{event:"call_feedback",call_id:this.callDetails.id,kind:this.callDetails.provider,userCount:this.callDetails.userCount,browser:this.callDetails.browser,isMobile:this.callDetails.isMobile,isConference:this.callDetails.isConference,callRating:this.selectedRating,callProblem:this.getProblemCode(),problemDescription:this.problemDescription}},getProblemCode:function t(){var e="";for(var i=0,l=Object.entries(this.problemsList);i<l.length;i++){var s=babelHelpers.slicedToArray(l[i],2),a=s[0],c=s[1];if(this.selectedProblem===c){e=a}}return e},sendFeedback:function t(){this.isFilled=true;var e=this.prepareFeedback();c.Logger.warn("Call feedback",e);this.$emit("feedbackSent");if(this.selectedRating===0&&this.selectedProblem===this.problemsList.noProblem){return}BX.Call.Util.sendTelemetryEvent(e)},getRatingStarClasses:function t(e){return["bx-im-call-feedback-rating-star",this.hoveredRating>=e||this.selectedRating>=e?"bx-im-call-feedback-rating-star-filled":"bx-im-call-feedback-rating-star-empty"]},initProblemsList:function t(){this.problemsList={noProblem:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_NO_ISSUE"),videoQuality:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_VIDEO_QUALITY"),cantSeeEachOther:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_CANT_SEE_EACH_OTHER"),cantHearEachOther:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_CANT_HEAR_EACH_OTHER"),audioQuality:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_AUDIO_QUALITY"),screenSharingProblem:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_SCREEN_SHARING_PROBLEM"),recordingProblem:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_RECORDING_PROBLEM"),callInterfaceProblem:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_CALL_INTERFACE_PROBLEM"),gotDisconnected:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_GOT_DISCONNECTED"),other:this.$Bitrix.Loc.getMessage("BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_OTHER")}},createProblemSelectPopup:function t(){var e=this;var i=this.$refs["problemSelect"];var l="bx-im-call-feedback-problem-select"+(this.darkMode?" bx-im-call-feedback-problem-select-dark":"");var s=[];for(var c=0,n=Object.values(this.problemsList);c<n.length;c++){var r=n[c];s.push({text:r,onclick:function t(i,l){e.onProblemClick(l)},className:"bx-im-call-feedback-problem-option"})}this.problemSelectPopup=new a.Menu({bindElement:i,items:s,className:l,offsetTop:0})},toggleProblemSelectPopup:function t(){if(!this.problemSelectPopup){this.createProblemSelectPopup()}this.problemSelectPopup.toggle()},onProblemClick:function t(e){this.selectedProblem=e.text;this.problemSelectPopup.toggle()}},template:'\n\t\t<div :class="wrapClasses">\n\t\t\t<div class="bx-im-call-feedback-header">\n\t\t\t\t<div class="bx-im-call-feedback-header-title">{{ $Bitrix.Loc.getMessage(\'BX_IM_COMPONENT_CALL_FEEDBACK_VIDEOCALL_FINISHED\') }}</div>\n\t\t\t</div>\n\t\t\t<div class="bx-im-call-feedback-content">\n\t\t\t  \t<template v-if="!isFilled">\n\t\t\t\t\t<div class="bx-im-call-feedback-content-title">{{ $Bitrix.Loc.getMessage(\'BX_IM_COMPONENT_CALL_FEEDBACK_RATE_QUALITY\') }}</div>\n\t\t\t\t\t<div class="bx-im-call-feedback-rating-wrap">\n\t\t\t\t\t  \t<template v-for="i in 5">\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t  \t\t@click="onRatingClick(i)"\n\t\t\t\t\t\t\t\t@mouseover="onRatingMouseover(i)"\n\t\t\t\t\t\t\t\t@mouseout="onRatingMouseOut(i)"\n\t\t\t\t\t\t\t  \t:class="getRatingStarClasses(i)"\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="bx-im-call-feedback-problem">\n\t\t\t\t\t\t<div @click="toggleProblemSelectPopup" class="bx-im-call-feedback-problem-selected ui-ctl ui-ctl-after-icon ui-ctl-dropdown" ref="problemSelect">\n\t\t\t\t\t\t\t<div class="ui-ctl-after ui-ctl-icon-angle"></div>\n\t\t\t\t\t\t\t<div class="ui-ctl-element">{{ selectedProblem }}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t  \t<template v-if="showTextarea">\n\t\t\t\t  \t\t<textarea\n\t\t\t\t\t\t  class="bx-im-call-feedback-problem-description"\n\t\t\t\t\t\t  v-model="problemDescription"\n\t\t\t\t\t\t  :placeholder="$Bitrix.Loc.getMessage(\'BX_IM_COMPONENT_CALL_FEEDBACK_ISSUE_DESCRIPTION\')"\n\t\t\t\t\t\t></textarea>\n\t\t\t\t\t</template>\n\t\t\t\t  \t<div class="bx-im-call-feedback-submit-wrap">\n\t\t\t\t\t\t<button @click="sendFeedback" class="ui-btn ui-btn-lg ui-btn-primary bx-im-call-feedback-submit">\n\t\t\t\t\t\t\t{{ $Bitrix.Loc.getMessage(\'BX_IM_COMPONENT_CALL_FEEDBACK_SEND\') }}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t  \t<template v-else>\n\t\t\t\t  \t<div class="bx-im-call-feedback-filled-wrap">\n\t\t\t\t\t\t<div class="bx-im-call-feedback-filled-icon"></div>\n\t\t\t\t\t\t<div class="bx-im-call-feedback-filled-text">{{ $Bitrix.Loc.getMessage(\'BX_IM_COMPONENT_CALL_FEEDBACK_FILLED\') }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</div>\n\t'})})(this.BX.Messenger=this.BX.Messenger||{},BX,BX,BX,BX,BX.Main,BX.Messenger.Lib);
//# sourceMappingURL=call-feedback.bundle.map.js