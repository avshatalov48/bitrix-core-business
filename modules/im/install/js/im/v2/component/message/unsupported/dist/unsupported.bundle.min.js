this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,n){"use strict";const i={name:"UnsupportedMessage",components:{BaseMessage:s.BaseMessage,DefaultMessageContent:n.DefaultMessageContent},props:{item:{type:Object,required:true},dialogId:{type:String,required:true}},computed:{message(){return this.item},canSetReactions(){return t.Type.isNumber(this.message.id)}},methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<BaseMessage :dialogId="dialogId" :item="item">\n\t\t\t<div class="bx-im-message-unsupported__container bx-im-message-unsupported__scope">\n\t\t\t\t<div class="bx-im-message-unsupported__content">\n\t\t\t\t\t<div class="bx-im-message-unsupported__icon"></div>\n\t\t\t\t\t<div class="bx-im-message-unsupported__text">\n\t\t\t\t\t\t{{ loc('IM_MESSENGER_MESSAGE_UNSUPPORTED_EXTENSION') }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<DefaultMessageContent :item="item" :dialogId="dialogId" :withText="false" />\n\t\t\t</div>\n\t\t</BaseMessage>\n\t`};e.UnsupportedMessage=i})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Component.Message);
//# sourceMappingURL=unsupported.bundle.map.js