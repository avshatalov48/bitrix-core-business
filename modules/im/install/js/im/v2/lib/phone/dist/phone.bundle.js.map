{"version":3,"file":"phone.bundle.js","sources":["../src/phone.js"],"sourcesContent":["import 'voximplant';\nimport { PhoneCallsController } from 'voximplant.phone-calls';\nimport { Type, Runtime, Reflection } from 'main.core';\nimport { BaseEvent } from 'main.core.events';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { CallManager } from 'im.v2.lib.call';\nimport { SoundNotificationManager } from 'im.v2.lib.sound-notification';\n\nimport type { ImModelUser } from 'im.v2.model';\n\ntype PhoneSettings = {\n\tphoneEnabled: boolean,\n\tdeviceActive: boolean,\n\tcanInterceptCall: boolean,\n\tcanPerformCallsByUser: boolean,\n\tcanPerformCallsByLimits: boolean,\n\tcanCallUserNumber: boolean,\n\tdefaultLineId: string,\n\tavailableLines: string[],\n\trestApps: Array<{id: number, name: string}>\n};\n\ntype KeyPadParams = {\n\tbindElement: HTMLElement,\n\toffsetTop: number,\n\toffsetLeft: number,\n\tanglePosition: 'left' | 'top',\n\tangleOffset: number\n};\n\ntype CallConnectedEvent = {\n\tcall: Object<string, any>,\n\tisIncoming: boolean,\n\tisDeviceCall: boolean,\n};\n\ntype StartCallParams = {\n\tLINE_ID?: string,\n};\n\nexport class PhoneManager\n{\n\tstatic #instance: PhoneManager;\n\n\t#controller: PhoneCallsController;\n\t#settings: PhoneSettings;\n\n\tstatic getInstance(): PhoneManager\n\t{\n\t\tif (!this.#instance)\n\t\t{\n\t\t\tthis.#instance = new this();\n\t\t}\n\n\t\treturn this.#instance;\n\t}\n\n\tstatic init()\n\t{\n\t\tPhoneManager.getInstance();\n\t}\n\n\tconstructor()\n\t{\n\t\tconst { phoneSettings } = Core.getApplicationData();\n\t\tLogger.warn('PhoneManager: phoneSettings', phoneSettings);\n\t\tthis.#init(phoneSettings);\n\t}\n\n\tcanCall(): boolean\n\t{\n\t\treturn this.#settings.phoneEnabled && this.#settings.canPerformCallsByUser;\n\t}\n\n\topenKeyPad(params: KeyPadParams)\n\t{\n\t\tthis.#controller?.openKeyPad(params);\n\t}\n\n\tcloseKeyPad()\n\t{\n\t\tthis.#controller?.closeKeyPad();\n\t}\n\n\tasync startCall(number: string, rawParams: StartCallParams = {})\n\t{\n\t\tif (!this.#settings.canPerformCallsByLimits)\n\t\t{\n\t\t\tvoid this.#showCallLimitSlider();\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.#controller)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tlet params = rawParams;\n\t\tif (Type.isStringFilled(params))\n\t\t{\n\t\t\tparams = this.#parseStartCallParams(params);\n\t\t}\n\n\t\t// await this.#controller.loadPhoneLines();\n\t\t//\n\t\t// const lineId = params.LINE_ID ?? this.#controller.defaultLineId;\n\t\t// if (this.#controller.isRestLine(lineId))\n\t\t// {\n\t\t// \tthis.#controller.startCallViaRestApp(number, lineId, params);\n\t\t// }\n\n\t\tthis.closeKeyPad();\n\t\tthis.#controller.phoneCall(number, params);\n\t}\n\n\tstartCallList(rawCallListId: string | number, params: Object<string, any>)\n\t{\n\t\tif (!this.#controller)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst callListId = Number.parseInt(rawCallListId, 10);\n\t\tif (callListId === 0 || Number.isNaN(callListId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#controller.startCallList(callListId, params);\n\t}\n\n\ttoggleDebugFlag(debug)\n\t{\n\t\tif (!this.#controller)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#controller.debug = debug;\n\t}\n\n\tgetPhoneCallView()\n\t{\n\t\tif (!this.#controller)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.#controller?.callView;\n\t}\n\n\t#init(phoneSettings: PhoneSettings)\n\t{\n\t\tthis.#settings = phoneSettings;\n\t\tif (!Reflection.getClass('BX.Voximplant.PhoneCallsController'))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#controller = this.#getController(phoneSettings);\n\t}\n\n\t#getController(phoneSettings: PhoneSettings): PhoneCallsController\n\t{\n\t\tconst soundManager = SoundNotificationManager.getInstance();\n\n\t\treturn new PhoneCallsController({\n\t\t\tphoneEnabled: phoneSettings.phoneEnabled,\n\n\t\t\tuserId: Core.getUserId(),\n\t\t\tisAdmin: this.#getCurrentUser().isAdmin,\n\n\t\t\trestApps: phoneSettings.restApps,\n\t\t\tcanInterceptCall: phoneSettings.canInterceptCall,\n\t\t\tdeviceActive: phoneSettings.deviceActive,\n\t\t\tdefaultLineId: phoneSettings.defaultLineId,\n\t\t\tavailableLines: phoneSettings.availableLines,\n\n\t\t\tmessengerFacade: {\n\t\t\t\tisThemeDark: () => false,\n\t\t\t\tisDesktop: () => DesktopApi.isDesktop(),\n\t\t\t\thasActiveCall: () => CallManager.getInstance().hasCurrentCall(),\n\t\t\t\trepeatSound: (melodyName, time, force) => soundManager.playLoop(melodyName, time, force),\n\t\t\t\tstopRepeatSound: (melodyName) => soundManager.stop(melodyName),\n\t\t\t\tplaySound: (melodyName, force) => {\n\t\t\t\t\tif (force)\n\t\t\t\t\t{\n\t\t\t\t\t\tsoundManager.forcePlayOnce(melodyName);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tsoundManager.playOnce(melodyName);\n\t\t\t\t},\n\n\t\t\t\tsetLocalConfig: () => {},\n\t\t\t\tgetLocalConfig: () => {},\n\n\t\t\t\tgetAvatar: (userId) => this.#getUserAvatar(userId),\n\t\t\t},\n\t\t\tevents: {\n\t\t\t\t[PhoneCallsController.Events.onCallCreated]: () => this.#onCallCreated(),\n\t\t\t\t[PhoneCallsController.Events.onCallConnected]: (event) => this.#onCallConnected(event),\n\t\t\t\t[PhoneCallsController.Events.onCallDestroyed]: () => this.#onCallDestroyed(),\n\t\t\t\t[PhoneCallsController.Events.onDeviceCallStarted]: () => this.#onDeviceCallStarted(),\n\t\t\t},\n\t\t});\n\t}\n\n\t#onCallCreated()\n\t{\n\t\tif (!DesktopApi.isDesktop())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tDesktopApi.stopDiskSync();\n\t}\n\n\t#onCallDestroyed()\n\t{\n\t\tif (!DesktopApi.isDesktop())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tDesktopApi.startDiskSync();\n\t}\n\n\t#onDeviceCallStarted()\n\t{\n\t\tif (!DesktopApi.isDesktop())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = DesktopApi.findWindow('callWindow') ?? window;\n\t\tDesktopApi.activateWindow(target);\n\t\t// close desktop topmost window?\n\t}\n\n\t#onCallConnected(event: BaseEvent<CallConnectedEvent>)\n\t{\n\t\tconst { isIncoming, isDeviceCall } = event.getData();\n\t\tif (!DesktopApi.isDesktop() || isIncoming || isDeviceCall)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst target = DesktopApi.findWindow('callWindow') ?? window;\n\t\tDesktopApi.activateWindow(target);\n\t}\n\n\t#getCurrentUser(): ImModelUser\n\t{\n\t\tconst userId = Core.getUserId();\n\n\t\treturn Core.getStore().getters['users/get'](userId);\n\t}\n\n\t#getUserAvatar(userId: number): string\n\t{\n\t\tconst user: ImModelUser = Core.getStore().getters['users/get'](userId, true);\n\n\t\treturn user.avatar;\n\t}\n\n\t#parseStartCallParams(jsonParams: string): StartCallParams\n\t{\n\t\tlet params = jsonParams;\n\t\ttry\n\t\t{\n\t\t\tparams = JSON.parse(params);\n\t\t}\n\t\tcatch\n\t\t{\n\t\t\tparams = {};\n\t\t}\n\n\t\treturn params;\n\t}\n\n\tasync #showCallLimitSlider()\n\t{\n\t\tconst SLIDER_EXTENSION = 'voximplant.common';\n\n\t\tawait Runtime.loadExtension(SLIDER_EXTENSION);\n\t\tBX.Voximplant.openLimitSlider();\n\t}\n}\n"],"names":["PhoneManager","getInstance","init","constructor","phoneSettings","Core","getApplicationData","Logger","warn","canCall","phoneEnabled","canPerformCallsByUser","openKeyPad","params","closeKeyPad","startCall","number","rawParams","canPerformCallsByLimits","Type","isStringFilled","phoneCall","startCallList","rawCallListId","callListId","Number","parseInt","isNaN","toggleDebugFlag","debug","getPhoneCallView","callView","Reflection","getClass","soundManager","SoundNotificationManager","PhoneCallsController","userId","getUserId","isAdmin","restApps","canInterceptCall","deviceActive","defaultLineId","availableLines","messengerFacade","isThemeDark","isDesktop","DesktopApi","hasActiveCall","CallManager","hasCurrentCall","repeatSound","melodyName","time","force","playLoop","stopRepeatSound","stop","playSound","forcePlayOnce","playOnce","setLocalConfig","getLocalConfig","getAvatar","events","Events","onCallCreated","onCallConnected","event","onCallDestroyed","onDeviceCallStarted","stopDiskSync","startDiskSync","target","findWindow","window","activateWindow","isIncoming","isDeviceCall","getData","getStore","getters","user","avatar","jsonParams","JSON","parse","SLIDER_EXTENSION","Runtime","loadExtension","BX","Voximplant","openLimitSlider"],"mappings":"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"}