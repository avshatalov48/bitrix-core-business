{"version":3,"file":"ui.uploader.bundle.js","sources":["../src/enums/file-status.js","../src/enums/file-origin.js","../src/enums/file-event.js","../src/uploader-error.js","../src/backend/abstract-upload-controller.js","../src/backend/abstract-load-controller.js","../src/backend/abstract-remove-controller.js","../src/helpers/create-unique-id.js","../src/helpers/get-extension-from-type.js","../src/helpers/create-file-from-blob.js","../src/helpers/is-data-uri.js","../src/helpers/create-blob-from-data-uri.js","../src/helpers/get-file-extension.js","../src/helpers/is-resizable-image.js","../src/helpers/format-file-size.js","../src/uploader-file.js","../src/backend/chunk.js","../src/backend/upload-controller.js","../src/backend/server-load-multiple.js","../src/backend/server-load-controller.js","../src/backend/client-load-controller.js","../src/backend/remove-multiple.js","../src/backend/remove-controller.js","../src/backend/serverless-load-controller.js","../src/backend/server.js","../src/filters/filter.js","../src/filters/file-size-filter.js","../src/helpers/is-valid-file-type.js","../src/filters/file-type-filter.js","../src/helpers/get-array-buffer.js","../src/helpers/image-size/convert-string-to-buffer.js","../src/helpers/image-size/compare-buffers.js","../src/helpers/image-size/types/gif.js","../src/helpers/image-size/types/png.js","../src/helpers/image-size/types/bmp.js","../src/helpers/image-size/types/jpeg.js","../src/helpers/image-size/types/webp.js","../src/helpers/image-size/get-image-size.js","../src/filters/image-size-filter.js","../src/helpers/create-worker.js","../src/helpers/bitmap-worker.js","../src/helpers/resize-worker.js","../src/helpers/load-image.js","../src/helpers/create-image-preview-canvas.js","../src/helpers/get-resized-image-size.js","../src/helpers/convert-canvas-to-blob.js","../src/helpers/is-supported-mime-type.js","../src/helpers/sharpen.js","../src/helpers/create-image-preview.js","../src/helpers/get-canvas-to-blob-type.js","../src/helpers/get-filename-without-extension.js","../src/helpers/rename-file-to-match-mime-type.js","../src/helpers/resize-image.js","../src/helpers/is-video.js","../src/helpers/create-video-preview.js","../src/filters/image-preview-filter.js","../src/filters/image-resize-filter.js","../src/enums/uploader-status.js","../src/enums/uploader-event.js","../src/enums/filter-type.js","../src/helpers/get-files-in-directory.js","../src/helpers/is-directory-entry.js","../src/helpers/is-file-system-item.js","../src/helpers/get-files-from-data-transfer.js","../src/helpers/can-append-file-to-form.js","../src/helpers/assign-file-to-input.js","../src/uploader.js","../src/helpers/is-image.js","../src/helpers/get-jpeg-orientation.js","../src/helpers/is-jpeg.js"],"sourcesContent":["/**\n * @namespace BX.UI.Uploader\n */\nexport type FileStatusType = {\n\tINIT: string,\n\tADDED: string,\n\tLOADING: string,\n\tPENDING: string,\n\tUPLOADING: string,\n\tCOMPLETE: string,\n\tLOAD_FAILED: string,\n\tUPLOAD_FAILED: string,\n};\n\n/**\n * @namespace BX.UI.Uploader\n */\nexport const FileStatus: FileStatusType = {\n\tINIT: 'init',\n\tADDED: 'added',\n\tLOADING: 'loading',\n\tPENDING: 'pending',\n\tUPLOADING: 'uploading',\n\tCOMPLETE: 'complete',\n\t// REMOVING: 'removing',\n\t// REMOVE_FAILED: 'remove-failed',\n\tLOAD_FAILED: 'load-failed',\n\tUPLOAD_FAILED: 'upload-failed',\n};\n","/**\n * @namespace BX.UI.Uploader\n */\nexport const FileOrigin = {\n\tCLIENT: 'client',\n\tSERVER: 'server',\n};\n","/**\n * @namespace BX.UI.Uploader\n */\nexport const FileEvent = {\n\tADD: 'onAdd',\n\tBEFORE_UPLOAD: 'onBeforeUpload',\n\tUPLOAD_START: 'onUploadStart',\n\tUPLOAD_ERROR: 'onUploadError',\n\tUPLOAD_PROGRESS: 'onUploadProgress',\n\tUPLOAD_COMPLETE: 'onUploadComplete',\n\tUPLOAD_CONTROLLER_INIT: 'onUploadControllerInit',\n\tLOAD_START: 'onLoadStart',\n\tLOAD_PROGRESS: 'onLoadProgress',\n\tLOAD_COMPLETE: 'onLoadComplete',\n\tLOAD_ERROR: 'onLoadError',\n\tLOAD_CONTROLLER_INIT: 'onLoadControllerInit',\n\tREMOVE_ERROR: 'onRemoveError',\n\tREMOVE_COMPLETE: 'onRemoveComplete',\n\tREMOVE_CONTROLLER_INIT: 'onRemoveControllerInit',\n\tSTATE_CHANGE: 'onStateChange',\n\tSTATUS_CHANGE: 'onStatusChange',\n\tVALIDATE_FILE_ASYNC: 'onValidateFileAsync',\n\tPREPARE_FILE_ASYNC: 'onPrepareFileAsync',\n};\n","import { BaseError, Type, Loc } from 'main.core';\n\n/**\n * @namespace BX.UI.Uploader\n */\nexport default class UploaderError extends BaseError\n{\n\tstatic Origin = {\n\t\tSERVER: 'server',\n\t\tCLIENT: 'client',\n\t};\n\n\tstatic Type = {\n\t\tUSER: 'user',\n\t\tSYSTEM: 'system',\n\t\tUNKNOWN: 'unknown',\n\t};\n\n\tdescription: string = '';\n\torigin: $Values<UploaderError.Origin> = UploaderError.Origin.CLIENT;\n\ttype: $Values<UploaderError.Type> = UploaderError.Type.USER;\n\n\t/**\n\t * new UploaderError(code)\n\t * new UploaderError(code, customData)\n\t * new UploaderError(code, message)\n\t * new UploaderError(code, message, description)\n\t * new UploaderError(code, message, customData)\n\t * new UploaderError(code, message, description, customData)\n\t */\n\tconstructor(code: string, ...args)\n\t{\n\t\tlet message = Type.isString(args[0]) ? args[0] : null;\n\t\tlet description = Type.isString(args[1]) ? args[1] : null;\n\t\tconst customData = Type.isPlainObject(args[args.length - 1]) ? args[args.length - 1] : {};\n\n\t\tconst replacements = {};\n\t\tObject.keys(customData).forEach((key: string): void => {\n\t\t\treplacements[`#${key}#`] = customData[key];\n\t\t});\n\n\t\tif (!Type.isString(message) && Loc.hasMessage(`UPLOADER_${code}`))\n\t\t{\n\t\t\tmessage = Loc.getMessage(`UPLOADER_${code}`, replacements);\n\t\t}\n\n\t\tif (Type.isStringFilled(message) && !Type.isString(description) && Loc.hasMessage(`UPLOADER_${code}_DESC`))\n\t\t{\n\t\t\tdescription = Loc.getMessage(`UPLOADER_${code}_DESC`, replacements);\n\t\t}\n\n\t\tsuper(message, code, customData);\n\t\tthis.setDescription(description);\n\t}\n\n\tstatic createFromAjaxErrors(errors: Array): UploaderError\n\t{\n\t\tif (!Type.isArrayFilled(errors) || !Type.isPlainObject(errors[0]))\n\t\t{\n\t\t\treturn new this('SERVER_ERROR');\n\t\t}\n\n\t\tconst uploaderError = errors.find(error => {\n\t\t\treturn error.type === 'file-uploader';\n\t\t});\n\n\t\tif (uploaderError && !uploaderError.system)\n\t\t{\n\t\t\t// Take the First Uploader User Error\n\t\t\tconst { code, message, description, customData } = uploaderError;\n\t\t\tconst error: UploaderError = new this(code, message, description, customData);\n\t\t\terror.setOrigin(UploaderError.Origin.SERVER);\n\t\t\terror.setType(UploaderError.Type.USER);\n\n\t\t\treturn error;\n\t\t}\n\n\t\tlet { code, message, description } = errors[0];\n\t\tconst { customData, system, type } = errors[0];\n\n\t\tif (code === 'NETWORK_ERROR')\n\t\t{\n\t\t\tmessage = Loc.getMessage('UPLOADER_NETWORK_ERROR');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcode = Type.isStringFilled(code) ? code : 'SERVER_ERROR';\n\t\t\tif (!Type.isStringFilled(description))\n\t\t\t{\n\t\t\t\tdescription = message;\n\t\t\t\tmessage = Loc.getMessage('UPLOADER_SERVER_ERROR');\n\t\t\t}\n\t\t}\n\n\t\tconsole.error('Uploader', errors);\n\n\t\tconst error: UploaderError = new this(code, message, description, customData);\n\t\terror.setOrigin(UploaderError.Origin.SERVER);\n\n\t\tif (type === 'file-uploader')\n\t\t{\n\t\t\terror.setType(system ? UploaderError.Type.SYSTEM : UploaderError.Type.USER);\n\t\t}\n\t\telse\n\t\t{\n\t\t\terror.setType(UploaderError.Type.UNKNOWN);\n\t\t}\n\n\t\treturn error;\n\t}\n\n\tstatic createFromError(error: Error): UploaderError\n\t{\n\t\treturn new this(error.name, error.message);\n\t}\n\n\tgetDescription(): string\n\t{\n\t\treturn this.description;\n\t}\n\n\tsetDescription(text: string): this\n\t{\n\t\tif (Type.isString(text))\n\t\t{\n\t\t\tthis.description = text;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetOrigin(): $Values<UploaderError.Origin>\n\t{\n\t\treturn this.origin;\n\t}\n\n\tsetOrigin(origin: $Values<UploaderError.Origin>): this\n\t{\n\t\tif (Object.values(UploaderError.Origin).includes(origin))\n\t\t{\n\t\t\tthis.origin = origin;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tgetType(): $Values<UploaderError.Type>\n\t{\n\t\treturn this.type;\n\t}\n\n\tsetType(type: $Values<UploaderError.Type>): this\n\t{\n\t\tif (Type.isStringFilled(type))\n\t\t{\n\t\t\tthis.type = type;\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tclone(): UploaderError\n\t{\n\t\tconst options = JSON.parse(JSON.stringify(this));\n\t\tconst error = new UploaderError(\n\t\t\toptions.code,\n\t\t\toptions.message,\n\t\t\toptions.description,\n\t\t\toptions.customData,\n\t\t);\n\n\t\terror.setOrigin(options.origin);\n\t\terror.setType(options.type);\n\n\t\treturn error;\n\t}\n\n\ttoString(): string\n\t{\n\t\treturn `Uploader Error (${this.getCode()}): ${this.getMessage()} (${this.getOrigin()})`;\n\t}\n\n\ttoJSON(): { [key: string]: any }\n\t{\n\t\treturn {\n\t\t\tcode: this.getCode(),\n\t\t\tmessage: this.getMessage(),\n\t\t\tdescription: this.getDescription(),\n\t\t\torigin: this.getOrigin(),\n\t\t\ttype: this.getType(),\n\t\t\tcustomData: this.getCustomData(),\n\t\t};\n\t}\n}\n","import { EventEmitter } from 'main.core.events';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\nimport { Type } from 'main.core';\n\nexport default class AbstractUploadController extends EventEmitter\n{\n\t#server: Server;\n\t#options: { [key: string]: any };\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.UploadController');\n\n\t\tthis.#server = server;\n\t\tthis.#options = options;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tgetOptions(): { [key: string]: any }\n\t{\n\t\treturn this.#options;\n\t}\n\n\tgetOption(option: string, defaultValue?: any): any\n\t{\n\t\tif (!Type.isUndefined(this.#options[option]))\n\t\t{\n\t\t\treturn this.#options[option];\n\t\t}\n\n\t\tif (!Type.isUndefined(defaultValue))\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tupload(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement upload() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class AbstractLoadController extends EventEmitter\n{\n\t#server: Server;\n\t#options: { [key: string]: any };\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.LoadController');\n\n\t\tthis.#server = server;\n\t\tthis.#options = options;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tgetOptions(): { [key: string]: any }\n\t{\n\t\treturn this.#options;\n\t}\n\n\tgetOption(option: string, defaultValue?: any): any\n\t{\n\t\tif (!Type.isUndefined(this.#options[option]))\n\t\t{\n\t\t\treturn this.#options[option];\n\t\t}\n\n\t\tif (!Type.isUndefined(defaultValue))\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement load() method.');\n\t}\n\n\tabort(): void\n\t{\n\t\tthrow new Error('You must implement abort() method.');\n\t}\n}\n","import { Type } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class AbstractRemoveController extends EventEmitter\n{\n\t#server: Server;\n\t#options: { [key: string]: any };\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.RemoveController');\n\n\t\tthis.#server = server;\n\t\tthis.#options = options;\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tgetOptions(): { [key: string]: any }\n\t{\n\t\treturn this.#options;\n\t}\n\n\tgetOption(option: string, defaultValue?: any): any\n\t{\n\t\tif (!Type.isUndefined(this.#options[option]))\n\t\t{\n\t\t\treturn this.#options[option];\n\t\t}\n\n\t\tif (!Type.isUndefined(defaultValue))\n\t\t{\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tremove(file: UploaderFile): void\n\t{\n\t\tthrow new Error('You must implement remove() method.');\n\t}\n}\n","/* eslint-disable @bitrix24/bitrix24-rules/no-typeof */\n\nlet crypto = window.crypto || window.msCrypto;\nif (!crypto && typeof (process) === 'object')\n{\n\t// eslint-disable-next-line no-undef\n\tcrypto = require('crypto').webcrypto;\n}\n\nconst createUniqueId = (): string => {\n\treturn (`${1e7}-${1e3}-${4e3}-${8e3}-${1e11}`).replaceAll(\n\t\t/[018]/g,\n\t\t(part: string) => (part ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (part / 4)))).toString(16),\n\t);\n};\n\nexport default createUniqueId;\n","import { Type } from 'main.core';\n\nconst getExtensionFromType = (type): string => {\n\tif (!Type.isStringFilled(type))\n\t{\n\t\treturn '';\n\t}\n\n\tconst subtype = type.split('/').pop();\n\n\tif (/javascript/.test(subtype))\n\t{\n\t\treturn 'js';\n\t}\n\n\tif (/plain/.test(subtype))\n\t{\n\t\treturn 'txt';\n\t}\n\n\tif (/svg/.test(subtype))\n\t{\n\t\treturn 'svg';\n\t}\n\n\tif (/[a-z]+/.test(subtype))\n\t{\n\t\treturn subtype;\n\t}\n\n\treturn '';\n};\n\nexport default getExtensionFromType;\n","import { Type } from 'main.core';\nimport getExtensionFromType from './get-extension-from-type';\n\nlet counter = 0;\nconst createFileFromBlob = (blob: Blob, fileName: string): File => {\n\tlet newFileName = fileName;\n\tif (!Type.isStringFilled(newFileName))\n\t{\n\t\tconst date = new Date();\n\t\tnewFileName = `File ${date.getFullYear()}-${date.getMonth()}-${date.getDate()}-${++counter}`;\n\n\t\tconst extension = getExtensionFromType(blob.type);\n\t\tif (extension)\n\t\t{\n\t\t\tnewFileName += `.${extension}`;\n\t\t}\n\t}\n\n\ttry\n\t{\n\t\treturn new File(\n\t\t\t[blob],\n\t\t\tnewFileName,\n\t\t\t{\n\t\t\t\tlastModified: Date.now(),\n\t\t\t\tlastModifiedDate: new Date(),\n\t\t\t\ttype: blob.type,\n\t\t\t},\n\t\t);\n\t}\n\tcatch\n\t{\n\t\tconst file = blob.slice(0, blob.size, blob.type);\n\t\tfile.name = newFileName;\n\t\tfile.lastModified = Date.now();\n\t\tfile.lastModifiedDate = new Date();\n\n\t\treturn file;\n\t}\n};\n\nexport default createFileFromBlob;\n","import { Type } from 'main.core';\n\nconst regexp = /^data:((?:\\w+\\/(?:(?!;).)+)?)((?:;[\\W\\w]*?[^;])*),(.+)$/;\n\nconst isDataUri = (str: string): boolean => {\n\treturn Type.isString(str) ? str.match(regexp) : false;\n};\n\nexport default isDataUri;\n","const createBlobFromDataUri = (dataURI: string): Blob => {\n\tconst byteString = atob(dataURI.split(',')[1]);\n\tconst mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n\tconst buffer = new ArrayBuffer(byteString.length);\n\tconst view = new Uint8Array(buffer);\n\n\tfor (let i = 0; i < byteString.length; i++)\n\t{\n\t\tview[i] = byteString.codePointAt(i);\n\t}\n\n\treturn new Blob([buffer], { type: mimeString });\n};\n\nexport default createBlobFromDataUri;\n","import { Type } from 'main.core';\n\nconst getFileExtension = (filename: string): string => {\n\tconst position: number = Type.isStringFilled(filename) ? filename.lastIndexOf('.') : -1;\n\n\treturn position > 0 ? filename.slice(Math.max(0, position + 1)) : '';\n};\n\nexport default getFileExtension;\n","import { Type } from 'main.core';\nimport getFileExtension from './get-file-extension';\n\nconst imageExtensions: Set<string> = new Set(['jpg', 'bmp', 'jpeg', 'jpe', 'gif', 'png', 'webp']);\n\nconst isResizableImage = (file: File | string, mimeType: string = null): boolean => {\n\tconst fileName: string = Type.isFile(file) ? file.name : file;\n\tconst type: string = Type.isFile(file) ? file.type : mimeType;\n\tconst extension: string = getFileExtension(fileName).toLowerCase();\n\n\treturn imageExtensions.has(extension) && (type === null || /^image\\/[\\d.a-z-]+$/i.test(type));\n};\n\nexport default isResizableImage;\n","import { Loc, Type } from 'main.core';\n\nconst formatFileSize = (size: number, base: number = 1024): string => {\n\tlet i = 0;\n\tconst units = getUnits();\n\tlet currentSize = size;\n\twhile (currentSize >= base && units[i + 1])\n\t{\n\t\tcurrentSize /= base;\n\t\ti++;\n\t}\n\n\treturn (Type.isInteger(currentSize) ? currentSize : currentSize.toFixed(1)) + units[i];\n};\n\nlet fileSizeUnits = null;\nconst getUnits = () => {\n\tif (fileSizeUnits !== null)\n\t{\n\t\treturn fileSizeUnits;\n\t}\n\n\tconst units = Loc.getMessage('UPLOADER_FILE_SIZE_POSTFIXES').split(/\\|/);\n\tfileSizeUnits = Type.isArrayFilled(units) ? units : ['B', 'kB', 'MB', 'GB', 'TB'];\n\n\treturn fileSizeUnits;\n};\n\nexport default formatFileSize;\n","// eslint-disable-next-line max-classes-per-file\nimport { Type } from 'main.core';\nimport { BaseEvent, EventEmitter } from 'main.core.events';\n\nimport { FileStatus } from './enums/file-status';\nimport { FileOrigin } from './enums/file-origin';\nimport { FileEvent } from './enums/file-event';\n\nimport UploaderError from './uploader-error';\nimport AbstractUploadController from './backend/abstract-upload-controller';\nimport AbstractLoadController from './backend/abstract-load-controller';\nimport AbstractRemoveController from './backend/abstract-remove-controller';\n\nimport createUniqueId from './helpers/create-unique-id';\nimport createFileFromBlob from './helpers/create-file-from-blob';\nimport isDataUri from './helpers/is-data-uri';\nimport createBlobFromDataUri from './helpers/create-blob-from-data-uri';\nimport isResizableImage from './helpers/is-resizable-image';\nimport formatFileSize from './helpers/format-file-size';\n\nimport type { UploaderFileOptions } from './types/uploader-file-options';\nimport type { UploaderFileInfo } from './types/uploader-file-info';\nimport type { RemoveFileOptions } from './types/remove-file-options';\n\nexport default class UploaderFile extends EventEmitter\n{\n\t#id: string = null;\n\t#file: File = null;\n\t#serverFileId: number | string = null;\n\n\t#name: string = null;\n\t#size: number = 0;\n\t#type: string = '';\n\t#width: ?number = null;\n\t#height: ?number = null;\n\t#treatImageAsFile: boolean = false;\n\n\t#clientPreview: ?Blob = null;\n\t#clientPreviewUrl: ?string = null;\n\t#clientPreviewWidth: ?number = null;\n\t#clientPreviewHeight: ?number = null;\n\n\t#serverPreviewUrl: ?string = null;\n\t#serverPreviewWidth: ?number = null;\n\t#serverPreviewHeight: ?number = null;\n\n\t#downloadUrl: ?string = null;\n\n\t#status: FileStatus = FileStatus.INIT;\n\t#origin: FileOrigin = FileOrigin.CLIENT;\n\t#errors: UploaderError[] = [];\n\t#progress: number = 0;\n\t#customData: Object<string, any> = Object.create(null);\n\n\t#uploadController: AbstractUploadController = null;\n\t#loadController: AbstractLoadController = null;\n\t#removeController: AbstractRemoveController = null;\n\t#forceServerLoad: boolean = false;\n\n\t#uploadCallbacks: CallbackCollection = new CallbackCollection(this);\n\n\tconstructor(source: File | Blob | string | number | UploaderFileOptions, fileOptions: UploaderFileOptions = {})\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader.File');\n\n\t\tconst options: UploaderFileOptions = Type.isPlainObject(fileOptions) ? fileOptions : {};\n\n\t\tif (Type.isFile(source))\n\t\t{\n\t\t\tthis.#file = source;\n\t\t\tthis.update(options);\n\t\t}\n\t\telse if (Type.isBlob(source))\n\t\t{\n\t\t\tthis.#file = createFileFromBlob(source, options.name || source.name);\n\t\t\tthis.update(options);\n\t\t}\n\t\telse if (isDataUri(source))\n\t\t{\n\t\t\tconst blob: Blob = createBlobFromDataUri(source);\n\t\t\tthis.#file = createFileFromBlob(blob, options.name);\n\t\t\tthis.update(options);\n\t\t}\n\t\telse if (Type.isNumber(source) || Type.isStringFilled(source))\n\t\t{\n\t\t\tthis.#origin = FileOrigin.SERVER;\n\t\t\tthis.#serverFileId = source;\n\t\t\tthis.update(options);\n\t\t}\n\t\telse if (\n\t\t\tType.isPlainObject(source)\n\t\t\t&& (Type.isNumber(source.serverFileId) || Type.isStringFilled(source.serverFileId))\n\t\t)\n\t\t{\n\t\t\tthis.#origin = FileOrigin.SERVER;\n\t\t\tthis.update(source);\n\t\t}\n\n\t\tthis.#id = Type.isStringFilled(options.id) ? options.id : createUniqueId();\n\t\tif (this.#origin === FileOrigin.SERVER)\n\t\t{\n\t\t\tthis.#forceServerLoad = options.preload === true || (Type.isPlainObject(source) && source.preload === true);\n\t\t}\n\n\t\tthis.subscribeFromOptions({\n\t\t\t[FileEvent.ADD]: (): void => {\n\t\t\t\tthis.#setStatus(FileStatus.ADDED);\n\t\t\t},\n\t\t});\n\n\t\tthis.subscribeFromOptions(options.events);\n\t}\n\n\tload(): void\n\t{\n\t\tif (!this.canLoad())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#setStatus(FileStatus.LOADING);\n\t\tthis.emit(FileEvent.LOAD_START);\n\n\t\tthis.#loadController.load(this);\n\t}\n\n\tshouldForceServerLoad(): boolean\n\t{\n\t\treturn this.#forceServerLoad;\n\t}\n\n\tupload(callbacks: { onComplete: Function, onError: Function } = {}): void\n\t{\n\t\tthis.#uploadCallbacks.subscribe(callbacks);\n\t\tif (this.isComplete() && this.isUploadable())\n\t\t{\n\t\t\tthis.#uploadCallbacks.emit('onComplete');\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.isUploadFailed())\n\t\t{\n\t\t\tthis.#uploadCallbacks.emit('onError', { error: this.getError() });\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.canUpload())\n\t\t{\n\t\t\tthis.#uploadCallbacks.emit('onError', { error: new UploaderError('FILE_UPLOAD_NOT_ALLOWED') });\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst event: BaseEvent<{ file: UploaderFile }> = new BaseEvent({ data: { file: this } });\n\t\tthis.emit(FileEvent.BEFORE_UPLOAD, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst prepareEvent: BaseEvent = new BaseEvent({ data: { file: this } });\n\t\tthis.emitAsync(FileEvent.PREPARE_FILE_ASYNC, prepareEvent)\n\t\t\t.then((): void => {\n\t\t\t\tthis.#setStatus(FileStatus.UPLOADING);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_START);\n\t\t\t\tthis.#uploadController.upload(this);\n\t\t\t})\n\t\t\t.catch((prepareError) => {\n\t\t\t\tconst error = this.addError(prepareError);\n\t\t\t\tthis.#setStatus(FileStatus.UPLOAD_FAILED);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_ERROR, { error });\n\t\t\t})\n\t\t;\n\t}\n\n\tremove(options?: RemoveFileOptions): void\n\t{\n\t\tif (this.getStatus() === FileStatus.INIT)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#setStatus(FileStatus.INIT);\n\t\tthis.emit(FileEvent.REMOVE_COMPLETE);\n\n\t\tthis.abort();\n\n\t\t// this.#setStatus(FileStatus.REMOVING);\n\t\t// this.#removeController.remove(this);\n\n\t\tconst removeFromServer: boolean = !options || options.removeFromServer !== false;\n\t\tif (removeFromServer && this.#removeController !== null && this.getOrigin() === FileOrigin.CLIENT)\n\t\t{\n\t\t\tthis.#removeController.remove(this);\n\t\t}\n\n\t\tthis.#uploadController = null;\n\t\tthis.#loadController = null;\n\t\tthis.#removeController = null;\n\t}\n\n\t// stop(): void\n\t// {\n\t// \tif (this.isUploading())\n\t// \t{\n\t// \t\tthis.abort();\n\t// \t\tthis.setStatus(FileStatus.PENDING);\n\t// \t}\n\t// }\n\t//\n\t// resume(): void\n\t// {\n\t//\n\t// }\n\t// retry(): void\n\t// {\n\t// \t// TODO\n\t// }\n\n\tabort(): void\n\t{\n\t\tif (this.isLoading())\n\t\t{\n\t\t\tthis.#setStatus(FileStatus.LOAD_FAILED);\n\n\t\t\tconst error: UploaderError = new UploaderError('FILE_LOAD_ABORTED');\n\t\t\tthis.emit(FileEvent.LOAD_ERROR, { error });\n\t\t}\n\t\telse if (this.isUploading())\n\t\t{\n\t\t\tthis.#setStatus(FileStatus.UPLOAD_FAILED);\n\n\t\t\tconst error: UploaderError = new UploaderError('FILE_UPLOAD_ABORTED');\n\t\t\tthis.emit('onUploadError', { error });\n\t\t\tthis.#uploadCallbacks.emit('onError', { error });\n\t\t}\n\n\t\tif (this.#loadController)\n\t\t{\n\t\t\tthis.#loadController.abort();\n\t\t}\n\n\t\tif (this.#uploadController)\n\t\t{\n\t\t\tthis.#uploadController.abort();\n\t\t}\n\t}\n\n\tgetUploadController(): ?AbstractUploadController\n\t{\n\t\treturn this.#uploadController;\n\t}\n\n\tsetUploadController(controller: ?AbstractUploadController): void\n\t{\n\t\tif (!(controller instanceof AbstractUploadController) && !Type.isNull(controller))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst changed = this.#uploadController !== controller;\n\t\tthis.#uploadController = controller;\n\n\t\tif (this.#uploadController && changed)\n\t\t{\n\t\t\tthis.#uploadController.subscribeOnce('onError', (event: BaseEvent): void => {\n\t\t\t\tconst error: UploaderError = this.addError(event.getData().error);\n\t\t\t\tthis.#setStatus(FileStatus.UPLOAD_FAILED);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_ERROR, { error });\n\t\t\t\tthis.#uploadCallbacks.emit('onError', { error });\n\t\t\t});\n\n\t\t\tthis.#uploadController.subscribe('onProgress', (event: BaseEvent): void => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tthis.setProgress(progress);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_PROGRESS, { progress });\n\t\t\t});\n\n\t\t\tthis.#uploadController.subscribeOnce('onUpload', (event: BaseEvent): void => {\n\t\t\t\tthis.#setStatus(FileStatus.COMPLETE);\n\t\t\t\tthis.update(event.getData().fileInfo);\n\t\t\t\tthis.emit(FileEvent.UPLOAD_COMPLETE);\n\n\t\t\t\tthis.#uploadCallbacks.emit('onComplete');\n\t\t\t});\n\t\t}\n\n\t\tif (changed)\n\t\t{\n\t\t\tthis.emit(FileEvent.UPLOAD_CONTROLLER_INIT, { controller });\n\t\t}\n\t}\n\n\tsetLoadController(controller: AbstractLoadController): void\n\t{\n\t\tif (!(controller instanceof AbstractLoadController))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst changed = this.#loadController !== controller;\n\t\tthis.#loadController = controller;\n\n\t\tif (this.#loadController && changed)\n\t\t{\n\t\t\tthis.#loadController.subscribeOnce('onError', (event: BaseEvent): void => {\n\t\t\t\tconst error: UploaderError = this.addError(event.getData().error);\n\t\t\t\tthis.#setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\tthis.emit(FileEvent.LOAD_ERROR, { error });\n\t\t\t});\n\n\t\t\tthis.#loadController.subscribe('onProgress', (event: BaseEvent): void => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tthis.emit(FileEvent.LOAD_PROGRESS, { progress });\n\t\t\t});\n\n\t\t\tthis.#loadController.subscribeOnce('onLoad', (event: BaseEvent): void => {\n\t\t\t\tif (this.getOrigin() === FileOrigin.CLIENT)\n\t\t\t\t{\n\t\t\t\t\tconst validationEvent: BaseEvent = new BaseEvent({ data: { file: this } });\n\t\t\t\t\tthis.emitAsync(FileEvent.VALIDATE_FILE_ASYNC, validationEvent)\n\t\t\t\t\t\t.then((): void => {\n\t\t\t\t\t\t\tif (this.isUploadable())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.#setStatus(FileStatus.PENDING);\n\t\t\t\t\t\t\t\tthis.emit(FileEvent.LOAD_COMPLETE);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst preparationEvent: BaseEvent = new BaseEvent({ data: { file: this } });\n\t\t\t\t\t\t\t\tthis.emitAsync(FileEvent.PREPARE_FILE_ASYNC, preparationEvent)\n\t\t\t\t\t\t\t\t\t.then((): void => {\n\t\t\t\t\t\t\t\t\t\tthis.#setStatus(FileStatus.COMPLETE);\n\t\t\t\t\t\t\t\t\t\tthis.emit(FileEvent.LOAD_COMPLETE);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch((preparationError) => {\n\t\t\t\t\t\t\t\t\t\tconst error = this.addError(preparationError);\n\t\t\t\t\t\t\t\t\t\tthis.#setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t\t\t\t\t\t\tthis.emit(FileEvent.LOAD_ERROR, { error });\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((validationError) => {\n\t\t\t\t\t\t\tconst error = this.addError(validationError);\n\t\t\t\t\t\t\tthis.#setStatus(FileStatus.LOAD_FAILED);\n\t\t\t\t\t\t\tthis.emit(FileEvent.LOAD_ERROR, { error });\n\t\t\t\t\t\t})\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.update(event.getData().fileInfo);\n\n\t\t\t\t\tif (this.isUploadable())\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#setStatus(FileStatus.PENDING);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#setStatus(FileStatus.COMPLETE);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.emit(FileEvent.LOAD_COMPLETE);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (changed)\n\t\t{\n\t\t\tthis.emit(FileEvent.LOAD_CONTROLLER_INIT, { controller });\n\t\t}\n\t}\n\n\tsetRemoveController(controller: ?AbstractRemoveController): void\n\t{\n\t\tif (!(controller instanceof AbstractRemoveController) && !Type.isNull(controller))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst changed = this.#removeController !== controller;\n\t\tthis.#removeController = controller;\n\n\t\tif (this.#removeController && changed)\n\t\t{\n\t\t\tthis.#removeController.subscribeOnce('onError', (event: BaseEvent) => {\n\t\t\t\t// const error = this.addError(event.getData().error);\n\t\t\t\t// this.emit(FileEvent.REMOVE_ERROR, { error });\n\t\t\t});\n\n\t\t\tthis.#removeController.subscribeOnce('onRemove', (event: BaseEvent) => {\n\t\t\t\t// this.#setStatus(FileStatus.INIT);\n\t\t\t\t// this.emit(FileEvent.REMOVE_COMPLETE);\n\t\t\t});\n\t\t}\n\n\t\tif (changed)\n\t\t{\n\t\t\tthis.emit(FileEvent.REMOVE_CONTROLLER_INIT, { controller });\n\t\t}\n\t}\n\n\tisReadyToUpload(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.PENDING;\n\t}\n\n\tisUploadable(): boolean\n\t{\n\t\treturn this.#uploadController !== null;\n\t}\n\n\tisLoadable(): boolean\n\t{\n\t\treturn this.#loadController !== null;\n\t}\n\n\tisRemoveable(): boolean\n\t{\n\t\treturn this.#removeController !== null;\n\t}\n\n\tcanUpload(): boolean\n\t{\n\t\treturn this.isReadyToUpload() && this.isUploadable();\n\t}\n\n\tcanLoad(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.ADDED && this.isLoadable();\n\t}\n\n\tisUploading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.UPLOADING;\n\t}\n\n\tisLoading(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOADING;\n\t}\n\n\tisComplete(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.COMPLETE;\n\t}\n\n\tisFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOAD_FAILED || this.getStatus() === FileStatus.UPLOAD_FAILED;\n\t}\n\n\tisLoadFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.LOAD_FAILED;\n\t}\n\n\tisUploadFailed(): boolean\n\t{\n\t\treturn this.getStatus() === FileStatus.UPLOAD_FAILED;\n\t}\n\n\tgetBinary(): ?File\n\t{\n\t\treturn this.#file;\n\t}\n\n\tsetFile(file: File | Blob): void\n\t{\n\t\tif (Type.isFile(file))\n\t\t{\n\t\t\tthis.#file = file;\n\t\t}\n\t\telse if (Type.isBlob(file))\n\t\t{\n\t\t\tthis.#file = createFileFromBlob(file, this.getName());\n\t\t}\n\t}\n\n\tupdate(options: UploaderFileOptions): void\n\t{\n\t\tif (Type.isPlainObject(options))\n\t\t{\n\t\t\tthis.setName(options.name);\n\t\t\tthis.setType(options.type);\n\t\t\tthis.setSize(options.size);\n\n\t\t\tthis.setServerFileId(options.serverFileId);\n\t\t\tthis.setWidth(options.width);\n\t\t\tthis.setHeight(options.height);\n\t\t\tthis.setTreatImageAsFile(options.treatImageAsFile);\n\n\t\t\tthis.setClientPreview(options.clientPreview, options.clientPreviewWidth, options.clientPreviewHeight);\n\t\t\tthis.setServerPreview(options.serverPreviewUrl, options.serverPreviewWidth, options.serverPreviewHeight);\n\n\t\t\tthis.setDownloadUrl(options.downloadUrl);\n\t\t\tthis.setCustomData(options.customData);\n\n\t\t\tthis.setLoadController(options.loadController);\n\t\t\tthis.setUploadController(options.uploadController);\n\t\t\tthis.setRemoveController(options.removeController);\n\t\t}\n\t}\n\n\tgetName(): string\n\t{\n\t\treturn this.#name === null ? (this.getBinary() ? this.getBinary().name : '') : this.#name;\n\t}\n\n\tsetName(name: string | null): void\n\t{\n\t\tif (Type.isStringFilled(name) || Type.isNull(name))\n\t\t{\n\t\t\tthis.#name = name;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'name', value: name });\n\t\t}\n\t}\n\n\tgetExtension(): string\n\t{\n\t\tconst name: string = this.getName();\n\t\tconst position: number = name.lastIndexOf('.');\n\n\t\treturn position >= 0 ? name.slice(Math.max(0, position + 1)).toLowerCase() : '';\n\t}\n\n\tgetType(): string\n\t{\n\t\treturn this.getBinary() ? this.getBinary().type : this.#type;\n\t}\n\n\tsetType(type: string): string\n\t{\n\t\tif (Type.isStringFilled(type))\n\t\t{\n\t\t\tthis.#type = type;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'type', value: type });\n\t\t}\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getBinary() ? this.getBinary().size : this.#size;\n\t}\n\n\tgetSizeFormatted(): string\n\t{\n\t\treturn formatFileSize(this.getSize());\n\t}\n\n\tsetSize(size: number): void\n\t{\n\t\tif (Type.isNumber(size) && size >= 0)\n\t\t{\n\t\t\tthis.#size = size;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'size', value: size });\n\t\t}\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.#id;\n\t}\n\n\tgetServerFileId(): number | string | null\n\t{\n\t\treturn this.#serverFileId;\n\t}\n\n\t/**\n\t * @deprecated\n\t * use getServerFileId\n\t */\n\tgetServerId(): number | string | null\n\t{\n\t\treturn this.getServerFileId();\n\t}\n\n\tsetServerFileId(id: number | string): void\n\t{\n\t\tif (Type.isNumber(id) || Type.isStringFilled(id))\n\t\t{\n\t\t\tthis.#serverFileId = id;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'serverFileId', value: id });\n\t\t}\n\t}\n\n\tgetStatus(): FileStatus\n\t{\n\t\treturn this.#status;\n\t}\n\n\t#setStatus(status: FileStatus): void\n\t{\n\t\tthis.#status = status;\n\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'status', value: status });\n\t\tthis.emit(FileEvent.STATUS_CHANGE);\n\t}\n\n\tgetOrigin(): FileOrigin\n\t{\n\t\treturn this.#origin;\n\t}\n\n\tgetDownloadUrl(): ?string\n\t{\n\t\treturn this.#downloadUrl;\n\t}\n\n\tsetDownloadUrl(url: string): void\n\t{\n\t\tif (Type.isStringFilled(url))\n\t\t{\n\t\t\tthis.#downloadUrl = url;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'downloadUrl', value: url });\n\t\t}\n\t}\n\n\tgetWidth(): ?number\n\t{\n\t\treturn this.#width;\n\t}\n\n\tsetWidth(width: number)\n\t{\n\t\tif (Type.isNumber(width))\n\t\t{\n\t\t\tthis.#width = width;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'width', value: width });\n\t\t}\n\t}\n\n\tgetHeight(): ?number\n\t{\n\t\treturn this.#height;\n\t}\n\n\tsetHeight(height: ?number)\n\t{\n\t\tif (Type.isNumber(height))\n\t\t{\n\t\t\tthis.#height = height;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'height', value: height });\n\t\t}\n\t}\n\n\tsetTreatImageAsFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#treatImageAsFile = flag;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'treatImageAsFile', value: flag });\n\t\t}\n\t}\n\n\tshouldTreatImageAsFile(): boolean\n\t{\n\t\treturn this.#treatImageAsFile;\n\t}\n\n\tgetPreviewUrl(): ?string\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewUrl() : this.getServerPreviewUrl();\n\t}\n\n\tgetPreviewWidth(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewWidth() : this.getServerPreviewWidth();\n\t}\n\n\tgetPreviewHeight(): ?number\n\t{\n\t\treturn this.getClientPreview() ? this.getClientPreviewHeight() : this.getServerPreviewHeight();\n\t}\n\n\tgetClientPreview(): ?Blob\n\t{\n\t\treturn this.#clientPreview;\n\t}\n\n\tsetClientPreview(file: ?Blob, width: number = null, height: number = null): void\n\t{\n\t\tif (Type.isBlob(file) || Type.isNull(file))\n\t\t{\n\t\t\tthis.revokeClientPreviewUrl();\n\n\t\t\tconst url = Type.isNull(file) ? null : URL.createObjectURL(file);\n\t\t\tthis.#clientPreview = file;\n\t\t\tthis.#clientPreviewUrl = url;\n\t\t\tthis.#clientPreviewWidth = width;\n\t\t\tthis.#clientPreviewHeight = height;\n\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'clientPreviewUrl', value: url });\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'clientPreviewWidth', value: width });\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'clientPreviewHeight', value: height });\n\t\t}\n\t}\n\n\tgetClientPreviewUrl(): ?string\n\t{\n\t\treturn this.#clientPreviewUrl;\n\t}\n\n\trevokeClientPreviewUrl(): void\n\t{\n\t\tif (this.#clientPreviewUrl !== null)\n\t\t{\n\t\t\tURL.revokeObjectURL(this.#clientPreviewUrl);\n\n\t\t\tthis.#clientPreviewUrl = null;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'clientPreviewUrl', value: null });\n\t\t}\n\t}\n\n\tgetClientPreviewWidth(): ?number\n\t{\n\t\treturn this.#clientPreviewWidth;\n\t}\n\n\tgetClientPreviewHeight(): ?number\n\t{\n\t\treturn this.#clientPreviewHeight;\n\t}\n\n\tgetServerPreviewUrl(): ?string\n\t{\n\t\treturn this.#serverPreviewUrl;\n\t}\n\n\tsetServerPreview(url: ?string, width: number = null, height: number = null): ?string\n\t{\n\t\tif (Type.isStringFilled(url) || Type.isNull(url))\n\t\t{\n\t\t\tthis.#serverPreviewUrl = url;\n\t\t\tthis.#serverPreviewWidth = width;\n\t\t\tthis.#serverPreviewHeight = height;\n\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'serverPreviewUrl', value: url });\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'serverPreviewWidth', value: width });\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'serverPreviewHeight', value: height });\n\t\t}\n\t}\n\n\tgetServerPreviewWidth(): ?number\n\t{\n\t\treturn this.#serverPreviewWidth;\n\t}\n\n\tgetServerPreviewHeight(): ?number\n\t{\n\t\treturn this.#serverPreviewHeight;\n\t}\n\n\tisImage(): boolean\n\t{\n\t\tif (this.shouldTreatImageAsFile())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// return isResizableImage(this.getName(), this.getType());\n\t\treturn this.getWidth() > 0 && this.getHeight() > 0 && isResizableImage(this.getName(), this.getType());\n\t}\n\n\tgetProgress(): number\n\t{\n\t\treturn this.#progress;\n\t}\n\n\tsetProgress(progress: ?number): void\n\t{\n\t\tif (Type.isNumber(progress))\n\t\t{\n\t\t\tthis.#progress = progress;\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'progress', value: progress });\n\t\t}\n\t}\n\n\taddError(error: Error | UploaderError): UploaderError\n\t{\n\t\tconst uploaderError: UploaderError = error instanceof Error ? UploaderError.createFromError(error) : error;\n\n\t\tthis.#errors.push(uploaderError);\n\t\tthis.emit(FileEvent.STATE_CHANGE);\n\n\t\treturn uploaderError;\n\t}\n\n\tgetError(): ?UploaderError\n\t{\n\t\treturn this.#errors[0] || null;\n\t}\n\n\tgetErrors(): UploaderError[]\n\t{\n\t\treturn this.#errors;\n\t}\n\n\tgetState(): UploaderFileInfo\n\t{\n\t\treturn JSON.parse(JSON.stringify(this));\n\t}\n\n\tsetCustomData(property: ?string | { [key: string]: any }, value?: any): void\n\t{\n\t\tif (Type.isNull(property))\n\t\t{\n\t\t\tthis.#customData = Object.create(null);\n\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'customData', value: null });\n\t\t}\n\t\telse if (Type.isPlainObject(property))\n\t\t{\n\t\t\tObject.entries(property).forEach((item) => {\n\t\t\t\tconst [currentKey, currentValue] = item;\n\t\t\t\tthis.setCustomData(currentKey, currentValue);\n\t\t\t});\n\t\t}\n\t\telse if (Type.isString(property))\n\t\t{\n\t\t\tif (Type.isNull(value))\n\t\t\t{\n\t\t\t\tdelete this.#customData[property];\n\t\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'customData', customProperty: property, value: null });\n\t\t\t}\n\t\t\telse if (!Type.isUndefined(value))\n\t\t\t{\n\t\t\t\tthis.#customData[property] = value;\n\t\t\t\tthis.emit(FileEvent.STATE_CHANGE, { property: 'customData', customProperty: property, value });\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCustomData(property?: string): any\n\t{\n\t\tif (Type.isUndefined(property))\n\t\t{\n\t\t\treturn this.#customData;\n\t\t}\n\n\t\tif (Type.isStringFilled(property))\n\t\t{\n\t\t\treturn this.#customData[property];\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\ttoJSON(): UploaderFileInfo\n\t{\n\t\treturn {\n\t\t\tid: this.getId(),\n\t\t\tserverFileId: this.getServerFileId(),\n\t\t\tserverId: this.getServerFileId(), // compatibility\n\t\t\tstatus: this.getStatus(),\n\t\t\tname: this.getName(),\n\t\t\tsize: this.getSize(),\n\t\t\tsizeFormatted: this.getSizeFormatted(),\n\t\t\ttype: this.getType(),\n\t\t\textension: this.getExtension(),\n\t\t\torigin: this.getOrigin(),\n\t\t\tisImage: this.isImage(),\n\t\t\tfailed: this.isFailed(),\n\t\t\twidth: this.getWidth(),\n\t\t\theight: this.getHeight(),\n\t\t\tprogress: this.getProgress(),\n\t\t\terror: this.getError(),\n\t\t\terrors: this.getErrors(),\n\t\t\tpreviewUrl: this.getPreviewUrl(),\n\t\t\tpreviewWidth: this.getPreviewWidth(),\n\t\t\tpreviewHeight: this.getPreviewHeight(),\n\t\t\tclientPreviewUrl: this.getClientPreviewUrl(),\n\t\t\tclientPreviewWidth: this.getClientPreviewWidth(),\n\t\t\tclientPreviewHeight: this.getClientPreviewHeight(),\n\t\t\tserverPreviewUrl: this.getServerPreviewUrl(),\n\t\t\tserverPreviewWidth: this.getServerPreviewWidth(),\n\t\t\tserverPreviewHeight: this.getServerPreviewHeight(),\n\t\t\tdownloadUrl: this.getDownloadUrl(),\n\t\t\tcustomData: this.getCustomData(),\n\t\t};\n\t}\n}\n\nclass CallbackCollection\n{\n\t#emitter: EventEmitter = null;\n\tconstructor(file: UploaderFile)\n\t{\n\t\tthis.#emitter = new EventEmitter(file, 'BX.UI.Uploader.File.UploadCallbacks');\n\t}\n\n\tsubscribe(callbacks: { onComplete: Function, onError: Function } = {}): void\n\t{\n\t\tconst handlers = Type.isPlainObject(callbacks) ? callbacks : {};\n\t\tif (Type.isFunction(handlers.onComplete))\n\t\t{\n\t\t\tthis.getEmitter().subscribeOnce('onComplete', handlers.onComplete);\n\t\t}\n\n\t\tif (Type.isFunction(handlers.onError))\n\t\t{\n\t\t\tthis.getEmitter().subscribeOnce('onError', handlers.onError);\n\t\t}\n\t}\n\n\temit(eventName: string, event: BaseEvent | {[key: string]: any}): void\n\t{\n\t\tif (this.#emitter)\n\t\t{\n\t\t\tthis.#emitter.emit(eventName, event);\n\t\t\tthis.#emitter.unsubscribeAll();\n\t\t}\n\t}\n\n\tgetEmitter(): EventEmitter\n\t{\n\t\tif (Type.isNull(this.#emitter))\n\t\t{\n\t\t\tthis.#emitter = new EventEmitter(this, 'BX.UI.Uploader.File.UploadCallbacks');\n\t\t}\n\n\t\treturn this.#emitter;\n\t}\n}\n","import { Type } from 'main.core';\n\nexport default class Chunk\n{\n\t#data: Blob = null;\n\t#offset: number = 0;\n\t#retries: number[] = [];\n\n\tconstructor(data, offset)\n\t{\n\t\tthis.#data = data;\n\t\tthis.#offset = offset;\n\t}\n\n\tgetNextRetryDelay(): ?number\n\t{\n\t\tif (this.#retries.length === 0)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.#retries.shift();\n\t}\n\n\tsetRetries(retries: number[]): void\n\t{\n\t\tif (Type.isArray(retries))\n\t\t{\n\t\t\tthis.#retries = retries;\n\t\t}\n\t}\n\n\tgetData(): Blob\n\t{\n\t\treturn this.#data;\n\t}\n\n\tgetOffset(): number\n\t{\n\t\treturn this.#offset;\n\t}\n\n\tgetSize(): number\n\t{\n\t\treturn this.getData().size;\n\t}\n}\n","import { ajax as Ajax, Type, type AjaxResponse, type JsonObject } from 'main.core';\n\nimport Server from './server';\nimport Chunk from './chunk';\nimport AbstractUploadController from './abstract-upload-controller';\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\n\nexport default class UploadController extends AbstractUploadController\n{\n\t#file: UploaderFile = null;\n\t#chunkOffset: ?number = null;\n\t#chunkTimeout: ?number = null;\n\t#token: string = null;\n\t#xhr: XMLHttpRequest = null;\n\t#aborted: boolean = false;\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper(server, options);\n\t}\n\n\tupload(file: UploaderFile): void\n\t{\n\t\tif (!Type.isFile(file.getBinary()))\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#chunkOffset !== null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#file = file;\n\n\t\tconst nextChunk: ?Chunk = this.#getNextChunk();\n\t\tif (nextChunk)\n\t\t{\n\t\t\tthis.#uploadChunk(nextChunk);\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.#xhr)\n\t\t{\n\t\t\tthis.#aborted = true;\n\t\t\tthis.#xhr.abort();\n\t\t\tthis.#xhr = null;\n\t\t}\n\n\t\tclearTimeout(this.#chunkTimeout);\n\t}\n\n\t#uploadChunk(chunk: Chunk): void\n\t{\n\t\tconst totalSize: number = this.getFile().getSize();\n\t\tconst isOnlyOneChunk: boolean = chunk.getOffset() === 0 && totalSize === chunk.getSize();\n\n\t\tlet fileName: string = this.getFile().getName();\n\t\tif (fileName.normalize)\n\t\t{\n\t\t\tfileName = fileName.normalize();\n\t\t}\n\n\t\tconst type: string = Type.isStringFilled(this.getFile().getType())\n\t\t\t? this.getFile().getType()\n\t\t\t: 'application/octet-stream'\n\t\t;\n\n\t\tconst headers = [\n\t\t\t{ name: 'Content-Type', value: type },\n\t\t\t{ name: 'X-Upload-Content-Name', value: encodeURIComponent(fileName) },\n\t\t];\n\n\t\tif (!isOnlyOneChunk)\n\t\t{\n\t\t\tconst rangeStart: number = chunk.getOffset();\n\t\t\tconst rangeEnd: number = chunk.getOffset() + chunk.getSize() - 1;\n\t\t\tconst rangeHeader = `bytes ${rangeStart}-${rangeEnd}/${totalSize}`;\n\n\t\t\theaders.push({ name: 'Content-Range', value: rangeHeader });\n\t\t}\n\n\t\tconst controllerOptions = this.getServer().getControllerOptions();\n\t\tAjax.runAction('ui.fileuploader.upload', {\n\t\t\theaders,\n\t\t\tdata: chunk.getData(),\n\t\t\tpreparePost: false,\n\t\t\tgetParameters: {\n\t\t\t\tcontroller: this.getServer().getController(),\n\t\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t\t\ttoken: this.getToken() || '',\n\t\t\t},\n\t\t\tonrequeststart: (xhr): void => {\n\t\t\t\tthis.#xhr = xhr;\n\t\t\t\tthis.#aborted = false;\n\t\t\t},\n\t\t\tonprogressupload: (event: ProgressEvent): void => {\n\t\t\t\tif (event.lengthComputable)\n\t\t\t\t{\n\t\t\t\t\tconst size: number = this.getFile().getSize();\n\t\t\t\t\tconst uploadedBytes: number = Math.min(size, chunk.getOffset() + event.loaded);\n\t\t\t\t\tconst progress: number = size > 0 ? Math.floor(uploadedBytes / size * 100) : 100;\n\t\t\t\t\tthis.emit('onProgress', { progress });\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.token)\n\t\t\t\t{\n\t\t\t\t\tthis.setToken(response.data.token);\n\n\t\t\t\t\tif (this.getFile().getServerFileId() === null)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Now we can remove a temp file on the backend\n\t\t\t\t\t\tthis.getFile().setServerFileId(response.data.token);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst size: number = this.getFile().getSize();\n\t\t\t\t\tconst progress: number = size > 0 ? Math.floor((chunk.getOffset() + chunk.getSize()) / size * 100) : 100;\n\t\t\t\t\tthis.emit('onProgress', { progress });\n\n\t\t\t\t\tconst nextChunk: ?Chunk = this.#getNextChunk();\n\t\t\t\t\tif (nextChunk)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.#uploadChunk(nextChunk);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\t\t\t\tthis.emit('onUpload', { fileInfo: response.data.file });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error: new UploaderError('SERVER_ERROR') });\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((response: AjaxResponse<JsonObject>) => {\n\t\t\t\tif (this.#aborted)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst error: UploaderError = UploaderError.createFromAjaxErrors(response.errors);\n\t\t\t\tconst shouldRetry: boolean = (\n\t\t\t\t\terror.getCode() === 'NETWORK_ERROR'\n\t\t\t\t\t|| error.getType() === UploaderError.Type.UNKNOWN\n\t\t\t\t);\n\n\t\t\t\tif (!shouldRetry || !this.#retryUploadChunk(chunk))\n\t\t\t\t{\n\t\t\t\t\tthis.emit('onError', { error });\n\t\t\t\t}\n\t\t\t})\n\t\t;\n\t}\n\n\t#retryUploadChunk(chunk: Chunk): boolean\n\t{\n\t\tconst nextDelay: ?number = chunk.getNextRetryDelay();\n\t\tif (nextDelay === null)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tclearTimeout(this.#chunkTimeout);\n\n\t\tthis.#chunkTimeout = setTimeout((): void => {\n\t\t\tthis.#uploadChunk(chunk);\n\t\t}, nextDelay);\n\n\t\treturn true;\n\t}\n\n\t#getNextChunk(): ?Chunk\n\t{\n\t\tif (this.getChunkOffset() !== null && this.getChunkOffset() >= this.getFile().getSize())\n\t\t{\n\t\t\t// End of File\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.getChunkOffset() === null)\n\t\t{\n\t\t\t// First call\n\t\t\tthis.#chunkOffset = 0;\n\t\t}\n\n\t\tlet chunk: Chunk = null;\n\t\tif (this.getChunkOffset() === 0 && this.getFile().getSize() <= this.getChunkSize())\n\t\t{\n\t\t\tchunk = new Chunk(this.getFile().getBinary(), this.getChunkOffset());\n\t\t\tthis.#chunkOffset = this.getFile().getSize();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst currentChunkSize: number = Math.min(this.getChunkSize(), this.getFile().getSize() - this.getChunkOffset());\n\t\t\tconst nextOffset: number = this.getChunkOffset() + currentChunkSize;\n\t\t\tconst fileRange: Blob = this.getFile().getBinary().slice(this.getChunkOffset(), nextOffset);\n\n\t\t\tchunk = new Chunk(fileRange, this.getChunkOffset());\n\t\t\tthis.#chunkOffset = nextOffset;\n\t\t}\n\n\t\tchunk.setRetries([...this.getServer().getChunkRetryDelays()]);\n\n\t\treturn chunk;\n\t}\n\n\tgetFile(): UploaderFile\n\t{\n\t\treturn this.#file;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.getServer().getChunkSize();\n\t}\n\n\tgetChunkOffset(): number\n\t{\n\t\treturn this.#chunkOffset;\n\t}\n\n\tgetToken(): ?string\n\t{\n\t\treturn this.#token;\n\t}\n\n\tsetToken(token: string): void\n\t{\n\t\tif (Type.isStringFilled(token))\n\t\t{\n\t\t\tthis.#token = token;\n\t\t}\n\t}\n}\n","import { ajax as Ajax, Runtime } from 'main.core';\n\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Server from './server';\nimport type ServerLoadController from './server-load-controller';\n\ntype QueueTask = {\n\tcontroller: ServerLoadController,\n\tfile: UploaderFile,\n}\n\ntype Queue = {\n\ttasks: QueueTask[],\n\tload: Function,\n\txhr: XMLHttpRequest,\n\taborted: boolean,\n};\n\nconst pendingQueues: WeakMap<Server, Queue> = new WeakMap();\nconst loadingFiles: WeakMap<UploaderFile, Queue> = new WeakMap();\n\nexport function loadMultiple(controller: ServerLoadController, file: UploaderFile): void\n{\n\tconst server: Server = controller.getServer();\n\tconst timeout = controller.getOption('timeout', 100);\n\n\tlet queue = pendingQueues.get(server);\n\tif (!queue)\n\t{\n\t\tqueue = {\n\t\t\ttasks: [],\n\t\t\tload: Runtime.debounce(loadInternal, timeout, server),\n\t\t\txhr: null,\n\t\t\taborted: false,\n\t\t};\n\n\t\tpendingQueues.set(server, queue);\n\t}\n\n\tqueue.tasks.push({ controller, file });\n\tqueue.load();\n}\n\nexport function abort(controller: ServerLoadController, file: UploaderFile): void\n{\n\tconst server: Server = controller.getServer();\n\tconst queue: Queue = pendingQueues.get(server);\n\tif (queue)\n\t{\n\t\tqueue.tasks = queue.tasks.filter((task: QueueTask): boolean => {\n\t\t\treturn task.file !== file;\n\t\t});\n\n\t\tif (queue.tasks.length === 0)\n\t\t{\n\t\t\tpendingQueues.delete(server);\n\t\t}\n\t}\n\telse\n\t{\n\t\tconst queue: Queue = loadingFiles.get(file);\n\t\tif (queue)\n\t\t{\n\t\t\tqueue.tasks = queue.tasks.filter((task: QueueTask): boolean => {\n\t\t\t\treturn task.file !== file;\n\t\t\t});\n\n\t\t\tloadingFiles.delete(file);\n\n\t\t\tif (queue.tasks.length === 0)\n\t\t\t{\n\t\t\t\tqueue.aborted = true;\n\t\t\t\tqueue.xhr.abort();\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction loadInternal(): void\n{\n\t// eslint-disable-next-line no-invalid-this,unicorn/no-this-assignment\n\tconst server: Server = this;\n\tconst queue: Queue = pendingQueues.get(server);\n\tif (!queue)\n\t{\n\t\treturn;\n\t}\n\n\tpendingQueues.delete(server);\n\n\tif (queue.tasks.length === 0)\n\t{\n\t\treturn;\n\t}\n\n\tconst fileIds = [];\n\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\tconst file: UploaderFile = task.file;\n\t\tfileIds.push(file.getServerFileId());\n\t\tloadingFiles.set(file, queue);\n\t});\n\n\tconst controllerOptions = server.getControllerOptions();\n\tAjax.runAction('ui.fileuploader.load', {\n\t\tdata: {\n\t\t\tfileIds,\n\t\t},\n\t\tgetParameters: {\n\t\t\tcontroller: server.getController(),\n\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t},\n\t\tonrequeststart: (xhr): void => {\n\t\t\tqueue.xhr = xhr;\n\t\t},\n\t\tonprogress: (event: ProgressEvent): void => {\n\t\t\tif (event.lengthComputable)\n\t\t\t{\n\t\t\t\tconst progress: number = event.total > 0 ? Math.floor(event.loaded / event.total * 100) : 100;\n\n\t\t\t\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\t\t\t\tconst { controller } = task;\n\t\t\t\t\tcontroller.emit('onProgress', { progress });\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t})\n\t\t.then((response) => {\n\t\t\tif (response.data?.files)\n\t\t\t{\n\t\t\t\tconst fileResults = {};\n\t\t\t\tresponse.data.files.forEach((fileResult): void => {\n\t\t\t\t\tfileResults[fileResult.id] = fileResult;\n\t\t\t\t});\n\n\t\t\t\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\t\t\t\tconst { controller, file } = task;\n\t\t\t\t\tconst fileResult = fileResults[file.getServerFileId()] || null;\n\n\t\t\t\t\tloadingFiles.delete(file);\n\n\t\t\t\t\tif (fileResult && fileResult.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tcontroller.emit('onProgress', { progress: 100 });\n\t\t\t\t\t\tcontroller.emit('onLoad', { fileInfo: fileResult.data.file });\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst error: UploaderError = UploaderError.createFromAjaxErrors(fileResult?.errors);\n\t\t\t\t\t\tcontroller.emit('onError', { error });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst error: UploaderError = new UploaderError('SERVER_ERROR');\n\t\t\t\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\t\t\t\tconst { controller, file } = task;\n\n\t\t\t\t\tloadingFiles.delete(file);\n\t\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t\t});\n\t\t\t}\n\t\t})\n\t\t.catch((response) => {\n\t\t\tconst error: ?UploaderError = queue.aborted ? null : UploaderError.createFromAjaxErrors(response.errors);\n\t\t\tqueue.tasks.forEach((task: QueueTask): void => {\n\t\t\t\tconst { controller, file } = task;\n\n\t\t\t\tloadingFiles.delete(file);\n\n\t\t\t\tif (!queue.aborted)\n\t\t\t\t{\n\t\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t;\n}\n","import AbstractLoadController from './abstract-load-controller';\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\nimport { loadMultiple, abort } from './server-load-multiple';\n\nexport default class ServerLoadController extends AbstractLoadController\n{\n\t#file: UploaderFile = null;\n\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper(server, options);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (this.getServer().getController())\n\t\t{\n\t\t\tthis.#file = file;\n\t\t\tloadMultiple(this, file);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: null });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\tif (this.getServer().getController() && this.#file)\n\t\t{\n\t\t\tabort(this, this.#file);\n\t\t}\n\t}\n}\n","import AbstractLoadController from './abstract-load-controller';\nimport Server from './server';\nimport UploaderFile from '../uploader-file';\nimport { Type } from 'main.core';\nimport UploaderError from '../uploader-error';\n\nexport default class ClientLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper(server, options);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (Type.isFile(file.getBinary()))\n\t\t{\n\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\t// silent abort\n\t}\n}\n","import { ajax as Ajax, Runtime } from 'main.core';\n\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Server from './server';\nimport type RemoveController from './remove-controller';\nimport type ServerLoadController from './server-load-controller';\n\ntype Queue = {\n\ttasks: Array<{ controller: ServerLoadController, file: UploaderFile }>,\n\tremove: Function,\n\txhr: XMLHttpRequest,\n}\n\nconst queues: WeakMap<Server, Queue> = new WeakMap();\n\nexport function removeMultiple(controller: RemoveController, file: UploaderFile)\n{\n\tconst server = controller.getServer();\n\tlet queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\tqueue = {\n\t\t\ttasks: [],\n\t\t\tremove: Runtime.debounce(removeInternal, 1000, server),\n\t\t\txhr: null,\n\t\t};\n\n\t\tqueues.set(server, queue);\n\t}\n\n\tqueue.tasks.push({ controller, file });\n\tqueue.remove();\n}\n\nfunction removeInternal()\n{\n\t// eslint-disable-next-line no-invalid-this,unicorn/no-this-assignment\n\tconst server: Server = this;\n\tconst queue = queues.get(server);\n\tif (!queue)\n\t{\n\t\treturn;\n\t}\n\n\tconst { tasks } = queue;\n\tqueues.delete(server);\n\n\tconst fileIds = [];\n\ttasks.forEach((task) => {\n\t\tconst file: UploaderFile = task.file;\n\t\tif (file.getServerFileId() !== null)\n\t\t{\n\t\t\tfileIds.push(file.getServerFileId());\n\t\t}\n\t});\n\n\tif (fileIds.length === 0)\n\t{\n\t\treturn;\n\t}\n\n\tconst controllerOptions = server.getControllerOptions();\n\tAjax.runAction('ui.fileuploader.remove', {\n\t\tdata: {\n\t\t\tfileIds,\n\t\t},\n\t\tgetParameters: {\n\t\t\tcontroller: server.getController(),\n\t\t\tcontrollerOptions: controllerOptions ? JSON.stringify(controllerOptions) : null,\n\t\t},\n\t\tonrequeststart: (xhr) => {\n\t\t\tqueue.xhr = xhr;\n\t\t},\n\t}).then((response) => {\n\t\tif (response.data?.files)\n\t\t{\n\t\t\tconst fileResults = {};\n\t\t\tresponse.data.files.forEach((fileResult) => {\n\t\t\t\tfileResults[fileResult.id] = fileResult;\n\t\t\t});\n\n\t\t\ttasks.forEach((task) => {\n\t\t\t\tconst { controller, file } = task;\n\t\t\t\tconst fileResult = fileResults[file.getServerFileId()] || null;\n\n\t\t\t\tif (fileResult && fileResult.success)\n\t\t\t\t{\n\t\t\t\t\tcontroller.emit('onRemove', { fileId: fileResult.id });\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tconst error = UploaderError.createFromAjaxErrors(fileResult?.errors);\n\t\t\t\t\tcontroller.emit('onError', { error });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst error = new UploaderError('SERVER_ERROR');\n\t\t\ttasks.forEach((task) => {\n\t\t\t\tconst { controller } = task;\n\t\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t\t});\n\t\t}\n\t}).catch((response) => {\n\t\tconst error = UploaderError.createFromAjaxErrors(response.errors);\n\t\ttasks.forEach((task) => {\n\t\t\tconst { controller } = task;\n\t\t\tcontroller.emit('onError', { error: error.clone() });\n\t\t});\n\t});\n}\n","import AbstractRemoveController from './abstract-remove-controller';\nimport { removeMultiple } from './remove-multiple';\n\nimport type UploaderFile from '../uploader-file';\n\nexport default class RemoveController extends AbstractRemoveController\n{\n\tremove(file: UploaderFile): void\n\t{\n\t\tremoveMultiple(this, file);\n\t}\n}\n","import { Type } from 'main.core';\n\nimport AbstractLoadController from './abstract-load-controller';\nimport UploaderError from '../uploader-error';\n\nimport type Server from './server';\nimport type UploaderFile from '../uploader-file';\n\nexport default class ServerlessLoadController extends AbstractLoadController\n{\n\tconstructor(server: Server, options: { [key: string]: any } = {})\n\t{\n\t\tsuper(server, options);\n\t}\n\n\tload(file: UploaderFile): void\n\t{\n\t\tif (Type.isStringFilled(file.getName()))\n\t\t{\n\t\t\tthis.emit('onProgress', { progress: 100 });\n\t\t\tthis.emit('onLoad', { fileInfo: file });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.emit('onError', { error: new UploaderError('WRONG_FILE_SOURCE') });\n\t\t}\n\t}\n\n\tabort(): void\n\t{\n\t\t// silent abort\n\t}\n}\n","import { Extension, Runtime, Type } from 'main.core';\nimport UploadController from './upload-controller';\nimport AbstractUploadController from './abstract-upload-controller';\nimport ServerLoadController from './server-load-controller';\nimport AbstractLoadController from './abstract-load-controller';\nimport ClientLoadController from './client-load-controller';\nimport AbstractRemoveController from './abstract-remove-controller';\nimport RemoveController from './remove-controller';\nimport ServerlessLoadController from './serverless-load-controller';\n\nimport type { ServerOptions } from '../types/server-options';\n\nexport default class Server\n{\n\t#controller: ?string = null;\n\t#controllerOptions: ?{ [key: string]: any } = null;\n\t#uploadControllerClass: Class<AbstractUploadController> = null;\n\t#uploadControllerOptions: ?{ [key: string]: any } = {};\n\t#loadControllerClass: Class<AbstractLoadController> = null;\n\t#loadControllerOptions: ?{ [key: string]: any } = {};\n\t#removeControllerClass: Class<AbstractRemoveController> = null;\n\t#removeControllerOptions: ?{ [key: string]: any } = {};\n\t#chunkSize: number = null;\n\t#defaultChunkSize: number = null;\n\t#chunkMinSize: number = null;\n\t#chunkMaxSize: number = null;\n\t#chunkRetryDelays: number[] = [1000, 3000, 6000];\n\n\tconstructor(serverOptions: ServerOptions)\n\t{\n\t\tconst options: ServerOptions = Type.isPlainObject(serverOptions) ? serverOptions : {};\n\n\t\tthis.#controller = Type.isStringFilled(options.controller) ? options.controller : null;\n\t\tthis.#controllerOptions = Type.isPlainObject(options.controllerOptions) ? options.controllerOptions : null;\n\n\t\tconst chunkSize: number = (\n\t\t\tType.isNumber(options.chunkSize) && options.chunkSize > 0\n\t\t\t\t? options.chunkSize\n\t\t\t\t: this.getDefaultChunkSize()\n\t\t);\n\n\t\tthis.#chunkSize = options.forceChunkSize === true ? chunkSize : this.#calcChunkSize(chunkSize);\n\n\t\tif (options.chunkRetryDelays === false || options.chunkRetryDelays === null)\n\t\t{\n\t\t\tthis.#chunkRetryDelays = [];\n\t\t}\n\t\telse if (Type.isArray(options.chunkRetryDelays))\n\t\t{\n\t\t\tthis.#chunkRetryDelays = options.chunkRetryDelays;\n\t\t}\n\n\t\tconst controllerClasses: string[] = ['uploadControllerClass', 'loadControllerClass', 'removeControllerClass'];\n\t\tcontrollerClasses.forEach((controllerClass: string): void => {\n\t\t\tlet fn = null;\n\t\t\tif (Type.isStringFilled(options[controllerClass]))\n\t\t\t{\n\t\t\t\tfn = Runtime.getClass(options[controllerClass]);\n\t\t\t\tif (!Type.isFunction(fn))\n\t\t\t\t{\n\t\t\t\t\tthrow new TypeError(`Uploader.Server: \"${controllerClass}\" must be a function.`);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Type.isFunction(options[controllerClass]))\n\t\t\t{\n\t\t\t\tfn = options[controllerClass];\n\t\t\t}\n\n\t\t\tswitch (controllerClass)\n\t\t\t{\n\t\t\t\tcase 'uploadControllerClass':\n\t\t\t\t\tthis.#uploadControllerClass = fn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'loadControllerClass':\n\t\t\t\t\tthis.#loadControllerClass = fn;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'removeControllerClass':\n\t\t\t\t\tthis.#removeControllerClass = fn;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// No default\n\t\t\t}\n\t\t});\n\n\t\tthis.#loadControllerOptions = (\n\t\t\tType.isPlainObject(options.loadControllerOptions) ? options.loadControllerOptions : {}\n\t\t);\n\n\t\tthis.#uploadControllerOptions = (\n\t\t\tType.isPlainObject(options.uploadControllerOptions) ? options.uploadControllerOptions : {}\n\t\t);\n\n\t\tthis.#removeControllerOptions = (\n\t\t\tType.isPlainObject(options.removeControllerOptions) ? options.removeControllerOptions : {}\n\t\t);\n\t}\n\n\tcreateUploadController(): ?UploadController\n\t{\n\t\tif (this.#uploadControllerClass)\n\t\t{\n\t\t\tconst controller: AbstractUploadController = new this.#uploadControllerClass(this, this.#uploadControllerOptions);\n\t\t\tif (!(controller instanceof AbstractUploadController))\n\t\t\t{\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t'Uploader.Server: \"uploadControllerClass\" must be an instance of AbstractUploadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\n\t\tif (Type.isStringFilled(this.#controller))\n\t\t{\n\t\t\treturn new UploadController(this, this.#uploadControllerOptions);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tcreateServerLoadController(): AbstractLoadController\n\t{\n\t\tif (this.#loadControllerClass)\n\t\t{\n\t\t\tconst controller: AbstractLoadController = new this.#loadControllerClass(this, this.#loadControllerOptions);\n\t\t\tif (!(controller instanceof AbstractLoadController))\n\t\t\t{\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t'Uploader.Server: \"loadControllerClass\" must be an instance of AbstractLoadController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\n\t\treturn this.createDefaultServerLoadController();\n\t}\n\n\tcreateDefaultServerLoadController(): ServerLoadController\n\t{\n\t\treturn new ServerLoadController(this, this.#loadControllerOptions);\n\t}\n\n\tcreateClientLoadController(): ClientLoadController\n\t{\n\t\treturn new ClientLoadController(this, this.#loadControllerOptions);\n\t}\n\n\tcreateServerlessLoadController(): ServerlessLoadController\n\t{\n\t\treturn new ServerlessLoadController(this, this.#loadControllerOptions);\n\t}\n\n\tcreateRemoveController(): ?AbstractRemoveController\n\t{\n\t\tif (this.#removeControllerClass)\n\t\t{\n\t\t\tconst controller: AbstractRemoveController = new this.#removeControllerClass(this, this.#removeControllerOptions);\n\t\t\tif (!(controller instanceof AbstractRemoveController))\n\t\t\t{\n\t\t\t\tthrow new TypeError(\n\t\t\t\t\t'Uploader.Server: \"removeControllerClass\" must be an instance of AbstractRemoveController.',\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn controller;\n\t\t}\n\n\t\tif (Type.isStringFilled(this.#controller))\n\t\t{\n\t\t\treturn new RemoveController(this, this.#removeControllerOptions);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tgetController(): ?string\n\t{\n\t\treturn this.#controller;\n\t}\n\n\tgetControllerOptions(): ?{ [key: string]: any }\n\t{\n\t\treturn this.#controllerOptions;\n\t}\n\n\tgetChunkSize(): number\n\t{\n\t\treturn this.#chunkSize;\n\t}\n\n\tgetDefaultChunkSize(): number\n\t{\n\t\tif (this.#defaultChunkSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#defaultChunkSize = settings.get('defaultChunkSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.#defaultChunkSize;\n\t}\n\n\tgetChunkMinSize(): number\n\t{\n\t\tif (this.#chunkMinSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#chunkMinSize = settings.get('chunkMinSize', 1024 * 1024);\n\t\t}\n\n\t\treturn this.#chunkMinSize;\n\t}\n\n\tgetChunkMaxSize(): number\n\t{\n\t\tif (this.#chunkMaxSize === null)\n\t\t{\n\t\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\t\tthis.#chunkMaxSize = settings.get('chunkMaxSize', 5 * 1024 * 1024);\n\t\t}\n\n\t\treturn this.#chunkMaxSize;\n\t}\n\n\tgetChunkRetryDelays(): number[]\n\t{\n\t\treturn this.#chunkRetryDelays;\n\t}\n\n\t#calcChunkSize(chunkSize: number): number\n\t{\n\t\treturn Math.min(Math.max(this.getChunkMinSize(), chunkSize), this.getChunkMaxSize());\n\t}\n}\n","import type Uploader from '../uploader';\n\nexport default class Filter\n{\n\t#uploader: Uploader = null;\n\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tthis.#uploader = uploader;\n\t}\n\n\tgetUploader(): Uploader\n\t{\n\t\treturn this.#uploader;\n\t}\n\n\t/**\n\t * @abstract\n\t */\n\tapply(...args): Promise\n\t{\n\t\tthrow new Error('You must implement apply() method.');\n\t}\n}\n","import { Extension, Type } from 'main.core';\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport formatFileSize from '../helpers/format-file-size';\nimport isResizableImage from '../helpers/is-resizable-image';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\nimport type { UploaderOptions } from '../types/uploader-options';\n\nexport default class FileSizeFilter extends Filter\n{\n\t#maxFileSize: ?number = 256 * 1024 * 1024;\n\t#minFileSize: number = 0;\n\t#maxTotalFileSize: ?number = null;\n\t#imageMaxFileSize: ?number = 48 * 1024 * 1024;\n\t#imageMinFileSize: number = 0;\n\t#treatOversizeImageAsFile: boolean = false;\n\n\tconstructor(uploader: Uploader, filterOptions: UploaderOptions = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\tthis.#maxFileSize = settings.get('maxFileSize', this.#maxFileSize);\n\t\tthis.#minFileSize = settings.get('minFileSize', this.#minFileSize);\n\t\tthis.#maxTotalFileSize = settings.get('maxTotalFileSize', this.#maxTotalFileSize);\n\t\tthis.#imageMaxFileSize = settings.get('imageMaxFileSize', this.#imageMaxFileSize);\n\t\tthis.#imageMinFileSize = settings.get('imageMinFileSize', this.#imageMinFileSize);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\t\tthis.setMaxFileSize(options.maxFileSize);\n\t\tthis.setMinFileSize(options.minFileSize);\n\t\tthis.setMaxTotalFileSize(options.maxTotalFileSize);\n\t\tthis.setImageMaxFileSize(options.imageMaxFileSize);\n\t\tthis.setImageMinFileSize(options.imageMinFileSize);\n\t\tthis.setTreatOversizeImageAsFile(options.treatOversizeImageAsFile);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject): void => {\n\t\t\tif (this.getMaxFileSize() !== null && file.getSize() > this.getMaxFileSize())\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxFileSize: formatFileSize(this.getMaxFileSize()),\n\t\t\t\t\t\t\tmaxFileSizeInBytes: this.getMaxFileSize(),\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (file.getSize() < this.getMinFileSize())\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tminFileSize: formatFileSize(this.getMinFileSize()),\n\t\t\t\t\t\t\tminFileSizeInBytes: this.getMinFileSize(),\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isResizableImage(file.getName(), file.getType()))\n\t\t\t{\n\t\t\t\tif (this.getImageMaxFileSize() !== null && file.getSize() > this.getImageMaxFileSize())\n\t\t\t\t{\n\t\t\t\t\tif (this.shouldTreatOversizeImageAsFile())\n\t\t\t\t\t{\n\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treject(\n\t\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t\t'IMAGE_MAX_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\timageMaxFileSize: formatFileSize(this.getImageMaxFileSize()),\n\t\t\t\t\t\t\t\t\timageMaxFileSizeInBytes: this.getImageMaxFileSize(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (file.getSize() < this.getImageMinFileSize())\n\t\t\t\t{\n\t\t\t\t\tif (this.shouldTreatOversizeImageAsFile())\n\t\t\t\t\t{\n\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treject(\n\t\t\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t\t\t'IMAGE_MIN_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\timageMinFileSize: formatFileSize(this.getImageMinFileSize()),\n\t\t\t\t\t\t\t\t\timageMinFileSizeInBytes: this.getImageMinFileSize(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.getMaxTotalFileSize() !== null && this.getUploader().getTotalSize() > this.getMaxTotalFileSize())\n\t\t\t{\n\t\t\t\treject(\n\t\t\t\t\tnew UploaderError(\n\t\t\t\t\t\t'MAX_TOTAL_FILE_SIZE_EXCEEDED',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxTotalFileSize: formatFileSize(this.getMaxTotalFileSize()),\n\t\t\t\t\t\t\tmaxTotalFileSizeInBytes: this.getMaxTotalFileSize(),\n\t\t\t\t\t\t},\n\t\t\t\t\t),\n\t\t\t\t);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tgetMaxFileSize(): ?number\n\t{\n\t\treturn this.#maxFileSize;\n\t}\n\n\tsetMaxFileSize(value: ?number)\n\t{\n\t\tif ((Type.isNumber(value) && value >= 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#maxFileSize = value;\n\t\t}\n\t}\n\n\tgetMinFileSize(): number\n\t{\n\t\treturn this.#minFileSize;\n\t}\n\n\tsetMinFileSize(value: number)\n\t{\n\t\tif (Type.isNumber(value) && value >= 0)\n\t\t{\n\t\t\tthis.#minFileSize = value;\n\t\t}\n\t}\n\n\tgetMaxTotalFileSize(): ?number\n\t{\n\t\treturn this.#maxTotalFileSize;\n\t}\n\n\tsetMaxTotalFileSize(value: ?number)\n\t{\n\t\tif ((Type.isNumber(value) && value >= 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#maxTotalFileSize = value;\n\t\t}\n\t}\n\n\tgetImageMaxFileSize(): ?number\n\t{\n\t\treturn this.#imageMaxFileSize;\n\t}\n\n\tsetImageMaxFileSize(value: ?number)\n\t{\n\t\tif ((Type.isNumber(value) && value >= 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#imageMaxFileSize = value;\n\t\t}\n\t}\n\n\tgetImageMinFileSize(): number\n\t{\n\t\treturn this.#imageMinFileSize;\n\t}\n\n\tsetImageMinFileSize(value: number)\n\t{\n\t\tif (Type.isNumber(value) && value >= 0)\n\t\t{\n\t\t\tthis.#imageMinFileSize = value;\n\t\t}\n\t}\n\n\tsetTreatOversizeImageAsFile(value: boolean): void\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.#treatOversizeImageAsFile = value;\n\t\t}\n\t}\n\n\tshouldTreatOversizeImageAsFile(): boolean\n\t{\n\t\treturn this.#treatOversizeImageAsFile;\n\t}\n}\n","import { Type } from 'main.core';\n\nconst isValidFileType = (file: File, fileTypes: string[]): boolean => {\n\tif (!Type.isArrayFilled(fileTypes))\n\t{\n\t\treturn true;\n\t}\n\n\tconst mimeType = file.type;\n\tconst baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n\tfor (const fileType of fileTypes)\n\t{\n\t\tif (!Type.isStringFilled(fileType))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst type = fileType.trim().toLowerCase();\n\n\t\tif (type.charAt(0) === '.') // extension case\n\t\t{\n\t\t\tif (file.name.toLowerCase().includes(type, file.name.length - type.length))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (/\\/\\*$/.test(type)) // image/* mime type case\n\t\t{\n\t\t\tif (baseMimeType === type.replace(/\\/.*$/, ''))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (mimeType === type)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n};\n\nexport default isValidFileType;\n","import Filter from './filter';\nimport isValidFileType from '../helpers/is-valid-file-type';\nimport UploaderError from '../uploader-error';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\n\nexport default class FileTypeFilter extends Filter\n{\n\tconstructor(uploader: Uploader, filterOptions: { [key: string]: any } = {})\n\t{\n\t\tsuper(uploader);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject): void => {\n\t\t\tif (isValidFileType(file.getBinary(), this.getUploader().getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treject(new UploaderError('FILE_TYPE_NOT_ALLOWED'));\n\t\t\t}\n\t\t});\n\t}\n}\n","const getArrayBuffer = (file: File | Blob): Promise<ArrayBuffer> => {\n\tif (file.arrayBuffer)\n\t{\n\t\treturn file.arrayBuffer();\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.readAsArrayBuffer(file);\n\n\t\tfileReader.onload = () => {\n\t\t\tconst buffer: ArrayBuffer = fileReader.result;\n\n\t\t\tresolve(buffer);\n\t\t};\n\n\t\tfileReader.onerror = () => {\n\t\t\treject(fileReader.error);\n\t\t};\n\t});\n};\n\nexport default getArrayBuffer;\n","const convertStringToBuffer = (str: string): ArrayLike => {\n\tconst result = [];\n\tfor (let i = 0; i < str.length; i++)\n\t{\n\t\tresult.push(str.codePointAt(i) & 0xFF);\n\t}\n\n\treturn result;\n};\nexport default convertStringToBuffer;\n","const compareBuffers = (dataView: DataView, dest: ArrayLike, start: number): boolean => {\n\tfor (let i = start, j = 0; j < dest.length;)\n\t{\n\t\tif (dataView.getUint8(i++) !== dest[j++])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n};\n\nexport default compareBuffers;\n","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst GIF87a = convertStringToBuffer('GIF87a');\nconst GIF89a = convertStringToBuffer('GIF89a');\n\nexport default class Gif\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 10)\n\t\t\t{\n\t\t\t\treject(new Error('GIF signature not found.'));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 10);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\n\t\t\t\t\tif (!compareBuffers(view, GIF87a, 0) && !compareBuffers(view, GIF89a, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new Error('GIF signature not found.'));\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint16(6, true),\n\t\t\t\t\t\theight: view.getUint16(8, true),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\nimport type { ImageSize } from '../image-size-type';\n\nconst PNG_SIGNATURE = convertStringToBuffer('\\x89PNG\\r\\n\\x1A\\n');\nconst IHDR_SIGNATURE = convertStringToBuffer('IHDR');\nconst FRIED_CHUNK_NAME = convertStringToBuffer('CgBI');\n\nexport default class Png\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 40)\n\t\t\t{\n\t\t\t\treject(new Error('PNG signature not found.'));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 40);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (!compareBuffers(view, PNG_SIGNATURE, 0))\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new Error('PNG signature not found.'));\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (compareBuffers(view, FRIED_CHUNK_NAME, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (compareBuffers(view, IHDR_SIGNATURE, 28))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\twidth: view.getUint32(32),\n\t\t\t\t\t\t\t\theight: view.getUint32(36),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new Error('PNG IHDR not found.'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (compareBuffers(view, IHDR_SIGNATURE, 12))\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: view.getUint32(16),\n\t\t\t\t\t\t\theight: view.getUint32(20),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new Error('PNG IHDR not found.'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\treturn reject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst BMP_SIGNATURE = 0x424D; // BM\n\nexport default class Bmp\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 26)\n\t\t\t{\n\t\t\t\treject(new Error('BMP signature not found.'));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 26);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer): void => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (!view.getUint16(0) === BMP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new Error('BMP signature not found.'));\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve({\n\t\t\t\t\t\twidth: view.getUint32(18, true),\n\t\t\t\t\t\theight: Math.abs(view.getInt32(22, true)),\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error): void => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import getArrayBuffer from '../../get-array-buffer';\nimport convertStringToBuffer from '../convert-string-to-buffer';\nimport compareBuffers from '../compare-buffers';\n\nimport type { ImageSize } from '../image-size-type';\n\nconst EXIF_SIGNATURE = convertStringToBuffer('Exif\\0\\0');\n\nexport default class Jpeg\n{\n\tgetSize(file: File): ?ImageSize\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 2)\n\t\t\t{\n\t\t\t\treject(new Error('JPEG signature not found.'));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgetArrayBuffer(file)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint8(0) !== 0xFF || view.getUint8(1) !== 0xD8)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new Error('JPEG signature not found.'));\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet offset = 2;\n\t\t\t\t\tlet orientation = -1;\n\t\t\t\t\tfor (;;)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new Error('JPEG signature not found.'));\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (view.getUint8(offset++) !== 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new Error('JPEG signature not found.'));\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet code = view.getUint8(offset++);\n\t\t\t\t\t\tlet length = 0;\n\n\t\t\t\t\t\t// skip padding bytes\n\t\t\t\t\t\twhile (code === 0xFF)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcode = view.getUint8(offset++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((code >= 0xD0 && code <= 0xD9) || code === 0x01)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlength = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (code >= 0xC0 && code <= 0xFE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// the rest of the unreserved markers\n\t\t\t\t\t\t\tif (view.byteLength - offset < 2)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treject(new Error('JPEG signature not found.'));\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlength = view.getUint16(offset) - 2;\n\t\t\t\t\t\t\toffset += 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new Error('JPEG unknown markers.'));\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (code === 0xD9 /* EOI */ || code === 0xDA /* SOS */)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new Error('JPEG end of the data stream.'));\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// try to get orientation from Exif segment\n\t\t\t\t\t\tif (code === 0xE1 && length >= 10 && compareBuffers(view, EXIF_SIGNATURE, offset))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst exifBlock = new DataView(view.buffer, offset + 6, offset + length);\n\t\t\t\t\t\t\torientation = getOrientation(exifBlock);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlength >= 5\n\t\t\t\t\t\t\t&& (code >= 0xC0 && code <= 0xCF)\n\t\t\t\t\t\t\t&& code !== 0xC4 && code !== 0xC8 && code !== 0xCC\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (view.byteLength - offset < length)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treject(new Error('JPEG size not found.'));\n\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet width = view.getUint16(offset + 3);\n\t\t\t\t\t\t\tlet height = view.getUint16(offset + 1);\n\t\t\t\t\t\t\tif (orientation >= 5 && orientation <= 8)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[width, height] = [height, width];\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\twidth,\n\t\t\t\t\t\t\t\theight,\n\t\t\t\t\t\t\t\torientation,\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toffset += length;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n\nconst Marker = {\n\tBIG_ENDIAN: 0x4D4D,\n\tLITTLE_ENDIAN: 0x4949,\n};\n\nconst getOrientation = (exifBlock: DataView): number => {\n\tconst byteAlign = exifBlock.getUint16(0);\n\tconst isBigEndian = byteAlign === Marker.BIG_ENDIAN;\n\tconst isLittleEndian = byteAlign === Marker.LITTLE_ENDIAN;\n\n\tif (isBigEndian || isLittleEndian)\n\t{\n\t\treturn extractOrientation(exifBlock, isLittleEndian);\n\t}\n\n\treturn -1;\n};\n\nconst extractOrientation = (exifBlock: DataView, littleEndian: boolean = false): number => {\n\tconst offset = 8; // idf offset\n\tconst idfDirectoryEntries = exifBlock.getUint16(offset, littleEndian);\n\n\tconst IDF_ENTRY_BYTES = 12;\n\tconst NUM_DIRECTORY_ENTRIES_BYTES = 2;\n\n\tfor (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++)\n\t{\n\t\tconst start = offset + NUM_DIRECTORY_ENTRIES_BYTES + (directoryEntryNumber * IDF_ENTRY_BYTES);\n\t\tconst end = start + IDF_ENTRY_BYTES;\n\n\t\t// Skip on corrupt EXIF blocks\n\t\tif (start > exifBlock.byteLength)\n\t\t{\n\t\t\treturn -1;\n\t\t}\n\n\t\tconst block = new DataView(exifBlock.buffer, exifBlock.byteOffset + start, end - start);\n\t\tconst tagNumber = block.getUint16(0, littleEndian);\n\n\t\t// 274 is the `orientation` tag ID\n\t\tif (tagNumber === 274)\n\t\t{\n\t\t\tconst dataFormat = block.getUint16(2, littleEndian);\n\t\t\tif (dataFormat !== 3)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\tconst numberOfComponents = block.getUint32(4, littleEndian);\n\t\t\tif (numberOfComponents !== 1)\n\t\t\t{\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\treturn block.getUint16(8, littleEndian);\n\t\t}\n\t}\n\n\treturn -1;\n};\n","import getArrayBuffer from '../../get-array-buffer';\nimport type { ImageSize } from '../image-size-type';\n\nconst RIFF_HEADER = 0x52494646; // RIFF\nconst WEBP_SIGNATURE = 0x57454250; // WEBP\nconst VP8_SIGNATURE = 0x56503820; // VP8\nconst VP8L_SIGNATURE = 0x5650384C; // VP8L\nconst VP8X_SIGNATURE = 0x56503858; // VP8X\n\nexport default class Webp\n{\n\tgetSize(file: File): Promise<?ImageSize>\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (file.size < 16)\n\t\t\t{\n\t\t\t\treject(new Error('WEBP signature not found.'));\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst blob = file.slice(0, 30);\n\t\t\tgetArrayBuffer(blob)\n\t\t\t\t.then((buffer: ArrayBuffer) => {\n\t\t\t\t\tconst view = new DataView(buffer);\n\t\t\t\t\tif (view.getUint32(0) !== RIFF_HEADER && view.getUint32(8) !== WEBP_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\treject(new Error('WEBP signature not found.'));\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst headerType = view.getUint32(12);\n\t\t\t\t\tconst headerView = new DataView(buffer, 20, 10);\n\t\t\t\t\tif (headerType === VP8_SIGNATURE && headerView.getUint8(0) !== 0x2F)\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: headerView.getUint16(6, true) & 0x3FFF,\n\t\t\t\t\t\t\theight: headerView.getUint16(8, true) & 0x3FFF,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (headerType === VP8L_SIGNATURE && headerView.getUint8(0) === 0x2F)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst bits = headerView.getUint32(1, true);\n\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\twidth: (bits & 0x3FFF) + 1,\n\t\t\t\t\t\t\theight: ((bits >> 14) & 0x3FFF) + 1,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (headerType === VP8X_SIGNATURE)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst extendedHeader = headerView.getUint8(0);\n\t\t\t\t\t\tconst validStart = (extendedHeader & 0xC0) === 0;\n\t\t\t\t\t\tconst validEnd = (extendedHeader & 0x01) === 0;\n\t\t\t\t\t\tif (validStart && validEnd)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst width = 1 + (\n\t\t\t\t\t\t\t\t(headerView.getUint8(6) << 16)\n\t\t\t\t\t\t\t\t| (headerView.getUint8(5) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(4)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tconst height = 1 + (\n\t\t\t\t\t\t\t\t(Math.trunc(headerView.getUint8(9)))\n\t\t\t\t\t\t\t\t| (headerView.getUint8(8) << 8)\n\t\t\t\t\t\t\t\t| headerView.getUint8(7)\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tresolve({ width, height });\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treject(new Error('WEBP signature not found.'));\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n}\n","import Gif from './types/gif';\nimport Png from './types/png';\nimport Bmp from './types/bmp';\nimport Jpeg from './types/jpeg';\nimport Webp from './types/webp';\n\nimport getFileExtension from '../get-file-extension';\nimport type { ImageSize } from './image-size-type';\n\nconst jpg = new Jpeg();\nconst typeHandlers = {\n\tgif: new Gif(),\n\tpng: new Png(),\n\tbmp: new Bmp(),\n\tjpg,\n\tjpeg: jpg,\n\tjpe: jpg,\n\twebp: new Webp(),\n};\n\nconst getImageSize = (file: File): Promise<ImageSize> => {\n\tif (file.size === 0)\n\t{\n\t\treturn Promise.reject(new Error('Unknown image type.'));\n\t}\n\n\tconst extension = getFileExtension(file.name).toLowerCase();\n\tconst type = file.type.replace(/^image\\//, '');\n\tconst typeHandler = typeHandlers[extension] || typeHandlers[type];\n\tif (!typeHandler)\n\t{\n\t\treturn Promise.reject(new Error('Unknown image type.'));\n\t}\n\n\treturn typeHandler.getSize(file);\n};\n\nexport default getImageSize;\n","import { Extension, Type } from 'main.core';\n\nimport Filter from './filter';\nimport UploaderError from '../uploader-error';\nimport getImageSize from '../helpers/image-size/get-image-size';\nimport isResizableImage from '../helpers/is-resizable-image';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\nimport type { UploaderOptions } from '../types/uploader-options';\n\nexport default class ImageSizeFilter extends Filter\n{\n\t#imageMinWidth: number = 1;\n\t#imageMinHeight: number = 1;\n\t#imageMaxWidth: number = 7000;\n\t#imageMaxHeight: number = 7000;\n\t#ignoreUnknownImageTypes: boolean = false;\n\t#treatOversizeImageAsFile: boolean = false;\n\n\tconstructor(uploader: Uploader, filterOptions: UploaderOptions = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst settings = Extension.getSettings('ui.uploader.core');\n\t\tthis.#imageMinWidth = settings.get('imageMinWidth', this.#imageMinWidth);\n\t\tthis.#imageMinHeight = settings.get('imageMinHeight', this.#imageMinHeight);\n\t\tthis.#imageMaxWidth = settings.get('imageMaxWidth', this.#imageMaxWidth);\n\t\tthis.#imageMaxHeight = settings.get('imageMaxHeight', this.#imageMaxHeight);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\tthis.setImageMinWidth(options.imageMinWidth);\n\t\tthis.setImageMinHeight(options.imageMinHeight);\n\t\tthis.setImageMaxWidth(options.imageMaxWidth);\n\t\tthis.setImageMaxHeight(options.imageMaxHeight);\n\t\tthis.setIgnoreUnknownImageTypes(options.ignoreUnknownImageTypes);\n\t\tthis.setTreatOversizeImageAsFile(options.treatOversizeImageAsFile);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve, reject): void => {\n\t\t\tif (!isResizableImage(file.getName(), file.getType()))\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgetImageSize(file.getBinary())\n\t\t\t\t.then(({ width, height }): void => {\n\t\t\t\t\tfile.setWidth(width);\n\t\t\t\t\tfile.setHeight(height);\n\n\t\t\t\t\tif (width < this.getImageMinWidth() || height < this.getImageMinHeight())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.shouldTreatOversizeImageAsFile())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t\t'IMAGE_IS_TOO_SMALL',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tminWidth: this.getImageMinWidth(),\n\t\t\t\t\t\t\t\t\tminHeight: this.getImageMinHeight(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (width > this.getImageMaxWidth() || height > this.getImageMaxHeight())\n\t\t\t\t\t{\n\t\t\t\t\t\tif (this.shouldTreatOversizeImageAsFile())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treject(new UploaderError(\n\t\t\t\t\t\t\t\t'IMAGE_IS_TOO_BIG',\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmaxWidth: this.getImageMaxWidth(),\n\t\t\t\t\t\t\t\t\tmaxHeight: this.getImageMaxHeight(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error): void => {\n\t\t\t\t\tif (this.getIgnoreUnknownImageTypes())\n\t\t\t\t\t{\n\t\t\t\t\t\tfile.setTreatImageAsFile(true);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\t\t\tconsole.warn('Uploader ImageSizeFilter:', error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treject(new UploaderError('IMAGE_TYPE_NOT_SUPPORTED'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tgetImageMinWidth(): number\n\t{\n\t\treturn this.#imageMinWidth;\n\t}\n\n\tsetImageMinWidth(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imageMinWidth = value;\n\t\t}\n\t}\n\n\tgetImageMinHeight(): number\n\t{\n\t\treturn this.#imageMinHeight;\n\t}\n\n\tsetImageMinHeight(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imageMinHeight = value;\n\t\t}\n\t}\n\n\tgetImageMaxWidth(): number\n\t{\n\t\treturn this.#imageMaxWidth;\n\t}\n\n\tsetImageMaxWidth(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imageMaxWidth = value;\n\t\t}\n\t}\n\n\tgetImageMaxHeight(): number\n\t{\n\t\treturn this.#imageMaxHeight;\n\t}\n\n\tsetImageMaxHeight(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imageMaxHeight = value;\n\t\t}\n\t}\n\n\tgetIgnoreUnknownImageTypes(): boolean\n\t{\n\t\treturn this.#ignoreUnknownImageTypes;\n\t}\n\n\tsetIgnoreUnknownImageTypes(value: boolean): void\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.#ignoreUnknownImageTypes = value;\n\t\t}\n\t}\n\n\tsetTreatOversizeImageAsFile(value: boolean): void\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.#treatOversizeImageAsFile = value;\n\t\t}\n\t}\n\n\tshouldTreatOversizeImageAsFile(): boolean\n\t{\n\t\treturn this.#treatOversizeImageAsFile;\n\t}\n}\n","import createUniqueId from './create-unique-id';\n\nconst createWorker = (fn: Function) => {\n\tconst workerBlob = new Blob(['(', fn.toString(), ')()'], { type: 'application/javascript' });\n\tconst workerURL = URL.createObjectURL(workerBlob);\n\tconst worker = new Worker(workerURL);\n\n\treturn {\n\t\tpost: (message, callback, transfer): void => {\n\t\t\tconst id = createUniqueId();\n\t\t\tworker.onmessage = event => {\n\t\t\t\tif (event.data.id === id)\n\t\t\t\t{\n\t\t\t\t\tcallback(event.data.message);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tworker.postMessage({ id, message }, transfer);\n\t\t},\n\t\tterminate: (): void => {\n\t\t\tworker.terminate();\n\t\t\tURL.revokeObjectURL(workerURL);\n\t\t},\n\t};\n};\n\nexport default createWorker;\n","const BitmapWorker = function() {\n\tself.onmessage = (event: MessageEvent) => {\n\t\t// Hack for Safari. Workers can become unpredictable.\n\t\t// Sometimes 'self.postMessage' doesn't emit 'onmessage' event.\n\t\tsetTimeout(() => {\n\t\t\tcreateImageBitmap(event.data.message.file)\n\t\t\t\t.then((bitmap: ImageBitmap) => {\n\t\t\t\t\tself.postMessage({ id: event?.data?.id, message: bitmap }, [bitmap]);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tself.postMessage({ id: event.data.id, message: null }, []);\n\t\t\t\t})\n\t\t\t;\n\t\t}, 0);\n\t};\n};\n\nexport default BitmapWorker;\n","/* eslint-disable no-new-func */\n\nconst ResizeWorker = (): void => {\n\tself.onmessage = (event: MessageEvent): void => {\n\t\t// Hack for Safari. Workers can become unpredictable.\n\t\t// Sometimes 'self.postMessage' doesn't emit 'onmessage' event.\n\t\tsetTimeout((): void => {\n\t\t\tconst {\n\t\t\t\tfile,\n\t\t\t\toptions = {},\n\t\t\t\tgetResizedImageSizeSource,\n\t\t\t\tcreateImagePreviewCanvasSource,\n\t\t\t\tsharpenSource,\n\t\t\t\tshouldSharpenSource,\n\t\t\t\t/* type, */\n\t\t\t} = event.data.message;\n\n\t\t\tcreateImageBitmap(file)\n\t\t\t\t.then((bitmap: ImageBitmap) => {\n\t\t\t\t\tconst getResizedImageSize = new Function(`return ${getResizedImageSizeSource}`)();\n\t\t\t\t\tconst { targetWidth, targetHeight, useOriginalSize } = getResizedImageSize(bitmap, options);\n\n\t\t\t\t\tif (useOriginalSize)\n\t\t\t\t\t{\n\t\t\t\t\t\tbitmap.close();\n\n\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\tid: event?.data?.id,\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\tuseOriginalSize,\n\t\t\t\t\t\t\t\ttargetWidth,\n\t\t\t\t\t\t\t\ttargetHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}, []);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tconst createImagePreviewCanvas = new Function(`return ${createImagePreviewCanvasSource}`)();\n\t\t\t\t\t\tlet offscreenCanvas: OffscreenCanvas = createImagePreviewCanvas(bitmap, targetWidth, targetHeight);\n\n\t\t\t\t\t\tconst sharpen = new Function(`return ${sharpenSource}`)();\n\t\t\t\t\t\tconst shouldSharpen = new Function(`return ${shouldSharpenSource}`)();\n\t\t\t\t\t\tif (shouldSharpen(bitmap, targetWidth, targetHeight))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsharpen(offscreenCanvas, targetWidth, targetHeight, 0.2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbitmap.close();\n\n\t\t\t\t\t\tconst previewBitmap = offscreenCanvas.transferToImageBitmap();\n\n\t\t\t\t\t\toffscreenCanvas.width = 0;\n\t\t\t\t\t\toffscreenCanvas.height = 0;\n\t\t\t\t\t\toffscreenCanvas = null;\n\n\t\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\t\tid: event?.data?.id,\n\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\tbitmap: previewBitmap,\n\t\t\t\t\t\t\t\tuseOriginalSize,\n\t\t\t\t\t\t\t\ttargetWidth,\n\t\t\t\t\t\t\t\ttargetHeight,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}, [previewBitmap]);\n\n\t\t\t\t\t\t// const { quality = 0.92 } = options;\n\t\t\t\t\t\t// offscreenCanvas.convertToBlob({ quality, type })\n\t\t\t\t\t\t// \t.then((blob: Blob): void => {\n\t\t\t\t\t\t// \t\tself.postMessage({\n\t\t\t\t\t\t// \t\t\tid: event?.data?.id,\n\t\t\t\t\t\t// \t\t\tmessage: {\n\t\t\t\t\t\t// \t\t\t\tblob,\n\t\t\t\t\t\t// \t\t\t\tuseOriginalSize,\n\t\t\t\t\t\t// \t\t\t\ttargetWidth,\n\t\t\t\t\t\t// \t\t\t\ttargetHeight,\n\t\t\t\t\t\t// \t\t\t},\n\t\t\t\t\t\t// \t\t}, []);\n\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t// \t.catch((error): void => {\n\t\t\t\t\t\t// \t\tconsole.log('Resize Worker Error (convertToBlob)', error);\n\t\t\t\t\t\t// \t\tself.postMessage({\n\t\t\t\t\t\t// \t\t\tid: event.data.id,\n\t\t\t\t\t\t// \t\t\tmessage: null,\n\t\t\t\t\t\t// \t\t}, []);\n\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t// ;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error): void => {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.log('Uploader: Resize Worker Error (createImageBitmap)', error);\n\t\t\t\t\tself.postMessage({\n\t\t\t\t\t\tid: event.data.id,\n\t\t\t\t\t\tmessage: null,\n\t\t\t\t\t}, []);\n\t\t\t\t})\n\t\t\t;\n\t\t}, 0);\n\t};\n};\n\nexport default ResizeWorker;\n","const loadImage = (file: File | Blob) => new Promise((resolve, reject) => {\n\tconst image: HTMLImageElement = document.createElement('img');\n\tconst url = URL.createObjectURL(file);\n\timage.src = url;\n\n\timage.onerror = (error) => {\n\t\tURL.revokeObjectURL(image.src);\n\t\treject(error);\n\t};\n\n\timage.onload = () => {\n\t\tURL.revokeObjectURL(url);\n\t\tresolve({\n\t\t\twidth: image.naturalWidth,\n\t\t\theight: image.naturalHeight,\n\t\t\timage,\n\t\t});\n\t};\n});\n\nexport default loadImage;\n","/* eslint-disable @bitrix24/bitrix24-rules/no-typeof */\n\n// Warning!\n// This function uses in a resize workers.\n// You cannot import anything from other files and extensions.\nconst createImagePreviewCanvas = (\n\timageSource: CanvasImageSource,\n\tnewWidth: number,\n\tnewHeight: number,\n): HTMLCanvasElement | OffscreenCanvas => {\n\tlet width: number = Math.round(newWidth);\n\tlet height: number = Math.round(newHeight);\n\n\tconst isPageContext: boolean = (\n\t\ttypeof (window) !== 'undefined'\n\t\t&& typeof (document) !== 'undefined'\n\t\t&& typeof (parent) !== 'undefined'\n\t);\n\n\tconst createCanvas = (canvasWidth: number, canvasHeight: number): HTMLCanvasElement | OffscreenCanvas => {\n\t\tif (isPageContext)\n\t\t{\n\t\t\tconst canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\t\tcanvas.width = canvasWidth;\n\t\t\tcanvas.height = canvasHeight;\n\n\t\t\treturn canvas;\n\t\t}\n\n\t\treturn new OffscreenCanvas(canvasWidth, canvasHeight);\n\t};\n\n\tif (imageSource.height <= height && imageSource.width <= width)\n\t{\n\t\tconst canvas: HTMLCanvasElement = createCanvas(width, height);\n\t\tconst context: CanvasRenderingContext2D = canvas.getContext('2d');\n\t\tcontext.imageSmoothingQuality = 'high';\n\t\tcontext.drawImage(imageSource, 0, 0, width, height);\n\n\t\treturn canvas;\n\t}\n\n\tif (imageSource.height > imageSource.width)\n\t{\n\t\twidth = Math.floor(height * (imageSource.width / imageSource.height));\n\t}\n\telse\n\t{\n\t\theight = Math.floor(width * (imageSource.height / imageSource.width));\n\t}\n\n\tlet currentImageWidth: number = Math.floor(imageSource.width);\n\tlet currentImageHeight: number = Math.floor(imageSource.height);\n\tlet currentImageSource: CanvasImageSource = imageSource;\n\tlet resizingCanvas: HTMLCanvasElement = null;\n\n\twhile (currentImageWidth * 0.5 > width)\n\t{\n\t\tconst halfImageWidth: number = Math.floor(currentImageWidth * 0.5);\n\t\tconst halfImageHeight: number = Math.floor(currentImageHeight * 0.5);\n\n\t\tresizingCanvas = createCanvas(halfImageWidth, halfImageHeight);\n\t\tconst resizingCanvasContext: CanvasRenderingContext2D = resizingCanvas.getContext('2d');\n\t\tresizingCanvasContext.imageSmoothingQuality = 'high';\n\n\t\tresizingCanvasContext.drawImage(\n\t\t\tcurrentImageSource,\n\t\t\t0,\n\t\t\t0,\n\t\t\tcurrentImageWidth,\n\t\t\tcurrentImageHeight,\n\t\t\t0,\n\t\t\t0,\n\t\t\thalfImageWidth,\n\t\t\thalfImageHeight,\n\t\t);\n\n\t\tcurrentImageWidth = halfImageWidth;\n\t\tcurrentImageHeight = halfImageHeight;\n\t\tcurrentImageSource = resizingCanvas;\n\t}\n\n\tconst outputCanvas: HTMLCanvasElement = createCanvas(width, height);\n\tconst outputCanvasContext: CanvasRenderingContext2D = outputCanvas.getContext('2d');\n\toutputCanvasContext.imageSmoothingQuality = 'high';\n\toutputCanvasContext.drawImage(\n\t\tresizingCanvas === null ? imageSource : resizingCanvas,\n\t\t0,\n\t\t0,\n\t\tcurrentImageWidth,\n\t\tcurrentImageHeight,\n\t\t0,\n\t\t0,\n\t\twidth,\n\t\theight,\n\t);\n\n\tif (resizingCanvas)\n\t{\n\t\tresizingCanvas.width = 0;\n\t\tresizingCanvas.height = 0;\n\t\tresizingCanvas = null;\n\n\t\tcurrentImageSource.width = 0;\n\t\tcurrentImageSource.height = 0;\n\t\tcurrentImageSource = null;\n\t}\n\n\treturn outputCanvas;\n};\n\nexport default createImagePreviewCanvas;\n","import type { ResizeImageOptions } from '../types/resize-image-options';\n\ntype ImageData = ImageBitmap | HTMLImageElement | { width: number, height: number };\ntype ResizedImageSizeResult = { targetWidth: number, targetHeight: number, useOriginalSize: boolean };\n\nconst getResizedImageSize = (imageData: ImageData, options: ResizeImageOptions): ResizedImageSizeResult => {\n\tconst { mode = 'contain', upscale = false } = options;\n\tlet { width, height } = options;\n\n\tif (!width && !height)\n\t{\n\t\treturn {\n\t\t\ttargetWidth: 0,\n\t\t\ttargetHeight: 0,\n\t\t\tuseOriginalSize: true,\n\t\t};\n\t}\n\n\tif (width === null)\n\t{\n\t\twidth = height;\n\t}\n\telse if (height === null)\n\t{\n\t\theight = width;\n\t}\n\n\tif (mode !== 'force')\n\t{\n\t\tconst ratioWidth = width / imageData.width;\n\t\tconst ratioHeight = height / imageData.height;\n\t\tlet ratio = 1;\n\n\t\tif (mode === 'cover')\n\t\t{\n\t\t\tratio = Math.max(ratioWidth, ratioHeight);\n\t\t}\n\t\telse if (mode === 'contain')\n\t\t{\n\t\t\tratio = Math.min(ratioWidth, ratioHeight);\n\t\t}\n\n\t\t// if image is too small, exit here with original image\n\t\tif (ratio > 1 && upscale === false)\n\t\t{\n\t\t\treturn {\n\t\t\t\ttargetWidth: imageData.width,\n\t\t\t\ttargetHeight: imageData.height,\n\t\t\t\tuseOriginalSize: true,\n\t\t\t};\n\t\t}\n\n\t\twidth = imageData.width * ratio;\n\t\theight = imageData.height * ratio;\n\t}\n\n\t/*\n\tif (mode === 'crop')\n\t{\n\t\tconst sourceImageRatio = sourceImageWidth / sourceImageHeight;\n\t\tconst targetRatio = targetWidth / targetHeight;\n\n\t\tif (sourceImageRatio > targetRatio)\n\t\t{\n\t\t\tconst newWidth = sourceImageHeight * targetRatio;\n\t\t\tsrcX = (sourceImageWidth - newWidth) / 2;\n\t\t\tsourceImageWidth = newWidth;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst newHeight = sourceImageWidth / targetRatio;\n\t\t\tsrcY = (sourceImageHeight - newHeight) / 2;\n\t\t\tsourceImageHeight = newHeight;\n\t\t}\n\n\t\tcontext.drawImage(image, srcX, srcY, sourceImageWidth, sourceImageHeight, 0, 0, targetWidth, targetHeight);\n\t}\n\t*/\n\n\treturn {\n\t\ttargetWidth: Math.round(width),\n\t\ttargetHeight: Math.round(height),\n\t\tuseOriginalSize: false,\n\t};\n};\n\nexport default getResizedImageSize;\n","import { Type } from 'main.core';\nimport createBlobFromDataUri from './create-blob-from-data-uri';\n\nconst canvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\nconst hasToBlobSupport = window.HTMLCanvasElement && canvasPrototype.toBlob;\nconst canUseOffscreenCanvas: boolean = !Type.isUndefined(window.OffscreenCanvas);\n\nconst convertCanvasToBlob = (canvas: HTMLCanvasElement, type: string, quality: number): Promise<Blob> => {\n\treturn new Promise((resolve, reject) => {\n\t\tif (canUseOffscreenCanvas && (canvas instanceof OffscreenCanvas))\n\t\t{\n\t\t\tcanvas.convertToBlob({ type, quality }).then((blob: Blob) => {\n\t\t\t\tresolve(blob);\n\t\t\t}).catch((error) => {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t}\n\t\telse if (hasToBlobSupport)\n\t\t{\n\t\t\tcanvas.toBlob((blob: Blob) => {\n\t\t\t\tresolve(blob);\n\t\t\t}, type, quality);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst blob = createBlobFromDataUri(canvas.toDataURL(type, quality));\n\n\t\t\tresolve(blob);\n\t\t}\n\t});\n};\n\nexport default convertCanvasToBlob;\n","import { Browser } from 'main.core';\n\nconst supportedMimeTypes: string[] = (\n\tBrowser.isSafari()\n\t\t? ['image/jpeg', 'image/png']\n\t\t: ['image/jpeg', 'image/png', 'image/webp']\n);\n\nconst isSupportedMimeType = (mimeType: string): boolean => {\n\treturn supportedMimeTypes.includes(mimeType);\n};\n\nexport default isSupportedMimeType;\n","export const sharpen = (\n\tcanvas: HTMLCanvasElement | OffscreenCanvas,\n\twidth: number,\n\theight: number,\n\tmixFactor: number,\n): void => {\n\tconst context: CanvasRenderingContext2D = canvas.getContext('2d');\n\tconst weights: number[] = [0, -1, 0, -1, 5, -1, 0, -1, 0];\n\tconst katet: number = Math.round(Math.sqrt(weights.length));\n\tconst half: number = Math.trunc(katet * 0.5);\n\tconst destinationData: ImageData = context.createImageData(width, height);\n\tconst destinationBuffer: Uint8ClampedArray = destinationData.data;\n\tconst sourceBuffer: Uint8ClampedArray = context.getImageData(0, 0, width, height).data;\n\tlet y: number = height;\n\twhile (y--)\n\t{\n\t\tlet x: number = width;\n\t\twhile (x--)\n\t\t{\n\t\t\tconst sy: number = y;\n\t\t\tconst sx: number = x;\n\t\t\tconst dstOff: number = (y * width + x) * 4;\n\t\t\tlet red = 0;\n\t\t\tlet green = 0;\n\t\t\tlet blue = 0;\n\t\t\t// let alpha = 0;\n\n\t\t\tfor (let cy = 0; cy < katet; cy++)\n\t\t\t{\n\t\t\t\tfor (let cx = 0; cx < katet; cx++)\n\t\t\t\t{\n\t\t\t\t\tconst scy: number = sy + cy - half;\n\t\t\t\t\tconst scx: number = sx + cx - half;\n\t\t\t\t\tif (scy >= 0 && scy < height && scx >= 0 && scx < width)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst srcOff: number = (scy * width + scx) * 4;\n\t\t\t\t\t\tconst wt: number = weights[cy * katet + cx];\n\t\t\t\t\t\tred += sourceBuffer[srcOff] * wt;\n\t\t\t\t\t\tgreen += sourceBuffer[srcOff + 1] * wt;\n\t\t\t\t\t\tblue += sourceBuffer[srcOff + 2] * wt;\n\t\t\t\t\t\t// alpha += sourceBuffer[srcOff + 3] * wt;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdestinationBuffer[dstOff] = red * mixFactor + sourceBuffer[dstOff] * (1 - mixFactor);\n\t\t\tdestinationBuffer[dstOff + 1] = green * mixFactor + sourceBuffer[dstOff + 1] * (1 - mixFactor);\n\t\t\tdestinationBuffer[dstOff + 2] = blue * mixFactor + sourceBuffer[dstOff + 2] * (1 - mixFactor);\n\t\t\tdestinationBuffer[dstOff + 3] = sourceBuffer[dstOff + 3];\n\t\t}\n\t}\n\n\tcontext.putImageData(destinationData, 0, 0);\n};\n\nexport const shouldSharpen = (imageData: CanvasImageSource, width: number, height: number): boolean => {\n\tconst scaleX: number = width / imageData.width;\n\tconst scaleY: number = height / imageData.height;\n\n\tconst scale: number = Math.min(scaleX, scaleY);\n\n\t// if target scale is less than half\n\treturn scale < 0.5;\n};\n","import getResizedImageSize from './get-resized-image-size';\nimport createImagePreviewCanvas from './create-image-preview-canvas';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\nimport isSupportedMimeType from './is-supported-mime-type';\nimport { sharpen, shouldSharpen } from './sharpen';\n\nimport type { ResizeImageMimeType, ResizeImageOptions } from '../types/resize-image-options';\n\nconst createImagePreview = (imageData: ImageBitmap | HTMLImageElement, options: ResizeImageOptions): Promise => {\n\tconst { targetWidth, targetHeight } = getResizedImageSize(imageData, options);\n\n\tconst canvas: HTMLCanvasElement = createImagePreviewCanvas(imageData, targetWidth, targetHeight);\n\tif (shouldSharpen(imageData, targetWidth, targetHeight))\n\t{\n\t\tsharpen(canvas, targetWidth, targetHeight, 0.2);\n\t}\n\n\tconst { quality = 0.92 } = options;\n\tconst mimeType: ResizeImageMimeType = isSupportedMimeType(options.mimeType) ? options.mimeType : 'image/jpeg';\n\n\treturn convertCanvasToBlob(canvas, mimeType, quality).then((blob) => {\n\t\treturn {\n\t\t\twidth: targetWidth,\n\t\t\theight: targetHeight,\n\t\t\tblob,\n\t\t};\n\t});\n};\n\nexport default createImagePreview;\n","import isSupportedMimeType from './is-supported-mime-type';\n\nimport type { ResizeImageOptions, ResizeImageMimeTypeMode, ResizeImageMimeType } from '../types/resize-image-options';\n\nconst getCanvasToBlobType = (blob: Blob, options: ResizeImageOptions): string => {\n\tconst mimeType: ResizeImageMimeType = isSupportedMimeType(options.mimeType) ? options.mimeType : 'image/jpeg';\n\tconst mimeTypeMode: ResizeImageMimeTypeMode = options.mimeTypeMode;\n\tif (mimeTypeMode === 'force')\n\t{\n\t\treturn mimeType;\n\t}\n\n\treturn isSupportedMimeType(blob.type) ? blob.type : mimeType;\n};\n\nexport default getCanvasToBlobType;\n","const getFilenameWithoutExtension = (name) => {\n\treturn name.slice(0, Math.max(0, name.lastIndexOf('.'))) || name;\n};\n\nexport default getFilenameWithoutExtension;\n","import getFilenameWithoutExtension from './get-filename-without-extension';\n\nconst extensionMap = {\n\tjpeg: 'jpg',\n};\n\nconst renameFileToMatchMimeType = (filename, mimeType) => {\n\tconst name = getFilenameWithoutExtension(filename);\n\tconst type = mimeType.split('/')[1];\n\tconst extension = extensionMap[type] || type;\n\n\treturn `${name}.${extension}`;\n};\n\nexport default renameFileToMatchMimeType;\n","import { Browser, Type } from 'main.core';\n\nimport createWorker from './create-worker';\nimport BitmapWorker from './bitmap-worker';\nimport ResizeWorker from './resize-worker';\nimport loadImage from './load-image';\nimport createImagePreviewCanvas from './create-image-preview-canvas';\nimport createImagePreview from './create-image-preview';\nimport getCanvasToBlobType from './get-canvas-to-blob-type';\nimport renameFileToMatchMimeType from './rename-file-to-match-mime-type';\nimport createFileFromBlob from './create-file-from-blob';\nimport getResizedImageSize from './get-resized-image-size';\nimport { sharpen, shouldSharpen } from './sharpen';\n\nimport type { ResizeImageOptions } from '../types/resize-image-options';\nimport type { ResizeImageResult } from '../types/resize-image-result';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\n\nlet canCreateImageBitmap = (\n\t'createImageBitmap' in window\n\t&& !Type.isUndefined(window.ImageBitmap)\n\t&& ImageBitmap.prototype\n\t&& ImageBitmap.prototype.close\n);\n\nif (canCreateImageBitmap && Browser.isSafari())\n{\n\tconst ua = navigator.userAgent.toLowerCase();\n\tconst regex = /version\\/([\\d.]+)/i;\n\tconst result = regex.exec(ua);\n\tif (result && result[1] && result[1] < '16.4')\n\t{\n\t\t// Webkit bug https://bugs.webkit.org/show_bug.cgi?id=223326\n\t\tcanCreateImageBitmap = false;\n\t}\n}\n\nconst createImagePreviewCanvasSource = createImagePreviewCanvas.toString();\nconst getResizedImageSizeSource = getResizedImageSize.toString();\nconst sharpenSource = sharpen.toString();\nconst shouldSharpenSource = shouldSharpen.toString();\nconst canUseOffscreenCanvas: boolean = canCreateImageBitmap && !Type.isUndefined(window.OffscreenCanvas);\n\n// eslint-disable-next-line max-lines-per-function\nconst resizeImage = (source: Blob | File, options: ResizeImageOptions): Promise<ResizeImageResult> => {\n\t// eslint-disable-next-line max-lines-per-function\n\treturn new Promise((resolve, reject) => {\n\t\tif (canUseOffscreenCanvas)\n\t\t{\n\t\t\tconst resizeWorker = createWorker(ResizeWorker);\n\t\t\tconst type: string = getCanvasToBlobType(source, options);\n\n\t\t\tresizeWorker.post(\n\t\t\t\t{\n\t\t\t\t\tfile: source,\n\t\t\t\t\ttype,\n\t\t\t\t\toptions,\n\t\t\t\t\tcreateImagePreviewCanvasSource,\n\t\t\t\t\tgetResizedImageSizeSource,\n\t\t\t\t\tsharpenSource,\n\t\t\t\t\tshouldSharpenSource,\n\t\t\t\t},\n\t\t\t\t(message): void => {\n\t\t\t\t\tresizeWorker.terminate();\n\t\t\t\t\tif (message)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst { bitmap, targetWidth, targetHeight, useOriginalSize } = message;\n\t\t\t\t\t\tif (useOriginalSize)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tpreview: source,\n\t\t\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet canvas: HTMLCanvasElement = document.createElement('canvas');\n\t\t\t\t\t\t\tcanvas.width = bitmap.width;\n\t\t\t\t\t\t\tcanvas.height = bitmap.height;\n\t\t\t\t\t\t\tconst context = canvas.getContext('bitmaprenderer');\n\t\t\t\t\t\t\tcontext.transferFromImageBitmap(bitmap);\n\n\t\t\t\t\t\t\t// console.log('bitmaprenderer');\n\n\t\t\t\t\t\t\tconst { quality = 0.92 } = options;\n\t\t\t\t\t\t\tconvertCanvasToBlob(canvas, type, quality).then((blob) => {\n\t\t\t\t\t\t\t\tlet preview: Blob = blob;\n\t\t\t\t\t\t\t\tif (Type.isFile(source))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t// File type could be changed pic.gif -> pic.jpg\n\t\t\t\t\t\t\t\t\tconst newFileName = renameFileToMatchMimeType(source.name, type);\n\t\t\t\t\t\t\t\t\tpreview = createFileFromBlob(blob, newFileName);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\t\tpreview,\n\t\t\t\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\t\t\t\tconsole.log('Uploader: convertCanvasToBlob error', error);\n\t\t\t\t\t\t\t\tloadImageDataFallback();\n\t\t\t\t\t\t\t}).finally(() => {\n\t\t\t\t\t\t\t\tcanvas.width = 0;\n\t\t\t\t\t\t\t\tcanvas.height = 0;\n\t\t\t\t\t\t\t\tcanvas = null;\n\n\t\t\t\t\t\t\t\tbitmap.close();\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t// let preview: Blob = blob;\n\t\t\t\t\t\t\t// if (Type.isFile(source))\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\t// \t// File type could be changed pic.gif -> pic.jpg\n\t\t\t\t\t\t\t// \tconst newFileName = renameFileToMatchMimeType(source.name, type);\n\t\t\t\t\t\t\t// \tpreview = createFileFromBlob(blob, newFileName);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t// resolve({\n\t\t\t\t\t\t\t// \tpreview,\n\t\t\t\t\t\t\t// \twidth: targetWidth,\n\t\t\t\t\t\t\t// \theight: targetHeight,\n\t\t\t\t\t\t\t// });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tloadImageDataFallback();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\telse if (canCreateImageBitmap)\n\t\t{\n\t\t\tconst bitmapWorker = createWorker(BitmapWorker);\n\t\t\tbitmapWorker.post(\n\t\t\t\t{ file: source },\n\t\t\t\t(imageBitmap: ImageBitmap): void => {\n\t\t\t\t\tbitmapWorker.terminate();\n\t\t\t\t\tif (imageBitmap)\n\t\t\t\t\t{\n\t\t\t\t\t\thandleImageLoad(imageBitmap);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tloadImageDataFallback();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tloadImageDataFallback();\n\t\t}\n\n\t\tfunction handleImageLoad(imageData: ImageBitmap | HTMLImageElement): void\n\t\t{\n\t\t\tconst { useOriginalSize, targetWidth, targetHeight } = getResizedImageSize(imageData, options);\n\t\t\tif (useOriginalSize)\n\t\t\t{\n\t\t\t\t// if it was ImageBitmap\n\t\t\t\tif ('close' in imageData)\n\t\t\t\t{\n\t\t\t\t\timageData.close();\n\t\t\t\t}\n\n\t\t\t\tresolve({\n\t\t\t\t\tpreview: source,\n\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\theight: targetHeight,\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tconst mimeType: string = getCanvasToBlobType(source, options);\n\t\t\t\tcreateImagePreview(imageData, { ...options, mimeType })\n\t\t\t\t\t.then(({ blob, width, height }): void => {\n\t\t\t\t\t\tlet preview: Blob = blob;\n\t\t\t\t\t\tif (Type.isFile(source))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// File type could be changed pic.gif -> pic.jpg\n\t\t\t\t\t\t\tconst newFileName = renameFileToMatchMimeType(source.name, mimeType);\n\t\t\t\t\t\t\tpreview = createFileFromBlob(blob, newFileName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve({ preview, width, height });\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t// if it was ImageBitmap\n\t\t\t\t\t\tif ('close' in imageData)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\timageData.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t}\n\t\t}\n\n\t\tfunction loadImageDataFallback(): void\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log('Uploader: resize image fallback');\n\t\t\tloadImage(source)\n\t\t\t\t.then(({ image }) => {\n\t\t\t\t\thandleImageLoad(image);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\treject(error);\n\t\t\t\t})\n\t\t\t;\n\t\t}\n\t});\n};\n\nexport default resizeImage;\n","const isVideo = (blob: Blob) => {\n\treturn /^video\\/[\\d.a-z-]+$/i.test(blob.type);\n};\n\nexport default isVideo;\n","import { Event } from 'main.core';\nimport getResizedImageSize from './get-resized-image-size';\nimport type { ResizeImageOptions } from '../types/resize-image-options';\nimport convertCanvasToBlob from './convert-canvas-to-blob';\nimport createImagePreviewCanvas from './create-image-preview-canvas';\n\nconst createVideoPreview = (\n\tblob: Blob,\n\toptions: ResizeImageOptions = { width: 300, height: 3000 },\n\tseekTime: number = 10,\n): Promise => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst video: HTMLVideoElement = document.createElement('video');\n\t\tvideo.setAttribute('src', URL.createObjectURL(blob));\n\t\tvideo.load();\n\n\t\tEvent.bind(video, 'error', (error) => {\n\t\t\treject(error || 'Error while loading video file');\n\t\t});\n\n\t\tEvent.bind(video, 'loadedmetadata', () => {\n\t\t\tvideo.currentTime = video.duration < seekTime ? 0 : seekTime;\n\n\t\t\tEvent.bind(video, 'seeked', () => {\n\t\t\t\tconst imageData = { width: video.videoWidth, height: video.videoHeight };\n\t\t\t\tconst { targetWidth, targetHeight } = getResizedImageSize(imageData, options);\n\t\t\t\tif (!targetWidth || !targetHeight)\n\t\t\t\t{\n\t\t\t\t\treject();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst canvas: HTMLCanvasElement = createImagePreviewCanvas(video, targetWidth, targetHeight);\n\t\t\t\tconst { quality = 0.92, mimeType = 'image/jpeg' } = options;\n\t\t\t\tconvertCanvasToBlob(canvas, mimeType, quality)\n\t\t\t\t\t.then((blob: Blob) => {\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tpreview: blob,\n\t\t\t\t\t\t\twidth: targetWidth,\n\t\t\t\t\t\t\theight: targetHeight,\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\treject();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t});\n\t\t});\n\t});\n};\n\nexport default createVideoPreview;\n","import { Browser, Type } from 'main.core';\n\nimport Filter from './filter';\nimport resizeImage from '../helpers/resize-image';\nimport isResizableImage from '../helpers/is-resizable-image';\nimport isVideo from '../helpers/is-video';\nimport createVideoPreview from '../helpers/create-video-preview';\n\nimport type UploaderFile from '../uploader-file';\nimport type Uploader from '../uploader';\nimport type { UploaderOptions } from '../types/uploader-options';\nimport type {\n\tResizeImageOptions,\n\tResizeImageMimeTypeMode,\n\tResizeImageMimeType,\n\tResizeImageMode,\n} from '../types/resize-image-options';\n\nexport default class ImagePreviewFilter extends Filter\n{\n\t#imagePreviewWidth: number = 300;\n\t#imagePreviewHeight: number = 300;\n\t#imagePreviewQuality: number = 0.92;\n\t#imagePreviewMimeType: ResizeImageMimeType = 'image/jpeg';\n\t#imagePreviewMimeTypeMode: ResizeImageMimeTypeMode = 'auto';\n\t#imagePreviewUpscale: boolean = false;\n\t#imagePreviewResizeMode: ResizeImageMode = 'contain';\n\t#imagePreviewFilter: Function = null;\n\n\tconstructor(uploader: Uploader, filterOptions: UploaderOptions = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\tthis.setImagePreviewWidth(options.imagePreviewWidth);\n\t\tthis.setImagePreviewHeight(options.imagePreviewHeight);\n\t\tthis.setImagePreviewQuality(options.imagePreviewQuality);\n\t\tthis.setImagePreviewUpscale(options.imagePreviewUpscale);\n\t\tthis.setImagePreviewResizeMode(options.imagePreviewResizeMode);\n\t\tthis.setImagePreviewMimeType(options.imagePreviewMimeType);\n\t\tthis.setImagePreviewMimeTypeMode(options.imagePreviewMimeTypeMode);\n\t\tthis.setImagePreviewFilter(options.imagePreviewFilter);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve): void => {\n\t\t\tif (!file.shouldTreatImageAsFile() && isResizableImage(file.getBinary()))\n\t\t\t{\n\t\t\t\tconst result: boolean | ResizeImageOptions = this.invokeFilter(file);\n\t\t\t\tif (result === false)\n\t\t\t\t{\n\t\t\t\t\tresolve();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst resizeOptions = Type.isPlainObject(result) ? result : {};\n\n\t\t\t\t// const start = performance.now();\n\t\t\t\tresizeImage(file.getBinary(), this.#getResizeImageOptions(resizeOptions))\n\t\t\t\t\t.then(({ preview, width, height }): void => {\n\t\t\t\t\t\t// console.log(`resizeImage took ${performance.now() - start} milliseconds.`);\n\t\t\t\t\t\tfile.setClientPreview(preview, width, height);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error): void => {\n\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\t\t\tconsole.warn('Uploader: image resize error', error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t}\n\t\t\telse if (isVideo(file.getBinary()) && !Browser.isSafari())\n\t\t\t{\n\t\t\t\tcreateVideoPreview(file.getBinary(), this.#getResizeImageOptions())\n\t\t\t\t\t.then(({ preview, width, height }): void => {\n\t\t\t\t\t\tfile.setClientPreview(preview, width, height);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error): void => {\n\t\t\t\t\t\tif (error)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\t\t\tconsole.warn('Uploader: video preview error', error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t})\n\t\t\t\t;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetImagePreviewWidth(): number\n\t{\n\t\treturn this.#imagePreviewWidth;\n\t}\n\n\tsetImagePreviewWidth(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imagePreviewWidth = value;\n\t\t}\n\t}\n\n\tgetImagePreviewHeight(): number\n\t{\n\t\treturn this.#imagePreviewHeight;\n\t}\n\n\tsetImagePreviewHeight(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0)\n\t\t{\n\t\t\tthis.#imagePreviewHeight = value;\n\t\t}\n\t}\n\n\tgetImagePreviewQuality(): number\n\t{\n\t\treturn this.#imagePreviewQuality;\n\t}\n\n\tsetImagePreviewQuality(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0.1 && value <= 1)\n\t\t{\n\t\t\tthis.#imagePreviewQuality = value;\n\t\t}\n\t}\n\n\tgetImagePreviewUpscale(): boolean\n\t{\n\t\treturn this.#imagePreviewUpscale;\n\t}\n\n\tsetImagePreviewUpscale(value: boolean): void\n\t{\n\t\tif (Type.isBoolean(value))\n\t\t{\n\t\t\tthis.#imagePreviewUpscale = value;\n\t\t}\n\t}\n\n\tgetImagePreviewResizeMode(): ResizeImageMode\n\t{\n\t\treturn this.#imagePreviewResizeMode;\n\t}\n\n\tsetImagePreviewResizeMode(value: ResizeImageMode): void\n\t{\n\t\tif (['contain', 'force', 'cover'].includes(value))\n\t\t{\n\t\t\tthis.#imagePreviewResizeMode = value;\n\t\t}\n\t}\n\n\tgetImagePreviewMimeType(): ResizeImageMimeType\n\t{\n\t\treturn this.#imagePreviewMimeType;\n\t}\n\n\tsetImagePreviewMimeType(value: ResizeImageMimeType): void\n\t{\n\t\tif (['image/jpeg', 'image/png', 'image/webp'].includes(value))\n\t\t{\n\t\t\tthis.#imagePreviewMimeType = value;\n\t\t}\n\t}\n\n\tgetImagePreviewMimeTypeMode(): ResizeImageMimeTypeMode\n\t{\n\t\treturn this.#imagePreviewMimeTypeMode;\n\t}\n\n\tsetImagePreviewMimeTypeMode(value: ResizeImageMimeTypeMode): void\n\t{\n\t\tif (['auto', 'force'].includes(value))\n\t\t{\n\t\t\tthis.#imagePreviewMimeTypeMode = value;\n\t\t}\n\t}\n\n\tsetImagePreviewFilter(fn: Function): void\n\t{\n\t\tif (Type.isFunction(fn))\n\t\t{\n\t\t\tthis.#imagePreviewFilter = fn;\n\t\t}\n\t}\n\n\tinvokeFilter(file: UploaderFile): boolean | ResizeImageOptions\n\t{\n\t\tif (this.#imagePreviewFilter !== null)\n\t\t{\n\t\t\tconst result = this.#imagePreviewFilter(file);\n\t\t\tif (Type.isBoolean(result) || Type.isPlainObject(result))\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#getResizeImageOptions(overrides: ResizeImageOptions = {}): ResizeImageOptions\n\t{\n\t\treturn {\n\t\t\twidth: Type.isNumber(overrides.width) ? overrides.width : this.getImagePreviewWidth(),\n\t\t\theight: Type.isNumber(overrides.height) ? overrides.height : this.getImagePreviewHeight(),\n\t\t\tmode: Type.isStringFilled(overrides.mode) ? overrides.mode : this.getImagePreviewResizeMode(),\n\t\t\tupscale: Type.isBoolean(overrides.upscale) ? overrides.upscale : this.getImagePreviewUpscale(),\n\t\t\tquality: Type.isNumber(overrides.quality) ? overrides.quality : this.getImagePreviewQuality(),\n\t\t\tmimeType: Type.isStringFilled(overrides.mimeType) ? overrides.mimeType : this.getImagePreviewMimeType(),\n\t\t\tmimeTypeMode:\n\t\t\t\tType.isStringFilled(overrides.mimeTypeMode)\n\t\t\t\t\t? overrides.mimeTypeMode\n\t\t\t\t\t: this.getImagePreviewMimeTypeMode()\n\t\t\t,\n\t\t};\n\t}\n}\n","import { Type } from 'main.core';\nimport Filter from './filter';\n\nimport isResizableImage from '../helpers/is-resizable-image';\nimport resizeImage from '../helpers/resize-image';\n\nimport type Uploader from '../uploader';\nimport type UploaderFile from '../uploader-file';\nimport type { UploaderOptions } from '../types/uploader-options';\nimport type {\n\tResizeImageOptions,\n\tResizeImageMimeTypeMode,\n\tResizeImageMimeType,\n\tResizeImageMode,\n} from '../types/resize-image-options';\n\nexport default class ImageResizeFilter extends Filter\n{\n\t#resizeWidth: number = null;\n\t#resizeHeight: number = null;\n\t#resizeMethod: ResizeImageMode = 'contain';\n\t#resizeMimeType: ResizeImageMimeType = 'image/jpeg';\n\t#resizeMimeTypeMode: ResizeImageMimeTypeMode = 'auto';\n\t#resizeQuality: number = 0.92;\n\t#resizeFilter: Function = null;\n\n\tconstructor(uploader: Uploader, filterOptions: UploaderOptions = {})\n\t{\n\t\tsuper(uploader);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(filterOptions) ? filterOptions : {};\n\n\t\tthis.setResizeWidth(options.imageResizeWidth);\n\t\tthis.setResizeHeight(options.imageResizeHeight);\n\t\tthis.setResizeMode(options.imageResizeMode);\n\t\tthis.setResizeMimeType(options.imageResizeMimeType);\n\t\tthis.setResizeMimeTypeMode(options.imageResizeMimeTypeMode);\n\t\tthis.setResizeQuality(options.imageResizeQuality);\n\t\tthis.setResizeFilter(options.imageResizeFilter);\n\t}\n\n\tapply(file: UploaderFile): Promise\n\t{\n\t\treturn new Promise((resolve): void => {\n\t\t\tif (this.getResizeWidth() === null && this.getResizeHeight() === null)\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (file.shouldTreatImageAsFile() || !isResizableImage(file.getBinary()))\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst result: boolean | ResizeImageOptions = this.invokeFilter(file);\n\t\t\tif (result === false)\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst overrides = Type.isPlainObject(result) ? result : {};\n\t\t\tconst options: ResizeImageOptions = {\n\t\t\t\twidth: Type.isNumber(overrides.width) ? overrides.width : this.getResizeWidth(),\n\t\t\t\theight: Type.isNumber(overrides.height) ? overrides.height : this.getResizeHeight(),\n\t\t\t\tmode: Type.isStringFilled(overrides.mode) ? overrides.mode : this.getResizeMode(),\n\t\t\t\tquality: Type.isNumber(overrides.quality) ? overrides.quality : this.getResizeQuality(),\n\t\t\t\tmimeType: Type.isStringFilled(overrides.mimeType) ? overrides.mimeType : this.getResizeMimeType(),\n\t\t\t\tmimeTypeMode: (\n\t\t\t\t\tType.isStringFilled(overrides.mimeTypeMode) ? overrides.mimeTypeMode : this.getResizeMimeTypeMode()\n\t\t\t\t),\n\t\t\t};\n\n\t\t\tresizeImage(file.getBinary(), options)\n\t\t\t\t.then(({ preview, width, height }): void => {\n\t\t\t\t\tfile.setWidth(width);\n\t\t\t\t\tfile.setHeight(height);\n\t\t\t\t\tfile.setFile(preview);\n\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t\t.catch((error): void => {\n\t\t\t\t\tif (error)\n\t\t\t\t\t{\n\t\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\t\tconsole.warn('image resize error', error);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve();\n\t\t\t\t})\n\t\t\t;\n\t\t});\n\t}\n\n\tgetResizeWidth(): ?number\n\t{\n\t\treturn this.#resizeWidth;\n\t}\n\n\tsetResizeWidth(value: ?number): void\n\t{\n\t\tif ((Type.isNumber(value) && value > 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#resizeWidth = value;\n\t\t}\n\t}\n\n\tgetResizeHeight(): ?number\n\t{\n\t\treturn this.#resizeHeight;\n\t}\n\n\tsetResizeHeight(value: ?number): void\n\t{\n\t\tif ((Type.isNumber(value) && value > 0) || Type.isNull(value))\n\t\t{\n\t\t\tthis.#resizeHeight = value;\n\t\t}\n\t}\n\n\tgetResizeMode(): ResizeImageMode\n\t{\n\t\treturn this.#resizeMethod;\n\t}\n\n\tsetResizeMode(value): ResizeImageMode\n\t{\n\t\tif (['contain', 'force', 'cover'].includes(value))\n\t\t{\n\t\t\tthis.#resizeMethod = value;\n\t\t}\n\t}\n\n\tgetResizeMimeType(): ResizeImageMimeType\n\t{\n\t\treturn this.#resizeMimeType;\n\t}\n\n\tsetResizeMimeType(value): ResizeImageMimeType\n\t{\n\t\tif (['image/jpeg', 'image/png', 'image/webp'].includes(value))\n\t\t{\n\t\t\tthis.#resizeMimeType = value;\n\t\t}\n\t}\n\n\tgetResizeMimeTypeMode(): ResizeImageMimeTypeMode\n\t{\n\t\treturn this.#resizeMimeTypeMode;\n\t}\n\n\tsetResizeMimeTypeMode(value): ResizeImageMimeTypeMode\n\t{\n\t\tif (['auto', 'force'].includes(value))\n\t\t{\n\t\t\tthis.#resizeMimeTypeMode = value;\n\t\t}\n\t}\n\n\tgetResizeQuality(): number\n\t{\n\t\treturn this.#resizeQuality;\n\t}\n\n\tsetResizeQuality(value: number): void\n\t{\n\t\tif (Type.isNumber(value) && value > 0.1 && value <= 1)\n\t\t{\n\t\t\tthis.#resizeQuality = value;\n\t\t}\n\t}\n\n\tsetResizeFilter(fn: Function): void\n\t{\n\t\tif (Type.isFunction(fn))\n\t\t{\n\t\t\tthis.#resizeFilter = fn;\n\t\t}\n\t}\n\n\tinvokeFilter(file: UploaderFile): boolean | ResizeImageOptions\n\t{\n\t\tif (this.#resizeFilter !== null)\n\t\t{\n\t\t\tconst result = this.#resizeFilter(file);\n\t\t\tif (Type.isBoolean(result) || Type.isPlainObject(result))\n\t\t\t{\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n","export const UploaderStatus: Object<string, string> = {\n\tSTARTED: 0,\n\tSTOPPED: 1,\n};\n","/**\n * @namespace BX.UI.Uploader\n */\nexport const UploaderEvent = {\n\tUPLOAD_START: 'onUploadStart',\n\tUPLOAD_COMPLETE: 'onUploadComplete',\n\tERROR: 'onError',\n\tMAX_FILE_COUNT_EXCEEDED: 'onMaxFileCountExceeded',\n\tDESTROY: 'onDestroy',\n\tBEFORE_BROWSE: 'onBeforeBrowse',\n\tBEFORE_DROP: 'onBeforeDrop',\n\tBEFORE_PASTE: 'onBeforePaste',\n\tBEFORE_FILES_ADD: 'onBeforeFilesAdd',\n\tFILE_BEFORE_ADD: 'File:onBeforeAdd',\n\tFILE_ADD_START: 'File:onAddStart',\n\tFILE_LOAD_START: 'File:onLoadStart',\n\tFILE_LOAD_PROGRESS: 'File:onLoadProgress',\n\tFILE_LOAD_COMPLETE: 'File:onLoadComplete',\n\tFILE_ERROR: 'File:onError',\n\tFILE_ADD: 'File:onAdd',\n\tFILE_REMOVE: 'File:onRemove',\n\tFILE_UPLOAD_START: 'File:onUploadStart',\n\tFILE_UPLOAD_PROGRESS: 'File:onUploadProgress',\n\tFILE_UPLOAD_COMPLETE: 'File:onUploadComplete',\n\tFILE_COMPLETE: 'File:onComplete',\n\tFILE_STATUS_CHANGE: 'File:onStatusChange',\n\tFILE_STATE_CHANGE: 'File:onStateChange',\n};\n","/**\n * @namespace BX.UI.Uploader\n */\nexport const FilterType = {\n\tVALIDATION: 'validation',\n\tPREPARATION: 'preparation',\n};\n","const getFilesInDirectory = (entry: FileSystemDirectoryEntry): Promise<File[]> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tconst files = [];\n\t\tlet dirCounter = 0;\n\t\tlet fileCounter = 0;\n\n\t\tconst resolveIfDone = (): void => {\n\t\t\tif (fileCounter === 0 && dirCounter === 0)\n\t\t\t{\n\t\t\t\tresolve(files);\n\t\t\t}\n\t\t};\n\n\t\tconst readEntries = (dirEntry: FileSystemDirectoryEntry): void => {\n\t\t\tdirCounter++;\n\t\t\tconst directoryReader: FileSystemDirectoryReader = dirEntry.createReader();\n\t\t\tconst readBatch = (): void => {\n\t\t\t\tdirectoryReader.readEntries((entries: FileSystemEntry[]): void => {\n\t\t\t\t\tif (entries.length === 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tdirCounter--;\n\t\t\t\t\t\tresolveIfDone();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tentries.forEach((fileEntry: FileSystemFileEntry | FileSystemDirectoryEntry): void => {\n\t\t\t\t\t\tif (fileEntry.isDirectory)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treadEntries(fileEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfileCounter++;\n\t\t\t\t\t\t\tfileEntry.file((file: File): void => {\n\t\t\t\t\t\t\t\tfiles.push(file);\n\t\t\t\t\t\t\t\tfileCounter--;\n\t\t\t\t\t\t\t\tresolveIfDone();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treadBatch();\n\t\t\t\t}, reject);\n\t\t\t};\n\n\t\t\treadBatch();\n\t\t};\n\n\t\treadEntries(entry);\n\t});\n};\n\nexport default getFilesInDirectory;\n","const isDirectoryEntry = (item: DataTransferItem): boolean => {\n\treturn 'webkitGetAsEntry' in item && (item.webkitGetAsEntry() || {}).isDirectory === true;\n};\n\nexport default isDirectoryEntry;\n","const isFileSystemItem = (item: DataTransferItem) => {\n\tif ('webkitGetAsEntry' in item)\n\t{\n\t\tconst entry: ?FileSystemEntry = item.webkitGetAsEntry();\n\t\tif (entry)\n\t\t{\n\t\t\treturn entry.isFile || entry.isDirectory;\n\t\t}\n\t}\n\n\treturn item.kind === 'file';\n};\n\nexport default isFileSystemItem;\n","import getFilesInDirectory from './get-files-in-directory';\nimport isDirectoryEntry from './is-directory-entry';\nimport isFileSystemItem from './is-file-system-item';\n\nconst getFilesFromItem = (item: DataTransferItem): Promise<File[]> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tif (isDirectoryEntry(item))\n\t\t{\n\t\t\tgetFilesInDirectory(item.webkitGetAsEntry())\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t;\n\n\t\t\treturn;\n\t\t}\n\n\t\tresolve([item.getAsFile()]);\n\t});\n};\n\nexport const getFilesFromDataTransfer = (dataTransfer: DataTransfer, browseFolders = true): Promise<File[]> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tif (!dataTransfer.items || dataTransfer.items.length === 0)\n\t\t{\n\t\t\tresolve(dataTransfer.files ? [...dataTransfer.files] : []);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst items: Promise[] = [...dataTransfer.items]\n\t\t\t.filter((item: DataTransferItem): boolean => {\n\t\t\t\treturn browseFolders ? isFileSystemItem(item) : item.kind === 'file';\n\t\t\t})\n\t\t\t.map((item: DataTransferItem): Promise => {\n\t\t\t\treturn getFilesFromItem(item);\n\t\t\t})\n\t\t;\n\n\t\tPromise.all(items)\n\t\t\t.then((fileGroups: Array<File[]>): void => {\n\t\t\t\tconst files = [];\n\t\t\t\tfileGroups.forEach((group: File[]): void => {\n\t\t\t\t\tfiles.push(...group);\n\t\t\t\t});\n\n\t\t\t\tresolve(files);\n\t\t\t})\n\t\t\t.catch(reject)\n\t\t;\n\t});\n};\n\nexport const hasDataTransferOnlyFiles = (dataTransfer: DataTransfer, browseFolders = true): Promise<File[]> => {\n\treturn new Promise((resolve, reject): void => {\n\t\tif (!dataTransfer.items)\n\t\t{\n\t\t\tresolve(dataTransfer.files ? dataTransfer.files.length > 0 : false);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst success: boolean = [...dataTransfer.items].every((item: DataTransferItem): boolean => {\n\t\t\treturn browseFolders ? isFileSystemItem(item) : item.kind === 'file' && !isDirectoryEntry(item);\n\t\t});\n\n\t\tresolve(success);\n\t});\n};\n\nexport const isFilePasted = (dataTransfer: DataTransfer, browseFolders = true): boolean => {\n\tif (!dataTransfer.types.includes('Files'))\n\t{\n\t\treturn false;\n\t}\n\n\tlet files = 0;\n\tlet texts = 0;\n\tconst items: DataTransferItemList = dataTransfer.items;\n\tfor (const item of items)\n\t{\n\t\tif (item.kind === 'string')\n\t\t{\n\t\t\ttexts++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconst isFile = browseFolders ? isFileSystemItem(item) : item.kind === 'file' && !isDirectoryEntry(item);\n\t\t\tif (isFile)\n\t\t\t{\n\t\t\t\tfiles++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn files >= texts;\n};\n","let result = null;\n\nconst canAppendFileToForm = (): boolean => {\n\tif (result === null)\n\t{\n\t\ttry\n\t\t{\n\t\t\tconst dataTransfer = new DataTransfer();\n\t\t\tconst file = new File(['hello'], 'my.txt');\n\t\t\tdataTransfer.items.add(file);\n\n\t\t\tconst input = document.createElement('input');\n\t\t\tinput.setAttribute('type', 'file');\n\t\t\tinput.files = dataTransfer.files;\n\n\t\t\tresult = input.files.length === 1;\n\t\t}\n\t\tcatch\n\t\t{\n\t\t\tresult = false;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nexport default canAppendFileToForm;\n","import { Type } from 'main.core';\n\nconst assignFileToInput = (input: HTMLInputElement, file: File | File[]) => {\n\ttry\n\t{\n\t\tconst dataTransfer = new DataTransfer();\n\t\tconst files = Type.isArray(file) ? file : [file];\n\n\t\tfiles.forEach((item) => {\n\t\t\tdataTransfer.items.add(item);\n\t\t});\n\n\t\t// eslint-disable-next-line no-param-reassign\n\t\tinput.files = dataTransfer.files;\n\t}\n\tcatch\n\t{\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\nexport default assignFileToInput;\n","import { Type, Event, Reflection, Dom, Extension, Text, type JsonObject } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport UploaderFile from './uploader-file';\nimport UploaderError from './uploader-error';\nimport Server from './backend/server';\nimport UploadController from './backend/upload-controller';\n\nimport Filter from './filters/filter';\nimport FileSizeFilter from './filters/file-size-filter';\nimport FileTypeFilter from './filters/file-type-filter';\nimport ImageSizeFilter from './filters/image-size-filter';\nimport ImagePreviewFilter from './filters/image-preview-filter';\nimport ImageResizeFilter from './filters/image-resize-filter';\n\nimport { UploaderStatus } from './enums/uploader-status';\nimport { UploaderEvent } from './enums/uploader-event';\nimport { FileStatus } from './enums/file-status';\nimport { FileOrigin } from './enums/file-origin';\nimport { FileEvent } from './enums/file-event';\nimport { FilterType } from './enums/filter-type';\n\nimport { getFilesFromDataTransfer, isFilePasted } from './helpers/get-files-from-data-transfer';\nimport canAppendFileToForm from './helpers/can-append-file-to-form';\nimport assignFileToInput from './helpers/assign-file-to-input';\n\nimport type { UploaderOptions } from './types/uploader-options';\nimport type { UploaderFileOptions } from './types/uploader-file-options';\nimport type { ServerOptions } from './types/server-options';\nimport type { RemoveFileOptions } from './types/remove-file-options';\nimport type { DestroyOptions } from './types/destroy-options';\n\nconst instances = new Map();\n\n/**\n * @namespace BX.UI.Uploader\n */\nexport default class Uploader extends EventEmitter\n{\n\t#id: ?string = null;\n\t#files: UploaderFile[] = [];\n\t#multiple: boolean = false;\n\t#autoUpload: boolean = true;\n\t#allowReplaceSingle: boolean = true;\n\t#maxParallelUploads: number = 2;\n\t#maxParallelLoads: number = 10;\n\t#acceptOnlyImages: boolean = false;\n\t#acceptedFileTypes: string[] = [];\n\t#ignoredFileNames: string[] = ['.ds_store', 'thumbs.db', 'desktop.ini'];\n\t#maxFileCount: ?number = null;\n\t#server: Server = null;\n\n\t#hiddenFields: Map<string, HTMLInputElement> = new Map();\n\t#hiddenFieldsContainer: HTMLElement = null;\n\t#hiddenFieldName: string = 'file';\n\t#assignAsFile: boolean = false;\n\t#assignServerFile: boolean = true;\n\n\t#filters: Map<FilterType, Filter[]> = new Map();\n\t#status: UploaderStatus = UploaderStatus.STOPPED;\n\n\t#onBeforeUploadHandler: Function = null;\n\t#onFileStatusChangeHandler: Function = null;\n\t#onFileStateChangeHandler: Function = null;\n\t#onInputFileChangeHandler: Function = null;\n\t#onPasteHandler: Function = null;\n\t#onDropHandler: Function = null;\n\n\t#browsingNodes: Map<HTMLElement, ?Function> = new Map();\n\t#dropNodes: Set<HTMLElement> = new Set();\n\t#pastingNodes: Set<HTMLElement> = new Set();\n\n\tstatic getById(id: string): ?Uploader\n\t{\n\t\treturn instances.get(id) || null;\n\t}\n\n\tstatic getInstances(): Uploader[]\n\t{\n\t\treturn [...instances.values()];\n\t}\n\n\tconstructor(uploaderOptions: UploaderOptions)\n\t{\n\t\tsuper();\n\t\tthis.setEventNamespace('BX.UI.Uploader');\n\n\t\tthis.#onBeforeUploadHandler = this.#handleBeforeUpload.bind(this);\n\t\tthis.#onFileStatusChangeHandler = this.#handleFileStatusChange.bind(this);\n\t\tthis.#onFileStateChangeHandler = this.#handleFileStateChange.bind(this);\n\t\tthis.#onInputFileChangeHandler = this.#handleInputFileChange.bind(this);\n\t\tthis.#onPasteHandler = this.#handlePaste.bind(this);\n\t\tthis.#onDropHandler = this.#handleDrop.bind(this);\n\n\t\tconst options: UploaderOptions = Type.isPlainObject(uploaderOptions) ? ({ ...uploaderOptions }) : {};\n\t\tthis.#id = Type.isStringFilled(options.id) ? options.id : `ui-uploader-${Text.getRandom().toLowerCase()}`;\n\t\tthis.#multiple = Type.isBoolean(options.multiple) ? options.multiple : false;\n\n\t\tconst acceptOnlyImages: ?boolean = Type.isBoolean(options.acceptOnlyImages) ? options.acceptOnlyImages : null;\n\t\tconst acceptOnlyImagesGlobal: ?boolean = Uploader.getGlobalOption('acceptOnlyImages', null);\n\t\tthis.setAcceptOnlyImages(acceptOnlyImages || acceptOnlyImagesGlobal);\n\n\t\tif (Type.isString(options.acceptedFileTypes) || Type.isArray(options.acceptedFileTypes))\n\t\t{\n\t\t\tthis.setAcceptedFileTypes(options.acceptedFileTypes);\n\t\t}\n\t\telse if (acceptOnlyImages !== true)\n\t\t{\n\t\t\tconst acceptedFileTypesGlobal = Uploader.getGlobalOption('acceptedFileTypes', null);\n\t\t\tthis.setAcceptedFileTypes(acceptedFileTypesGlobal);\n\t\t}\n\n\t\tconst ignoredFileNames: ?string[] = (\n\t\t\tType.isArray(options.ignoredFileNames)\n\t\t\t\t? options.ignoredFileNames\n\t\t\t\t: Uploader.getGlobalOption('ignoredFileNames', null)\n\t\t);\n\t\tthis.setIgnoredFileNames(ignoredFileNames);\n\n\t\tthis.setMaxFileCount(options.maxFileCount);\n\t\tthis.setAllowReplaceSingle(options.allowReplaceSingle);\n\n\t\tthis.assignBrowse(options.browseElement);\n\t\tthis.assignDropzone(options.dropElement);\n\t\tthis.assignPaste(options.pasteElement);\n\n\t\tthis.setHiddenFieldsContainer(options.hiddenFieldsContainer);\n\t\tthis.setHiddenFieldName(options.hiddenFieldName);\n\t\tthis.setAssignAsFile(options.assignAsFile);\n\t\tthis.setAssignServerFile(options.assignServerFile);\n\n\t\tthis.setAutoUpload(options.autoUpload);\n\t\tthis.setMaxParallelUploads(options.maxParallelUploads);\n\t\tthis.setMaxParallelLoads(options.maxParallelLoads);\n\n\t\tlet serverOptions: ServerOptions = Type.isPlainObject(options.serverOptions) ? options.serverOptions : {};\n\t\tserverOptions = {\n\t\t\tcontroller: options.controller,\n\t\t\tcontrollerOptions: options.controllerOptions,\n\t\t\t...serverOptions,\n\t\t};\n\n\t\tthis.#server = new Server(serverOptions);\n\n\t\tthis.subscribeFromOptions(options.events);\n\n\t\tthis.addFilter(FilterType.VALIDATION, new FileSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new FileTypeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImageSizeFilter(this, options));\n\t\tthis.addFilter(FilterType.VALIDATION, new ImagePreviewFilter(this, options));\n\t\tthis.addFilter(FilterType.PREPARATION, new ImageResizeFilter(this, options));\n\t\tthis.addFilters(options.filters);\n\n\t\tthis.addFiles(options.files);\n\n\t\tinstances.set(this.#id, this);\n\t}\n\n\tstatic getGlobalOption(path: string, defaultValue: any = null): any\n\t{\n\t\tconst globalOptions = Extension.getSettings('ui.uploader.core');\n\n\t\treturn globalOptions.get(path, defaultValue);\n\t}\n\n\taddFiles(fileList: ArrayLike): UploaderFile[]\n\t{\n\t\tif (!Type.isArrayLike(fileList))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst files: UploaderFile[] = [];\n\t\t[...fileList].forEach((item) => {\n\t\t\tif (item instanceof UploaderFile)\n\t\t\t{\n\t\t\t\tif (item.getStatus() === FileStatus.INIT)\n\t\t\t\t{\n\t\t\t\t\tfiles.push(item);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (Type.isArrayFilled(item))\n\t\t\t{\n\t\t\t\tfiles.push(new UploaderFile(item[0], item[1]));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfiles.push(new UploaderFile(item));\n\t\t\t}\n\t\t});\n\n\t\tconst event: BaseEvent = new BaseEvent({ data: { files: [...files] } });\n\t\tthis.emit(UploaderEvent.BEFORE_FILES_ADD, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\tconst { error } = event.getData();\n\t\t\tif (error instanceof UploaderError)\n\t\t\t{\n\t\t\t\tthis.emit(UploaderEvent.ERROR, { error });\n\t\t\t}\n\n\t\t\treturn [];\n\t\t}\n\n\t\tif (this.#exceedsMaxFileCount(files))\n\t\t{\n\t\t\treturn [];\n\t\t}\n\n\t\tconst results = [];\n\t\tfiles.forEach((file) => {\n\t\t\tconst result: UploaderFile | null = this.addFile(file);\n\t\t\tif (result !== null)\n\t\t\t{\n\t\t\t\tresults.push(result);\n\t\t\t}\n\t\t});\n\n\t\treturn results;\n\t}\n\n\taddFile(\n\t\tsource: File | Blob | string | number | UploaderFileOptions,\n\t\toptions: UploaderFileOptions,\n\t): UploaderFile | null\n\t{\n\t\tlet file: UploaderFile = null;\n\t\tif (source instanceof UploaderFile)\n\t\t{\n\t\t\tif (source.getStatus() === FileStatus.INIT)\n\t\t\t{\n\t\t\t\tfile = source;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfile = new UploaderFile(source, options);\n\t\t}\n\n\t\tif (this.getIgnoredFileNames().includes(file.getName().toLowerCase()))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.#exceedsMaxFileCount([file]))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!this.isMultiple() && this.shouldReplaceSingle() && this.#files.length > 0)\n\t\t{\n\t\t\tconst fileToReplace: UploaderFile = this.#files[0];\n\t\t\tthis.removeFile(fileToReplace);\n\t\t}\n\n\t\tconst event: BaseEvent = new BaseEvent({ data: { file } });\n\t\tthis.emit(UploaderEvent.FILE_BEFORE_ADD, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tfile.subscribe(FileEvent.STATUS_CHANGE, this.#onFileStatusChangeHandler);\n\t\tfile.subscribe(FileEvent.STATE_CHANGE, this.#onFileStateChangeHandler);\n\n\t\tthis.#setUploadEvents(file);\n\t\tthis.#setLoadEvents(file);\n\t\tthis.#setRemoveEvents(file);\n\n\t\tif (!file.isLoadable())\n\t\t{\n\t\t\tif (file.getOrigin() === FileOrigin.SERVER)\n\t\t\t{\n\t\t\t\tconst preloaded: boolean = Type.isStringFilled(file.getName());\n\t\t\t\tif (!preloaded || file.shouldForceServerLoad())\n\t\t\t\t{\n\t\t\t\t\tfile.setLoadController(this.getServer().createServerLoadController());\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tfile.setLoadController(this.getServer().createServerlessLoadController());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfile.setLoadController(this.getServer().createClientLoadController());\n\t\t\t}\n\t\t}\n\n\t\tif (!file.isUploadable() && file.getOrigin() === FileOrigin.CLIENT)\n\t\t{\n\t\t\tconst uploadController: UploadController | null = this.getServer().createUploadController();\n\t\t\tfile.setUploadController(uploadController);\n\t\t}\n\n\t\tif (!file.isRemoveable())\n\t\t{\n\t\t\tfile.setRemoveController(this.getServer().createRemoveController());\n\t\t}\n\n\t\tthis.#files.push(file);\n\n\t\tfile.emit(FileEvent.ADD);\n\t\tthis.emit(UploaderEvent.FILE_ADD_START, { file });\n\n\t\tif (file.getOrigin() === FileOrigin.CLIENT)\n\t\t{\n\t\t\tthis.#loadNext();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfile.load();\n\t\t}\n\n\t\treturn file;\n\t}\n\n\t#setLoadEvents(file: UploaderFile): void\n\t{\n\t\tfile.subscribeFromOptions({\n\t\t\t[FileEvent.LOAD_START]: (): void => {\n\t\t\t\tthis.emit(UploaderEvent.FILE_LOAD_START, { file });\n\t\t\t},\n\t\t\t[FileEvent.LOAD_PROGRESS]: (event: BaseEvent): void => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_LOAD_PROGRESS, { file, progress });\n\t\t\t},\n\t\t\t[FileEvent.LOAD_ERROR]: (event: BaseEvent): void => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_ERROR, { file, error });\n\t\t\t\tthis.emit(UploaderEvent.FILE_ADD, { file, error });\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t[FileEvent.LOAD_COMPLETE]: (): void => {\n\t\t\t\tthis.emit(UploaderEvent.FILE_ADD, { file });\n\t\t\t\tthis.emit(UploaderEvent.FILE_LOAD_COMPLETE, { file });\n\n\t\t\t\tif (!file.isUploadable())\n\t\t\t\t{\n\t\t\t\t\tthis.emit(UploaderEvent.FILE_COMPLETE, { file });\n\t\t\t\t\tthis.#setHiddenField(file);\n\t\t\t\t}\n\t\t\t\telse if (this.shouldAutoUpload())\n\t\t\t\t{\n\t\t\t\t\tfile.upload();\n\t\t\t\t}\n\n\t\t\t\tthis.#loadNext();\n\t\t\t},\n\t\t\t[FileEvent.VALIDATE_FILE_ASYNC]: (event: BaseEvent) => {\n\t\t\t\tconst file: UploaderFile = event.getData().file;\n\n\t\t\t\treturn this.#applyFilters(FilterType.VALIDATION, file);\n\t\t\t},\n\t\t\t[FileEvent.PREPARE_FILE_ASYNC]: (event: BaseEvent) => {\n\t\t\t\tconst file: UploaderFile = event.getData().file;\n\n\t\t\t\treturn this.#applyFilters(FilterType.PREPARATION, file);\n\t\t\t},\n\t\t});\n\t}\n\n\t#setUploadEvents(file: UploaderFile): void\n\t{\n\t\tfile.subscribeFromOptions({\n\t\t\t[FileEvent.BEFORE_UPLOAD]: this.#onBeforeUploadHandler,\n\t\t\t[FileEvent.UPLOAD_START]: (): void => {\n\t\t\t\tthis.emit(UploaderEvent.FILE_UPLOAD_START, { file });\n\t\t\t},\n\t\t\t[FileEvent.UPLOAD_PROGRESS]: (event: BaseEvent): void => {\n\t\t\t\tconst { progress } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_UPLOAD_PROGRESS, { file, progress });\n\t\t\t},\n\t\t\t[FileEvent.UPLOAD_ERROR]: (event: BaseEvent): void => {\n\t\t\t\tconst { error } = event.getData();\n\t\t\t\tthis.emit(UploaderEvent.FILE_ERROR, { file, error });\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t\t[FileEvent.UPLOAD_COMPLETE]: (): void => {\n\t\t\t\tthis.emit(UploaderEvent.FILE_UPLOAD_COMPLETE, { file });\n\t\t\t\tthis.emit(UploaderEvent.FILE_COMPLETE, { file });\n\t\t\t\tthis.#setHiddenField(file);\n\t\t\t\tthis.#uploadNext();\n\t\t\t},\n\t\t});\n\t}\n\n\t#setRemoveEvents(file: UploaderFile): void\n\t{\n\t\tfile.subscribeOnce(FileEvent.REMOVE_ERROR, (event: BaseEvent): void => {\n\t\t\tconst { error } = event.getData();\n\t\t\tthis.emit(UploaderEvent.FILE_ERROR, { file, error });\n\t\t});\n\n\t\tfile.subscribeOnce(FileEvent.REMOVE_COMPLETE, (): void => {\n\t\t\tthis.#removeFile(file);\n\t\t});\n\t}\n\n\t#handleBeforeUpload(event: BaseEvent): void\n\t{\n\t\tif (this.getStatus() === UploaderStatus.STOPPED)\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t\tthis.start();\n\t\t}\n\t\telse if (this.getUploadingFileCount() >= this.getMaxParallelUploads())\n\t\t{\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\t#handleFileStatusChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tthis.emit(UploaderEvent.FILE_STATUS_CHANGE, { file });\n\t}\n\n\t#handleFileStateChange(event: BaseEvent): void\n\t{\n\t\tconst file: UploaderFile = event.getTarget();\n\t\tconst property: string = event.getData().property;\n\t\tconst value: any = event.getData().value;\n\n\t\tif (property === 'serverFileId')\n\t\t{\n\t\t\tthis.#updateHiddenField(file);\n\t\t}\n\n\t\tthis.emit(UploaderEvent.FILE_STATE_CHANGE, { file, property, value });\n\t}\n\n\t#exceedsMaxFileCount(fileList: Array): boolean\n\t{\n\t\tconst totalNewFiles: number = fileList.length;\n\t\tconst totalFiles: number = this.#files.length;\n\n\t\tif (!this.isMultiple() && totalNewFiles > 1)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tlet maxFileCount = null;\n\t\tif (this.isMultiple())\n\t\t{\n\t\t\tmaxFileCount = this.getMaxFileCount();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmaxFileCount = this.shouldReplaceSingle() ? null : 1;\n\t\t}\n\n\t\tif (maxFileCount !== null && totalFiles + totalNewFiles > maxFileCount)\n\t\t{\n\t\t\tconst error: UploaderError = new UploaderError('MAX_FILE_COUNT_EXCEEDED', { maxFileCount });\n\t\t\tthis.emit(UploaderEvent.MAX_FILE_COUNT_EXCEEDED, { error });\n\t\t\tthis.emit(UploaderEvent.ERROR, { error });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t#applyFilters(type: FilterType, ...args): Promise\n\t{\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst filters = [...(this.#filters.get(type) || [])];\n\t\t\tif (filters.length === 0)\n\t\t\t{\n\t\t\t\tresolve();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst firstFilter: Filter = filters.shift();\n\n\t\t\t// chain filters\n\t\t\tfilters\n\t\t\t\t.reduce(\n\t\t\t\t\t(current: Promise, next: Filter) => {\n\t\t\t\t\t\treturn current.then(() => next.apply(...args));\n\t\t\t\t\t},\n\t\t\t\t\tfirstFilter.apply(...args),\n\t\t\t\t)\n\t\t\t\t.then((result) => resolve(result))\n\t\t\t\t.catch(error => reject(error))\n\t\t\t;\n\t\t});\n\t}\n\n\tstart(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED && this.getPendingFileCount() > 0)\n\t\t{\n\t\t\tthis.#status = UploaderStatus.STARTED;\n\t\t\tthis.emit(UploaderEvent.UPLOAD_START);\n\t\t\tthis.#uploadNext();\n\t\t}\n\t}\n\n\t// stop(): void\n\t// {\n\t// \tthis.#status = UploaderStatus.STOPPED;\n\t//\n\t// \tthis.getFiles().forEach((file: UploaderFile) => {\n\t// \t\tif (file.isUploading())\n\t// \t\t{\n\t// \t\t\tfile.abort();\n\t// \t\t\tfile.setStatus(FileStatus.PENDING);\n\t// \t\t}\n\t// \t});\n\t//\n\t// \tthis.emit('onStop');\n\t// }\n\n\tdestroy(options?: DestroyOptions): void\n\t{\n\t\tthis.emit(UploaderEvent.DESTROY);\n\n\t\tthis.unassignBrowseAll();\n\t\tthis.unassignDropzoneAll();\n\t\tthis.unassignPasteAll();\n\n\t\tconst removeFromServer: boolean = !options || options.removeFilesFromServer !== false;\n\t\tthis.removeFiles({ removeFromServer });\n\n\t\tthis.#resetHiddenFields();\n\t\tinstances.delete(this.getId());\n\n\t\tthis.#files = [];\n\t\tthis.#server = null;\n\t\tthis.#acceptedFileTypes = null;\n\t\tthis.#ignoredFileNames = null;\n\t\tthis.#filters = null;\n\n\t\tObject.setPrototypeOf(this, null);\n\t}\n\n\tremoveFiles(options?: RemoveFileOptions): void\n\t{\n\t\tthis.getFiles().forEach((file: UploaderFile): void => {\n\t\t\tfile.remove(options);\n\t\t});\n\t}\n\n\tremoveFile(fileOrId: UploaderFile | string, options?: RemoveFileOptions): void\n\t{\n\t\tconst file: UploaderFile = Type.isString(fileOrId) ? this.getFile(fileOrId) : fileOrId;\n\t\tconst index: number = this.#files.indexOf(file);\n\t\tif (index === -1)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tfile.remove(options);\n\t}\n\n\t#removeFile(file: UploaderFile)\n\t{\n\t\tconst index: number = this.#files.indexOf(file);\n\t\tif (index !== -1)\n\t\t{\n\t\t\tthis.#files.splice(index, 1);\n\t\t}\n\n\t\tfile.unsubscribeAll();\n\n\t\tthis.emit(UploaderEvent.FILE_REMOVE, { file });\n\t\tthis.#resetHiddenField(file);\n\t}\n\n\tgetFile(id: string): ?UploaderFile\n\t{\n\t\treturn this.#files.find((file: UploaderFile): boolean => file.getId() === id) || null;\n\t}\n\n\tgetFiles(): UploaderFile[]\n\t{\n\t\treturn [...this.#files];\n\t}\n\n\tgetId(): string\n\t{\n\t\treturn this.#id;\n\t}\n\n\tisMultiple(): boolean\n\t{\n\t\treturn this.#multiple;\n\t}\n\n\tgetStatus(): UploaderStatus\n\t{\n\t\treturn this.#status;\n\t}\n\n\taddFilter(type: FilterType, filterEntity: Filter | Class<Filter> | string, filterOptions: JsonObject = {}): void\n\t{\n\t\tlet filter: Filter = null;\n\t\tif (Type.isFunction(filterEntity) || Type.isString(filterEntity))\n\t\t{\n\t\t\tconst ClassName: Class<Filter> = Type.isString(filterEntity) ? Reflection.getClass(filterEntity) : filterEntity;\n\t\t\tif (Type.isFunction(ClassName))\n\t\t\t{\n\t\t\t\tfilter = new ClassName(this, filterOptions);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfilter = filterEntity;\n\t\t}\n\n\t\tif (filter instanceof Filter)\n\t\t{\n\t\t\tlet filters: Filter[] = this.#filters.get(type);\n\t\t\tif (!Type.isArray(filters))\n\t\t\t{\n\t\t\t\tfilters = [];\n\t\t\t\tthis.#filters.set(type, filters);\n\t\t\t}\n\n\t\t\tfilters.push(filter);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthrow new TypeError('Uploader: a filter must be an instance of FileUploader.Filter.');\n\t\t}\n\t}\n\n\taddFilters(filters: Array): void\n\t{\n\t\tif (Type.isArray(filters))\n\t\t{\n\t\t\tfilters.forEach((filter): void => {\n\t\t\t\tif (Type.isPlainObject(filter))\n\t\t\t\t{\n\t\t\t\t\tthis.addFilter(filter.type, filter.filter, filter.options);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetServer(): Server\n\t{\n\t\treturn this.#server;\n\t}\n\n\tassignBrowse(htmlElement: HTMLElement | HTMLElement[]): void\n\t{\n\t\tconst nodes: HTMLElement[] = Type.isElementNode(htmlElement) ? [htmlElement] : htmlElement;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement | HTMLInputElement) => {\n\t\t\tif (!Type.isElementNode(node) || this.#browsingNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet input: HTMLInputElement = null;\n\t\t\tif (node.tagName === 'INPUT' && node.type === 'file')\n\t\t\t{\n\t\t\t\tinput = node;\n\n\t\t\t\t// Add already selected files\n\t\t\t\tif (input.files && input.files.length > 0)\n\t\t\t\t{\n\t\t\t\t\tthis.addFiles(input.files);\n\t\t\t\t}\n\n\t\t\t\tconst acceptAttr = input.getAttribute('accept');\n\t\t\t\tif (Type.isStringFilled(acceptAttr))\n\t\t\t\t{\n\t\t\t\t\tthis.setAcceptedFileTypes(acceptAttr);\n\t\t\t\t}\n\n\t\t\t\tthis.#browsingNodes.set(node, null);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinput = document.createElement('input');\n\t\t\t\tinput.setAttribute('type', 'file');\n\n\t\t\t\tconst onBrowseClickHandler = this.#handleBrowseClick.bind(this, input, node);\n\t\t\t\tthis.#browsingNodes.set(node, onBrowseClickHandler);\n\t\t\t\tEvent.bind(node, 'click', onBrowseClickHandler);\n\t\t\t}\n\n\t\t\tif (this.isMultiple())\n\t\t\t{\n\t\t\t\tinput.setAttribute('multiple', 'multiple');\n\t\t\t}\n\n\t\t\tif (Type.isArrayFilled(this.getAcceptedFileTypes()))\n\t\t\t{\n\t\t\t\tinput.setAttribute('accept', this.getAcceptedFileTypes().join(','));\n\t\t\t}\n\n\t\t\tEvent.bind(input, 'change', this.#onInputFileChangeHandler);\n\t\t});\n\t}\n\n\t#handleBrowseClick(input: HTMLInputElement, node: HTMLElement): void\n\t{\n\t\tconst event: BaseEvent = new BaseEvent({ data: { input, node } });\n\t\tthis.emit(UploaderEvent.BEFORE_BROWSE, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tinput.click();\n\t}\n\n\t#handleInputFileChange(event: Event): void\n\t{\n\t\tconst input = event.currentTarget;\n\n\t\tthis.addFiles([...input.files]);\n\n\t\t// reset file input\n\t\tinput.value = '';\n\t}\n\n\tunassignBrowse(htmlElement: HTMLElement | HTMLElement[]): void\n\t{\n\t\tconst nodes: HTMLElement[] = Type.isElementNode(htmlElement) ? [htmlElement] : htmlElement;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement | HTMLInputElement): void => {\n\t\t\tif (this.#browsingNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'click', this.#browsingNodes.get(node));\n\t\t\t\tEvent.unbind(node, 'change', this.#onInputFileChangeHandler);\n\t\t\t\tthis.#browsingNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignBrowseAll(): void\n\t{\n\t\t[...this.#browsingNodes.keys()].forEach((node: HTMLElement): void => {\n\t\t\tthis.unassignBrowse(node);\n\t\t});\n\t}\n\n\tassignDropzone(htmlElement: HTMLElement | HTMLElement[]): void\n\t{\n\t\tconst nodes = Type.isElementNode(htmlElement) ? [htmlElement] : htmlElement;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement): void => {\n\t\t\tif (!Type.isElementNode(node) || this.#dropNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'dragover', this.#preventDefault);\n\t\t\tEvent.bind(node, 'dragenter', this.#preventDefault);\n\t\t\tEvent.bind(node, 'drop', this.#onDropHandler);\n\n\t\t\tthis.#dropNodes.add(node);\n\t\t});\n\t}\n\n\t#handleDrop(dragEvent: DragEvent): void\n\t{\n\t\tdragEvent.preventDefault();\n\n\t\tconst event: BaseEvent = new BaseEvent({ data: { dragEvent } });\n\t\tthis.emit(UploaderEvent.BEFORE_DROP, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tgetFilesFromDataTransfer(dragEvent.dataTransfer).then((files: File[]): void => {\n\t\t\tthis.addFiles(files);\n\t\t}).catch((error) => {\n\t\t\tconsole.error('Uploader: data transfer error', error);\n\t\t});\n\t}\n\n\t#preventDefault(event: DragEvent): void\n\t{\n\t\tevent.preventDefault();\n\t}\n\n\tunassignDropzone(htmlElement: HTMLElement | HTMLElement[]): void\n\t{\n\t\tconst nodes: HTMLElement[] = Type.isElementNode(htmlElement) ? [htmlElement] : htmlElement;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement): void => {\n\t\t\tif (this.#dropNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'dragover', this.#preventDefault);\n\t\t\t\tEvent.unbind(node, 'dragenter', this.#preventDefault);\n\t\t\t\tEvent.unbind(node, 'drop', this.#onDropHandler);\n\t\t\t\tthis.#dropNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignDropzoneAll(): void\n\t{\n\t\t[...this.#dropNodes].forEach((node: HTMLElement): void => {\n\t\t\tthis.unassignDropzone(node);\n\t\t});\n\t}\n\n\tassignPaste(htmlElement: HTMLElement | HTMLElement[]): void\n\t{\n\t\tconst nodes: HTMLElement[] = Type.isElementNode(htmlElement) ? [htmlElement] : htmlElement;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement): void => {\n\t\t\tif (!Type.isElementNode(node) || this.#pastingNodes.has(node))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEvent.bind(node, 'paste', this.#onPasteHandler);\n\t\t\tthis.#pastingNodes.add(node);\n\t\t});\n\t}\n\n\t#handlePaste(clipboardEvent: ClipboardEvent): void\n\t{\n\t\tconst clipboardData: DataTransfer = clipboardEvent.clipboardData;\n\t\tif (!clipboardData)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst event: BaseEvent = new BaseEvent({ data: { clipboardEvent } });\n\t\tthis.emit(UploaderEvent.BEFORE_PASTE, event);\n\t\tif (event.isDefaultPrevented())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (isFilePasted(clipboardData))\n\t\t{\n\t\t\tclipboardEvent.preventDefault();\n\n\t\t\tgetFilesFromDataTransfer(clipboardData).then((files: File[]): void => {\n\t\t\t\tthis.addFiles(files);\n\t\t\t}).catch((error) => {\n\t\t\t\tconsole.error('Uploader: data transfer error', error);\n\t\t\t});\n\t\t}\n\t}\n\n\tunassignPaste(htmlElement: HTMLElement | HTMLElement[]): void\n\t{\n\t\tconst nodes: HTMLElement[] = Type.isElementNode(htmlElement) ? [htmlElement] : htmlElement;\n\t\tif (!Type.isArray(nodes))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tnodes.forEach((node: HTMLElement): void => {\n\t\t\tif (this.#pastingNodes.has(node))\n\t\t\t{\n\t\t\t\tEvent.unbind(node, 'paste', this.#onPasteHandler);\n\t\t\t\tthis.#pastingNodes.delete(node);\n\t\t\t}\n\t\t});\n\t}\n\n\tunassignPasteAll(): void\n\t{\n\t\t[...this.#pastingNodes].forEach((node: HTMLElement): void => {\n\t\t\tthis.unassignPaste(node);\n\t\t});\n\t}\n\n\tgetHiddenFieldsContainer(): ?HTMLElement\n\t{\n\t\tlet element = null;\n\t\tif (Type.isStringFilled(this.#hiddenFieldsContainer))\n\t\t{\n\t\t\telement = document.querySelector(this.#hiddenFieldsContainer);\n\t\t\tif (!Type.isElementNode(element))\n\t\t\t{\n\t\t\t\tconsole.error(`Uploader: a hidden field container was not found (${this.#hiddenFieldsContainer}).`);\n\t\t\t}\n\t\t}\n\t\telse if (Type.isElementNode(this.#hiddenFieldsContainer))\n\t\t{\n\t\t\telement = this.#hiddenFieldsContainer;\n\t\t}\n\n\t\treturn element;\n\t}\n\n\tsetHiddenFieldsContainer(container: string | HTMLElement): void\n\t{\n\t\tif (Type.isStringFilled(container) || Type.isElementNode(container) || Type.isNull(container))\n\t\t{\n\t\t\tthis.#hiddenFieldsContainer = container;\n\t\t}\n\t}\n\n\tgetHiddenFieldName(): string\n\t{\n\t\treturn this.#hiddenFieldName;\n\t}\n\n\tsetHiddenFieldName(name: string): void\n\t{\n\t\tif (Type.isStringFilled(name))\n\t\t{\n\t\t\tthis.#hiddenFieldName = name;\n\t\t}\n\t}\n\n\tshouldAssignAsFile(): boolean\n\t{\n\t\treturn this.#assignAsFile;\n\t}\n\n\tsetAssignAsFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#assignAsFile = flag;\n\t\t}\n\t}\n\n\tshouldAssignServerFile(): boolean\n\t{\n\t\treturn this.#assignServerFile;\n\t}\n\n\tsetAssignServerFile(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#assignServerFile = flag;\n\t\t}\n\t}\n\n\tgetTotalSize(): number\n\t{\n\t\treturn this.#files.reduce((totalSize: number, file: UploaderFile) => {\n\t\t\treturn totalSize + file.getSize();\n\t\t}, 0);\n\t}\n\n\tshouldAutoUpload(): boolean\n\t{\n\t\treturn this.#autoUpload;\n\t}\n\n\tsetAutoUpload(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#autoUpload = flag;\n\t\t}\n\t}\n\n\tgetMaxParallelUploads(): number\n\t{\n\t\treturn this.#maxParallelUploads;\n\t}\n\n\tsetMaxParallelUploads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.#maxParallelUploads = number;\n\t\t}\n\t}\n\n\tgetMaxParallelLoads(): number\n\t{\n\t\treturn this.#maxParallelLoads;\n\t}\n\n\tsetMaxParallelLoads(number: number): void\n\t{\n\t\tif (Type.isNumber(number) && number > 0)\n\t\t{\n\t\t\tthis.#maxParallelLoads = number;\n\t\t}\n\t}\n\n\tgetUploadingFileCount(): number\n\t{\n\t\treturn this.#files.filter((file: UploaderFile): boolean => file.isUploading()).length;\n\t}\n\n\tgetPendingFileCount(): number\n\t{\n\t\treturn this.#files.filter((file: UploaderFile): boolean => file.isReadyToUpload()).length;\n\t}\n\n\tstatic getImageExtensions(): Array<string>\n\t{\n\t\treturn this.getGlobalOption(\n\t\t\t'imageExtensions',\n\t\t\t['.jpg', '.bmp', '.jpeg', '.jpe', '.gif', '.png', '.webp'],\n\t\t);\n\t}\n\n\tsetAcceptOnlyImages(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#acceptOnlyImages = flag;\n\t\t\tif (flag)\n\t\t\t{\n\t\t\t\tthis.acceptOnlyImages();\n\t\t\t}\n\t\t}\n\t}\n\n\tacceptOnlyImages(): void\n\t{\n\t\tconst imageExtensions: string[] = Uploader.getImageExtensions();\n\t\tthis.setAcceptedFileTypes(imageExtensions);\n\t\tthis.#acceptOnlyImages = true;\n\t}\n\n\tshouldAcceptOnlyImages(): boolean\n\t{\n\t\treturn this.#acceptOnlyImages;\n\t}\n\n\tgetAcceptedFileTypes(): string[]\n\t{\n\t\treturn this.#acceptedFileTypes;\n\t}\n\n\tsetAcceptedFileTypes(fileTypes: string | string[]): void\n\t{\n\t\tconst types: string[] = Type.isString(fileTypes) ? fileTypes.split(',') : fileTypes;\n\t\tif (Type.isArray(types))\n\t\t{\n\t\t\tthis.#acceptedFileTypes = [];\n\t\t\tthis.#acceptOnlyImages = false;\n\n\t\t\ttypes.forEach((type: string) => {\n\t\t\t\tif (Type.isStringFilled(type))\n\t\t\t\t{\n\t\t\t\t\tthis.#acceptedFileTypes.push(type);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tgetIgnoredFileNames(): string[]\n\t{\n\t\treturn this.#ignoredFileNames;\n\t}\n\n\tsetIgnoredFileNames(fileNames: string[]): void\n\t{\n\t\tif (Type.isArray(fileNames))\n\t\t{\n\t\t\tthis.#ignoredFileNames = [];\n\n\t\t\tfileNames.forEach((fileName: string): void => {\n\t\t\t\tif (Type.isStringFilled(fileName))\n\t\t\t\t{\n\t\t\t\t\tthis.#ignoredFileNames.push(fileName.toLowerCase());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsetMaxFileCount(maxFileCount: ?number): void\n\t{\n\t\tif ((Type.isNumber(maxFileCount) && maxFileCount > 0) || maxFileCount === null)\n\t\t{\n\t\t\tthis.#maxFileCount = maxFileCount;\n\t\t}\n\t}\n\n\tgetMaxFileCount(): ?number\n\t{\n\t\treturn this.#maxFileCount;\n\t}\n\n\tsetAllowReplaceSingle(flag: boolean): void\n\t{\n\t\tif (Type.isBoolean(flag))\n\t\t{\n\t\t\tthis.#allowReplaceSingle = flag;\n\t\t}\n\t}\n\n\tshouldReplaceSingle(): boolean\n\t{\n\t\treturn this.#allowReplaceSingle;\n\t}\n\n\t#uploadNext(): void\n\t{\n\t\tif (this.getStatus() !== UploaderStatus.STARTED)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst maxParallelUploads: number = this.getMaxParallelUploads();\n\t\tconst currentUploads: number = this.getUploadingFileCount();\n\t\tconst pendingFiles: UploaderFile[] = this.#files.filter((file: UploaderFile): boolean => file.isReadyToUpload());\n\t\tconst pendingUploads: number = pendingFiles.length;\n\n\t\tif (currentUploads < maxParallelUploads)\n\t\t{\n\t\t\tconst limit: number = Math.min(maxParallelUploads - currentUploads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile: UploaderFile = pendingFiles[i];\n\t\t\t\tpendingFile.upload();\n\t\t\t}\n\t\t}\n\n\t\t// All files are COMPLETE or FAILED\n\t\tif (currentUploads === 0 && pendingUploads === 0)\n\t\t{\n\t\t\tthis.#status = UploaderStatus.STOPPED;\n\t\t\tthis.emit(UploaderEvent.UPLOAD_COMPLETE);\n\t\t}\n\t}\n\n\t#loadNext(): void\n\t{\n\t\tconst maxParallelLoads: number = this.getMaxParallelLoads();\n\t\tconst currentLoads: number = this.#files.filter((file: UploaderFile): boolean => file.isLoading()).length;\n\t\tconst pendingFiles: UploaderFile[] = this.#files.filter((file: UploaderFile) => {\n\t\t\treturn file.getStatus() === FileStatus.ADDED && file.getOrigin() === FileOrigin.CLIENT;\n\t\t});\n\n\t\tif (currentLoads < maxParallelLoads)\n\t\t{\n\t\t\tconst limit: number = Math.min(maxParallelLoads - currentLoads, pendingFiles.length);\n\t\t\tfor (let i = 0; i < limit; i++)\n\t\t\t{\n\t\t\t\tconst pendingFile: UploaderFile = pendingFiles[i];\n\t\t\t\tpendingFile.load();\n\t\t\t}\n\t\t}\n\t}\n\n\t#setHiddenField(file: UploaderFile): void\n\t{\n\t\tconst container: ?HTMLElement = this.getHiddenFieldsContainer();\n\t\tif (!container || this.#hiddenFields.has(file.getId()))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (file.getOrigin() === FileOrigin.SERVER && !this.shouldAssignServerFile())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst assignAsFile: boolean = (\n\t\t\tfile.getOrigin() === FileOrigin.CLIENT\n\t\t\t&& !file.isUploadable()\n\t\t\t&& this.shouldAssignAsFile()\n\t\t\t&& canAppendFileToForm()\n\t\t);\n\n\t\tconst input: HTMLInputElement = document.createElement('input');\n\t\tinput.type = assignAsFile ? 'file' : 'hidden';\n\t\tinput.name = this.getHiddenFieldName() + (this.isMultiple() ? '[]' : '');\n\n\t\tif (assignAsFile)\n\t\t{\n\t\t\tDom.style(input, {\n\t\t\t\tvisibility: 'hidden',\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tposition: 'absolute',\n\t\t\t\t'pointer-events': 'none',\n\t\t\t});\n\n\t\t\tassignFileToInput(input, file.getBinary());\n\t\t}\n\t\telse if (file.getServerFileId() !== null)\n\t\t{\n\t\t\tinput.value = file.getServerFileId();\n\t\t}\n\n\t\tDom.append(input, container);\n\t\tthis.#hiddenFields.set(file.getId(), input);\n\n\t\tthis.#syncInputPositions();\n\t}\n\n\t#updateHiddenField(file: UploaderFile): void\n\t{\n\t\tconst input: ?HTMLInputElement = this.#hiddenFields.get(file.getId());\n\t\tif (input && input.type === 'hidden')\n\t\t{\n\t\t\tif (file.getServerFileId() === null)\n\t\t\t{\n\t\t\t\tthis.#resetHiddenField(file);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tinput.value = file.getServerFileId();\n\t\t\t}\n\t\t}\n\t}\n\n\t#resetHiddenField(file: UploaderFile): void\n\t{\n\t\tconst input: ?HTMLInputElement = this.#hiddenFields.get(file.getId());\n\t\tif (input)\n\t\t{\n\t\t\tDom.remove(input);\n\t\t\tthis.#hiddenFields.delete(file.getId());\n\t\t}\n\t}\n\n\t#resetHiddenFields(): void\n\t{\n\t\t[...this.#hiddenFields.values()].forEach((input: HTMLInputElement): void => {\n\t\t\tDom.remove(input);\n\t\t});\n\n\t\tthis.#hiddenFields = [];\n\t}\n\n\t#syncInputPositions(): void\n\t{\n\t\tconst container: ?HTMLElement = this.getHiddenFieldsContainer();\n\t\tif (!container)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.getFiles().forEach((file: UploaderFile): void => {\n\t\t\tconst input: ?HTMLInputElement = this.#hiddenFields.get(file.getId());\n\t\t\tif (input)\n\t\t\t{\n\t\t\t\tDom.append(input, container);\n\t\t\t}\n\t\t});\n\t}\n}\n","const isImage = (blob: Blob): boolean => {\n\treturn /^image\\/[\\d.a-z-]+$/i.test(blob.type);\n};\n\nexport default isImage;\n","const Marker = {\n\tJPEG: 0xFFD8,\n\tAPP1: 0xFFE1,\n\tEXIF: 0x45786966,\n\tTIFF: 0x4949,\n\tOrientation: 0x0112,\n\tUnknown: 0xFF00,\n};\n\nconst getUint16 = (view, offset, little = false) => view.getUint16(offset, little);\nconst getUint32 = (view, offset, little = false) => view.getUint32(offset, little);\n\nconst getJpegOrientation = (file) => {\n\treturn new Promise((resolve, reject) => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = function(e) {\n\t\t\tconst view = new DataView(e.target.result);\n\t\t\tif (getUint16(view, 0) !== Marker.JPEG)\n\t\t\t{\n\t\t\t\tresolve(-1);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst length = view.byteLength;\n\t\t\tlet offset = 2;\n\n\t\t\twhile (offset < length)\n\t\t\t{\n\t\t\t\tconst marker = getUint16(view, offset);\n\t\t\t\toffset += 2;\n\n\t\t\t\t// APP1 Marker\n\t\t\t\tif (marker === Marker.APP1)\n\t\t\t\t{\n\t\t\t\t\toffset += 2;\n\t\t\t\t\tif (getUint32(view, offset) !== Marker.EXIF)\n\t\t\t\t\t{\n\t\t\t\t\t\t// no EXIF\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst little = getUint16(view, (offset += 6)) === Marker.TIFF;\n\t\t\t\t\toffset += getUint32(view, offset + 4, little);\n\n\t\t\t\t\tconst tags = getUint16(view, offset, little);\n\t\t\t\t\toffset += 2;\n\n\t\t\t\t\tfor (let i = 0; i < tags; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\t// Found the orientation tag\n\t\t\t\t\t\tif (getUint16(view, offset + i * 12, little) === Marker.Orientation)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tresolve(getUint16(view, offset + i * 12 + 8, little));\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ((marker & Marker.Unknown) === Marker.Unknown)\n\t\t\t\t{\n\t\t\t\t\toffset += getUint16(view, offset);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tbreak; // Invalid\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Nothing found\n\t\t\tresolve(-1);\n\t\t};\n\n\t\treader.readAsArrayBuffer(file.slice(0, 64 * 1024));\n\t});\n};\n\nexport default getJpegOrientation;\n","const isJpeg = (blob: Blob): boolean => {\n\treturn /^image\\/jpeg$/i.test(blob.type);\n};\n\nexport default isJpeg;\n"],"names":["FileStatus","INIT","ADDED","LOADING","PENDING","UPLOADING","COMPLETE","LOAD_FAILED","UPLOAD_FAILED","FileOrigin","CLIENT","SERVER","FileEvent","ADD","BEFORE_UPLOAD","UPLOAD_START","UPLOAD_ERROR","UPLOAD_PROGRESS","UPLOAD_COMPLETE","UPLOAD_CONTROLLER_INIT","LOAD_START","LOAD_PROGRESS","LOAD_COMPLETE","LOAD_ERROR","LOAD_CONTROLLER_INIT","REMOVE_ERROR","REMOVE_COMPLETE","REMOVE_CONTROLLER_INIT","STATE_CHANGE","STATUS_CHANGE","VALIDATE_FILE_ASYNC","PREPARE_FILE_ASYNC","UploaderError","BaseError","constructor","code","args","message","Type","isString","description","customData","isPlainObject","length","replacements","Object","keys","forEach","key","Loc","hasMessage","getMessage","isStringFilled","origin","Origin","type","USER","setDescription","createFromAjaxErrors","errors","isArrayFilled","uploaderError","find","error","system","setOrigin","setType","console","SYSTEM","UNKNOWN","createFromError","name","getDescription","text","getOrigin","values","includes","getType","clone","options","JSON","parse","stringify","toString","getCode","toJSON","getCustomData","AbstractUploadController","EventEmitter","server","setEventNamespace","getServer","getOptions","getOption","option","defaultValue","isUndefined","upload","file","Error","abort","AbstractLoadController","load","AbstractRemoveController","remove","crypto","window","msCrypto","process","require","webcrypto","createUniqueId","replaceAll","part","getRandomValues","Uint8Array","getExtensionFromType","subtype","split","pop","test","counter","createFileFromBlob","blob","fileName","newFileName","date","Date","getFullYear","getMonth","getDate","extension","File","lastModified","now","lastModifiedDate","slice","size","regexp","isDataUri","str","match","createBlobFromDataUri","dataURI","byteString","atob","mimeString","buffer","ArrayBuffer","view","i","codePointAt","Blob","getFileExtension","filename","position","lastIndexOf","Math","max","imageExtensions","Set","isResizableImage","mimeType","isFile","toLowerCase","has","formatFileSize","base","units","getUnits","currentSize","isInteger","toFixed","fileSizeUnits","UploaderFile","source","fileOptions","create","CallbackCollection","update","isBlob","isNumber","serverFileId","id","preload","subscribeFromOptions","events","canLoad","emit","shouldForceServerLoad","callbacks","subscribe","isComplete","isUploadable","isUploadFailed","getError","canUpload","event","BaseEvent","data","isDefaultPrevented","prepareEvent","emitAsync","then","catch","prepareError","addError","getStatus","removeFromServer","isLoading","isUploading","getUploadController","setUploadController","controller","isNull","changed","subscribeOnce","getData","progress","setProgress","fileInfo","setLoadController","validationEvent","preparationEvent","preparationError","validationError","setRemoveController","isReadyToUpload","isLoadable","isRemoveable","isFailed","isLoadFailed","getBinary","setFile","getName","setName","setSize","setServerFileId","setWidth","width","setHeight","height","setTreatImageAsFile","treatImageAsFile","setClientPreview","clientPreview","clientPreviewWidth","clientPreviewHeight","setServerPreview","serverPreviewUrl","serverPreviewWidth","serverPreviewHeight","setDownloadUrl","downloadUrl","setCustomData","loadController","uploadController","removeController","property","value","getExtension","getSize","getSizeFormatted","getId","getServerFileId","getServerId","getDownloadUrl","url","getWidth","getHeight","flag","isBoolean","shouldTreatImageAsFile","getPreviewUrl","getClientPreview","getClientPreviewUrl","getServerPreviewUrl","getPreviewWidth","getClientPreviewWidth","getServerPreviewWidth","getPreviewHeight","getClientPreviewHeight","getServerPreviewHeight","revokeClientPreviewUrl","URL","createObjectURL","revokeObjectURL","isImage","getProgress","push","getErrors","getState","entries","item","currentKey","currentValue","customProperty","undefined","serverId","status","sizeFormatted","failed","previewUrl","previewWidth","previewHeight","clientPreviewUrl","handlers","isFunction","onComplete","getEmitter","onError","eventName","unsubscribeAll","Chunk","offset","getNextRetryDelay","shift","setRetries","retries","isArray","getOffset","UploadController","nextChunk","clearTimeout","getFile","getChunkSize","getChunkOffset","getToken","setToken","token","chunk","totalSize","isOnlyOneChunk","normalize","headers","encodeURIComponent","rangeStart","rangeEnd","rangeHeader","controllerOptions","getControllerOptions","Ajax","runAction","preparePost","getParameters","getController","onrequeststart","xhr","onprogressupload","lengthComputable","uploadedBytes","min","loaded","floor","response","shouldRetry","nextDelay","setTimeout","currentChunkSize","nextOffset","fileRange","getChunkRetryDelays","pendingQueues","WeakMap","loadingFiles","loadMultiple","timeout","queue","get","tasks","Runtime","debounce","loadInternal","aborted","set","filter","task","delete","fileIds","onprogress","total","files","fileResults","fileResult","success","ServerLoadController","ClientLoadController","queues","removeMultiple","removeInternal","fileId","RemoveController","ServerlessLoadController","Server","serverOptions","chunkSize","getDefaultChunkSize","forceChunkSize","chunkRetryDelays","controllerClasses","controllerClass","fn","getClass","TypeError","loadControllerOptions","uploadControllerOptions","removeControllerOptions","createUploadController","createServerLoadController","createDefaultServerLoadController","createClientLoadController","createServerlessLoadController","createRemoveController","settings","Extension","getSettings","getChunkMinSize","getChunkMaxSize","Filter","uploader","filterOptions","getUploader","apply","FileSizeFilter","setMaxFileSize","maxFileSize","setMinFileSize","minFileSize","setMaxTotalFileSize","maxTotalFileSize","setImageMaxFileSize","imageMaxFileSize","setImageMinFileSize","imageMinFileSize","setTreatOversizeImageAsFile","treatOversizeImageAsFile","Promise","resolve","reject","getMaxFileSize","maxFileSizeInBytes","getMinFileSize","minFileSizeInBytes","getImageMaxFileSize","shouldTreatOversizeImageAsFile","imageMaxFileSizeInBytes","getImageMinFileSize","imageMinFileSizeInBytes","getMaxTotalFileSize","getTotalSize","maxTotalFileSizeInBytes","isValidFileType","fileTypes","baseMimeType","replace","fileType","trim","charAt","FileTypeFilter","getAcceptedFileTypes","getArrayBuffer","arrayBuffer","fileReader","FileReader","readAsArrayBuffer","onload","result","onerror","convertStringToBuffer","compareBuffers","dataView","dest","start","j","getUint8","GIF87a","GIF89a","Gif","DataView","getUint16","PNG_SIGNATURE","IHDR_SIGNATURE","FRIED_CHUNK_NAME","Png","getUint32","BMP_SIGNATURE","Bmp","abs","getInt32","EXIF_SIGNATURE","Jpeg","orientation","byteLength","exifBlock","getOrientation","Marker","BIG_ENDIAN","LITTLE_ENDIAN","byteAlign","isBigEndian","isLittleEndian","extractOrientation","littleEndian","idfDirectoryEntries","IDF_ENTRY_BYTES","NUM_DIRECTORY_ENTRIES_BYTES","directoryEntryNumber","end","block","byteOffset","tagNumber","dataFormat","numberOfComponents","RIFF_HEADER","WEBP_SIGNATURE","VP8_SIGNATURE","VP8L_SIGNATURE","VP8X_SIGNATURE","Webp","headerType","headerView","bits","extendedHeader","validStart","validEnd","trunc","jpg","typeHandlers","gif","png","bmp","jpeg","jpe","webp","getImageSize","typeHandler","ImageSizeFilter","setImageMinWidth","imageMinWidth","setImageMinHeight","imageMinHeight","setImageMaxWidth","imageMaxWidth","setImageMaxHeight","imageMaxHeight","setIgnoreUnknownImageTypes","ignoreUnknownImageTypes","getImageMinWidth","getImageMinHeight","minWidth","minHeight","getImageMaxWidth","getImageMaxHeight","maxWidth","maxHeight","getIgnoreUnknownImageTypes","warn","createWorker","workerBlob","workerURL","worker","Worker","post","callback","transfer","onmessage","postMessage","terminate","BitmapWorker","self","createImageBitmap","bitmap","ResizeWorker","getResizedImageSizeSource","createImagePreviewCanvasSource","sharpenSource","shouldSharpenSource","getResizedImageSize","Function","targetWidth","targetHeight","useOriginalSize","close","createImagePreviewCanvas","offscreenCanvas","sharpen","shouldSharpen","previewBitmap","transferToImageBitmap","log","loadImage","image","document","createElement","src","naturalWidth","naturalHeight","imageSource","newWidth","newHeight","round","isPageContext","parent","createCanvas","canvasWidth","canvasHeight","canvas","OffscreenCanvas","context","getContext","imageSmoothingQuality","drawImage","currentImageWidth","currentImageHeight","currentImageSource","resizingCanvas","halfImageWidth","halfImageHeight","resizingCanvasContext","outputCanvas","outputCanvasContext","imageData","mode","upscale","ratioWidth","ratioHeight","ratio","canvasPrototype","HTMLCanvasElement","prototype","hasToBlobSupport","toBlob","canUseOffscreenCanvas","convertCanvasToBlob","quality","convertToBlob","toDataURL","supportedMimeTypes","Browser","isSafari","isSupportedMimeType","mixFactor","weights","katet","sqrt","half","destinationData","createImageData","destinationBuffer","sourceBuffer","getImageData","y","x","sy","sx","dstOff","red","green","blue","cy","cx","scy","scx","srcOff","wt","putImageData","scaleX","scaleY","scale","createImagePreview","getCanvasToBlobType","mimeTypeMode","getFilenameWithoutExtension","extensionMap","renameFileToMatchMimeType","canCreateImageBitmap","ImageBitmap","ua","navigator","userAgent","regex","exec","resizeImage","resizeWorker","preview","transferFromImageBitmap","loadImageDataFallback","finally","bitmapWorker","imageBitmap","handleImageLoad","isVideo","createVideoPreview","seekTime","video","setAttribute","Event","bind","currentTime","duration","videoWidth","videoHeight","ImagePreviewFilter","setImagePreviewWidth","imagePreviewWidth","setImagePreviewHeight","imagePreviewHeight","setImagePreviewQuality","imagePreviewQuality","setImagePreviewUpscale","imagePreviewUpscale","setImagePreviewResizeMode","imagePreviewResizeMode","setImagePreviewMimeType","imagePreviewMimeType","setImagePreviewMimeTypeMode","imagePreviewMimeTypeMode","setImagePreviewFilter","imagePreviewFilter","invokeFilter","resizeOptions","getImagePreviewWidth","getImagePreviewHeight","getImagePreviewQuality","getImagePreviewUpscale","getImagePreviewResizeMode","getImagePreviewMimeType","getImagePreviewMimeTypeMode","overrides","ImageResizeFilter","setResizeWidth","imageResizeWidth","setResizeHeight","imageResizeHeight","setResizeMode","imageResizeMode","setResizeMimeType","imageResizeMimeType","setResizeMimeTypeMode","imageResizeMimeTypeMode","setResizeQuality","imageResizeQuality","setResizeFilter","imageResizeFilter","getResizeWidth","getResizeHeight","getResizeMode","getResizeQuality","getResizeMimeType","getResizeMimeTypeMode","UploaderStatus","STARTED","STOPPED","UploaderEvent","ERROR","MAX_FILE_COUNT_EXCEEDED","DESTROY","BEFORE_BROWSE","BEFORE_DROP","BEFORE_PASTE","BEFORE_FILES_ADD","FILE_BEFORE_ADD","FILE_ADD_START","FILE_LOAD_START","FILE_LOAD_PROGRESS","FILE_LOAD_COMPLETE","FILE_ERROR","FILE_ADD","FILE_REMOVE","FILE_UPLOAD_START","FILE_UPLOAD_PROGRESS","FILE_UPLOAD_COMPLETE","FILE_COMPLETE","FILE_STATUS_CHANGE","FILE_STATE_CHANGE","FilterType","VALIDATION","PREPARATION","getFilesInDirectory","entry","dirCounter","fileCounter","resolveIfDone","readEntries","dirEntry","directoryReader","createReader","readBatch","fileEntry","isDirectory","isDirectoryEntry","webkitGetAsEntry","isFileSystemItem","kind","getFilesFromItem","getAsFile","getFilesFromDataTransfer","dataTransfer","browseFolders","items","map","all","fileGroups","group","hasDataTransferOnlyFiles","every","isFilePasted","types","texts","canAppendFileToForm","DataTransfer","add","input","assignFileToInput","instances","Map","Uploader","getById","getInstances","uploaderOptions","Text","getRandom","multiple","acceptOnlyImages","acceptOnlyImagesGlobal","getGlobalOption","setAcceptOnlyImages","acceptedFileTypes","setAcceptedFileTypes","acceptedFileTypesGlobal","ignoredFileNames","setIgnoredFileNames","setMaxFileCount","maxFileCount","setAllowReplaceSingle","allowReplaceSingle","assignBrowse","browseElement","assignDropzone","dropElement","assignPaste","pasteElement","setHiddenFieldsContainer","hiddenFieldsContainer","setHiddenFieldName","hiddenFieldName","setAssignAsFile","assignAsFile","setAssignServerFile","assignServerFile","setAutoUpload","autoUpload","setMaxParallelUploads","maxParallelUploads","setMaxParallelLoads","maxParallelLoads","addFilter","addFilters","filters","addFiles","path","globalOptions","fileList","isArrayLike","results","addFile","getIgnoredFileNames","isMultiple","shouldReplaceSingle","fileToReplace","removeFile","preloaded","getPendingFileCount","destroy","unassignBrowseAll","unassignDropzoneAll","unassignPasteAll","removeFilesFromServer","removeFiles","setPrototypeOf","getFiles","fileOrId","index","indexOf","filterEntity","ClassName","Reflection","htmlElement","nodes","isElementNode","node","tagName","acceptAttr","getAttribute","onBrowseClickHandler","join","unassignBrowse","unbind","unassignDropzone","unassignPaste","getHiddenFieldsContainer","element","querySelector","container","getHiddenFieldName","shouldAssignAsFile","shouldAssignServerFile","reduce","shouldAutoUpload","getMaxParallelUploads","number","getMaxParallelLoads","getUploadingFileCount","getImageExtensions","shouldAcceptOnlyImages","fileNames","getMaxFileCount","preventDefault","getTarget","totalNewFiles","totalFiles","firstFilter","current","next","splice","click","currentTarget","dragEvent","clipboardEvent","clipboardData","currentUploads","pendingFiles","pendingUploads","limit","pendingFile","currentLoads","Dom","style","visibility","left","top","append","JPEG","APP1","EXIF","TIFF","Orientation","Unknown","little","getJpegOrientation","reader","e","target","marker","tags","isJpeg"],"mappings":"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"}