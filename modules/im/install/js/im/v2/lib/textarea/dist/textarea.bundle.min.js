this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(e,t,s){"use strict";const n="BX.Messenger.v2.Textarea.ResizeManager";var l=babelHelpers.classPrivateFieldLooseKey("observer");var o=babelHelpers.classPrivateFieldLooseKey("textareaHeight");var i=babelHelpers.classPrivateFieldLooseKey("initObserver");class a extends s.EventEmitter{constructor(){super();Object.defineProperty(this,i,{value:c});Object.defineProperty(this,l,{writable:true,value:void 0});Object.defineProperty(this,o,{writable:true,value:void 0});this.setEventNamespace(n);babelHelpers.classPrivateFieldLooseBase(this,i)[i]()}observeTextarea(e){babelHelpers.classPrivateFieldLooseBase(this,l)[l].observe(e);babelHelpers.classPrivateFieldLooseBase(this,o)[o]=e.clientHeight}unobserveTextarea(e){babelHelpers.classPrivateFieldLooseBase(this,l)[l].unobserve(e);babelHelpers.classPrivateFieldLooseBase(this,o)[o]=0}}function c(){babelHelpers.classPrivateFieldLooseBase(this,l)[l]=new ResizeObserver((e=>{e.forEach((e=>{var s;const n=(s=e.borderBoxSize)==null?void 0:s[0].blockSize;if(t.Type.isNumber(n)&&n!==babelHelpers.classPrivateFieldLooseBase(this,o)[o]){this.emit(a.events.onHeightChange,{newHeight:n});babelHelpers.classPrivateFieldLooseBase(this,o)[o]=n}}))}))}a.events={onHeightChange:"onHeightChange"};const r="\t";const v="\n";const u="Key";const d={addTab(e){const t=e.selectionStart+1;const s=e.value.slice(0,e.selectionStart);const n=e.value.slice(e.selectionEnd);const l=`${s}${r}${n}`;e.value=l;e.selectionStart=t;e.selectionEnd=t;return l},removeTab(e){const t=e.value.slice(e.selectionStart-1,e.selectionStart);if(t!==r){return e.value}const s=e.selectionStart-1;const n=e.value.slice(0,e.selectionStart-1);const l=e.value.slice(e.selectionEnd);const o=`${n}${l}`;e.value=o;e.selectionStart=s;e.selectionEnd=s;return o},handleDecorationTag(e,t){t=t.replace(u,"").toLowerCase();const s=`[${t}]`;const n=`[/${t}]`;const l=e.value.slice(e.selectionStart,e.selectionEnd);if(!l){return e.value}const o=l.toLowerCase().startsWith(s)&&l.toLowerCase().endsWith(n);if(o){return this.removeDecorationTag(e,t)}else{return this.addDecorationTag(e,t)}},addDecorationTag(e,t){const s=`[${t}]`;const n=`[/${t}]`;const l=s.length+n.length;const o=e.selectionStart;const i=e.selectionEnd+l;const a=e.value.slice(0,e.selectionStart);const c=e.value.slice(e.selectionStart,e.selectionEnd);const r=e.value.slice(e.selectionEnd);const v=`${a}${s}${c}${n}${r}`;e.value=v;e.selectionStart=o;e.selectionEnd=i;return v},removeDecorationTag(e,t){const s=`[${t}]`;const n=`[/${t}]`;const l=s.length+n.length;const o=e.selectionStart;const i=e.selectionEnd-l;const a=e.value.slice(0,e.selectionStart);const c=e.selectionStart+s.length;const r=e.selectionEnd-n.length;const v=e.value.slice(c,r);const u=e.value.slice(e.selectionEnd);const d=`${a}${v}${u}`;e.value=d;e.selectionStart=o;e.selectionEnd=i;return d},addNewLine(e){const t=e.selectionStart+1;const s=e.value.slice(0,e.selectionStart);const n=e.value.slice(e.selectionEnd);const l=`${s}${v}${n}`;e.value=l;e.selectionStart=t;e.selectionEnd=t;return l},insertText(e,t={}){const{text:s,withNewLine:n=false,replace:l=false}=t;const o=e.selectionStart+s.length+1;let i="";if(l){i="";e.value="";e.selectionStart=0;e.selectionEnd=0}if(e.value.length===0){i=s}else{const t=e.value.slice(0,e.selectionStart);const l=e.value.slice(e.selectionEnd);i=n?`${e.value}${v}${s}`:`${t} ${s} ${l}`}e.focus({preventScroll:true});e.value=i;e.selectionStart=o;e.selectionEnd=o;return i},insertMention(e,t={}){const{textToInsert:s,textToReplace:n=""}=t;const l=n.length>0;let o="";let i=e.selectionStart+s.length+1;if(l){i-=n.length;const t=e.value.slice(0,e.selectionStart-n.length);const l=e.value.slice(e.selectionStart);o=`${t}${s} ${l}`}else{const t=e.value.slice(0,e.selectionStart);const n=e.value.slice(e.selectionEnd);o=`${t}${s} ${n}`}e.focus({preventScroll:true});e.value=o;e.selectionStart=i;e.selectionEnd=i;return o}};e.Textarea=d;e.ResizeManager=a})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX,BX.Event);
//# sourceMappingURL=textarea.bundle.map.js