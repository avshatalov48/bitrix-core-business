{"version":3,"file":"registry.bundle.js","sources":["../src/base/handlers/message.js","../src/base/handlers/chat.js","../src/base/handlers/tariff.js","../src/base/handlers/user.js","../src/base/handlers/desktop.js","../src/base/handlers/settings.js","../src/base/handlers/comments.js","../src/base/handlers/application.js","../src/base/handlers/collab.js","../src/base/base.js","../src/recent/classes/new-message-manager.js","../src/recent/classes/recent-update-manager.js","../src/recent/recent.js","../src/notification.js","../src/sidebar.js","../src/notifier.js","../src/online.js","../src/counter.js"],"sourcesContent":["import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\nimport { Store } from 'ui.vue3.vuex';\n\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { CopilotManager } from 'im.v2.lib.copilot';\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { UserManager } from 'im.v2.lib.user';\nimport { UuidManager } from 'im.v2.lib.uuid';\nimport { WritingManager } from 'im.v2.lib.writing';\nimport { EventType, DialogScrollThreshold, UserRole, ChatType } from 'im.v2.const';\nimport { MessageService } from 'im.v2.provider.service';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\nimport type {\n\tMessageAddParams,\n\tMessageUpdateParams,\n\tMessageDeleteParams,\n\tMessageDeleteCompleteParams,\n\tReadMessageParams,\n\tReadMessageOpponentParams,\n\tPinAddParams,\n\tPinDeleteParams,\n\tAddReactionParams,\n\tDeleteReactionParams,\n} from '../../types/message';\nimport type { PullExtraParams, RawFile, RawUser, RawMessage, RawChat } from '../../types/common';\n\ntype UserId = number;\n\nexport class MessagePullHandler\n{\n\t#store: Store;\n\t#messageViews: {[messageId: string]: Set<UserId>} = {};\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\thandleMessageAdd(params: MessageAddParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handleMessageAdd', params);\n\t\tthis.#setMessageChat(params);\n\t\tthis.#setUsers(params);\n\t\tthis.#setFiles(params);\n\t\tthis.#setAdditionalEntities(params);\n\t\tthis.#setCommentInfo(params);\n\t\tthis.#setCopilotRole(params);\n\n\t\tconst messageWithTemplateId = this.#store.getters['messages/isInChatCollection']({\n\t\t\tmessageId: params.message.templateId,\n\t\t});\n\n\t\tconst messageWithRealId = this.#store.getters['messages/isInChatCollection']({\n\t\t\tmessageId: params.message.id,\n\t\t});\n\n\t\t// update message with parsed link info\n\t\tif (messageWithRealId)\n\t\t{\n\t\t\tLogger.warn('New message pull handler: we already have this message', params.message);\n\t\t\tvoid this.#store.dispatch('messages/update', {\n\t\t\t\tid: params.message.id,\n\t\t\t\tfields: { ...params.message, error: false },\n\t\t\t});\n\t\t\tthis.#sendScrollEvent(params.chatId);\n\t\t}\n\t\telse if (!messageWithRealId && messageWithTemplateId)\n\t\t{\n\t\t\tLogger.warn('New message pull handler: we already have the TEMPORARY message', params.message);\n\t\t\tvoid this.#store.dispatch('messages/updateWithId', {\n\t\t\t\tid: params.message.templateId,\n\t\t\t\tfields: { ...params.message, error: false },\n\t\t\t});\n\t\t}\n\t\t// it's an opponent message or our own message from somewhere else\n\t\telse if (!messageWithRealId && !messageWithTemplateId)\n\t\t{\n\t\t\tconst hasLoadingMessage: boolean = this.#store.getters['messages/hasLoadingMessageByMessageId'](\n\t\t\t\tparams.message.templateId,\n\t\t\t);\n\t\t\tif (hasLoadingMessage)\n\t\t\t{\n\t\t\t\tvoid this.#store.dispatch('messages/deleteLoadingMessageByMessageId', {\n\t\t\t\t\tmessageId: params.message.templateId,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tLogger.warn('New message pull handler: we dont have this message', params.message);\n\t\t\tthis.#handleAddingMessageToModel(params);\n\t\t}\n\n\t\tWritingManager.getInstance().stopWriting({\n\t\t\tdialogId: params.dialogId,\n\t\t\tuserId: params.message.senderId,\n\t\t});\n\n\t\tthis.#updateDialog(params);\n\t}\n\n\thandleMessageUpdate(params: MessageUpdateParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handleMessageUpdate', params);\n\t\tWritingManager.getInstance().stopWriting({\n\t\t\tdialogId: params.dialogId,\n\t\t\tuserId: params.senderId,\n\t\t});\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: params.id,\n\t\t\tfields: {\n\t\t\t\ttext: params.text,\n\t\t\t\tparams: params.params,\n\t\t\t},\n\t\t});\n\t\tthis.#sendScrollEvent(params.chatId);\n\t}\n\n\thandleMessageDelete(params: MessageDeleteParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handleMessageDelete', params);\n\t\tWritingManager.getInstance().stopWriting({\n\t\t\tdialogId: params.dialogId,\n\t\t\tuserId: params.senderId,\n\t\t});\n\n\t\tthis.#deleteSelectedMessage(params.id);\n\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: params.id,\n\t\t\tfields: {\n\t\t\t\ttext: '',\n\t\t\t\tisDeleted: true,\n\t\t\t\tfiles: [],\n\t\t\t\tattach: [],\n\t\t\t\treplyId: 0,\n\t\t\t},\n\t\t});\n\t}\n\n\thandleMessageDeleteComplete(params: MessageDeleteCompleteParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handleMessageDeleteComplete', params);\n\t\tWritingManager.getInstance().stopWriting({\n\t\t\tdialogId: params.dialogId,\n\t\t\tuserId: params.senderId,\n\t\t});\n\n\t\tthis.#deleteSelectedMessage(params.id);\n\n\t\tconst areChannelCommentsOpened = this.#store.getters['messages/comments/areOpenedForChannelPost'](params.id);\n\t\tif (areChannelCommentsOpened)\n\t\t{\n\t\t\tEventEmitter.emit(EventType.dialog.closeComments);\n\t\t\tAnalytics.getInstance().messageDelete.onDeletedPostNotification({\n\t\t\t\tdialogId: params.dialogId,\n\t\t\t\tmessageId: params.id,\n\t\t\t});\n\t\t\tthis.#showNotification(Loc.getMessage('IM_CONTENT_CHAT_CONTEXT_MESSAGE_NOT_FOUND'));\n\t\t}\n\n\t\tthis.#store.dispatch('messages/delete', {\n\t\t\tid: params.id,\n\t\t});\n\n\t\tconst dialogUpdateFields = {\n\t\t\tcounter: params.counter,\n\t\t};\n\n\t\tconst lastMessageWasDeleted = Boolean(params.newLastMessage);\n\t\tif (lastMessageWasDeleted)\n\t\t{\n\t\t\tdialogUpdateFields.lastMessageId = params.newLastMessage.id;\n\t\t\tdialogUpdateFields.lastMessageViews = params.lastMessageViews;\n\n\t\t\tthis.#store.dispatch('messages/store', params.newLastMessage);\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: params.dialogId,\n\t\t\tfields: dialogUpdateFields,\n\t\t});\n\t}\n\n\thandleAddReaction(params: AddReactionParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handleAddReaction', params);\n\t\tconst {\n\t\t\tactualReactions: { reaction: actualReactionsState, usersShort },\n\t\t\tuserId,\n\t\t\treaction,\n\t\t} = params;\n\t\tif (Core.getUserId() === userId)\n\t\t{\n\t\t\tactualReactionsState.ownReactions = [reaction];\n\t\t}\n\n\t\tconst userManager = new UserManager();\n\t\tuserManager.addUsersToModel(usersShort);\n\n\t\tthis.#store.dispatch('messages/reactions/set', [actualReactionsState]);\n\t}\n\n\thandleDeleteReaction(params: DeleteReactionParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handleDeleteReaction', params);\n\t\tconst { actualReactions: { reaction: actualReactionsState } } = params;\n\t\tthis.#store.dispatch('messages/reactions/set', [actualReactionsState]);\n\t}\n\n\thandleMessageParamsUpdate(params)\n\t{\n\t\tLogger.warn('MessagePullHandler: handleMessageParamsUpdate', params);\n\n\t\tthis.#store.dispatch('messages/update', {\n\t\t\tid: params.id,\n\t\t\tchatId: params.chatId,\n\t\t\tfields: { params: params.params },\n\t\t});\n\t}\n\n\thandleReadMessage(params: ReadMessageParams, extra: PullExtraParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handleReadMessage', params);\n\t\tconst uuidManager = UuidManager.getInstance();\n\t\tif (uuidManager.hasActionUuid(extra.action_uuid))\n\t\t{\n\t\t\tLogger.warn('MessagePullHandler: handleReadMessage: we have this uuid, skip');\n\t\t\tuuidManager.removeActionUuid(extra.action_uuid);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('messages/readMessages', {\n\t\t\tchatId: params.chatId,\n\t\t\tmessageIds: params.viewedMessages,\n\t\t}).then(() => {\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: params.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\tcounter: params.counter,\n\t\t\t\t\tlastId: params.lastId,\n\t\t\t\t},\n\t\t\t});\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('MessagePullHandler: error handling readMessage', error);\n\t\t});\n\t}\n\n\thandleReadMessageOpponent(params: ReadMessageOpponentParams)\n\t{\n\t\tif (params.userId === Core.getUserId())\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tLogger.warn('MessagePullHandler: handleReadMessageOpponent', params);\n\t\tthis.#updateMessageViewedByOthers(params);\n\t\tthis.#updateChatLastMessageViews(params);\n\t}\n\n\thandlePinAdd(params: PinAddParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handlePinAdd', params);\n\t\tthis.#setFiles(params);\n\t\tthis.#setUsers(params);\n\t\tthis.#store.dispatch('messages/store', params.additionalMessages);\n\t\tthis.#store.dispatch('messages/pin/add', {\n\t\t\tchatId: params.pin.chatId,\n\t\t\tmessageId: params.pin.messageId,\n\t\t});\n\t\tif (Core.getUserId() !== params.pin.authorId)\n\t\t{\n\t\t\t// this.#sendScrollEvent(params.link.chatId);\n\t\t}\n\t}\n\n\thandlePinDelete(params: PinDeleteParams)\n\t{\n\t\tLogger.warn('MessagePullHandler: handlePinDelete', params);\n\t\tthis.#store.dispatch('messages/pin/delete', {\n\t\t\tchatId: params.chatId,\n\t\t\tmessageId: params.messageId,\n\t\t});\n\t}\n\n\t// helpers\n\t#setMessageChat(params: MessageAddParams)\n\t{\n\t\tconst chat = params.chat?.[params.chatId];\n\t\tif (!chat)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst chatToAdd = { ...params.chat[params.chatId], dialogId: params.dialogId };\n\t\tconst dialogExists = Boolean(this.#getDialog(params.dialogId));\n\t\tconst messageWithoutNotification = !params.notify || params.message?.params?.NOTIFY === 'N';\n\t\tif (!dialogExists && !messageWithoutNotification && !chatToAdd.role)\n\t\t{\n\t\t\tchatToAdd.role = UserRole.member;\n\t\t}\n\t\tthis.#store.dispatch('chats/set', chatToAdd);\n\t}\n\n\t#setUsers(params: {users: {[userId: string]: RawUser} | []})\n\t{\n\t\tif (!params.users)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst userManager = new UserManager();\n\t\tuserManager.setUsersToModel(Object.values(params.users));\n\t}\n\n\t#setFiles(params: {files: {[fileId: string]: RawFile} | [], message?: RawMessage})\n\t{\n\t\tif (!params.files)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst files = Object.values(params.files);\n\t\tfiles.forEach((file: RawFile) => {\n\t\t\tvoid this.#store.dispatch('files/set', file);\n\t\t});\n\t}\n\n\t#setAdditionalEntities(params: MessageAddParams): void\n\t{\n\t\tif (!params.message.additionalEntities)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\tadditionalMessages,\n\t\t\tmessages,\n\t\t\tfiles,\n\t\t\tusers,\n\t\t} = params.message.additionalEntities;\n\t\tconst newMessages = [...messages, ...additionalMessages];\n\t\tthis.#store.dispatch('messages/store', newMessages);\n\t\tthis.#store.dispatch('files/set', files);\n\t\tthis.#store.dispatch('users/set', users);\n\t}\n\n\t#setCommentInfo(params: MessageAddParams): void\n\t{\n\t\tconst chat: RawChat = params.chat?.[params.chatId];\n\t\tif (!chat || chat.type !== ChatType.comment)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('messages/comments/set', {\n\t\t\tmessageId: chat.parent_message_id,\n\t\t\tchatId: params.chatId,\n\t\t\tmessageCount: chat.message_count,\n\t\t});\n\t\tthis.#store.dispatch('messages/comments/setLastUser', {\n\t\t\tmessageId: chat.parent_message_id,\n\t\t\tnewUserId: params.message.senderId,\n\t\t});\n\t}\n\n\t#handleAddingMessageToModel(params: MessageAddParams)\n\t{\n\t\tconst dialog = this.#getDialog(params.dialogId, true);\n\t\tif (dialog.hasNextPage)\n\t\t{\n\t\t\tthis.#store.dispatch('messages/store', params.message);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](params.dialogId);\n\t\tconst unreadMessages: ImModelMessage[] = this.#store.getters['messages/getChatUnreadMessages'](params.chatId);\n\t\tconst RELOAD_LIMIT = MessageService.getMessageRequestLimit() * 5;\n\t\tif (dialog.inited && !chatIsOpened && unreadMessages.length > RELOAD_LIMIT)\n\t\t{\n\t\t\tthis.#store.dispatch('messages/store', params.message);\n\t\t\tconst messageService = new MessageService({ chatId: params.chatId });\n\t\t\tmessageService.reloadMessageList();\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#addMessageToModel(params.message);\n\t\tthis.#sendScrollEvent(params.chatId);\n\t}\n\n\t#addMessageToModel(message)\n\t{\n\t\tconst newMessage = { ...message };\n\t\tif (message.senderId === Core.getUserId())\n\t\t{\n\t\t\tnewMessage.unread = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnewMessage.unread = true;\n\t\t\tnewMessage.viewed = false;\n\t\t}\n\t\tthis.#store.dispatch('messages/setChatCollection', { messages: [newMessage] });\n\t}\n\n\t#updateDialog(params)\n\t{\n\t\tconst dialog = this.#getDialog(params.dialogId, true);\n\n\t\tconst dialogFieldsToUpdate = {};\n\t\tif (params.message.id > dialog.lastMessageId)\n\t\t{\n\t\t\tdialogFieldsToUpdate.lastMessageId = params.message.id;\n\t\t}\n\n\t\tif (params.message.senderId === Core.getUserId() && params.message.id > dialog.lastReadId)\n\t\t{\n\t\t\tdialogFieldsToUpdate.lastId = params.message.id;\n\t\t}\n\n\t\tdialogFieldsToUpdate.counter = params.counter;\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: params.dialogId,\n\t\t\tfields: dialogFieldsToUpdate,\n\t\t});\n\t\tthis.#store.dispatch('chats/clearLastMessageViews', {\n\t\t\tdialogId: params.dialogId,\n\t\t});\n\t}\n\n\t#updateMessageViewedByOthers(params: ReadMessageOpponentParams)\n\t{\n\t\tthis.#store.dispatch('messages/setViewedByOthers', { ids: params.viewedMessages });\n\t}\n\n\t#updateChatLastMessageViews(params: ReadMessageOpponentParams)\n\t{\n\t\tconst dialog = this.#getDialog(params.dialogId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst isLastMessage = params.viewedMessages.includes(dialog.lastMessageId);\n\t\tif (!isLastMessage)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#checkMessageViewsRegistry(params.userId, dialog.lastMessageId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst hasFirstViewer = Boolean(dialog.lastMessageViews.firstViewer);\n\t\tif (hasFirstViewer)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/incrementLastMessageViews', {\n\t\t\t\tdialogId: params.dialogId,\n\t\t\t});\n\t\t\tthis.#updateMessageViewsRegistry(params.userId, dialog.lastMessageId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/setLastMessageViews', {\n\t\t\tdialogId: params.dialogId,\n\t\t\tfields: {\n\t\t\t\tuserId: params.userId,\n\t\t\t\tuserName: params.userName,\n\t\t\t\tdate: params.date,\n\t\t\t\tmessageId: dialog.lastMessageId,\n\t\t\t},\n\t\t});\n\n\t\tthis.#updateMessageViewsRegistry(params.userId, dialog.lastMessageId);\n\t}\n\n\t#checkMessageViewsRegistry(userId: number, messageId: number): boolean\n\t{\n\t\treturn Boolean(this.#messageViews[messageId]?.has(userId));\n\t}\n\n\t#updateMessageViewsRegistry(userId: number, messageId: number): void\n\t{\n\t\tif (!this.#messageViews[messageId])\n\t\t{\n\t\t\tthis.#messageViews[messageId] = new Set();\n\t\t}\n\n\t\tthis.#messageViews[messageId].add(userId);\n\t}\n\n\t#sendScrollEvent(chatId: number)\n\t{\n\t\tEventEmitter.emit(EventType.dialog.scrollToBottom, { chatId, threshold: DialogScrollThreshold.nearTheBottom });\n\t}\n\n\t#getDialog(dialogId: string, temporary: boolean = false): ?ImModelChat\n\t{\n\t\treturn this.#store.getters['chats/get'](dialogId, temporary);\n\t}\n\n\t#setCopilotRole(params)\n\t{\n\t\tif (!params.copilot)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst copilotManager = new CopilotManager();\n\t\tvoid copilotManager.handleMessageAdd(params.copilot);\n\t}\n\n\t#showNotification(text: string): void\n\t{\n\t\tBX.UI.Notification.Center.notify({ content: text });\n\t}\n\n\t#deleteSelectedMessage(messageId: number)\n\t{\n\t\tvoid this.#store.dispatch('messages/select/deleteByMessageId', messageId);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\nimport { Loc } from 'main.core';\n\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Messenger } from 'im.public';\nimport { ChatType, UserRole } from 'im.v2.const';\nimport { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\nimport { CopilotManager } from 'im.v2.lib.copilot';\nimport { CallManager } from 'im.v2.lib.call';\nimport { ChannelManager } from 'im.v2.lib.channel';\nimport { WritingManager } from 'im.v2.lib.writing';\nimport { Logger } from 'im.v2.lib.logger';\nimport { getChatRoleForUser } from 'im.v2.lib.role-manager';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport type {\n\tChatOwnerParams,\n\tChatManagersParams,\n\tChatUserAddParams,\n\tChatUserLeaveParams,\n\tStartWritingParams,\n\tChatUnreadParams,\n\tChatMuteNotifyParams,\n\tChatRenameParams,\n\tChatAvatarParams,\n\tChatConvertParams,\n\tChatDeleteParams,\n} from '../../types/chat';\nimport type { RawUser, RawChat } from '../../types/common';\nimport type { ImModelChat } from 'im.v2.model';\n\nexport class ChatPullHandler\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\thandleChatOwner(params: ChatOwnerParams)\n\t{\n\t\tLogger.warn('ChatPullHandler: handleChatOwner', params);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: params.dialogId,\n\t\t\tfields: {\n\t\t\t\townerId: params.userId,\n\t\t\t},\n\t\t});\n\t}\n\n\thandleChatManagers(params: ChatManagersParams)\n\t{\n\t\tLogger.warn('ChatPullHandler: handleChatManagers', params);\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: params.dialogId,\n\t\t\tfields: {\n\t\t\t\tmanagerList: params.list,\n\t\t\t},\n\t\t});\n\n\t\tconst chat: ImModelChat = this.#store.getters['chats/get'](params.dialogId);\n\t\tif (!chat)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst userInManagerList = params.list.includes(Core.getUserId());\n\t\tif (chat.role === UserRole.member && userInManagerList)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: params.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\trole: UserRole.manager,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tif (chat.role === UserRole.manager && !userInManagerList)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: params.dialogId,\n\t\t\t\tfields: {\n\t\t\t\t\trole: UserRole.member,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\thandleChatUserAdd(params: ChatUserAddParams)\n\t{\n\t\tLogger.warn('ChatPullHandler: handleChatUserAdd', params);\n\t\tconst currentUserId = Core.getUserId();\n\t\tif (params.newUsers.includes(currentUserId))\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: params.dialogId,\n\t\t\t\tfields: { role: UserRole.member },\n\t\t\t});\n\t\t}\n\t\tthis.#updateChatUsers(params);\n\t}\n\n\thandleChatUserLeave(params: ChatUserLeaveParams)\n\t{\n\t\tLogger.warn('ChatPullHandler: handleChatUserLeave', params);\n\t\tconst currentUserIsKicked = params.userId === Core.getUserId();\n\n\t\tif (currentUserIsKicked)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/update', {\n\t\t\t\tdialogId: params.dialogId,\n\t\t\t\tfields: { inited: false },\n\t\t\t});\n\t\t\tthis.#store.dispatch('messages/clearChatCollection', { chatId: params.chatId });\n\t\t}\n\n\t\tconst isChannel = ChannelManager.isChannel(params.dialogId);\n\t\tif (isChannel)\n\t\t{\n\t\t\tvoid this.#store.dispatch('counters/deleteForChannel', {\n\t\t\t\tchannelChatId: params.chatId,\n\t\t\t});\n\t\t}\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](params.dialogId);\n\t\tif (currentUserIsKicked && chatIsOpened)\n\t\t{\n\t\t\tMessenger.openChat();\n\t\t}\n\n\t\tconst chatHasCall = CallManager.getInstance().getCurrentCallDialogId() === params.dialogId;\n\t\tif (currentUserIsKicked && chatHasCall)\n\t\t{\n\t\t\tCallManager.getInstance().leaveCurrentCall();\n\t\t}\n\n\t\tif (currentUserIsKicked)\n\t\t{\n\t\t\tCallManager.getInstance().deleteRecentCall(params.dialogId);\n\t\t}\n\n\t\tthis.#updateChatUsers(params);\n\t}\n\n\thandleStartWriting(params: StartWritingParams)\n\t{\n\t\tif (params.userId === Core.getUserId())\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tLogger.warn('ChatPullHandler: handleStartWriting', params);\n\t\tconst { dialogId, userId, userName } = params;\n\t\tWritingManager.getInstance().startWriting({ dialogId, userId, userName });\n\t\tthis.#store.dispatch('users/update', {\n\t\t\tid: userId,\n\t\t\tfields: {\n\t\t\t\tlastActivityDate: new Date(),\n\t\t\t},\n\t\t});\n\t}\n\n\thandleChatUnread(params: ChatUnreadParams)\n\t{\n\t\tLogger.warn('ChatPullHandler: handleChatUnread', params);\n\t\tlet markedId = 0;\n\t\tif (params.active === true)\n\t\t{\n\t\t\tmarkedId = params.markedId;\n\t\t}\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: params.dialogId,\n\t\t\tfields: { markedId },\n\t\t});\n\t}\n\n\thandleChatMuteNotify(params: ChatMuteNotifyParams)\n\t{\n\t\tif (params.muted)\n\t\t{\n\t\t\tthis.#store.dispatch('chats/mute', {\n\t\t\t\tdialogId: params.dialogId,\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/unmute', {\n\t\t\tdialogId: params.dialogId,\n\t\t});\n\t}\n\n\thandleChatRename(params: ChatRenameParams)\n\t{\n\t\tconst dialog = this.#store.getters['chats/getByChatId'](params.chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: dialog.dialogId,\n\t\t\tfields: {\n\t\t\t\tname: params.name,\n\t\t\t},\n\t\t});\n\t}\n\n\thandleChatAvatar(params: ChatAvatarParams)\n\t{\n\t\tconst dialog = this.#store.getters['chats/getByChatId'](params.chatId);\n\t\tif (!dialog)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: dialog.dialogId,\n\t\t\tfields: {\n\t\t\t\tavatar: params.avatar,\n\t\t\t},\n\t\t});\n\t}\n\n\thandleReadAllChats()\n\t{\n\t\tLogger.warn('ChatPullHandler: handleReadAllChats');\n\t\tthis.#store.dispatch('chats/clearCounters');\n\t\tthis.#store.dispatch('recent/clearUnread');\n\t}\n\n\thandleChatConvert(params: ChatConvertParams)\n\t{\n\t\tLogger.warn('ChatPullHandler: handleChatConvert', params);\n\t\tconst { dialogId, newType, newPermissions } = params;\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId,\n\t\t\tfields: {\n\t\t\t\ttype: newType,\n\t\t\t\tpermissions: newPermissions,\n\t\t\t},\n\t\t});\n\t}\n\n\thandleChatCopilotRoleUpdate(params)\n\t{\n\t\tif (!params.copilotRole)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst copilotManager = new CopilotManager();\n\t\tvoid copilotManager.handleRoleUpdate(params.copilotRole);\n\t}\n\n\thandleChatUpdate(params: {chat: RawChat})\n\t{\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId: params.chat.dialogId,\n\t\t\tfields: {\n\t\t\t\trole: getChatRoleForUser(params.chat),\n\t\t\t\t...params.chat,\n\t\t\t},\n\t\t});\n\t}\n\n\thandleChatDelete(params: ChatDeleteParams)\n\t{\n\t\tLogger.warn('ChatPullHandler: handleChatDelete', params);\n\n\t\tconst currentUserId = Core.getUserId();\n\t\tif (params.userId === currentUserId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.#store.dispatch('chats/update', {\n\t\t\tdialogId: params.dialogId,\n\t\t\tfields: { inited: false },\n\t\t});\n\t\tvoid this.#store.dispatch('recent/delete', { id: params.dialogId });\n\n\t\tconst isCommentChat = params.type === ChatType.comment;\n\t\tif (isCommentChat)\n\t\t{\n\t\t\tvoid this.#store.dispatch('counters/deleteForChannel', {\n\t\t\t\tchannelChatId: params.parentChatId,\n\t\t\t\tcommentChatId: params.chatId,\n\t\t\t});\n\t\t}\n\n\t\tconst isChannel = ChannelManager.isChannel(params.dialogId);\n\t\tif (isChannel)\n\t\t{\n\t\t\tvoid this.#store.dispatch('counters/deleteForChannel', {\n\t\t\t\tchannelChatId: params.chatId,\n\t\t\t});\n\t\t}\n\n\t\tvoid this.#store.dispatch('messages/clearChatCollection', { chatId: params.chatId });\n\n\t\tconst chatIsOpened = this.#store.getters['application/isChatOpen'](params.dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\tAnalytics.getInstance().chatDelete.onChatDeletedNotification(params.dialogId);\n\t\t\tthis.#showNotification(Loc.getMessage('IM_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t\tvoid LayoutManager.getInstance().clearCurrentLayoutEntityId();\n\t\t\tvoid LayoutManager.getInstance().deleteLastOpenedElementById(params.dialogId);\n\t\t}\n\n\t\tconst chatHasCall = CallManager.getInstance().getCurrentCallDialogId() === params.dialogId;\n\t\tif (chatHasCall)\n\t\t{\n\t\t\tCallManager.getInstance().leaveCurrentCall();\n\t\t}\n\t}\n\n\t#updateChatUsers(params: {\n\t\tusers?: {[userId: string]: RawUser},\n\t\tdialogId: string,\n\t\tuserCount: number\n\t})\n\t{\n\t\tif (params.users)\n\t\t{\n\t\t\tconst userManager = new UserManager();\n\t\t\tuserManager.setUsersToModel(Object.values(params.users));\n\t\t}\n\n\t\tthis.#store.dispatch('chats/update', {\n\t\t\tdialogId: params.dialogId,\n\t\t\tfields: { userCounter: params.userCount },\n\t\t});\n\t}\n\n\t#showNotification(text: string): void\n\t{\n\t\tBX.UI.Notification.Center.notify({ content: text });\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { ChangeTariffParams } from '../../types/tariff';\n\nexport class TariffPullHandler\n{\n\thandleChangeTariff(params: ChangeTariffParams)\n\t{\n\t\tLogger.warn('TariffPullHandler: handleChangeTariff', params);\n\t\tconst { tariffRestrictions } = params;\n\t\tif (!tariffRestrictions)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (tariffRestrictions.fullChatHistory?.isAvailable === true)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid Core.getStore().dispatch('application/tariffRestrictions/set', tariffRestrictions);\n\t}\n}\n","import { Store } from 'ui.vue3.vuex';\n\nimport { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { UserInviteParams } from '../../types/user';\nimport type { UserShowInRecentParams } from '../../types/recent';\n\nexport class UserPullHandler\n{\n\t#store: Store;\n\n\tconstructor()\n\t{\n\t\tthis.#store = Core.getStore();\n\t}\n\n\thandleUserInvite(params: UserInviteParams)\n\t{\n\t\tif (params.invited)\n\t\t{\n\t\t\tconst userManager = new UserManager();\n\t\t\tuserManager.setUsersToModel([params.user]);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#store.dispatch('users/update', {\n\t\t\tid: params.userId,\n\t\t\tfields: params.user,\n\t\t});\n\t}\n\n\thandleUserShowInRecent(params: UserShowInRecentParams)\n\t{\n\t\tconst usersToStore = params.items.map((item) => item.user);\n\n\t\tconst userManager = new UserManager();\n\t\tuserManager.setUsersToModel(usersToStore);\n\t}\n}\n","import { Logger } from 'im.v2.lib.logger';\nimport { DesktopManager } from 'im.v2.lib.desktop';\nimport { CounterManager } from 'im.v2.lib.counter';\n\nimport type { DesktopOnlineParams } from '../../types/desktop';\n\nexport class DesktopPullHandler\n{\n\thandleDesktopOnline(params: DesktopOnlineParams)\n\t{\n\t\tLogger.warn('DesktopPullHandler: handleDesktopOnline', params);\n\t\tconst desktopManager = DesktopManager.getInstance();\n\t\tdesktopManager.setDesktopActive(true);\n\t\tdesktopManager.setDesktopVersion(params.version);\n\n\t\tCounterManager.getInstance().removeBrowserTitleCounter();\n\t}\n\n\thandleDesktopOffline()\n\t{\n\t\tLogger.warn('DesktopPullHandler: handleDesktopOffline');\n\t\tDesktopManager.getInstance().setDesktopActive(false);\n\t\tDesktopManager.getInstance().setDesktopVersion(0);\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { SettingsUpdateParams } from '../../types/settings';\n\nexport class SettingsPullHandler\n{\n\thandleSettingsUpdate(params: SettingsUpdateParams)\n\t{\n\t\tLogger.warn('SettingsPullHandler: handleSettingsUpdate', params);\n\t\tObject.entries(params).forEach(([optionName, optionValue]) => {\n\t\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t\t[optionName]: optionValue,\n\t\t\t});\n\t\t});\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { CommentSubscribeParams, ReadAllChannelCommentsParams } from '../../types/comments';\n\nexport class CommentsPullHandler\n{\n\thandleCommentSubscribe(params: CommentSubscribeParams)\n\t{\n\t\tconst { messageId, subscribe } = params;\n\t\tLogger.warn('CommentsPullHandler: handleCommentSubscribe', params);\n\t\tif (subscribe)\n\t\t{\n\t\t\tCore.getStore().dispatch('messages/comments/subscribe', messageId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('messages/comments/unsubscribe', messageId);\n\t}\n\n\thandleReadAllChannelComments(params: ReadAllChannelCommentsParams)\n\t{\n\t\tCore.getStore().dispatch('counters/readAllChannelComments', params.chatId);\n\t}\n}\n","import { Messenger } from 'im.public';\nimport { DesktopManager } from 'im.v2.lib.desktop';\nimport { MessengerSlider } from 'im.v2.lib.slider';\nimport { Logger } from 'im.v2.lib.logger';\nimport type { ApplicationOpenChatParams } from '../../types/application';\n\nexport class ApplicationPullHandler\n{\n\thandleApplicationOpenChat(params: ApplicationOpenChatParams): void\n\t{\n\t\tLogger.warn('ApplicationPullHandler: handleOpenChat', params);\n\n\t\tconst hasFocus = document.hasFocus();\n\t\tif (!hasFocus)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (DesktopManager.isDesktop())\n\t\t{\n\t\t\tif (!DesktopManager.isChatWindow())\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvoid Messenger.openChat(params.dialogId);\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!MessengerSlider.getInstance().isFocused())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid Messenger.openChat(params.dialogId);\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\n\nimport { UpdateCollabEntityCounterParams, UpdateCollabGuestCountParams } from '../../types/collab';\n\nexport class CollabPullHandler\n{\n\thandleUpdateCollabEntityCounter(params: UpdateCollabEntityCounterParams)\n\t{\n\t\tLogger.warn('CollabPullHandler: handleUpdateCollabEntityCounter', params);\n\t\tconst { chatId, counter, entity } = params;\n\t\tvoid Core.getStore().dispatch('chats/collabs/setCounter', { chatId, entity, counter });\n\t}\n\n\thandleUpdateCollabGuestCount(params: UpdateCollabGuestCountParams)\n\t{\n\t\tLogger.warn('CollabPullHandler: handleUpdateCollabGuestCount', params);\n\t\tconst { chatId, guestCount } = params;\n\t\tvoid Core.getStore().dispatch('chats/collabs/setGuestCount', { chatId, guestCount });\n\t}\n}\n","import { MessagePullHandler } from './handlers/message';\nimport { ChatPullHandler } from './handlers/chat';\nimport { TariffPullHandler } from './handlers/tariff';\nimport { UserPullHandler } from './handlers/user';\nimport { DesktopPullHandler } from './handlers/desktop';\nimport { SettingsPullHandler } from './handlers/settings';\nimport { CommentsPullHandler } from './handlers/comments';\nimport { ApplicationPullHandler } from './handlers/application';\nimport { CollabPullHandler } from './handlers/collab';\n\nexport class BasePullHandler\n{\n\t#messageHandler: MessagePullHandler;\n\t#chatHandler: ChatPullHandler;\n\t#userHandler: UserPullHandler;\n\t#desktopHandler: DesktopPullHandler;\n\t#settingsHandler: SettingsPullHandler;\n\t#commentsHandler: CommentsPullHandler;\n\t#tariffPullHandler: TariffPullHandler;\n\t#applicationPullHandler: ApplicationPullHandler;\n\t#collabPullHandler: CollabPullHandler;\n\n\tconstructor()\n\t{\n\t\tthis.#messageHandler = new MessagePullHandler();\n\t\tthis.#chatHandler = new ChatPullHandler();\n\t\tthis.#userHandler = new UserPullHandler();\n\t\tthis.#desktopHandler = new DesktopPullHandler();\n\t\tthis.#settingsHandler = new SettingsPullHandler();\n\t\tthis.#commentsHandler = new CommentsPullHandler();\n\t\tthis.#tariffPullHandler = new TariffPullHandler();\n\t\tthis.#applicationPullHandler = new ApplicationPullHandler();\n\t\tthis.#collabPullHandler = new CollabPullHandler();\n\t}\n\n\tgetModuleId(): string\n\t{\n\t\treturn 'im';\n\t}\n\n\t// region 'message'\n\thandleMessage(params)\n\t{\n\t\tthis.#messageHandler.handleMessageAdd(params);\n\t}\n\n\thandleMessageChat(params)\n\t{\n\t\tthis.#messageHandler.handleMessageAdd(params);\n\t}\n\n\thandleMessageUpdate(params)\n\t{\n\t\tthis.#messageHandler.handleMessageUpdate(params);\n\t}\n\n\thandleMessageDelete(params)\n\t{\n\t\tthis.#messageHandler.handleMessageDelete(params);\n\t}\n\n\thandleMessageDeleteComplete(params)\n\t{\n\t\tthis.#messageHandler.handleMessageDeleteComplete(params);\n\t}\n\n\thandleAddReaction(params)\n\t{\n\t\tthis.#messageHandler.handleAddReaction(params);\n\t}\n\n\thandleDeleteReaction(params)\n\t{\n\t\tthis.#messageHandler.handleDeleteReaction(params);\n\t}\n\n\thandleMessageParamsUpdate(params)\n\t{\n\t\tthis.#messageHandler.handleMessageParamsUpdate(params);\n\t}\n\n\thandleReadMessage(params, extra)\n\t{\n\t\tthis.#messageHandler.handleReadMessage(params, extra);\n\t}\n\n\thandleReadMessageChat(params, extra)\n\t{\n\t\tthis.#messageHandler.handleReadMessage(params, extra);\n\t}\n\n\thandleReadMessageOpponent(params)\n\t{\n\t\tthis.#messageHandler.handleReadMessageOpponent(params);\n\t}\n\n\thandleReadMessageChatOpponent(params)\n\t{\n\t\tthis.#messageHandler.handleReadMessageOpponent(params);\n\t}\n\n\thandlePinAdd(params)\n\t{\n\t\tthis.#messageHandler.handlePinAdd(params);\n\t}\n\n\thandlePinDelete(params)\n\t{\n\t\tthis.#messageHandler.handlePinDelete(params);\n\t}\n\t// endregion 'message'\n\n\t// region 'chat'\n\thandleChatOwner(params)\n\t{\n\t\tthis.#chatHandler.handleChatOwner(params);\n\t}\n\n\thandleChatManagers(params)\n\t{\n\t\tthis.#chatHandler.handleChatManagers(params);\n\t}\n\n\thandleChatUserAdd(params)\n\t{\n\t\tthis.#chatHandler.handleChatUserAdd(params);\n\t}\n\n\thandleChatUserLeave(params)\n\t{\n\t\tthis.#chatHandler.handleChatUserLeave(params);\n\t}\n\n\thandleStartWriting(params)\n\t{\n\t\tthis.#chatHandler.handleStartWriting(params);\n\t}\n\n\thandleChatUnread(params)\n\t{\n\t\tthis.#chatHandler.handleChatUnread(params);\n\t}\n\n\thandleReadAllChats()\n\t{\n\t\tthis.#chatHandler.handleReadAllChats();\n\t}\n\n\thandleChatMuteNotify(params)\n\t{\n\t\tthis.#chatHandler.handleChatMuteNotify(params);\n\t}\n\n\thandleChatRename(params)\n\t{\n\t\tthis.#chatHandler.handleChatRename(params);\n\t}\n\n\thandleChatAvatar(params)\n\t{\n\t\tthis.#chatHandler.handleChatAvatar(params);\n\t}\n\n\thandleChatUpdate(params)\n\t{\n\t\tthis.#chatHandler.handleChatUpdate(params);\n\t}\n\n\thandleChatDelete(params)\n\t{\n\t\tthis.#chatHandler.handleChatDelete(params);\n\t}\n\n\thandleChatConvert(params)\n\t{\n\t\tthis.#chatHandler.handleChatConvert(params);\n\t}\n\n\thandleChatCopilotRoleUpdate(params)\n\t{\n\t\tthis.#chatHandler.handleChatCopilotRoleUpdate(params);\n\t}\n\t// endregion 'chat'\n\n\t// region 'user'\n\thandleUserInvite(params)\n\t{\n\t\tthis.#userHandler.handleUserInvite(params);\n\t}\n\n\thandleUserShowInRecent(params)\n\t{\n\t\tthis.#userHandler.handleUserShowInRecent(params);\n\t}\n\t// endregion 'user'\n\n\t// region 'desktop'\n\thandleDesktopOnline(params)\n\t{\n\t\tthis.#desktopHandler.handleDesktopOnline(params);\n\t}\n\n\thandleDesktopOffline()\n\t{\n\t\tthis.#desktopHandler.handleDesktopOffline();\n\t}\n\t// endregion 'desktop'\n\n\t// region 'settings'\n\thandleSettingsUpdate(params)\n\t{\n\t\tthis.#settingsHandler.handleSettingsUpdate(params);\n\t}\n\t// endregion 'settings'\n\n\t// region 'comments'\n\thandleCommentSubscribe(params)\n\t{\n\t\tthis.#commentsHandler.handleCommentSubscribe(params);\n\t}\n\n\thandleReadAllChannelComments(params)\n\t{\n\t\tthis.#commentsHandler.handleReadAllChannelComments(params);\n\t}\n\t// endregion 'comments'\n\n\t// region 'tariff'\n\thandleChangeTariff(params)\n\t{\n\t\tthis.#tariffPullHandler.handleChangeTariff(params);\n\t}\n\t// endregion 'tariff'\n\n\t// region 'collab'\n\thandleUpdateCollabEntityCounter(params)\n\t{\n\t\tthis.#collabPullHandler.handleUpdateCollabEntityCounter(params);\n\t}\n\n\thandleUpdateCollabGuestCount(params)\n\t{\n\t\tthis.#collabPullHandler.handleUpdateCollabGuestCount(params);\n\t}\n\t// endregion 'collab'\n\n\t// region 'application'\n\thandleApplicationOpenChat(params)\n\t{\n\t\tthis.#applicationPullHandler.handleApplicationOpenChat(params);\n\t}\n\t// endregion 'application'\n}\n","import { Core } from 'im.v2.application.core';\nimport { ChatType } from 'im.v2.const';\nimport { ChannelManager } from 'im.v2.lib.channel';\n\nimport type { PullExtraParams, RawChat } from '../../types/common';\nimport type { MessageAddParams } from '../../types/message';\n\nconst ActionNameByChatType = {\n\t[ChatType.copilot]: 'recent/setCopilot',\n\t[ChatType.channel]: 'recent/setChannel',\n\t[ChatType.openChannel]: 'recent/setChannel',\n\t[ChatType.generalChannel]: 'recent/setChannel',\n\t[ChatType.collab]: 'recent/setCollab',\n\tdefault: 'recent/setRecent',\n};\n\nexport class NewMessageManager\n{\n\t#params: MessageAddParams;\n\t#extra: PullExtraParams;\n\n\tconstructor(params: MessageAddParams, extra: PullExtraParams = {})\n\t{\n\t\tthis.#params = params;\n\t\tthis.#extra = extra;\n\t}\n\n\tgetChatId(): number\n\t{\n\t\treturn this.#params.chatId;\n\t}\n\n\tgetParentChatId(): number\n\t{\n\t\treturn this.getChat()?.parent_chat_id || 0;\n\t}\n\n\tgetChat(): ?RawChat\n\t{\n\t\tconst chatId = this.getChatId();\n\n\t\treturn this.#params.chat?.[chatId];\n\t}\n\n\tgetChatType(): string\n\t{\n\t\tconst chat = this.getChat();\n\n\t\treturn chat?.type ?? '';\n\t}\n\n\tisLinesChat(): boolean\n\t{\n\t\treturn Boolean(this.#params.lines);\n\t}\n\n\tisCommentChat(): boolean\n\t{\n\t\treturn this.getChatType() === ChatType.comment;\n\t}\n\n\tisCollabChat(): boolean\n\t{\n\t\treturn this.getChatType() === ChatType.collab;\n\t}\n\n\tisChannelChat(): boolean\n\t{\n\t\treturn ChannelManager.channelTypes.has(this.getChatType());\n\t}\n\n\tisUserInChat(): boolean\n\t{\n\t\tconst chatUsers = this.#params.userInChat[this.getChatId()];\n\t\tif (!chatUsers || this.isChannelListEvent())\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\treturn chatUsers.includes(Core.getUserId());\n\t}\n\n\tisChannelListEvent(): boolean\n\t{\n\t\treturn this.isChannelChat() && this.#extra.is_shared_event;\n\t}\n\n\tneedToSkipMessageEvent(): boolean\n\t{\n\t\treturn this.isLinesChat() || this.isCommentChat() || !this.isUserInChat();\n\t}\n\n\tgetAddActions(): string[]\n\t{\n\t\t// for open channels there are two similar P&P events\n\t\t// one adds data to default recent, another adds data to channel recent\n\t\t// close channels are added only to default recent\n\t\tif (this.isChannelChat() && !this.isChannelListEvent())\n\t\t{\n\t\t\treturn [ActionNameByChatType.default];\n\t\t}\n\n\t\tif (this.isCollabChat())\n\t\t{\n\t\t\treturn [ActionNameByChatType.default, ActionNameByChatType[ChatType.collab]];\n\t\t}\n\n\t\tconst newMessageChatType = this.getChatType();\n\t\tconst actionName = ActionNameByChatType[newMessageChatType] ?? ActionNameByChatType.default;\n\n\t\treturn [actionName];\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\n\nimport type { RecentUpdateParams } from '../../types/recent';\n\nexport class RecentUpdateManager\n{\n\t#params: RecentUpdateParams;\n\n\tconstructor(params: RecentUpdateParams)\n\t{\n\t\tthis.#params = params;\n\t}\n\n\tsetLastMessageInfo(): void\n\t{\n\t\tthis.#setMessageChat();\n\t\tthis.#setUsers();\n\t\tthis.#setFiles();\n\t\tthis.#setMessage();\n\t}\n\n\tgetDialogId(): string\n\t{\n\t\treturn this.#params.chat.dialogId;\n\t}\n\n\tgetLastMessageId(): number\n\t{\n\t\tconst [lastMessage] = this.#params.messages;\n\n\t\treturn lastMessage.id;\n\t}\n\n\t#setUsers(): void\n\t{\n\t\tconst userManager = new UserManager();\n\t\tuserManager.setUsersToModel(this.#params.users);\n\t}\n\n\t#setFiles(): void\n\t{\n\t\tCore.getStore().dispatch('files/set', this.#params.files);\n\t}\n\n\t#setMessageChat(): void\n\t{\n\t\tconst chat = { ...this.#params.chat, counter: this.#params.counter, dialogId: this.getDialogId() };\n\t\tCore.getStore().dispatch('chats/set', chat);\n\t}\n\n\t#setMessage(): void\n\t{\n\t\tconst [lastChannelPost] = this.#params.messages;\n\t\tCore.getStore().dispatch('messages/store', lastChannelPost);\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { ImModelMessage } from 'im.v2.model';\n\nimport { NewMessageManager } from './classes/new-message-manager';\nimport { RecentUpdateManager } from './classes/recent-update-manager';\n\nimport type { PullExtraParams } from '../types/common';\nimport type {\n\tMessageAddParams,\n\tAddReactionParams,\n\tMessageDeleteCompleteParams,\n} from '../types/message';\nimport type { ChatUnreadParams } from '../types/chat';\nimport type { UserInviteParams } from '../types/user';\nimport type { RecentUpdateParams, UserShowInRecentParams } from '../types/recent';\nimport type { ImModelRecentItem } from 'im.v2.model';\n\n// noinspection JSUnusedGlobalSymbols\nexport class RecentPullHandler\n{\n\tgetModuleId(): string\n\t{\n\t\treturn 'im';\n\t}\n\n\thandleMessage(params, extra)\n\t{\n\t\tthis.handleMessageAdd(params, extra);\n\t}\n\n\thandleMessageChat(params, extra)\n\t{\n\t\tthis.handleMessageAdd(params, extra);\n\t}\n\n\thandleMessageAdd(params: MessageAddParams, extra: PullExtraParams)\n\t{\n\t\tconst manager = new NewMessageManager(params, extra);\n\t\tif (manager.needToSkipMessageEvent(params))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tLogger.warn('RecentPullHandler: handleMessageAdd', params);\n\t\tconst newRecentItem = {\n\t\t\tid: params.dialogId,\n\t\t\tchatId: params.chatId,\n\t\t\tmessageId: params.message.id,\n\t\t};\n\n\t\tconst recentItem: ?ImModelRecentItem = Core.getStore().getters['recent/get'](params.dialogId);\n\t\tif (recentItem)\n\t\t{\n\t\t\tnewRecentItem.isFakeElement = false;\n\t\t\tnewRecentItem.isBirthdayPlaceholder = false;\n\t\t\tnewRecentItem.liked = false;\n\t\t}\n\n\t\tconst addActions = manager.getAddActions();\n\t\taddActions.forEach((actionName) => {\n\t\t\tCore.getStore().dispatch(actionName, newRecentItem);\n\t\t});\n\t}\n\n\thandleMessageDeleteComplete(params: MessageDeleteCompleteParams)\n\t{\n\t\tconst lastMessageWasDeleted = Boolean(params.newLastMessage);\n\t\tif (lastMessageWasDeleted)\n\t\t{\n\t\t\tthis.#updateRecentForMessageDelete(params.dialogId, params.newLastMessage.id);\n\t\t}\n\t}\n\n\thandleChatUnread(params: ChatUnreadParams)\n\t{\n\t\tLogger.warn('RecentPullHandler: handleChatUnread', params);\n\t\tCore.getStore().dispatch('recent/unread', {\n\t\t\tid: params.dialogId,\n\t\t\taction: params.active,\n\t\t});\n\t}\n\n\thandleAddReaction(params: AddReactionParams)\n\t{\n\t\tLogger.warn('RecentPullHandler: handleAddReaction', params);\n\t\tconst recentItem: ?ImModelRecentItem = Core.getStore().getters['recent/get'](params.dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst chatIsOpened = Core.getStore().getters['application/isChatOpen'](params.dialogId);\n\t\tif (chatIsOpened)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst message: ?ImModelMessage = Core.getStore().getters['recent/getMessage'](params.dialogId);\n\t\tconst isOwnLike = Core.getUserId() === params.userId;\n\t\tconst isOwnLastMessage = Core.getUserId() === message.authorId;\n\t\tif (isOwnLike || !isOwnLastMessage)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/like', {\n\t\t\tid: params.dialogId,\n\t\t\tmessageId: params.actualReactions.reaction.messageId,\n\t\t\tliked: true,\n\t\t});\n\t}\n\n\thandleChatPin(params)\n\t{\n\t\tLogger.warn('RecentPullHandler: handleChatPin', params);\n\t\tconst recentItem: ?ImModelRecentItem = Core.getStore().getters['recent/get'](params.dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/pin', {\n\t\t\tid: params.dialogId,\n\t\t\taction: params.active,\n\t\t});\n\t}\n\n\thandleChatHide(params)\n\t{\n\t\tLogger.warn('RecentPullHandler: handleChatHide', params);\n\t\tconst recentItem: ?ImModelRecentItem = Core.getStore().getters['recent/get'](params.dialogId);\n\t\tif (!recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/delete', {\n\t\t\tid: params.dialogId,\n\t\t});\n\t}\n\n\thandleChatUserLeave(params)\n\t{\n\t\tLogger.warn('RecentPullHandler: handleChatUserLeave', params);\n\t\tconst recentItem: ?ImModelRecentItem = Core.getStore().getters['recent/get'](params.dialogId);\n\t\tif (!recentItem || params.userId !== Core.getUserId())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/delete', {\n\t\t\tid: params.dialogId,\n\t\t});\n\t}\n\n\thandleUserInvite(params: UserInviteParams)\n\t{\n\t\tLogger.warn('RecentPullHandler: handleUserInvite', params);\n\n\t\tconst messageId = Utils.text.getUuidV4();\n\t\tCore.getStore().dispatch('messages/store', {\n\t\t\tid: messageId,\n\t\t\tdate: params.date,\n\t\t});\n\n\t\tCore.getStore().dispatch('recent/setRecent', {\n\t\t\tid: params.user.id,\n\t\t\tinvited: params.invited ?? false,\n\t\t\tisFakeElement: true,\n\t\t\tmessageId,\n\t\t});\n\t}\n\n\thandleUserShowInRecent(params: UserShowInRecentParams)\n\t{\n\t\tLogger.warn('RecentPullHandler: handleUserShowInRecent', params);\n\t\tconst { items } = params;\n\n\t\titems.forEach((item) => {\n\t\t\tconst messageId = Utils.text.getUuidV4();\n\t\t\tCore.getStore().dispatch('messages/store', {\n\t\t\t\tid: messageId,\n\t\t\t\tdate: item.date,\n\t\t\t});\n\n\t\t\tCore.getStore().dispatch('recent/setRecent', {\n\t\t\t\tid: item.user.id,\n\t\t\t\tmessageId,\n\t\t\t});\n\t\t});\n\t}\n\n\thandleRecentUpdate(params: RecentUpdateParams)\n\t{\n\t\tLogger.warn('RecentPullHandler: handleRecentUpdate', params);\n\t\tconst manager = new RecentUpdateManager(params);\n\t\tmanager.setLastMessageInfo();\n\n\t\tconst newRecentItem = {\n\t\t\tid: manager.getDialogId(),\n\t\t\tmessageId: manager.getLastMessageId(),\n\t\t\tlastActivityDate: params.lastActivityDate,\n\t\t};\n\n\t\tCore.getStore().dispatch('recent/setRecent', newRecentItem);\n\t}\n\n\t#updateRecentForMessageDelete(dialogId: string, newLastMessageId: number): void\n\t{\n\t\tif (!newLastMessageId)\n\t\t{\n\t\t\tCore.getStore().dispatch('recent/delete', { id: dialogId });\n\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('recent/update', {\n\t\t\tid: dialogId,\n\t\t\tfields: { messageId: newLastMessageId },\n\t\t});\n\t}\n}\n","import {Runtime} from 'main.core';\n\nimport {Core} from 'im.v2.application.core';\nimport {UserManager} from 'im.v2.lib.user';\n\nimport type {NotifyAddParams} from './types/notification';\n\nexport class NotificationPullHandler\n{\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.userManager = new UserManager();\n\n\t\tthis.updateCounterDebounced = Runtime.debounce(this.updateCounter, 1500, this);\n\t}\n\n\tgetModuleId(): string\n\t{\n\t\treturn 'im';\n\t}\n\n\tgetSubscriptionType(): string\n\t{\n\t\treturn 'server';\n\t}\n\n\thandleNotifyAdd(params: NotifyAddParams)\n\t{\n\t\tif (params.onlyFlash === true)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.userManager.setUsersToModel(params.users);\n\t\tthis.store.dispatch('notifications/set', params);\n\n\t\tthis.updateCounterDebounced(params.counter);\n\t}\n\n\thandleNotifyConfirm(params)\n\t{\n\t\tthis.store.dispatch('notifications/delete', {\n\t\t\tid: params.id,\n\t\t});\n\n\t\tthis.updateCounterDebounced(params.counter);\n\t}\n\n\thandleNotifyRead(params)\n\t{\n\t\tparams.list.forEach(id => {\n\t\t\tthis.store.dispatch('notifications/read', {ids: [id], read: true});\n\t\t});\n\n\t\tthis.updateCounterDebounced(params.counter);\n\t}\n\n\thandleNotifyUnread(params)\n\t{\n\t\tparams.list.forEach(id => {\n\t\t\tthis.store.dispatch('notifications/read', {ids: [id], read: false});\n\t\t});\n\n\t\tthis.updateCounterDebounced(params.counter);\n\t}\n\n\thandleNotifyReadAll()\n\t{\n\t\tvoid this.store.dispatch('notifications/readAll');\n\t}\n\n\thandleNotifyDelete(params)\n\t{\n\t\tconst idsToDelete = Object.keys(params.id).map(id => Number.parseInt(id, 10));\n\n\t\tidsToDelete.forEach(id => {\n\t\t\tthis.store.dispatch('notifications/delete', {id});\n\t\t});\n\n\t\tthis.updateCounterDebounced(params.counter);\n\t}\n\n\tupdateCounter(counter: number)\n\t{\n\t\tthis.store.dispatch('notifications/setCounter', counter);\n\t}\n}\n","import { Type } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { UserManager } from 'im.v2.lib.user';\nimport { SidebarDetailBlock } from 'im.v2.const';\nimport { ChatUnreadParams } from './types/chat';\n\nimport type {\n\tAddMultidialogParams,\n\tChangeMultidialogSessionsLimitParams,\n\tChangeMultidialogStatusParams,\n} from './types/multidialog';\nimport { MessageChatParams, MessageParams, ReadMessageChatParams, ReadMessageParams } from './types/message';\nimport type { ChatUserAddParams, ChatUserLeaveParams } from './types/chat';\nimport type { ImModelSidebarMultidialogItem } from 'im.v2.model';\n\nexport class SidebarPullHandler\n{\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.userManager = new UserManager();\n\t}\n\n\tgetModuleId(): string\n\t{\n\t\treturn 'im';\n\t}\n\n\t// region members\n\thandleChatUserAdd(params: ChatUserAddParams)\n\t{\n\t\tif (this.getMembersCountFromStore(params.chatId) === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.userManager.setUsersToModel(Object.values(params.users));\n\n\t\tvoid this.store.dispatch('sidebar/members/set', {\n\t\t\tchatId: params.chatId,\n\t\t\tusers: params.newUsers,\n\t\t});\n\t}\n\n\thandleChatUserLeave(params: ChatUserLeaveParams)\n\t{\n\t\tif (this.getMembersCountFromStore(params.chatId) === 0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.store.dispatch('sidebar/members/delete', {\n\t\t\tchatId: params.chatId,\n\t\t\tuserId: params.userId,\n\t\t});\n\t}\n\t// endregion\n\n\t// region task\n\thandleTaskAdd(params)\n\t{\n\t\tif (!this.isSidebarInited(params.link.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.userManager.setUsersToModel(params.users);\n\n\t\tvoid this.store.dispatch('sidebar/tasks/set', {\n\t\t\tchatId: params.link.chatId,\n\t\t\ttasks: [params.link],\n\t\t});\n\t}\n\n\thandleTaskUpdate(params, extra)\n\t{\n\t\tthis.handleTaskAdd(params, extra);\n\t}\n\n\thandleTaskDelete(params)\n\t{\n\t\tif (!this.isSidebarInited(params.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.store.dispatch('sidebar/tasks/delete', {\n\t\t\tchatId: params.chatId,\n\t\t\tid: params.linkId,\n\t\t});\n\t}\n\t// endregion\n\n\t// region meetings\n\thandleCalendarAdd(params)\n\t{\n\t\tif (!this.isSidebarInited(params.link.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.userManager.setUsersToModel(params.users);\n\n\t\tvoid this.store.dispatch('sidebar/meetings/set', {\n\t\t\tchatId: params.link.chatId,\n\t\t\tmeetings: [params.link],\n\t\t});\n\t}\n\n\thandleCalendarUpdate(params, extra)\n\t{\n\t\tthis.handleCalendarAdd(params, extra);\n\t}\n\n\thandleCalendarDelete(params)\n\t{\n\t\tif (!this.isSidebarInited(params.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.store.dispatch('sidebar/meetings/delete', {\n\t\t\tchatId: params.chatId,\n\t\t\tid: params.linkId,\n\t\t});\n\t}\n\t// endregion\n\n\t// region links\n\thandleUrlAdd(params)\n\t{\n\t\tif (!this.isSidebarInited(params.link.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.userManager.setUsersToModel(params.users);\n\n\t\tvoid this.store.dispatch('sidebar/links/set', {\n\t\t\tchatId: params.link.chatId,\n\t\t\tlinks: [params.link],\n\t\t});\n\n\t\tconst counter = this.store.getters['sidebar/links/getCounter'](params.link.chatId);\n\t\tvoid this.store.dispatch('sidebar/links/setCounter', {\n\t\t\tchatId: params.link.chatId,\n\t\t\tcounter: counter + 1,\n\t\t});\n\t}\n\n\thandleUrlDelete(params)\n\t{\n\t\tif (!this.isSidebarInited(params.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.store.dispatch('sidebar/links/delete', {\n\t\t\tchatId: params.chatId,\n\t\t\tid: params.linkId,\n\t\t});\n\t}\n\t// endregion\n\n\t// region favorite\n\thandleMessageFavoriteAdd(params)\n\t{\n\t\tif (!this.isSidebarInited(params.link.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.userManager.setUsersToModel(params.users);\n\t\tvoid this.store.dispatch('files/set', params.files);\n\t\tvoid this.store.dispatch('messages/store', [params.link.message]);\n\n\t\tvoid this.store.dispatch('sidebar/favorites/set', {\n\t\t\tchatId: params.link.chatId,\n\t\t\tfavorites: [params.link],\n\t\t});\n\n\t\tconst counter = this.store.getters['sidebar/favorites/getCounter'](params.link.chatId);\n\t\tvoid this.store.dispatch('sidebar/favorites/setCounter', {\n\t\t\tchatId: params.link.chatId,\n\t\t\tcounter: counter + 1,\n\t\t});\n\t}\n\n\thandleMessageFavoriteDelete(params)\n\t{\n\t\tif (!this.isSidebarInited(params.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.store.dispatch('sidebar/favorites/delete', {\n\t\t\tchatId: params.chatId,\n\t\t\tid: params.linkId,\n\t\t});\n\t}\n\t// endregion\n\n\t// region files\n\thandleFileAdd(params)\n\t{\n\t\tif (!this.isSidebarInited(params.link.chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.userManager.setUsersToModel(params.users);\n\t\tvoid this.store.dispatch('files/set', params.files);\n\n\t\tconst subType = params.link.subType ?? SidebarDetailBlock.fileUnsorted;\n\n\t\tvoid this.store.dispatch('sidebar/files/set', {\n\t\t\tchatId: params.link.chatId,\n\t\t\tfiles: [params.link],\n\t\t\tsubType,\n\t\t});\n\t}\n\n\thandleFileDelete(params)\n\t{\n\t\tconst chatId = Type.isNumber(params.chatId) ? params.chatId : Number.parseInt(params.chatId, 10);\n\t\tif (!this.isSidebarInited(chatId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst sidebarFileId = params.linkId ?? params.fileId;\n\t\tvoid this.store.dispatch('sidebar/files/delete', {\n\t\t\tchatId,\n\t\t\tid: sidebarFileId,\n\t\t});\n\t}\n\t// endregion\n\n\t// region support24\n\n\thandleChangeMultidialogSessionsLimit(params: ChangeMultidialogSessionsLimitParams)\n\t{\n\t\tvoid this.store.dispatch('sidebar/multidialog/setOpenSessionsLimit', params.limit);\n\t}\n\n\thandleAddMultidialog(params: AddMultidialogParams)\n\t{\n\t\tconst { multidialog, count } = params;\n\t\tconst isSupport = multidialog.isSupport;\n\t\tif (!isSupport)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.store.dispatch('sidebar/multidialog/setChatsCount', count);\n\t\tvoid this.store.dispatch('sidebar/multidialog/addMultidialogs', [multidialog]);\n\t}\n\n\thandleReadMessageChat(params: ReadMessageChatParams)\n\t{\n\t\tthis.deleteUnreadSupportChats(params);\n\t}\n\n\thandleReadMessage(params: ReadMessageParams)\n\t{\n\t\tthis.deleteUnreadSupportChats(params);\n\t}\n\n\thandleChangeMultidialogStatus(params: ChangeMultidialogStatusParams)\n\t{\n\t\tconst { bot, chat, multidialog } = params;\n\n\t\tconst isSupport = multidialog.isSupport;\n\t\tif (!isSupport)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (chat)\n\t\t{\n\t\t\tvoid this.store.dispatch('chats/set', chat);\n\t\t}\n\n\t\tif (bot)\n\t\t{\n\t\t\tvoid this.userManager.setUsersToModel(bot);\n\t\t}\n\n\t\tvoid this.store.dispatch('sidebar/multidialog/addMultidialogs', [multidialog]);\n\t}\n\n\thandleMessage(params: MessageParams)\n\t{\n\t\tthis.setUnreadSupportTickets(params.multidialog);\n\t}\n\n\thandleChatUnread(params: ChatUnreadParams)\n\t{\n\t\tconst { chatId, dialogId } = params;\n\n\t\tconst isSupport = this.store.getters['sidebar/multidialog/isSupport'](dialogId);\n\t\tconst isInited = this.store.getters['sidebar/multidialog/isInited'];\n\n\t\tif (isSupport && isInited)\n\t\t{\n\t\t\tvoid this.store.dispatch('sidebar/multidialog/setUnreadChats', [chatId]);\n\t\t}\n\t}\n\t// endregion\n\n\t// region files unsorted and support24\n\thandleMessageChat(params: MessageChatParams)\n\t{\n\t\t// handle new files while migration is not finished.\n\t\tthis.setFiles(params);\n\n\t\t// handle new unread chats.\n\t\tthis.setUnreadSupportTickets(params.multidialog);\n\t}\n\t// endregion\n\n\tdeleteUnreadSupportChats(params: ReadMessageChatParams | ReadMessageParams)\n\t{\n\t\tconst notCounter = params.counter === 0;\n\n\t\tif (notCounter)\n\t\t{\n\t\t\tvoid this.store.dispatch('sidebar/multidialog/deleteUnreadChats', params.chatId);\n\t\t}\n\t}\n\n\tsetUnreadSupportTickets(multidialog: ImModelSidebarMultidialogItem)\n\t{\n\t\tif (!multidialog)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldMultidialog = this.store.getters['sidebar/multidialog/get'](multidialog.chatId);\n\t\tconst status = oldMultidialog?.status || multidialog.status;\n\n\t\tvoid this.store.dispatch('sidebar/multidialog/addMultidialogs', [{ ...multidialog, status }]);\n\t\tvoid this.store.dispatch('sidebar/multidialog/setUnreadChats', [multidialog.chatId]);\n\t}\n\n\tsetFiles(params: MessageChatParams)\n\t{\n\t\tconst { chatId, users, files } = params;\n\n\t\tif (!this.isSidebarInited(chatId) || this.areFilesMigrated())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid this.userManager.setUsersToModel(Object.values(users));\n\t\tvoid this.store.dispatch('files/set', Object.values(files));\n\n\t\tObject.values(files).forEach((file) => {\n\t\t\tvoid this.store.dispatch('sidebar/files/set', {\n\t\t\t\tchatId: file.chatId,\n\t\t\t\tfiles: [file],\n\t\t\t\tsubType: SidebarDetailBlock.fileUnsorted,\n\t\t\t});\n\t\t});\n\t}\n\n\tisSidebarInited(chatId: number): boolean\n\t{\n\t\treturn this.store.getters['sidebar/isInited'](chatId);\n\t}\n\n\tareFilesMigrated(): boolean\n\t{\n\t\treturn this.store.state.sidebar.isFilesMigrated;\n\t}\n\n\tgetMembersCountFromStore(chatId: number): number\n\t{\n\t\treturn this.store.getters['sidebar/members/getSize'](chatId);\n\t}\n}\n","import { Core } from 'im.v2.application.core';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { SoundType, UserStatus, LocalStorageKey, Settings, RawSettings, UserType } from 'im.v2.const';\nimport { Logger } from 'im.v2.lib.logger';\nimport { NotifierManager } from 'im.v2.lib.notifier';\nimport { DesktopManager } from 'im.v2.lib.desktop';\nimport { CallManager } from 'im.v2.lib.call';\nimport { LocalStorageManager } from 'im.v2.lib.local-storage';\nimport { SoundNotificationManager } from 'im.v2.lib.sound-notification';\n\nimport type { MessageAddParams } from './types/message';\nimport type { NotifyAddParams } from './types/notification';\n\nexport class NotifierPullHandler\n{\n\tlastNotificationId: number = 0;\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\n\t\tthis.#setCurrentUserStatus();\n\t\tthis.#restoreLastNotificationId();\n\t}\n\n\tgetModuleId(): string\n\t{\n\t\treturn 'im';\n\t}\n\n\thandleMessage(params, extraData)\n\t{\n\t\tthis.handleMessageAdd(params, extraData);\n\t}\n\n\thandleMessageChat(params, extraData)\n\t{\n\t\tthis.handleMessageAdd(params, extraData);\n\t}\n\n\thandleMessageAdd(params: MessageAddParams, extraData: PullExtraData)\n\t{\n\t\tif (!this.#shouldShowNotification(params, extraData))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.#isChatOpened(params.dialogId))\n\t\t{\n\t\t\tthis.#playOpenedChatMessageSound(params);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#playMessageSound(params);\n\t\tthis.#flashDesktopIcon();\n\n\t\tconst message = this.store.getters['messages/getById'](params.message.id);\n\t\tconst dialog = this.store.getters['chats/get'](params.dialogId, true);\n\t\tconst user = this.store.getters['users/get'](message.authorId);\n\n\t\tNotifierManager.getInstance().showMessage({\n\t\t\tmessage,\n\t\t\tdialog,\n\t\t\tuser,\n\t\t\tlines: Boolean(params.lines),\n\t\t});\n\n\t\tthis.#updateLastNotificationId(params.message.id);\n\t}\n\n\thandleNotifyAdd(params: NotifyAddParams, extraData: PullExtraData)\n\t{\n\t\tif (extraData.server_time_ago > 10)\n\t\t{\n\t\t\tLogger.warn('NotifierPullHandler: notification arrived to the user 30 seconds after it was actually sent, ignore notification');\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (params.id <= this.lastNotificationId)\n\t\t{\n\t\t\tLogger.warn('NotifierPullHandler: new notification id is smaller than lastNotificationId');\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\tparams.onlyFlash === true\n\t\t\t|| this.#isUserDnd()\n\t\t\t|| this.#desktopWillShowNotification()\n\t\t\t|| CallManager.getInstance().hasCurrentCall()\n\t\t)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tif (document.hasFocus())\n\t\t{\n\t\t\tconst areNotificationsOpen = this.store.getters['application/areNotificationsOpen'];\n\t\t\tif (areNotificationsOpen)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst notification = this.store.getters['notifications/getById'](params.id);\n\t\tconst user = this.store.getters['users/get'](params.userId);\n\n\t\tif (params.silent !== 'Y')\n\t\t{\n\t\t\tSoundNotificationManager.getInstance().playOnce(SoundType.reminder);\n\t\t}\n\n\t\tthis.#flashDesktopIcon();\n\n\t\tNotifierManager.getInstance().showNotification(notification, user);\n\n\t\tthis.#updateLastNotificationId(params.id);\n\t}\n\n\t#shouldShowNotification(params: MessageAddParams, extraData: PullExtraData): boolean\n\t{\n\t\tif (extraData.server_time_ago > 10)\n\t\t{\n\t\t\tLogger.warn('NotifierPullHandler: message arrived to the user 30 seconds after it was actually sent, ignore message');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (params.message.id <= this.lastNotificationId)\n\t\t{\n\t\t\tLogger.warn('NotifierPullHandler: new message id is smaller than lastNotificationId');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (Core.getUserId() === params.message.senderId)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif (params.lines && !this.#shouldShowLinesNotification(params))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst messageWithoutNotification = !params.notify || params.message?.params?.NOTIFY === 'N';\n\t\tif (messageWithoutNotification || !this.#shouldShowToUser(params) || this.#desktopWillShowNotification())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst callIsActive = CallManager.getInstance().hasCurrentCall();\n\t\tif (callIsActive && CallManager.getInstance().getCurrentCallDialogId() !== params.dialogId.toString())\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst screenSharingIsActive = CallManager.getInstance().hasCurrentScreenSharing();\n\t\tif (screenSharingIsActive)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t#shouldShowLinesNotification(params: MessageAddParams): boolean\n\t{\n\t\tif (this.#isLinesChatOpened(params.dialogId))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tconst authorId = params.message.senderId;\n\t\tif (authorId > 0 && params.users[authorId].type !== UserType.extranet)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconst counter = this.store.getters['counters/getSpecificLinesCounter'](params.chatId);\n\n\t\treturn counter === 0;\n\t}\n\n\t#isChatOpened(dialogId: string): boolean\n\t{\n\t\tconst isChatOpen = this.store.getters['application/isChatOpen'](dialogId);\n\n\t\treturn Boolean(document.hasFocus() && isChatOpen);\n\t}\n\n\t#isLinesChatOpened(dialogId: string): boolean\n\t{\n\t\tconst isLinesChatOpen = this.store.getters['application/isLinesChatOpen'](dialogId);\n\n\t\treturn Boolean(document.hasFocus() && isLinesChatOpen);\n\t}\n\n\t#isImportantMessage(params: MessageAddParams): boolean\n\t{\n\t\tconst { message } = params;\n\n\t\treturn message.isImportant || message.importantFor.includes(Core.getUserId());\n\t}\n\n\t#shouldShowToUser(params: MessageAddParams): boolean\n\t{\n\t\tif (this.#isImportantMessage(params))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\tconst dialog = this.store.getters['chats/get'](params.dialogId, true);\n\t\tconst isMuted = dialog.muteList.includes(Core.getUserId());\n\n\t\treturn !this.#isUserDnd() && !isMuted;\n\t}\n\n\t#isUserDnd(): boolean\n\t{\n\t\tconst status = this.store.getters['application/settings/get'](Settings.user.status);\n\n\t\treturn status === UserStatus.dnd;\n\t}\n\n\t#desktopWillShowNotification(): boolean\n\t{\n\t\tconst isDesktopChatWindow = DesktopManager.isChatWindow();\n\n\t\treturn !isDesktopChatWindow && DesktopManager.getInstance().isDesktopActive();\n\t}\n\n\t#flashDesktopIcon(): void\n\t{\n\t\tif (!DesktopManager.isDesktop())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tDesktopApi.flashIcon();\n\t}\n\n\t#playOpenedChatMessageSound(params: MessageAddParams)\n\t{\n\t\tif (this.#isImportantMessage(params))\n\t\t{\n\t\t\tSoundNotificationManager.getInstance().forcePlayOnce(SoundType.newMessage2);\n\n\t\t\treturn;\n\t\t}\n\n\t\tSoundNotificationManager.getInstance().playOnce(SoundType.newMessage2);\n\t}\n\n\t#playMessageSound(params: MessageAddParams)\n\t{\n\t\tif (this.#isImportantMessage(params))\n\t\t{\n\t\t\tSoundNotificationManager.getInstance().forcePlayOnce(SoundType.newMessage1);\n\n\t\t\treturn;\n\t\t}\n\n\t\tSoundNotificationManager.getInstance().playOnce(SoundType.newMessage1);\n\t}\n\n\t#restoreLastNotificationId()\n\t{\n\t\tconst rawLastNotificationId = LocalStorageManager.getInstance().get(LocalStorageKey.lastNotificationId, 0);\n\n\t\tthis.lastNotificationId = Number.parseInt(rawLastNotificationId, 10);\n\t}\n\n\t#updateLastNotificationId(notificationId: number)\n\t{\n\t\tconst WRITE_TO_STORAGE_TIMEOUT = 2000;\n\n\t\tthis.lastNotificationId = notificationId;\n\t\tclearTimeout(this.writeToStorageTimeout);\n\t\tthis.writeToStorageTimeout = setTimeout(() => {\n\t\t\tLocalStorageManager.getInstance().set(LocalStorageKey.lastNotificationId, notificationId);\n\t\t}, WRITE_TO_STORAGE_TIMEOUT);\n\t}\n\n\t#setCurrentUserStatus()\n\t{\n\t\tconst applicationData: { settings: RawSettings } = Core.getApplicationData();\n\t\tif (!applicationData.settings?.status)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tCore.getStore().dispatch('application/settings/set', {\n\t\t\t[Settings.user.status]: applicationData.settings.status,\n\t\t});\n\t}\n}\n","import { Type } from 'main.core';\nimport { Core } from 'im.v2.application.core';\n\nexport class OnlinePullHandler\n{\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t}\n\n\tgetModuleId(): string\n\t{\n\t\treturn 'online';\n\t}\n\n\tgetSubscriptionType(): string\n\t{\n\t\treturn 'online';\n\t}\n\n\thandleUserStatus(params: {\n\t\tusers: Object,\n\t})\n\t{\n\t\tconst currentUserId = Core.getUserId();\n\t\tif (Type.isPlainObject(params.users[currentUserId]))\n\t\t{\n\t\t\tconst { status } = params.users[currentUserId];\n\t\t\tthis.store.dispatch('application/settings/set', { status });\n\t\t}\n\n\t\tObject.values(params.users).forEach((userInfo) => {\n\t\t\tthis.store.dispatch('users/update', {\n\t\t\t\tid: userInfo.id,\n\t\t\t\tfields: {\n\t\t\t\t\tlastActivityDate: userInfo.last_activity_date,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}\n}\n","import { Type } from 'main.core';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { NewMessageManager } from 'im.v2.provider.pull';\nimport { Core } from 'im.v2.application.core';\nimport { CounterType } from 'im.v2.const';\n\nimport type { ImModelRecentItem } from 'im.v2.model';\nimport type { MessageAddParams, PullExtraParams, ReadMessageParams, UnreadMessageParams } from 'im.v2.provider.pull';\nimport type { ChatMuteNotifyParams, ChatUnreadParams } from './types/chat';\nimport type { MessageDeleteCompleteParams } from './types/message';\n\ntype CounterParams = {\n\tdialogId: string,\n\tchatId: number,\n\tparentChatId: number,\n\tcounter: number,\n\tmuted: boolean,\n\tunread: boolean,\n\tcounterType: $Values<typeof CounterType>\n};\n\nexport class CounterPullHandler\n{\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t}\n\n\tgetModuleId(): string\n\t{\n\t\treturn 'im';\n\t}\n\n\thandleMessage(params: MessageAddParams, extra: PullExtraParams)\n\t{\n\t\tthis.handleMessageAdd(params, extra);\n\t}\n\n\thandleMessageChat(params: MessageAddParams, extra: PullExtraParams)\n\t{\n\t\tthis.handleMessageAdd(params, extra);\n\t}\n\n\thandleMessageAdd(params: MessageAddParams, extra: PullExtraParams)\n\t{\n\t\tconst manager = new NewMessageManager(params, extra);\n\t\tif (!manager.isCommentChat())\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#updateCommentCounter({\n\t\t\tchannelChatId: manager.getParentChatId(),\n\t\t\tcommentChatId: manager.getChatId(),\n\t\t\tcommentCounter: params.counter,\n\t\t});\n\t}\n\n\thandleMessageDeleteComplete(params: MessageDeleteCompleteParams)\n\t{\n\t\tthis.#handleCounters(params);\n\t}\n\n\thandleReadMessage(params: ReadMessageParams)\n\t{\n\t\tthis.#handleCounters(params);\n\t}\n\n\thandleReadMessageChat(params: ReadMessageParams)\n\t{\n\t\tthis.#handleCounters(params);\n\t}\n\n\thandleUnreadMessage(params: UnreadMessageParams)\n\t{\n\t\tthis.#handleCounters(params);\n\t}\n\n\thandleUnreadMessageChat(params: UnreadMessageParams)\n\t{\n\t\tthis.#handleCounters(params);\n\t}\n\n\thandleChatUnread(params: ChatUnreadParams)\n\t{\n\t\tthis.#handleCounters({\n\t\t\t...params,\n\t\t\tunread: params.active,\n\t\t});\n\t}\n\n\thandleChatMuteNotify(params: ChatMuteNotifyParams)\n\t{\n\t\tthis.#handleCounters(params);\n\t}\n\n\t#handleCounters(params: CounterParams)\n\t{\n\t\tconst {\n\t\t\tchatId,\n\t\t\tdialogId,\n\t\t\tcounter,\n\t\t\tcounterType = CounterType.chat,\n\t\t\tparentChatId = 0,\n\t\t} = params;\n\n\t\tif (counterType === CounterType.openline)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tLogger.warn('CounterPullHandler: handleCounters:', params);\n\n\t\tif (counterType === CounterType.comment)\n\t\t{\n\t\t\tthis.#updateCommentCounter({\n\t\t\t\tchannelChatId: parentChatId,\n\t\t\t\tcommentChatId: chatId,\n\t\t\t\tcommentCounter: counter,\n\t\t\t});\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst recentItem: ?ImModelRecentItem = Core.getStore().getters['recent/get'](dialogId);\n\t\t// for now existing common chats counters are stored in corresponding chat model objects\n\t\tif (recentItem)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst newCounter = this.#getNewCounter(params);\n\t\t// collab counters are stored in two structures - for common chats and collabs\n\t\t// because collab counters are included in both total chat counter and total collab counter\n\t\tif (counterType === CounterType.collab)\n\t\t{\n\t\t\tCore.getStore().dispatch('counters/setUnloadedCollabCounters', { [chatId]: newCounter });\n\t\t}\n\n\t\tCore.getStore().dispatch('counters/setUnloadedChatCounters', { [chatId]: newCounter });\n\t}\n\n\t#getNewCounter(params: CounterParams): number\n\t{\n\t\tconst { counter, muted, unread } = params;\n\n\t\tlet newCounter = 0;\n\t\tif (muted)\n\t\t{\n\t\t\tnewCounter = 0;\n\t\t}\n\t\telse if (unread && counter === 0)\n\t\t{\n\t\t\tnewCounter = 1;\n\t\t}\n\t\telse if (unread && counter > 0)\n\t\t{\n\t\t\tnewCounter = counter;\n\t\t}\n\t\telse if (!unread)\n\t\t{\n\t\t\tnewCounter = counter;\n\t\t}\n\n\t\treturn newCounter;\n\t}\n\n\t#updateCommentCounter(payload: { channelChatId: number, commentChatId: number, commentCounter: number })\n\t{\n\t\tconst { channelChatId, commentChatId, commentCounter } = payload;\n\t\tif (Type.isUndefined(commentCounter))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst counters = {\n\t\t\t[channelChatId]: {\n\t\t\t\t[commentChatId]: commentCounter,\n\t\t\t},\n\t\t};\n\n\t\tCore.getStore().dispatch('counters/setCommentCounters', counters);\n\t}\n}\n"],"names":["MessagePullHandler","constructor","Core","getStore","handleMessageAdd","params","Logger","warn","messageWithTemplateId","getters","messageId","message","templateId","messageWithRealId","id","dispatch","fields","error","chatId","hasLoadingMessage","WritingManager","getInstance","stopWriting","dialogId","userId","senderId","handleMessageUpdate","text","handleMessageDelete","isDeleted","files","attach","replyId","handleMessageDeleteComplete","areChannelCommentsOpened","EventEmitter","emit","EventType","dialog","closeComments","Analytics","messageDelete","onDeletedPostNotification","Loc","getMessage","dialogUpdateFields","counter","lastMessageWasDeleted","Boolean","newLastMessage","lastMessageId","lastMessageViews","handleAddReaction","actualReactions","reaction","actualReactionsState","usersShort","getUserId","ownReactions","userManager","UserManager","addUsersToModel","handleDeleteReaction","handleMessageParamsUpdate","handleReadMessage","extra","uuidManager","UuidManager","hasActionUuid","action_uuid","removeActionUuid","messageIds","viewedMessages","then","lastId","catch","console","handleReadMessageOpponent","handlePinAdd","additionalMessages","pin","authorId","handlePinDelete","chat","chatToAdd","dialogExists","messageWithoutNotification","notify","NOTIFY","role","UserRole","member","users","setUsersToModel","Object","values","forEach","file","additionalEntities","messages","newMessages","type","ChatType","comment","parent_message_id","messageCount","message_count","newUserId","hasNextPage","chatIsOpened","unreadMessages","RELOAD_LIMIT","MessageService","getMessageRequestLimit","inited","length","messageService","reloadMessageList","newMessage","unread","viewed","dialogFieldsToUpdate","lastReadId","ids","isLastMessage","includes","hasFirstViewer","firstViewer","userName","date","has","Set","add","scrollToBottom","threshold","DialogScrollThreshold","nearTheBottom","temporary","copilot","copilotManager","CopilotManager","BX","UI","Notification","Center","content","ChatPullHandler","handleChatOwner","ownerId","handleChatManagers","managerList","list","userInManagerList","manager","handleChatUserAdd","currentUserId","newUsers","handleChatUserLeave","currentUserIsKicked","isChannel","ChannelManager","channelChatId","Messenger","openChat","chatHasCall","CallManager","getCurrentCallDialogId","leaveCurrentCall","deleteRecentCall","handleStartWriting","startWriting","lastActivityDate","Date","handleChatUnread","markedId","active","handleChatMuteNotify","muted","handleChatRename","name","handleChatAvatar","avatar","handleReadAllChats","handleChatConvert","newType","newPermissions","permissions","handleChatCopilotRoleUpdate","copilotRole","handleRoleUpdate","handleChatUpdate","getChatRoleForUser","handleChatDelete","isCommentChat","parentChatId","commentChatId","chatDelete","onChatDeletedNotification","LayoutManager","clearCurrentLayoutEntityId","deleteLastOpenedElementById","userCounter","userCount","TariffPullHandler","handleChangeTariff","tariffRestrictions","fullChatHistory","isAvailable","UserPullHandler","handleUserInvite","invited","user","handleUserShowInRecent","usersToStore","items","map","item","DesktopPullHandler","handleDesktopOnline","desktopManager","DesktopManager","setDesktopActive","setDesktopVersion","version","CounterManager","removeBrowserTitleCounter","handleDesktopOffline","SettingsPullHandler","handleSettingsUpdate","entries","optionName","optionValue","CommentsPullHandler","handleCommentSubscribe","subscribe","handleReadAllChannelComments","ApplicationPullHandler","handleApplicationOpenChat","hasFocus","document","isDesktop","isChatWindow","MessengerSlider","isFocused","CollabPullHandler","handleUpdateCollabEntityCounter","entity","handleUpdateCollabGuestCount","guestCount","BasePullHandler","getModuleId","handleMessage","handleMessageChat","handleReadMessageChat","handleReadMessageChatOpponent","ActionNameByChatType","channel","openChannel","generalChannel","collab","default","NewMessageManager","getChatId","getParentChatId","getChat","parent_chat_id","getChatType","isLinesChat","lines","isCollabChat","isChannelChat","channelTypes","isUserInChat","chatUsers","userInChat","isChannelListEvent","is_shared_event","needToSkipMessageEvent","getAddActions","newMessageChatType","actionName","RecentUpdateManager","setLastMessageInfo","getDialogId","getLastMessageId","lastMessage","lastChannelPost","RecentPullHandler","newRecentItem","recentItem","isFakeElement","isBirthdayPlaceholder","liked","addActions","action","isOwnLike","isOwnLastMessage","handleChatPin","handleChatHide","Utils","getUuidV4","handleRecentUpdate","newLastMessageId","NotificationPullHandler","store","updateCounterDebounced","Runtime","debounce","updateCounter","getSubscriptionType","handleNotifyAdd","onlyFlash","handleNotifyConfirm","handleNotifyRead","read","handleNotifyUnread","handleNotifyReadAll","handleNotifyDelete","idsToDelete","keys","Number","parseInt","SidebarPullHandler","getMembersCountFromStore","handleTaskAdd","isSidebarInited","link","tasks","handleTaskUpdate","handleTaskDelete","linkId","handleCalendarAdd","meetings","handleCalendarUpdate","handleCalendarDelete","handleUrlAdd","links","handleUrlDelete","handleMessageFavoriteAdd","favorites","handleMessageFavoriteDelete","handleFileAdd","subType","SidebarDetailBlock","fileUnsorted","handleFileDelete","Type","isNumber","sidebarFileId","fileId","handleChangeMultidialogSessionsLimit","limit","handleAddMultidialog","multidialog","count","isSupport","deleteUnreadSupportChats","handleChangeMultidialogStatus","bot","setUnreadSupportTickets","isInited","setFiles","notCounter","oldMultidialog","status","areFilesMigrated","state","sidebar","isFilesMigrated","NotifierPullHandler","lastNotificationId","extraData","NotifierManager","showMessage","server_time_ago","hasCurrentCall","areNotificationsOpen","notification","silent","SoundNotificationManager","playOnce","SoundType","reminder","showNotification","callIsActive","toString","screenSharingIsActive","hasCurrentScreenSharing","UserType","extranet","isChatOpen","isLinesChatOpen","isImportant","importantFor","isMuted","muteList","Settings","UserStatus","dnd","isDesktopChatWindow","isDesktopActive","DesktopApi","flashIcon","forcePlayOnce","newMessage2","newMessage1","rawLastNotificationId","LocalStorageManager","get","LocalStorageKey","notificationId","WRITE_TO_STORAGE_TIMEOUT","clearTimeout","writeToStorageTimeout","setTimeout","set","applicationData","getApplicationData","settings","OnlinePullHandler","handleUserStatus","isPlainObject","userInfo","last_activity_date","CounterPullHandler","commentCounter","handleUnreadMessage","handleUnreadMessageChat","counterType","CounterType","openline","newCounter","payload","isUndefined","counters"],"mappings":";;;;;;;;CAYwD;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAoBxD,CAAO,MAAMA,kBAAkB,CAC/B;GAICC,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA,OAHoD;;KAInD,4CAAI,oBAAUC,2BAAI,CAACC,QAAQ,EAAE;;GAG9BC,gBAAgB,CAACC,MAAwB,EACzC;KACCC,uBAAM,CAACC,IAAI,CAAC,sCAAsC,EAAEF,MAAM,CAAC;KAC3D,4CAAI,oCAAiBA,MAAM;KAC3B,4CAAI,wBAAWA,MAAM;KACrB,4CAAI,wBAAWA,MAAM;KACrB,4CAAI,kDAAwBA,MAAM;KAClC,4CAAI,oCAAiBA,MAAM;KAC3B,4CAAI,oCAAiBA,MAAM;KAE3B,MAAMG,qBAAqB,GAAG,4CAAI,kBAAQC,OAAO,CAAC,6BAA6B,CAAC,CAAC;OAChFC,SAAS,EAAEL,MAAM,CAACM,OAAO,CAACC;MAC1B,CAAC;KAEF,MAAMC,iBAAiB,GAAG,4CAAI,kBAAQJ,OAAO,CAAC,6BAA6B,CAAC,CAAC;OAC5EC,SAAS,EAAEL,MAAM,CAACM,OAAO,CAACG;MAC1B,CAAC;;;KAGF,IAAID,iBAAiB,EACrB;OACCP,uBAAM,CAACC,IAAI,CAAC,wDAAwD,EAAEF,MAAM,CAACM,OAAO,CAAC;OACrF,KAAK,4CAAI,kBAAQI,QAAQ,CAAC,iBAAiB,EAAE;SAC5CD,EAAE,EAAET,MAAM,CAACM,OAAO,CAACG,EAAE;SACrBE,MAAM,EAAE;WAAE,GAAGX,MAAM,CAACM,OAAO;WAAEM,KAAK,EAAE;;QACpC,CAAC;OACF,4CAAI,sCAAkBZ,MAAM,CAACa,MAAM;MACnC,MACI,IAAI,CAACL,iBAAiB,IAAIL,qBAAqB,EACpD;OACCF,uBAAM,CAACC,IAAI,CAAC,iEAAiE,EAAEF,MAAM,CAACM,OAAO,CAAC;OAC9F,KAAK,4CAAI,kBAAQI,QAAQ,CAAC,uBAAuB,EAAE;SAClDD,EAAE,EAAET,MAAM,CAACM,OAAO,CAACC,UAAU;SAC7BI,MAAM,EAAE;WAAE,GAAGX,MAAM,CAACM,OAAO;WAAEM,KAAK,EAAE;;QACpC,CAAC;;;UAGE,IAAI,CAACJ,iBAAiB,IAAI,CAACL,qBAAqB,EACrD;OACC,MAAMW,iBAA0B,GAAG,4CAAI,kBAAQV,OAAO,CAAC,uCAAuC,CAAC,CAC9FJ,MAAM,CAACM,OAAO,CAACC,UAAU,CACzB;OACD,IAAIO,iBAAiB,EACrB;SACC,KAAK,4CAAI,kBAAQJ,QAAQ,CAAC,0CAA0C,EAAE;WACrEL,SAAS,EAAEL,MAAM,CAACM,OAAO,CAACC;UAC1B,CAAC;;OAGHN,uBAAM,CAACC,IAAI,CAAC,qDAAqD,EAAEF,MAAM,CAACM,OAAO,CAAC;OAClF,4CAAI,4DAA6BN,MAAM;;KAGxCe,gCAAc,CAACC,WAAW,EAAE,CAACC,WAAW,CAAC;OACxCC,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBC,MAAM,EAAEnB,MAAM,CAACM,OAAO,CAACc;MACvB,CAAC;KAEF,4CAAI,gCAAepB,MAAM;;GAG1BqB,mBAAmB,CAACrB,MAA2B,EAC/C;KACCC,uBAAM,CAACC,IAAI,CAAC,yCAAyC,EAAEF,MAAM,CAAC;KAC9De,gCAAc,CAACC,WAAW,EAAE,CAACC,WAAW,CAAC;OACxCC,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBC,MAAM,EAAEnB,MAAM,CAACoB;MACf,CAAC;KACF,4CAAI,kBAAQV,QAAQ,CAAC,iBAAiB,EAAE;OACvCD,EAAE,EAAET,MAAM,CAACS,EAAE;OACbE,MAAM,EAAE;SACPW,IAAI,EAAEtB,MAAM,CAACsB,IAAI;SACjBtB,MAAM,EAAEA,MAAM,CAACA;;MAEhB,CAAC;KACF,4CAAI,sCAAkBA,MAAM,CAACa,MAAM;;GAGpCU,mBAAmB,CAACvB,MAA2B,EAC/C;KACCC,uBAAM,CAACC,IAAI,CAAC,yCAAyC,EAAEF,MAAM,CAAC;KAC9De,gCAAc,CAACC,WAAW,EAAE,CAACC,WAAW,CAAC;OACxCC,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBC,MAAM,EAAEnB,MAAM,CAACoB;MACf,CAAC;KAEF,4CAAI,kDAAwBpB,MAAM,CAACS,EAAE;KAErC,4CAAI,kBAAQC,QAAQ,CAAC,iBAAiB,EAAE;OACvCD,EAAE,EAAET,MAAM,CAACS,EAAE;OACbE,MAAM,EAAE;SACPW,IAAI,EAAE,EAAE;SACRE,SAAS,EAAE,IAAI;SACfC,KAAK,EAAE,EAAE;SACTC,MAAM,EAAE,EAAE;SACVC,OAAO,EAAE;;MAEV,CAAC;;GAGHC,2BAA2B,CAAC5B,MAAmC,EAC/D;KACCC,uBAAM,CAACC,IAAI,CAAC,iDAAiD,EAAEF,MAAM,CAAC;KACtEe,gCAAc,CAACC,WAAW,EAAE,CAACC,WAAW,CAAC;OACxCC,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBC,MAAM,EAAEnB,MAAM,CAACoB;MACf,CAAC;KAEF,4CAAI,kDAAwBpB,MAAM,CAACS,EAAE;KAErC,MAAMoB,wBAAwB,GAAG,4CAAI,kBAAQzB,OAAO,CAAC,2CAA2C,CAAC,CAACJ,MAAM,CAACS,EAAE,CAAC;KAC5G,IAAIoB,wBAAwB,EAC5B;OACCC,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,MAAM,CAACC,aAAa,CAAC;OACjDC,6BAAS,CAACnB,WAAW,EAAE,CAACoB,aAAa,CAACC,yBAAyB,CAAC;SAC/DnB,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;SACzBb,SAAS,EAAEL,MAAM,CAACS;QAClB,CAAC;OACF,4CAAI,wCAAmB6B,aAAG,CAACC,UAAU,CAAC,2CAA2C,CAAC;;KAGnF,4CAAI,kBAAQ7B,QAAQ,CAAC,iBAAiB,EAAE;OACvCD,EAAE,EAAET,MAAM,CAACS;MACX,CAAC;KAEF,MAAM+B,kBAAkB,GAAG;OAC1BC,OAAO,EAAEzC,MAAM,CAACyC;MAChB;KAED,MAAMC,qBAAqB,GAAGC,OAAO,CAAC3C,MAAM,CAAC4C,cAAc,CAAC;KAC5D,IAAIF,qBAAqB,EACzB;OACCF,kBAAkB,CAACK,aAAa,GAAG7C,MAAM,CAAC4C,cAAc,CAACnC,EAAE;OAC3D+B,kBAAkB,CAACM,gBAAgB,GAAG9C,MAAM,CAAC8C,gBAAgB;OAE7D,4CAAI,kBAAQpC,QAAQ,CAAC,gBAAgB,EAAEV,MAAM,CAAC4C,cAAc,CAAC;;KAG9D,4CAAI,kBAAQlC,QAAQ,CAAC,cAAc,EAAE;OACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBP,MAAM,EAAE6B;MACR,CAAC;;GAGHO,iBAAiB,CAAC/C,MAAyB,EAC3C;KACCC,uBAAM,CAACC,IAAI,CAAC,uCAAuC,EAAEF,MAAM,CAAC;KAC5D,MAAM;OACLgD,eAAe,EAAE;SAAEC,QAAQ,EAAEC,oBAAoB;SAAEC;QAAY;OAC/DhC,MAAM;OACN8B;MACA,GAAGjD,MAAM;KACV,IAAIH,2BAAI,CAACuD,SAAS,EAAE,KAAKjC,MAAM,EAC/B;OACC+B,oBAAoB,CAACG,YAAY,GAAG,CAACJ,QAAQ,CAAC;;KAG/C,MAAMK,WAAW,GAAG,IAAIC,0BAAW,EAAE;KACrCD,WAAW,CAACE,eAAe,CAACL,UAAU,CAAC;KAEvC,4CAAI,kBAAQzC,QAAQ,CAAC,wBAAwB,EAAE,CAACwC,oBAAoB,CAAC,CAAC;;GAGvEO,oBAAoB,CAACzD,MAA4B,EACjD;KACCC,uBAAM,CAACC,IAAI,CAAC,0CAA0C,EAAEF,MAAM,CAAC;KAC/D,MAAM;OAAEgD,eAAe,EAAE;SAAEC,QAAQ,EAAEC;;MAAwB,GAAGlD,MAAM;KACtE,4CAAI,kBAAQU,QAAQ,CAAC,wBAAwB,EAAE,CAACwC,oBAAoB,CAAC,CAAC;;GAGvEQ,yBAAyB,CAAC1D,MAAM,EAChC;KACCC,uBAAM,CAACC,IAAI,CAAC,+CAA+C,EAAEF,MAAM,CAAC;KAEpE,4CAAI,kBAAQU,QAAQ,CAAC,iBAAiB,EAAE;OACvCD,EAAE,EAAET,MAAM,CAACS,EAAE;OACbI,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBF,MAAM,EAAE;SAAEX,MAAM,EAAEA,MAAM,CAACA;;MACzB,CAAC;;GAGH2D,iBAAiB,CAAC3D,MAAyB,EAAE4D,KAAsB,EACnE;KACC3D,uBAAM,CAACC,IAAI,CAAC,uCAAuC,EAAEF,MAAM,CAAC;KAC5D,MAAM6D,WAAW,GAAGC,0BAAW,CAAC9C,WAAW,EAAE;KAC7C,IAAI6C,WAAW,CAACE,aAAa,CAACH,KAAK,CAACI,WAAW,CAAC,EAChD;OACC/D,uBAAM,CAACC,IAAI,CAAC,gEAAgE,CAAC;OAC7E2D,WAAW,CAACI,gBAAgB,CAACL,KAAK,CAACI,WAAW,CAAC;OAE/C;;KAGD,4CAAI,kBAAQtD,QAAQ,CAAC,uBAAuB,EAAE;OAC7CG,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBqD,UAAU,EAAElE,MAAM,CAACmE;MACnB,CAAC,CAACC,IAAI,CAAC,MAAM;OACb,4CAAI,kBAAQ1D,QAAQ,CAAC,cAAc,EAAE;SACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;SACzBP,MAAM,EAAE;WACP8B,OAAO,EAAEzC,MAAM,CAACyC,OAAO;WACvB4B,MAAM,EAAErE,MAAM,CAACqE;;QAEhB,CAAC;MACF,CAAC,CAACC,KAAK,CAAE1D,KAAK,IAAK;;OAEnB2D,OAAO,CAAC3D,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACtE,CAAC;;GAGH4D,yBAAyB,CAACxE,MAAiC,EAC3D;KACC,IAAIA,MAAM,CAACmB,MAAM,KAAKtB,2BAAI,CAACuD,SAAS,EAAE,EACtC;OACC;;KAEDnD,uBAAM,CAACC,IAAI,CAAC,+CAA+C,EAAEF,MAAM,CAAC;KACpE,4CAAI,8DAA8BA,MAAM;KACxC,4CAAI,4DAA6BA,MAAM;;GAGxCyE,YAAY,CAACzE,MAAoB,EACjC;KACCC,uBAAM,CAACC,IAAI,CAAC,kCAAkC,EAAEF,MAAM,CAAC;KACvD,4CAAI,wBAAWA,MAAM;KACrB,4CAAI,wBAAWA,MAAM;KACrB,4CAAI,kBAAQU,QAAQ,CAAC,gBAAgB,EAAEV,MAAM,CAAC0E,kBAAkB,CAAC;KACjE,4CAAI,kBAAQhE,QAAQ,CAAC,kBAAkB,EAAE;OACxCG,MAAM,EAAEb,MAAM,CAAC2E,GAAG,CAAC9D,MAAM;OACzBR,SAAS,EAAEL,MAAM,CAAC2E,GAAG,CAACtE;MACtB,CAAC;KACF,IAAIR,2BAAI,CAACuD,SAAS,EAAE,KAAKpD,MAAM,CAAC2E,GAAG,CAACC,QAAQ,EAC5C;;GAKDC,eAAe,CAAC7E,MAAuB,EACvC;KACCC,uBAAM,CAACC,IAAI,CAAC,qCAAqC,EAAEF,MAAM,CAAC;KAC1D,4CAAI,kBAAQU,QAAQ,CAAC,qBAAqB,EAAE;OAC3CG,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBR,SAAS,EAAEL,MAAM,CAACK;MAClB,CAAC;;;;CAoPJ;CAAC,0BAhPgBL,MAAwB,EACxC;GAAA;GACC,MAAM8E,IAAI,mBAAG9E,MAAM,CAAC8E,IAAI,qBAAX,aAAc9E,MAAM,CAACa,MAAM,CAAC;GACzC,IAAI,CAACiE,IAAI,EACT;KACC;;GAGD,MAAMC,SAAS,GAAG;KAAE,GAAG/E,MAAM,CAAC8E,IAAI,CAAC9E,MAAM,CAACa,MAAM,CAAC;KAAEK,QAAQ,EAAElB,MAAM,CAACkB;IAAU;GAC9E,MAAM8D,YAAY,GAAGrC,OAAO,yCAAC,IAAI,0BAAY3C,MAAM,CAACkB,QAAQ,EAAE;GAC9D,MAAM+D,0BAA0B,GAAG,CAACjF,MAAM,CAACkF,MAAM,IAAI,oBAAAlF,MAAM,CAACM,OAAO,8CAAd,gBAAgBN,MAAM,qBAAtB,sBAAwBmF,MAAM,MAAK,GAAG;GAC3F,IAAI,CAACH,YAAY,IAAI,CAACC,0BAA0B,IAAI,CAACF,SAAS,CAACK,IAAI,EACnE;KACCL,SAAS,CAACK,IAAI,GAAGC,oBAAQ,CAACC,MAAM;;GAEjC,4CAAI,kBAAQ5E,QAAQ,CAAC,WAAW,EAAEqE,SAAS,CAAC;CAC7C;CAAC,oBAES/E,MAAiD,EAC3D;GACC,IAAI,CAACA,MAAM,CAACuF,KAAK,EACjB;KACC;;GAGD,MAAMjC,WAAW,GAAG,IAAIC,0BAAW,EAAE;GACrCD,WAAW,CAACkC,eAAe,CAACC,MAAM,CAACC,MAAM,CAAC1F,MAAM,CAACuF,KAAK,CAAC,CAAC;CACzD;CAAC,oBAESvF,MAAuE,EACjF;GACC,IAAI,CAACA,MAAM,CAACyB,KAAK,EACjB;KACC;;GAGD,MAAMA,KAAK,GAAGgE,MAAM,CAACC,MAAM,CAAC1F,MAAM,CAACyB,KAAK,CAAC;GACzCA,KAAK,CAACkE,OAAO,CAAEC,IAAa,IAAK;KAChC,KAAK,4CAAI,kBAAQlF,QAAQ,CAAC,WAAW,EAAEkF,IAAI,CAAC;IAC5C,CAAC;CACH;CAAC,iCAEsB5F,MAAwB,EAC/C;GACC,IAAI,CAACA,MAAM,CAACM,OAAO,CAACuF,kBAAkB,EACtC;KACC;;GAGD,MAAM;KACLnB,kBAAkB;KAClBoB,QAAQ;KACRrE,KAAK;KACL8D;IACA,GAAGvF,MAAM,CAACM,OAAO,CAACuF,kBAAkB;GACrC,MAAME,WAAW,GAAG,CAAC,GAAGD,QAAQ,EAAE,GAAGpB,kBAAkB,CAAC;GACxD,4CAAI,kBAAQhE,QAAQ,CAAC,gBAAgB,EAAEqF,WAAW,CAAC;GACnD,4CAAI,kBAAQrF,QAAQ,CAAC,WAAW,EAAEe,KAAK,CAAC;GACxC,4CAAI,kBAAQf,QAAQ,CAAC,WAAW,EAAE6E,KAAK,CAAC;CACzC;CAAC,0BAEevF,MAAwB,EACxC;GAAA;GACC,MAAM8E,IAAa,oBAAG9E,MAAM,CAAC8E,IAAI,qBAAX,cAAc9E,MAAM,CAACa,MAAM,CAAC;GAClD,IAAI,CAACiE,IAAI,IAAIA,IAAI,CAACkB,IAAI,KAAKC,oBAAQ,CAACC,OAAO,EAC3C;KACC;;GAGD,4CAAI,kBAAQxF,QAAQ,CAAC,uBAAuB,EAAE;KAC7CL,SAAS,EAAEyE,IAAI,CAACqB,iBAAiB;KACjCtF,MAAM,EAAEb,MAAM,CAACa,MAAM;KACrBuF,YAAY,EAAEtB,IAAI,CAACuB;IACnB,CAAC;GACF,4CAAI,kBAAQ3F,QAAQ,CAAC,+BAA+B,EAAE;KACrDL,SAAS,EAAEyE,IAAI,CAACqB,iBAAiB;KACjCG,SAAS,EAAEtG,MAAM,CAACM,OAAO,CAACc;IAC1B,CAAC;CACH;CAAC,sCAE2BpB,MAAwB,EACpD;GACC,MAAMiC,MAAM,2CAAG,IAAI,0BAAYjC,MAAM,CAACkB,QAAQ,EAAE,IAAI,CAAC;GACrD,IAAIe,MAAM,CAACsE,WAAW,EACtB;KACC,4CAAI,kBAAQ7F,QAAQ,CAAC,gBAAgB,EAAEV,MAAM,CAACM,OAAO,CAAC;KAEtD;;GAGD,MAAMkG,YAAY,GAAG,4CAAI,kBAAQpG,OAAO,CAAC,wBAAwB,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;GACnF,MAAMuF,cAAgC,GAAG,4CAAI,kBAAQrG,OAAO,CAAC,gCAAgC,CAAC,CAACJ,MAAM,CAACa,MAAM,CAAC;GAC7G,MAAM6F,YAAY,GAAGC,qCAAc,CAACC,sBAAsB,EAAE,GAAG,CAAC;GAChE,IAAI3E,MAAM,CAAC4E,MAAM,IAAI,CAACL,YAAY,IAAIC,cAAc,CAACK,MAAM,GAAGJ,YAAY,EAC1E;KACC,4CAAI,kBAAQhG,QAAQ,CAAC,gBAAgB,EAAEV,MAAM,CAACM,OAAO,CAAC;KACtD,MAAMyG,cAAc,GAAG,IAAIJ,qCAAc,CAAC;OAAE9F,MAAM,EAAEb,MAAM,CAACa;MAAQ,CAAC;KACpEkG,cAAc,CAACC,iBAAiB,EAAE;KAElC;;GAGD,4CAAI,0CAAoBhH,MAAM,CAACM,OAAO;GACtC,4CAAI,sCAAkBN,MAAM,CAACa,MAAM;CACpC;CAAC,6BAEkBP,OAAO,EAC1B;GACC,MAAM2G,UAAU,GAAG;KAAE,GAAG3G;IAAS;GACjC,IAAIA,OAAO,CAACc,QAAQ,KAAKvB,2BAAI,CAACuD,SAAS,EAAE,EACzC;KACC6D,UAAU,CAACC,MAAM,GAAG,KAAK;IACzB,MAED;KACCD,UAAU,CAACC,MAAM,GAAG,IAAI;KACxBD,UAAU,CAACE,MAAM,GAAG,KAAK;;GAE1B,4CAAI,kBAAQzG,QAAQ,CAAC,4BAA4B,EAAE;KAAEoF,QAAQ,EAAE,CAACmB,UAAU;IAAG,CAAC;CAC/E;CAAC,wBAEajH,MAAM,EACpB;GACC,MAAMiC,MAAM,2CAAG,IAAI,0BAAYjC,MAAM,CAACkB,QAAQ,EAAE,IAAI,CAAC;GAErD,MAAMkG,oBAAoB,GAAG,EAAE;GAC/B,IAAIpH,MAAM,CAACM,OAAO,CAACG,EAAE,GAAGwB,MAAM,CAACY,aAAa,EAC5C;KACCuE,oBAAoB,CAACvE,aAAa,GAAG7C,MAAM,CAACM,OAAO,CAACG,EAAE;;GAGvD,IAAIT,MAAM,CAACM,OAAO,CAACc,QAAQ,KAAKvB,2BAAI,CAACuD,SAAS,EAAE,IAAIpD,MAAM,CAACM,OAAO,CAACG,EAAE,GAAGwB,MAAM,CAACoF,UAAU,EACzF;KACCD,oBAAoB,CAAC/C,MAAM,GAAGrE,MAAM,CAACM,OAAO,CAACG,EAAE;;GAGhD2G,oBAAoB,CAAC3E,OAAO,GAAGzC,MAAM,CAACyC,OAAO;GAE7C,4CAAI,kBAAQ/B,QAAQ,CAAC,cAAc,EAAE;KACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;KACzBP,MAAM,EAAEyG;IACR,CAAC;GACF,4CAAI,kBAAQ1G,QAAQ,CAAC,6BAA6B,EAAE;KACnDQ,QAAQ,EAAElB,MAAM,CAACkB;IACjB,CAAC;CACH;CAAC,uCAE4BlB,MAAiC,EAC9D;GACC,4CAAI,kBAAQU,QAAQ,CAAC,4BAA4B,EAAE;KAAE4G,GAAG,EAAEtH,MAAM,CAACmE;IAAgB,CAAC;CACnF;CAAC,sCAE2BnE,MAAiC,EAC7D;GACC,MAAMiC,MAAM,2CAAG,IAAI,0BAAYjC,MAAM,CAACkB,QAAQ,CAAC;GAC/C,IAAI,CAACe,MAAM,EACX;KACC;;GAGD,MAAMsF,aAAa,GAAGvH,MAAM,CAACmE,cAAc,CAACqD,QAAQ,CAACvF,MAAM,CAACY,aAAa,CAAC;GAC1E,IAAI,CAAC0E,aAAa,EAClB;KACC;;GAGD,4CAAI,IAAI,0DAA4BvH,MAAM,CAACmB,MAAM,EAAEc,MAAM,CAACY,aAAa,GACvE;KACC;;GAGD,MAAM4E,cAAc,GAAG9E,OAAO,CAACV,MAAM,CAACa,gBAAgB,CAAC4E,WAAW,CAAC;GACnE,IAAID,cAAc,EAClB;KACC,4CAAI,kBAAQ/G,QAAQ,CAAC,iCAAiC,EAAE;OACvDQ,QAAQ,EAAElB,MAAM,CAACkB;MACjB,CAAC;KACF,4CAAI,4DAA6BlB,MAAM,CAACmB,MAAM,EAAEc,MAAM,CAACY,aAAa;KAEpE;;GAGD,4CAAI,kBAAQnC,QAAQ,CAAC,2BAA2B,EAAE;KACjDQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;KACzBP,MAAM,EAAE;OACPQ,MAAM,EAAEnB,MAAM,CAACmB,MAAM;OACrBwG,QAAQ,EAAE3H,MAAM,CAAC2H,QAAQ;OACzBC,IAAI,EAAE5H,MAAM,CAAC4H,IAAI;OACjBvH,SAAS,EAAE4B,MAAM,CAACY;;IAEnB,CAAC;GAEF,4CAAI,4DAA6B7C,MAAM,CAACmB,MAAM,EAAEc,MAAM,CAACY,aAAa;CACrE;CAAC,qCAE0B1B,MAAc,EAAEd,SAAiB,EAC5D;GAAA;GACC,OAAOsC,OAAO,0BAAC,4CAAI,gCAAetC,SAAS,CAAC,qBAA7B,sBAA+BwH,GAAG,CAAC1G,MAAM,CAAC,CAAC;CAC3D;CAAC,sCAE2BA,MAAc,EAAEd,SAAiB,EAC7D;GACC,IAAI,CAAC,4CAAI,gCAAeA,SAAS,CAAC,EAClC;KACC,4CAAI,gCAAeA,SAAS,CAAC,GAAG,IAAIyH,GAAG,EAAE;;GAG1C,4CAAI,gCAAezH,SAAS,CAAC,CAAC0H,GAAG,CAAC5G,MAAM,CAAC;CAC1C;CAAC,2BAEgBN,MAAc,EAC/B;GACCiB,6BAAY,CAACC,IAAI,CAACC,qBAAS,CAACC,MAAM,CAAC+F,cAAc,EAAE;KAAEnH,MAAM;KAAEoH,SAAS,EAAEC,iCAAqB,CAACC;IAAe,CAAC;CAC/G;CAAC,qBAEUjH,QAAgB,EAAEkH,SAAkB,GAAG,KAAK,EACvD;GACC,OAAO,4CAAI,kBAAQhI,OAAO,CAAC,WAAW,CAAC,CAACc,QAAQ,EAAEkH,SAAS,CAAC;CAC7D;CAAC,0BAEepI,MAAM,EACtB;GACC,IAAI,CAACA,MAAM,CAACqI,OAAO,EACnB;KACC;;GAGD,MAAMC,cAAc,GAAG,IAAIC,gCAAc,EAAE;GAC3C,KAAKD,cAAc,CAACvI,gBAAgB,CAACC,MAAM,CAACqI,OAAO,CAAC;CACrD;CAAC,4BAEiB/G,IAAY,EAC9B;GACCkH,EAAE,CAACC,EAAE,CAACC,YAAY,CAACC,MAAM,CAACzD,MAAM,CAAC;KAAE0D,OAAO,EAAEtH;IAAM,CAAC;CACpD;CAAC,iCAEsBjB,SAAiB,EACxC;GACC,KAAK,4CAAI,kBAAQK,QAAQ,CAAC,mCAAmC,EAAEL,SAAS,CAAC;CAC1E;;CClgB+C;CAAA;CAAA;AAkBhD,CAAO,MAAMwI,eAAe,CAC5B;GAGCjJ,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAUC,2BAAI,CAACC,QAAQ,EAAE;;GAG9BgJ,eAAe,CAAC9I,MAAuB,EACvC;KACCC,uBAAM,CAACC,IAAI,CAAC,kCAAkC,EAAEF,MAAM,CAAC;KACvD,4CAAI,sBAAQU,QAAQ,CAAC,cAAc,EAAE;OACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBP,MAAM,EAAE;SACPoI,OAAO,EAAE/I,MAAM,CAACmB;;MAEjB,CAAC;;GAGH6H,kBAAkB,CAAChJ,MAA0B,EAC7C;KACCC,uBAAM,CAACC,IAAI,CAAC,qCAAqC,EAAEF,MAAM,CAAC;KAC1D,4CAAI,sBAAQU,QAAQ,CAAC,cAAc,EAAE;OACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBP,MAAM,EAAE;SACPsI,WAAW,EAAEjJ,MAAM,CAACkJ;;MAErB,CAAC;KAEF,MAAMpE,IAAiB,GAAG,4CAAI,sBAAQ1E,OAAO,CAAC,WAAW,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KAC3E,IAAI,CAAC4D,IAAI,EACT;OACC;;KAGD,MAAMqE,iBAAiB,GAAGnJ,MAAM,CAACkJ,IAAI,CAAC1B,QAAQ,CAAC3H,2BAAI,CAACuD,SAAS,EAAE,CAAC;KAChE,IAAI0B,IAAI,CAACM,IAAI,KAAKC,oBAAQ,CAACC,MAAM,IAAI6D,iBAAiB,EACtD;OACC,4CAAI,sBAAQzI,QAAQ,CAAC,cAAc,EAAE;SACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;SACzBP,MAAM,EAAE;WACPyE,IAAI,EAAEC,oBAAQ,CAAC+D;;QAEhB,CAAC;;KAGH,IAAItE,IAAI,CAACM,IAAI,KAAKC,oBAAQ,CAAC+D,OAAO,IAAI,CAACD,iBAAiB,EACxD;OACC,4CAAI,sBAAQzI,QAAQ,CAAC,cAAc,EAAE;SACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;SACzBP,MAAM,EAAE;WACPyE,IAAI,EAAEC,oBAAQ,CAACC;;QAEhB,CAAC;;;GAIJ+D,iBAAiB,CAACrJ,MAAyB,EAC3C;KACCC,uBAAM,CAACC,IAAI,CAAC,oCAAoC,EAAEF,MAAM,CAAC;KACzD,MAAMsJ,aAAa,GAAGzJ,2BAAI,CAACuD,SAAS,EAAE;KACtC,IAAIpD,MAAM,CAACuJ,QAAQ,CAAC/B,QAAQ,CAAC8B,aAAa,CAAC,EAC3C;OACC,4CAAI,sBAAQ5I,QAAQ,CAAC,cAAc,EAAE;SACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;SACzBP,MAAM,EAAE;WAAEyE,IAAI,EAAEC,oBAAQ,CAACC;;QACzB,CAAC;;KAEH,4CAAI,sCAAkBtF,MAAM;;GAG7BwJ,mBAAmB,CAACxJ,MAA2B,EAC/C;KACCC,uBAAM,CAACC,IAAI,CAAC,sCAAsC,EAAEF,MAAM,CAAC;KAC3D,MAAMyJ,mBAAmB,GAAGzJ,MAAM,CAACmB,MAAM,KAAKtB,2BAAI,CAACuD,SAAS,EAAE;KAE9D,IAAIqG,mBAAmB,EACvB;OACC,4CAAI,sBAAQ/I,QAAQ,CAAC,cAAc,EAAE;SACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;SACzBP,MAAM,EAAE;WAAEkG,MAAM,EAAE;;QAClB,CAAC;OACF,4CAAI,sBAAQnG,QAAQ,CAAC,8BAA8B,EAAE;SAAEG,MAAM,EAAEb,MAAM,CAACa;QAAQ,CAAC;;KAGhF,MAAM6I,SAAS,GAAGC,gCAAc,CAACD,SAAS,CAAC1J,MAAM,CAACkB,QAAQ,CAAC;KAC3D,IAAIwI,SAAS,EACb;OACC,KAAK,4CAAI,sBAAQhJ,QAAQ,CAAC,2BAA2B,EAAE;SACtDkJ,aAAa,EAAE5J,MAAM,CAACa;QACtB,CAAC;;KAGH,MAAM2F,YAAY,GAAG,4CAAI,sBAAQpG,OAAO,CAAC,wBAAwB,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KACnF,IAAIuI,mBAAmB,IAAIjD,YAAY,EACvC;OACCqD,mBAAS,CAACC,QAAQ,EAAE;;KAGrB,MAAMC,WAAW,GAAGC,0BAAW,CAAChJ,WAAW,EAAE,CAACiJ,sBAAsB,EAAE,KAAKjK,MAAM,CAACkB,QAAQ;KAC1F,IAAIuI,mBAAmB,IAAIM,WAAW,EACtC;OACCC,0BAAW,CAAChJ,WAAW,EAAE,CAACkJ,gBAAgB,EAAE;;KAG7C,IAAIT,mBAAmB,EACvB;OACCO,0BAAW,CAAChJ,WAAW,EAAE,CAACmJ,gBAAgB,CAACnK,MAAM,CAACkB,QAAQ,CAAC;;KAG5D,4CAAI,sCAAkBlB,MAAM;;GAG7BoK,kBAAkB,CAACpK,MAA0B,EAC7C;KACC,IAAIA,MAAM,CAACmB,MAAM,KAAKtB,2BAAI,CAACuD,SAAS,EAAE,EACtC;OACC;;KAEDnD,uBAAM,CAACC,IAAI,CAAC,qCAAqC,EAAEF,MAAM,CAAC;KAC1D,MAAM;OAAEkB,QAAQ;OAAEC,MAAM;OAAEwG;MAAU,GAAG3H,MAAM;KAC7Ce,gCAAc,CAACC,WAAW,EAAE,CAACqJ,YAAY,CAAC;OAAEnJ,QAAQ;OAAEC,MAAM;OAAEwG;MAAU,CAAC;KACzE,4CAAI,sBAAQjH,QAAQ,CAAC,cAAc,EAAE;OACpCD,EAAE,EAAEU,MAAM;OACVR,MAAM,EAAE;SACP2J,gBAAgB,EAAE,IAAIC,IAAI;;MAE3B,CAAC;;GAGHC,gBAAgB,CAACxK,MAAwB,EACzC;KACCC,uBAAM,CAACC,IAAI,CAAC,mCAAmC,EAAEF,MAAM,CAAC;KACxD,IAAIyK,QAAQ,GAAG,CAAC;KAChB,IAAIzK,MAAM,CAAC0K,MAAM,KAAK,IAAI,EAC1B;OACCD,QAAQ,GAAGzK,MAAM,CAACyK,QAAQ;;KAE3B,4CAAI,sBAAQ/J,QAAQ,CAAC,cAAc,EAAE;OACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBP,MAAM,EAAE;SAAE8J;;MACV,CAAC;;GAGHE,oBAAoB,CAAC3K,MAA4B,EACjD;KACC,IAAIA,MAAM,CAAC4K,KAAK,EAChB;OACC,4CAAI,sBAAQlK,QAAQ,CAAC,YAAY,EAAE;SAClCQ,QAAQ,EAAElB,MAAM,CAACkB;QACjB,CAAC;OAEF;;KAGD,4CAAI,sBAAQR,QAAQ,CAAC,cAAc,EAAE;OACpCQ,QAAQ,EAAElB,MAAM,CAACkB;MACjB,CAAC;;GAGH2J,gBAAgB,CAAC7K,MAAwB,EACzC;KACC,MAAMiC,MAAM,GAAG,4CAAI,sBAAQ7B,OAAO,CAAC,mBAAmB,CAAC,CAACJ,MAAM,CAACa,MAAM,CAAC;KACtE,IAAI,CAACoB,MAAM,EACX;OACC;;KAGD,4CAAI,sBAAQvB,QAAQ,CAAC,cAAc,EAAE;OACpCQ,QAAQ,EAAEe,MAAM,CAACf,QAAQ;OACzBP,MAAM,EAAE;SACPmK,IAAI,EAAE9K,MAAM,CAAC8K;;MAEd,CAAC;;GAGHC,gBAAgB,CAAC/K,MAAwB,EACzC;KACC,MAAMiC,MAAM,GAAG,4CAAI,sBAAQ7B,OAAO,CAAC,mBAAmB,CAAC,CAACJ,MAAM,CAACa,MAAM,CAAC;KACtE,IAAI,CAACoB,MAAM,EACX;OACC;;KAGD,4CAAI,sBAAQvB,QAAQ,CAAC,cAAc,EAAE;OACpCQ,QAAQ,EAAEe,MAAM,CAACf,QAAQ;OACzBP,MAAM,EAAE;SACPqK,MAAM,EAAEhL,MAAM,CAACgL;;MAEhB,CAAC;;GAGHC,kBAAkB,GAClB;KACChL,uBAAM,CAACC,IAAI,CAAC,qCAAqC,CAAC;KAClD,4CAAI,sBAAQQ,QAAQ,CAAC,qBAAqB,CAAC;KAC3C,4CAAI,sBAAQA,QAAQ,CAAC,oBAAoB,CAAC;;GAG3CwK,iBAAiB,CAAClL,MAAyB,EAC3C;KACCC,uBAAM,CAACC,IAAI,CAAC,oCAAoC,EAAEF,MAAM,CAAC;KACzD,MAAM;OAAEkB,QAAQ;OAAEiK,OAAO;OAAEC;MAAgB,GAAGpL,MAAM;KACpD,4CAAI,sBAAQU,QAAQ,CAAC,cAAc,EAAE;OACpCQ,QAAQ;OACRP,MAAM,EAAE;SACPqF,IAAI,EAAEmF,OAAO;SACbE,WAAW,EAAED;;MAEd,CAAC;;GAGHE,2BAA2B,CAACtL,MAAM,EAClC;KACC,IAAI,CAACA,MAAM,CAACuL,WAAW,EACvB;OACC;;KAGD,MAAMjD,cAAc,GAAG,IAAIC,gCAAc,EAAE;KAC3C,KAAKD,cAAc,CAACkD,gBAAgB,CAACxL,MAAM,CAACuL,WAAW,CAAC;;GAGzDE,gBAAgB,CAACzL,MAAuB,EACxC;KACC,KAAK,4CAAI,sBAAQU,QAAQ,CAAC,cAAc,EAAE;OACzCQ,QAAQ,EAAElB,MAAM,CAAC8E,IAAI,CAAC5D,QAAQ;OAC9BP,MAAM,EAAE;SACPyE,IAAI,EAAEsG,wCAAkB,CAAC1L,MAAM,CAAC8E,IAAI,CAAC;SACrC,GAAG9E,MAAM,CAAC8E;;MAEX,CAAC;;GAGH6G,gBAAgB,CAAC3L,MAAwB,EACzC;KACCC,uBAAM,CAACC,IAAI,CAAC,mCAAmC,EAAEF,MAAM,CAAC;KAExD,MAAMsJ,aAAa,GAAGzJ,2BAAI,CAACuD,SAAS,EAAE;KACtC,IAAIpD,MAAM,CAACmB,MAAM,KAAKmI,aAAa,EACnC;OACC;;KAGD,KAAK,4CAAI,sBAAQ5I,QAAQ,CAAC,cAAc,EAAE;OACzCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;OACzBP,MAAM,EAAE;SAAEkG,MAAM,EAAE;;MAClB,CAAC;KACF,KAAK,4CAAI,sBAAQnG,QAAQ,CAAC,eAAe,EAAE;OAAED,EAAE,EAAET,MAAM,CAACkB;MAAU,CAAC;KAEnE,MAAM0K,aAAa,GAAG5L,MAAM,CAACgG,IAAI,KAAKC,oBAAQ,CAACC,OAAO;KACtD,IAAI0F,aAAa,EACjB;OACC,KAAK,4CAAI,sBAAQlL,QAAQ,CAAC,2BAA2B,EAAE;SACtDkJ,aAAa,EAAE5J,MAAM,CAAC6L,YAAY;SAClCC,aAAa,EAAE9L,MAAM,CAACa;QACtB,CAAC;;KAGH,MAAM6I,SAAS,GAAGC,gCAAc,CAACD,SAAS,CAAC1J,MAAM,CAACkB,QAAQ,CAAC;KAC3D,IAAIwI,SAAS,EACb;OACC,KAAK,4CAAI,sBAAQhJ,QAAQ,CAAC,2BAA2B,EAAE;SACtDkJ,aAAa,EAAE5J,MAAM,CAACa;QACtB,CAAC;;KAGH,KAAK,4CAAI,sBAAQH,QAAQ,CAAC,8BAA8B,EAAE;OAAEG,MAAM,EAAEb,MAAM,CAACa;MAAQ,CAAC;KAEpF,MAAM2F,YAAY,GAAG,4CAAI,sBAAQpG,OAAO,CAAC,wBAAwB,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KACnF,IAAIsF,YAAY,EAChB;OACCrE,6BAAS,CAACnB,WAAW,EAAE,CAAC+K,UAAU,CAACC,yBAAyB,CAAChM,MAAM,CAACkB,QAAQ,CAAC;OAC7E,4CAAI,4CAAmBoB,aAAG,CAACC,UAAU,CAAC,uCAAuC,CAAC;OAC9E,KAAK0J,8BAAa,CAACjL,WAAW,EAAE,CAACkL,0BAA0B,EAAE;OAC7D,KAAKD,8BAAa,CAACjL,WAAW,EAAE,CAACmL,2BAA2B,CAACnM,MAAM,CAACkB,QAAQ,CAAC;;KAG9E,MAAM6I,WAAW,GAAGC,0BAAW,CAAChJ,WAAW,EAAE,CAACiJ,sBAAsB,EAAE,KAAKjK,MAAM,CAACkB,QAAQ;KAC1F,IAAI6I,WAAW,EACf;OACCC,0BAAW,CAAChJ,WAAW,EAAE,CAACkJ,gBAAgB,EAAE;;;CA0B/C;CAAC,2BAtBiBlK,MAIhB,EACD;GACC,IAAIA,MAAM,CAACuF,KAAK,EAChB;KACC,MAAMjC,WAAW,GAAG,IAAIC,0BAAW,EAAE;KACrCD,WAAW,CAACkC,eAAe,CAACC,MAAM,CAACC,MAAM,CAAC1F,MAAM,CAACuF,KAAK,CAAC,CAAC;;GAGzD,4CAAI,sBAAQ7E,QAAQ,CAAC,cAAc,EAAE;KACpCQ,QAAQ,EAAElB,MAAM,CAACkB,QAAQ;KACzBP,MAAM,EAAE;OAAEyL,WAAW,EAAEpM,MAAM,CAACqM;;IAC9B,CAAC;CACH;CAAC,8BAEiB/K,IAAY,EAC9B;GACCkH,EAAE,CAACC,EAAE,CAACC,YAAY,CAACC,MAAM,CAACzD,MAAM,CAAC;KAAE0D,OAAO,EAAEtH;IAAM,CAAC;CACpD;;CC9UM,MAAMgL,iBAAiB,CAC9B;GACCC,kBAAkB,CAACvM,MAA0B,EAC7C;KAAA;KACCC,uBAAM,CAACC,IAAI,CAAC,uCAAuC,EAAEF,MAAM,CAAC;KAC5D,MAAM;OAAEwM;MAAoB,GAAGxM,MAAM;KACrC,IAAI,CAACwM,kBAAkB,EACvB;OACC;;KAGD,IAAI,0BAAAA,kBAAkB,CAACC,eAAe,qBAAlC,sBAAoCC,WAAW,MAAK,IAAI,EAC5D;OACC;;KAGD,KAAK7M,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,oCAAoC,EAAE8L,kBAAkB,CAAC;;CAEzF;;CCpB6C;AAK7C,CAAO,MAAMG,eAAe,CAC5B;GAGC/M,WAAW,GACX;KAAA;OAAA;OAAA;;KACC,4CAAI,wBAAUC,2BAAI,CAACC,QAAQ,EAAE;;GAG9B8M,gBAAgB,CAAC5M,MAAwB,EACzC;KACC,IAAIA,MAAM,CAAC6M,OAAO,EAClB;OACC,MAAMvJ,WAAW,GAAG,IAAIC,0BAAW,EAAE;OACrCD,WAAW,CAACkC,eAAe,CAAC,CAACxF,MAAM,CAAC8M,IAAI,CAAC,CAAC;OAE1C;;KAGD,4CAAI,sBAAQpM,QAAQ,CAAC,cAAc,EAAE;OACpCD,EAAE,EAAET,MAAM,CAACmB,MAAM;OACjBR,MAAM,EAAEX,MAAM,CAAC8M;MACf,CAAC;;GAGHC,sBAAsB,CAAC/M,MAA8B,EACrD;KACC,MAAMgN,YAAY,GAAGhN,MAAM,CAACiN,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACL,IAAI,CAAC;KAE1D,MAAMxJ,WAAW,GAAG,IAAIC,0BAAW,EAAE;KACrCD,WAAW,CAACkC,eAAe,CAACwH,YAAY,CAAC;;CAE3C;;CClCO,MAAMI,kBAAkB,CAC/B;GACCC,mBAAmB,CAACrN,MAA2B,EAC/C;KACCC,uBAAM,CAACC,IAAI,CAAC,yCAAyC,EAAEF,MAAM,CAAC;KAC9D,MAAMsN,cAAc,GAAGC,gCAAc,CAACvM,WAAW,EAAE;KACnDsM,cAAc,CAACE,gBAAgB,CAAC,IAAI,CAAC;KACrCF,cAAc,CAACG,iBAAiB,CAACzN,MAAM,CAAC0N,OAAO,CAAC;KAEhDC,gCAAc,CAAC3M,WAAW,EAAE,CAAC4M,yBAAyB,EAAE;;GAGzDC,oBAAoB,GACpB;KACC5N,uBAAM,CAACC,IAAI,CAAC,0CAA0C,CAAC;KACvDqN,gCAAc,CAACvM,WAAW,EAAE,CAACwM,gBAAgB,CAAC,KAAK,CAAC;KACpDD,gCAAc,CAACvM,WAAW,EAAE,CAACyM,iBAAiB,CAAC,CAAC,CAAC;;CAEnD;;CCnBO,MAAMK,mBAAmB,CAChC;GACCC,oBAAoB,CAAC/N,MAA4B,EACjD;KACCC,uBAAM,CAACC,IAAI,CAAC,2CAA2C,EAAEF,MAAM,CAAC;KAChEyF,MAAM,CAACuI,OAAO,CAAChO,MAAM,CAAC,CAAC2F,OAAO,CAAC,CAAC,CAACsI,UAAU,EAAEC,WAAW,CAAC,KAAK;OAC7DrO,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,0BAA0B,EAAE;SACpD,CAACuN,UAAU,GAAGC;QACd,CAAC;MACF,CAAC;;CAEJ;;CCXO,MAAMC,mBAAmB,CAChC;GACCC,sBAAsB,CAACpO,MAA8B,EACrD;KACC,MAAM;OAAEK,SAAS;OAAEgO;MAAW,GAAGrO,MAAM;KACvCC,uBAAM,CAACC,IAAI,CAAC,6CAA6C,EAAEF,MAAM,CAAC;KAClE,IAAIqO,SAAS,EACb;OACCxO,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,6BAA6B,EAAEL,SAAS,CAAC;OAElE;;KAGDR,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,+BAA+B,EAAEL,SAAS,CAAC;;GAGrEiO,4BAA4B,CAACtO,MAAoC,EACjE;KACCH,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,iCAAiC,EAAEV,MAAM,CAACa,MAAM,CAAC;;CAE5E;;CCnBO,MAAM0N,sBAAsB,CACnC;GACCC,yBAAyB,CAACxO,MAAiC,EAC3D;KACCC,uBAAM,CAACC,IAAI,CAAC,wCAAwC,EAAEF,MAAM,CAAC;KAE7D,MAAMyO,QAAQ,GAAGC,QAAQ,CAACD,QAAQ,EAAE;KACpC,IAAI,CAACA,QAAQ,EACb;OACC;;KAGD,IAAIlB,gCAAc,CAACoB,SAAS,EAAE,EAC9B;OACC,IAAI,CAACpB,gCAAc,CAACqB,YAAY,EAAE,EAClC;SACC;;OAGD,KAAK/E,mBAAS,CAACC,QAAQ,CAAC9J,MAAM,CAACkB,QAAQ,CAAC;OAExC;;KAGD,IAAI,CAAC2N,gCAAe,CAAC7N,WAAW,EAAE,CAAC8N,SAAS,EAAE,EAC9C;OACC;;KAGD,KAAKjF,mBAAS,CAACC,QAAQ,CAAC9J,MAAM,CAACkB,QAAQ,CAAC;;CAE1C;;CChCO,MAAM6N,iBAAiB,CAC9B;GACCC,+BAA+B,CAAChP,MAAuC,EACvE;KACCC,uBAAM,CAACC,IAAI,CAAC,oDAAoD,EAAEF,MAAM,CAAC;KACzE,MAAM;OAAEa,MAAM;OAAE4B,OAAO;OAAEwM;MAAQ,GAAGjP,MAAM;KAC1C,KAAKH,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,0BAA0B,EAAE;OAAEG,MAAM;OAAEoO,MAAM;OAAExM;MAAS,CAAC;;GAGvFyM,4BAA4B,CAAClP,MAAoC,EACjE;KACCC,uBAAM,CAACC,IAAI,CAAC,iDAAiD,EAAEF,MAAM,CAAC;KACtE,MAAM;OAAEa,MAAM;OAAEsO;MAAY,GAAGnP,MAAM;KACrC,KAAKH,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,6BAA6B,EAAE;OAAEG,MAAM;OAAEsO;MAAY,CAAC;;CAEtF;;CCZsD;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAEtD,CAAO,MAAMC,eAAe,CAC5B;GAWCxP,WAAW,GACX;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,sCAAmB,IAAID,kBAAkB,EAAE;KAC/C,4CAAI,gCAAgB,IAAIkJ,eAAe,EAAE;KACzC,4CAAI,gCAAgB,IAAI8D,eAAe,EAAE;KACzC,4CAAI,sCAAmB,IAAIS,kBAAkB,EAAE;KAC/C,4CAAI,wCAAoB,IAAIU,mBAAmB,EAAE;KACjD,4CAAI,wCAAoB,IAAIK,mBAAmB,EAAE;KACjD,4CAAI,4CAAsB,IAAI7B,iBAAiB,EAAE;KACjD,4CAAI,sDAA2B,IAAIiC,sBAAsB,EAAE;KAC3D,4CAAI,4CAAsB,IAAIQ,iBAAiB,EAAE;;GAGlDM,WAAW,GACX;KACC,OAAO,IAAI;;;;GAIZC,aAAa,CAACtP,MAAM,EACpB;KACC,4CAAI,oCAAiBD,gBAAgB,CAACC,MAAM,CAAC;;GAG9CuP,iBAAiB,CAACvP,MAAM,EACxB;KACC,4CAAI,oCAAiBD,gBAAgB,CAACC,MAAM,CAAC;;GAG9CqB,mBAAmB,CAACrB,MAAM,EAC1B;KACC,4CAAI,oCAAiBqB,mBAAmB,CAACrB,MAAM,CAAC;;GAGjDuB,mBAAmB,CAACvB,MAAM,EAC1B;KACC,4CAAI,oCAAiBuB,mBAAmB,CAACvB,MAAM,CAAC;;GAGjD4B,2BAA2B,CAAC5B,MAAM,EAClC;KACC,4CAAI,oCAAiB4B,2BAA2B,CAAC5B,MAAM,CAAC;;GAGzD+C,iBAAiB,CAAC/C,MAAM,EACxB;KACC,4CAAI,oCAAiB+C,iBAAiB,CAAC/C,MAAM,CAAC;;GAG/CyD,oBAAoB,CAACzD,MAAM,EAC3B;KACC,4CAAI,oCAAiByD,oBAAoB,CAACzD,MAAM,CAAC;;GAGlD0D,yBAAyB,CAAC1D,MAAM,EAChC;KACC,4CAAI,oCAAiB0D,yBAAyB,CAAC1D,MAAM,CAAC;;GAGvD2D,iBAAiB,CAAC3D,MAAM,EAAE4D,KAAK,EAC/B;KACC,4CAAI,oCAAiBD,iBAAiB,CAAC3D,MAAM,EAAE4D,KAAK,CAAC;;GAGtD4L,qBAAqB,CAACxP,MAAM,EAAE4D,KAAK,EACnC;KACC,4CAAI,oCAAiBD,iBAAiB,CAAC3D,MAAM,EAAE4D,KAAK,CAAC;;GAGtDY,yBAAyB,CAACxE,MAAM,EAChC;KACC,4CAAI,oCAAiBwE,yBAAyB,CAACxE,MAAM,CAAC;;GAGvDyP,6BAA6B,CAACzP,MAAM,EACpC;KACC,4CAAI,oCAAiBwE,yBAAyB,CAACxE,MAAM,CAAC;;GAGvDyE,YAAY,CAACzE,MAAM,EACnB;KACC,4CAAI,oCAAiByE,YAAY,CAACzE,MAAM,CAAC;;GAG1C6E,eAAe,CAAC7E,MAAM,EACtB;KACC,4CAAI,oCAAiB6E,eAAe,CAAC7E,MAAM,CAAC;;;;;GAK7C8I,eAAe,CAAC9I,MAAM,EACtB;KACC,4CAAI,8BAAc8I,eAAe,CAAC9I,MAAM,CAAC;;GAG1CgJ,kBAAkB,CAAChJ,MAAM,EACzB;KACC,4CAAI,8BAAcgJ,kBAAkB,CAAChJ,MAAM,CAAC;;GAG7CqJ,iBAAiB,CAACrJ,MAAM,EACxB;KACC,4CAAI,8BAAcqJ,iBAAiB,CAACrJ,MAAM,CAAC;;GAG5CwJ,mBAAmB,CAACxJ,MAAM,EAC1B;KACC,4CAAI,8BAAcwJ,mBAAmB,CAACxJ,MAAM,CAAC;;GAG9CoK,kBAAkB,CAACpK,MAAM,EACzB;KACC,4CAAI,8BAAcoK,kBAAkB,CAACpK,MAAM,CAAC;;GAG7CwK,gBAAgB,CAACxK,MAAM,EACvB;KACC,4CAAI,8BAAcwK,gBAAgB,CAACxK,MAAM,CAAC;;GAG3CiL,kBAAkB,GAClB;KACC,4CAAI,8BAAcA,kBAAkB,EAAE;;GAGvCN,oBAAoB,CAAC3K,MAAM,EAC3B;KACC,4CAAI,8BAAc2K,oBAAoB,CAAC3K,MAAM,CAAC;;GAG/C6K,gBAAgB,CAAC7K,MAAM,EACvB;KACC,4CAAI,8BAAc6K,gBAAgB,CAAC7K,MAAM,CAAC;;GAG3C+K,gBAAgB,CAAC/K,MAAM,EACvB;KACC,4CAAI,8BAAc+K,gBAAgB,CAAC/K,MAAM,CAAC;;GAG3CyL,gBAAgB,CAACzL,MAAM,EACvB;KACC,4CAAI,8BAAcyL,gBAAgB,CAACzL,MAAM,CAAC;;GAG3C2L,gBAAgB,CAAC3L,MAAM,EACvB;KACC,4CAAI,8BAAc2L,gBAAgB,CAAC3L,MAAM,CAAC;;GAG3CkL,iBAAiB,CAAClL,MAAM,EACxB;KACC,4CAAI,8BAAckL,iBAAiB,CAAClL,MAAM,CAAC;;GAG5CsL,2BAA2B,CAACtL,MAAM,EAClC;KACC,4CAAI,8BAAcsL,2BAA2B,CAACtL,MAAM,CAAC;;;;;GAKtD4M,gBAAgB,CAAC5M,MAAM,EACvB;KACC,4CAAI,8BAAc4M,gBAAgB,CAAC5M,MAAM,CAAC;;GAG3C+M,sBAAsB,CAAC/M,MAAM,EAC7B;KACC,4CAAI,8BAAc+M,sBAAsB,CAAC/M,MAAM,CAAC;;;;;GAKjDqN,mBAAmB,CAACrN,MAAM,EAC1B;KACC,4CAAI,oCAAiBqN,mBAAmB,CAACrN,MAAM,CAAC;;GAGjD6N,oBAAoB,GACpB;KACC,4CAAI,oCAAiBA,oBAAoB,EAAE;;;;;GAK5CE,oBAAoB,CAAC/N,MAAM,EAC3B;KACC,4CAAI,sCAAkB+N,oBAAoB,CAAC/N,MAAM,CAAC;;;;;GAKnDoO,sBAAsB,CAACpO,MAAM,EAC7B;KACC,4CAAI,sCAAkBoO,sBAAsB,CAACpO,MAAM,CAAC;;GAGrDsO,4BAA4B,CAACtO,MAAM,EACnC;KACC,4CAAI,sCAAkBsO,4BAA4B,CAACtO,MAAM,CAAC;;;;;GAK3DuM,kBAAkB,CAACvM,MAAM,EACzB;KACC,4CAAI,0CAAoBuM,kBAAkB,CAACvM,MAAM,CAAC;;;;;GAKnDgP,+BAA+B,CAAChP,MAAM,EACtC;KACC,4CAAI,0CAAoBgP,+BAA+B,CAAChP,MAAM,CAAC;;GAGhEkP,4BAA4B,CAAClP,MAAM,EACnC;KACC,4CAAI,0CAAoBkP,4BAA4B,CAAClP,MAAM,CAAC;;;;;GAK7DwO,yBAAyB,CAACxO,MAAM,EAChC;KACC,4CAAI,oDAAyBwO,yBAAyB,CAACxO,MAAM,CAAC;;;CAGhE;;CCrPA,MAAM0P,oBAAoB,GAAG;GAC5B,CAACzJ,oBAAQ,CAACoC,OAAO,GAAG,mBAAmB;GACvC,CAACpC,oBAAQ,CAAC0J,OAAO,GAAG,mBAAmB;GACvC,CAAC1J,oBAAQ,CAAC2J,WAAW,GAAG,mBAAmB;GAC3C,CAAC3J,oBAAQ,CAAC4J,cAAc,GAAG,mBAAmB;GAC9C,CAAC5J,oBAAQ,CAAC6J,MAAM,GAAG,kBAAkB;GACrCC,OAAO,EAAE;CACV,CAAC;CAAC;CAAA;AAEF,CAAO,MAAMC,iBAAiB,CAC9B;GAICpQ,WAAW,CAACI,MAAwB,EAAE4D,KAAsB,GAAG,EAAE,EACjE;KAAA;OAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,sBAAW5D,MAAM;KACrB,4CAAI,oBAAU4D,KAAK;;GAGpBqM,SAAS,GACT;KACC,OAAO,4CAAI,oBAASpP,MAAM;;GAG3BqP,eAAe,GACf;KAAA;KACC,OAAO,sBAAI,CAACC,OAAO,EAAE,qBAAd,cAAgBC,cAAc,KAAI,CAAC;;GAG3CD,OAAO,GACP;KAAA;KACC,MAAMtP,MAAM,GAAG,IAAI,CAACoP,SAAS,EAAE;KAE/B,gCAAO,4CAAI,oBAASnL,IAAI,qBAAjB,sBAAoBjE,MAAM,CAAC;;GAGnCwP,WAAW,GACX;KAAA;KACC,MAAMvL,IAAI,GAAG,IAAI,CAACqL,OAAO,EAAE;KAE3B,qBAAOrL,IAAI,oBAAJA,IAAI,CAAEkB,IAAI,yBAAI,EAAE;;GAGxBsK,WAAW,GACX;KACC,OAAO3N,OAAO,CAAC,4CAAI,oBAAS4N,KAAK,CAAC;;GAGnC3E,aAAa,GACb;KACC,OAAO,IAAI,CAACyE,WAAW,EAAE,KAAKpK,oBAAQ,CAACC,OAAO;;GAG/CsK,YAAY,GACZ;KACC,OAAO,IAAI,CAACH,WAAW,EAAE,KAAKpK,oBAAQ,CAAC6J,MAAM;;GAG9CW,aAAa,GACb;KACC,OAAO9G,gCAAc,CAAC+G,YAAY,CAAC7I,GAAG,CAAC,IAAI,CAACwI,WAAW,EAAE,CAAC;;GAG3DM,YAAY,GACZ;KACC,MAAMC,SAAS,GAAG,4CAAI,oBAASC,UAAU,CAAC,IAAI,CAACZ,SAAS,EAAE,CAAC;KAC3D,IAAI,CAACW,SAAS,IAAI,IAAI,CAACE,kBAAkB,EAAE,EAC3C;OACC,OAAO,IAAI;;KAGZ,OAAOF,SAAS,CAACpJ,QAAQ,CAAC3H,2BAAI,CAACuD,SAAS,EAAE,CAAC;;GAG5C0N,kBAAkB,GAClB;KACC,OAAO,IAAI,CAACL,aAAa,EAAE,IAAI,4CAAI,kBAAQM,eAAe;;GAG3DC,sBAAsB,GACtB;KACC,OAAO,IAAI,CAACV,WAAW,EAAE,IAAI,IAAI,CAAC1E,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC+E,YAAY,EAAE;;GAG1EM,aAAa,GACb;KAAA;;;;KAIC,IAAI,IAAI,CAACR,aAAa,EAAE,IAAI,CAAC,IAAI,CAACK,kBAAkB,EAAE,EACtD;OACC,OAAO,CAACpB,oBAAoB,CAACK,OAAO,CAAC;;KAGtC,IAAI,IAAI,CAACS,YAAY,EAAE,EACvB;OACC,OAAO,CAACd,oBAAoB,CAACK,OAAO,EAAEL,oBAAoB,CAACzJ,oBAAQ,CAAC6J,MAAM,CAAC,CAAC;;KAG7E,MAAMoB,kBAAkB,GAAG,IAAI,CAACb,WAAW,EAAE;KAC7C,MAAMc,UAAU,4BAAGzB,oBAAoB,CAACwB,kBAAkB,CAAC,oCAAIxB,oBAAoB,CAACK,OAAO;KAE3F,OAAO,CAACoB,UAAU,CAAC;;CAErB;;CC/G6C;CAAA;CAAA;CAAA;CAAA;AAI7C,CAAO,MAAMC,mBAAmB,CAChC;GAGCxR,WAAW,CAACI,MAA0B,EACtC;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;OAAA;;KACC,4CAAI,0BAAWA,MAAM;;GAGtBqR,kBAAkB,GAClB;KACC,4CAAI;KACJ,4CAAI;KACJ,4CAAI;KACJ,4CAAI;;GAGLC,WAAW,GACX;KACC,OAAO,4CAAI,wBAASxM,IAAI,CAAC5D,QAAQ;;GAGlCqQ,gBAAgB,GAChB;KACC,MAAM,CAACC,WAAW,CAAC,GAAG,4CAAI,wBAAS1L,QAAQ;KAE3C,OAAO0L,WAAW,CAAC/Q,EAAE;;CAyBvB;CAAC,wBArBA;GACC,MAAM6C,WAAW,GAAG,IAAIC,0BAAW,EAAE;GACrCD,WAAW,CAACkC,eAAe,CAAC,4CAAI,wBAASD,KAAK,CAAC;CAChD;CAAC,wBAGD;GACC1F,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,WAAW,EAAE,4CAAI,wBAASe,KAAK,CAAC;CAC1D;CAAC,8BAGD;GACC,MAAMqD,IAAI,GAAG;KAAE,GAAG,4CAAI,wBAASA,IAAI;KAAErC,OAAO,EAAE,4CAAI,wBAASA,OAAO;KAAEvB,QAAQ,EAAE,IAAI,CAACoQ,WAAW;IAAI;GAClGzR,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,WAAW,EAAEoE,IAAI,CAAC;CAC5C;CAAC,wBAGD;GACC,MAAM,CAAC2M,eAAe,CAAC,GAAG,4CAAI,wBAAS3L,QAAQ;GAC/CjG,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,gBAAgB,EAAE+Q,eAAe,CAAC;CAC5D;;CCjDqE;CAatE;AACA,CAAO,MAAMC,iBAAiB,CAC9B;GAAA;KAAA;OAAA;;;GACCrC,WAAW,GACX;KACC,OAAO,IAAI;;GAGZC,aAAa,CAACtP,MAAM,EAAE4D,KAAK,EAC3B;KACC,IAAI,CAAC7D,gBAAgB,CAACC,MAAM,EAAE4D,KAAK,CAAC;;GAGrC2L,iBAAiB,CAACvP,MAAM,EAAE4D,KAAK,EAC/B;KACC,IAAI,CAAC7D,gBAAgB,CAACC,MAAM,EAAE4D,KAAK,CAAC;;GAGrC7D,gBAAgB,CAACC,MAAwB,EAAE4D,KAAsB,EACjE;KACC,MAAMwF,OAAO,GAAG,IAAI4G,iBAAiB,CAAChQ,MAAM,EAAE4D,KAAK,CAAC;KACpD,IAAIwF,OAAO,CAAC4H,sBAAsB,CAAChR,MAAM,CAAC,EAC1C;OACC;;KAGDC,uBAAM,CAACC,IAAI,CAAC,qCAAqC,EAAEF,MAAM,CAAC;KAC1D,MAAM2R,aAAa,GAAG;OACrBlR,EAAE,EAAET,MAAM,CAACkB,QAAQ;OACnBL,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBR,SAAS,EAAEL,MAAM,CAACM,OAAO,CAACG;MAC1B;KAED,MAAMmR,UAA8B,GAAG/R,2BAAI,CAACC,QAAQ,EAAE,CAACM,OAAO,CAAC,YAAY,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KAC7F,IAAI0Q,UAAU,EACd;OACCD,aAAa,CAACE,aAAa,GAAG,KAAK;OACnCF,aAAa,CAACG,qBAAqB,GAAG,KAAK;OAC3CH,aAAa,CAACI,KAAK,GAAG,KAAK;;KAG5B,MAAMC,UAAU,GAAG5I,OAAO,CAAC6H,aAAa,EAAE;KAC1Ce,UAAU,CAACrM,OAAO,CAAEwL,UAAU,IAAK;OAClCtR,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAACyQ,UAAU,EAAEQ,aAAa,CAAC;MACnD,CAAC;;GAGH/P,2BAA2B,CAAC5B,MAAmC,EAC/D;KACC,MAAM0C,qBAAqB,GAAGC,OAAO,CAAC3C,MAAM,CAAC4C,cAAc,CAAC;KAC5D,IAAIF,qBAAqB,EACzB;OACC,4CAAI,gEAA+B1C,MAAM,CAACkB,QAAQ,EAAElB,MAAM,CAAC4C,cAAc,CAACnC,EAAE;;;GAI9E+J,gBAAgB,CAACxK,MAAwB,EACzC;KACCC,uBAAM,CAACC,IAAI,CAAC,qCAAqC,EAAEF,MAAM,CAAC;KAC1DH,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,eAAe,EAAE;OACzCD,EAAE,EAAET,MAAM,CAACkB,QAAQ;OACnB+Q,MAAM,EAAEjS,MAAM,CAAC0K;MACf,CAAC;;GAGH3H,iBAAiB,CAAC/C,MAAyB,EAC3C;KACCC,uBAAM,CAACC,IAAI,CAAC,sCAAsC,EAAEF,MAAM,CAAC;KAC3D,MAAM4R,UAA8B,GAAG/R,2BAAI,CAACC,QAAQ,EAAE,CAACM,OAAO,CAAC,YAAY,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KAC7F,IAAI,CAAC0Q,UAAU,EACf;OACC;;KAGD,MAAMpL,YAAY,GAAG3G,2BAAI,CAACC,QAAQ,EAAE,CAACM,OAAO,CAAC,wBAAwB,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KACvF,IAAIsF,YAAY,EAChB;OACC;;KAGD,MAAMlG,OAAwB,GAAGT,2BAAI,CAACC,QAAQ,EAAE,CAACM,OAAO,CAAC,mBAAmB,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KAC9F,MAAMgR,SAAS,GAAGrS,2BAAI,CAACuD,SAAS,EAAE,KAAKpD,MAAM,CAACmB,MAAM;KACpD,MAAMgR,gBAAgB,GAAGtS,2BAAI,CAACuD,SAAS,EAAE,KAAK9C,OAAO,CAACsE,QAAQ;KAC9D,IAAIsN,SAAS,IAAI,CAACC,gBAAgB,EAClC;OACC;;KAGDtS,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,aAAa,EAAE;OACvCD,EAAE,EAAET,MAAM,CAACkB,QAAQ;OACnBb,SAAS,EAAEL,MAAM,CAACgD,eAAe,CAACC,QAAQ,CAAC5C,SAAS;OACpD0R,KAAK,EAAE;MACP,CAAC;;GAGHK,aAAa,CAACpS,MAAM,EACpB;KACCC,uBAAM,CAACC,IAAI,CAAC,kCAAkC,EAAEF,MAAM,CAAC;KACvD,MAAM4R,UAA8B,GAAG/R,2BAAI,CAACC,QAAQ,EAAE,CAACM,OAAO,CAAC,YAAY,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KAC7F,IAAI,CAAC0Q,UAAU,EACf;OACC;;KAGD/R,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,YAAY,EAAE;OACtCD,EAAE,EAAET,MAAM,CAACkB,QAAQ;OACnB+Q,MAAM,EAAEjS,MAAM,CAAC0K;MACf,CAAC;;GAGH2H,cAAc,CAACrS,MAAM,EACrB;KACCC,uBAAM,CAACC,IAAI,CAAC,mCAAmC,EAAEF,MAAM,CAAC;KACxD,MAAM4R,UAA8B,GAAG/R,2BAAI,CAACC,QAAQ,EAAE,CAACM,OAAO,CAAC,YAAY,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KAC7F,IAAI,CAAC0Q,UAAU,EACf;OACC;;KAGD/R,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,eAAe,EAAE;OACzCD,EAAE,EAAET,MAAM,CAACkB;MACX,CAAC;;GAGHsI,mBAAmB,CAACxJ,MAAM,EAC1B;KACCC,uBAAM,CAACC,IAAI,CAAC,wCAAwC,EAAEF,MAAM,CAAC;KAC7D,MAAM4R,UAA8B,GAAG/R,2BAAI,CAACC,QAAQ,EAAE,CAACM,OAAO,CAAC,YAAY,CAAC,CAACJ,MAAM,CAACkB,QAAQ,CAAC;KAC7F,IAAI,CAAC0Q,UAAU,IAAI5R,MAAM,CAACmB,MAAM,KAAKtB,2BAAI,CAACuD,SAAS,EAAE,EACrD;OACC;;KAGDvD,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,eAAe,EAAE;OACzCD,EAAE,EAAET,MAAM,CAACkB;MACX,CAAC;;GAGH0L,gBAAgB,CAAC5M,MAAwB,EACzC;KAAA;KACCC,uBAAM,CAACC,IAAI,CAAC,qCAAqC,EAAEF,MAAM,CAAC;KAE1D,MAAMK,SAAS,GAAGiS,qBAAK,CAAChR,IAAI,CAACiR,SAAS,EAAE;KACxC1S,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,gBAAgB,EAAE;OAC1CD,EAAE,EAAEJ,SAAS;OACbuH,IAAI,EAAE5H,MAAM,CAAC4H;MACb,CAAC;KAEF/H,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,kBAAkB,EAAE;OAC5CD,EAAE,EAAET,MAAM,CAAC8M,IAAI,CAACrM,EAAE;OAClBoM,OAAO,qBAAE7M,MAAM,CAAC6M,OAAO,8BAAI,KAAK;OAChCgF,aAAa,EAAE,IAAI;OACnBxR;MACA,CAAC;;GAGH0M,sBAAsB,CAAC/M,MAA8B,EACrD;KACCC,uBAAM,CAACC,IAAI,CAAC,2CAA2C,EAAEF,MAAM,CAAC;KAChE,MAAM;OAAEiN;MAAO,GAAGjN,MAAM;KAExBiN,KAAK,CAACtH,OAAO,CAAEwH,IAAI,IAAK;OACvB,MAAM9M,SAAS,GAAGiS,qBAAK,CAAChR,IAAI,CAACiR,SAAS,EAAE;OACxC1S,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,gBAAgB,EAAE;SAC1CD,EAAE,EAAEJ,SAAS;SACbuH,IAAI,EAAEuF,IAAI,CAACvF;QACX,CAAC;OAEF/H,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,kBAAkB,EAAE;SAC5CD,EAAE,EAAE0M,IAAI,CAACL,IAAI,CAACrM,EAAE;SAChBJ;QACA,CAAC;MACF,CAAC;;GAGHmS,kBAAkB,CAACxS,MAA0B,EAC7C;KACCC,uBAAM,CAACC,IAAI,CAAC,uCAAuC,EAAEF,MAAM,CAAC;KAC5D,MAAMoJ,OAAO,GAAG,IAAIgI,mBAAmB,CAACpR,MAAM,CAAC;KAC/CoJ,OAAO,CAACiI,kBAAkB,EAAE;KAE5B,MAAMM,aAAa,GAAG;OACrBlR,EAAE,EAAE2I,OAAO,CAACkI,WAAW,EAAE;OACzBjR,SAAS,EAAE+I,OAAO,CAACmI,gBAAgB,EAAE;OACrCjH,gBAAgB,EAAEtK,MAAM,CAACsK;MACzB;KAEDzK,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,kBAAkB,EAAEiR,aAAa,CAAC;;CAiB7D;CAAC,wCAd8BzQ,QAAgB,EAAEuR,gBAAwB,EACxE;GACC,IAAI,CAACA,gBAAgB,EACrB;KACC5S,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,eAAe,EAAE;OAAED,EAAE,EAAES;MAAU,CAAC;KAE3D;;GAGDrB,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,eAAe,EAAE;KACzCD,EAAE,EAAES,QAAQ;KACZP,MAAM,EAAE;OAAEN,SAAS,EAAEoS;;IACrB,CAAC;CACH;;CCvNM,MAAMC,uBAAuB,CACpC;GACC9S,WAAW,GACX;KACC,IAAI,CAAC+S,KAAK,GAAG9S,2BAAI,CAACC,QAAQ,EAAE;KAC5B,IAAI,CAACwD,WAAW,GAAG,IAAIC,0BAAW,EAAE;KAEpC,IAAI,CAACqP,sBAAsB,GAAGC,iBAAO,CAACC,QAAQ,CAAC,IAAI,CAACC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC;;GAG/E1D,WAAW,GACX;KACC,OAAO,IAAI;;GAGZ2D,mBAAmB,GACnB;KACC,OAAO,QAAQ;;GAGhBC,eAAe,CAACjT,MAAuB,EACvC;KACC,IAAIA,MAAM,CAACkT,SAAS,KAAK,IAAI,EAC7B;OACC;;KAGD,IAAI,CAAC5P,WAAW,CAACkC,eAAe,CAACxF,MAAM,CAACuF,KAAK,CAAC;KAC9C,IAAI,CAACoN,KAAK,CAACjS,QAAQ,CAAC,mBAAmB,EAAEV,MAAM,CAAC;KAEhD,IAAI,CAAC4S,sBAAsB,CAAC5S,MAAM,CAACyC,OAAO,CAAC;;GAG5C0Q,mBAAmB,CAACnT,MAAM,EAC1B;KACC,IAAI,CAAC2S,KAAK,CAACjS,QAAQ,CAAC,sBAAsB,EAAE;OAC3CD,EAAE,EAAET,MAAM,CAACS;MACX,CAAC;KAEF,IAAI,CAACmS,sBAAsB,CAAC5S,MAAM,CAACyC,OAAO,CAAC;;GAG5C2Q,gBAAgB,CAACpT,MAAM,EACvB;KACCA,MAAM,CAACkJ,IAAI,CAACvD,OAAO,CAAClF,EAAE,IAAI;OACzB,IAAI,CAACkS,KAAK,CAACjS,QAAQ,CAAC,oBAAoB,EAAE;SAAC4G,GAAG,EAAE,CAAC7G,EAAE,CAAC;SAAE4S,IAAI,EAAE;QAAK,CAAC;MAClE,CAAC;KAEF,IAAI,CAACT,sBAAsB,CAAC5S,MAAM,CAACyC,OAAO,CAAC;;GAG5C6Q,kBAAkB,CAACtT,MAAM,EACzB;KACCA,MAAM,CAACkJ,IAAI,CAACvD,OAAO,CAAClF,EAAE,IAAI;OACzB,IAAI,CAACkS,KAAK,CAACjS,QAAQ,CAAC,oBAAoB,EAAE;SAAC4G,GAAG,EAAE,CAAC7G,EAAE,CAAC;SAAE4S,IAAI,EAAE;QAAM,CAAC;MACnE,CAAC;KAEF,IAAI,CAACT,sBAAsB,CAAC5S,MAAM,CAACyC,OAAO,CAAC;;GAG5C8Q,mBAAmB,GACnB;KACC,KAAK,IAAI,CAACZ,KAAK,CAACjS,QAAQ,CAAC,uBAAuB,CAAC;;GAGlD8S,kBAAkB,CAACxT,MAAM,EACzB;KACC,MAAMyT,WAAW,GAAGhO,MAAM,CAACiO,IAAI,CAAC1T,MAAM,CAACS,EAAE,CAAC,CAACyM,GAAG,CAACzM,EAAE,IAAIkT,MAAM,CAACC,QAAQ,CAACnT,EAAE,EAAE,EAAE,CAAC,CAAC;KAE7EgT,WAAW,CAAC9N,OAAO,CAAClF,EAAE,IAAI;OACzB,IAAI,CAACkS,KAAK,CAACjS,QAAQ,CAAC,sBAAsB,EAAE;SAACD;QAAG,CAAC;MACjD,CAAC;KAEF,IAAI,CAACmS,sBAAsB,CAAC5S,MAAM,CAACyC,OAAO,CAAC;;GAG5CsQ,aAAa,CAACtQ,OAAe,EAC7B;KACC,IAAI,CAACkQ,KAAK,CAACjS,QAAQ,CAAC,0BAA0B,EAAE+B,OAAO,CAAC;;CAE1D;;CCvEO,MAAMoR,kBAAkB,CAC/B;GACCjU,WAAW,GACX;KACC,IAAI,CAAC+S,KAAK,GAAG9S,2BAAI,CAACC,QAAQ,EAAE;KAC5B,IAAI,CAACwD,WAAW,GAAG,IAAIC,0BAAW,EAAE;;GAGrC8L,WAAW,GACX;KACC,OAAO,IAAI;;;;GAIZhG,iBAAiB,CAACrJ,MAAyB,EAC3C;KACC,IAAI,IAAI,CAAC8T,wBAAwB,CAAC9T,MAAM,CAACa,MAAM,CAAC,KAAK,CAAC,EACtD;OACC;;KAGD,KAAK,IAAI,CAACyC,WAAW,CAACkC,eAAe,CAACC,MAAM,CAACC,MAAM,CAAC1F,MAAM,CAACuF,KAAK,CAAC,CAAC;KAElE,KAAK,IAAI,CAACoN,KAAK,CAACjS,QAAQ,CAAC,qBAAqB,EAAE;OAC/CG,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrB0E,KAAK,EAAEvF,MAAM,CAACuJ;MACd,CAAC;;GAGHC,mBAAmB,CAACxJ,MAA2B,EAC/C;KACC,IAAI,IAAI,CAAC8T,wBAAwB,CAAC9T,MAAM,CAACa,MAAM,CAAC,KAAK,CAAC,EACtD;OACC;;KAGD,KAAK,IAAI,CAAC8R,KAAK,CAACjS,QAAQ,CAAC,wBAAwB,EAAE;OAClDG,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBM,MAAM,EAAEnB,MAAM,CAACmB;MACf,CAAC;;;;;GAKH4S,aAAa,CAAC/T,MAAM,EACpB;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACiU,IAAI,CAACpT,MAAM,CAAC,EAC7C;OACC;;KAGD,KAAK,IAAI,CAACyC,WAAW,CAACkC,eAAe,CAACxF,MAAM,CAACuF,KAAK,CAAC;KAEnD,KAAK,IAAI,CAACoN,KAAK,CAACjS,QAAQ,CAAC,mBAAmB,EAAE;OAC7CG,MAAM,EAAEb,MAAM,CAACiU,IAAI,CAACpT,MAAM;OAC1BqT,KAAK,EAAE,CAAClU,MAAM,CAACiU,IAAI;MACnB,CAAC;;GAGHE,gBAAgB,CAACnU,MAAM,EAAE4D,KAAK,EAC9B;KACC,IAAI,CAACmQ,aAAa,CAAC/T,MAAM,EAAE4D,KAAK,CAAC;;GAGlCwQ,gBAAgB,CAACpU,MAAM,EACvB;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACa,MAAM,CAAC,EACxC;OACC;;KAGD,KAAK,IAAI,CAAC8R,KAAK,CAACjS,QAAQ,CAAC,sBAAsB,EAAE;OAChDG,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBJ,EAAE,EAAET,MAAM,CAACqU;MACX,CAAC;;;;;GAKHC,iBAAiB,CAACtU,MAAM,EACxB;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACiU,IAAI,CAACpT,MAAM,CAAC,EAC7C;OACC;;KAGD,KAAK,IAAI,CAACyC,WAAW,CAACkC,eAAe,CAACxF,MAAM,CAACuF,KAAK,CAAC;KAEnD,KAAK,IAAI,CAACoN,KAAK,CAACjS,QAAQ,CAAC,sBAAsB,EAAE;OAChDG,MAAM,EAAEb,MAAM,CAACiU,IAAI,CAACpT,MAAM;OAC1B0T,QAAQ,EAAE,CAACvU,MAAM,CAACiU,IAAI;MACtB,CAAC;;GAGHO,oBAAoB,CAACxU,MAAM,EAAE4D,KAAK,EAClC;KACC,IAAI,CAAC0Q,iBAAiB,CAACtU,MAAM,EAAE4D,KAAK,CAAC;;GAGtC6Q,oBAAoB,CAACzU,MAAM,EAC3B;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACa,MAAM,CAAC,EACxC;OACC;;KAGD,KAAK,IAAI,CAAC8R,KAAK,CAACjS,QAAQ,CAAC,yBAAyB,EAAE;OACnDG,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBJ,EAAE,EAAET,MAAM,CAACqU;MACX,CAAC;;;;;GAKHK,YAAY,CAAC1U,MAAM,EACnB;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACiU,IAAI,CAACpT,MAAM,CAAC,EAC7C;OACC;;KAGD,KAAK,IAAI,CAACyC,WAAW,CAACkC,eAAe,CAACxF,MAAM,CAACuF,KAAK,CAAC;KAEnD,KAAK,IAAI,CAACoN,KAAK,CAACjS,QAAQ,CAAC,mBAAmB,EAAE;OAC7CG,MAAM,EAAEb,MAAM,CAACiU,IAAI,CAACpT,MAAM;OAC1B8T,KAAK,EAAE,CAAC3U,MAAM,CAACiU,IAAI;MACnB,CAAC;KAEF,MAAMxR,OAAO,GAAG,IAAI,CAACkQ,KAAK,CAACvS,OAAO,CAAC,0BAA0B,CAAC,CAACJ,MAAM,CAACiU,IAAI,CAACpT,MAAM,CAAC;KAClF,KAAK,IAAI,CAAC8R,KAAK,CAACjS,QAAQ,CAAC,0BAA0B,EAAE;OACpDG,MAAM,EAAEb,MAAM,CAACiU,IAAI,CAACpT,MAAM;OAC1B4B,OAAO,EAAEA,OAAO,GAAG;MACnB,CAAC;;GAGHmS,eAAe,CAAC5U,MAAM,EACtB;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACa,MAAM,CAAC,EACxC;OACC;;KAGD,KAAK,IAAI,CAAC8R,KAAK,CAACjS,QAAQ,CAAC,sBAAsB,EAAE;OAChDG,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBJ,EAAE,EAAET,MAAM,CAACqU;MACX,CAAC;;;;;GAKHQ,wBAAwB,CAAC7U,MAAM,EAC/B;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACiU,IAAI,CAACpT,MAAM,CAAC,EAC7C;OACC;;KAGD,KAAK,IAAI,CAACyC,WAAW,CAACkC,eAAe,CAACxF,MAAM,CAACuF,KAAK,CAAC;KACnD,KAAK,IAAI,CAACoN,KAAK,CAACjS,QAAQ,CAAC,WAAW,EAAEV,MAAM,CAACyB,KAAK,CAAC;KACnD,KAAK,IAAI,CAACkR,KAAK,CAACjS,QAAQ,CAAC,gBAAgB,EAAE,CAACV,MAAM,CAACiU,IAAI,CAAC3T,OAAO,CAAC,CAAC;KAEjE,KAAK,IAAI,CAACqS,KAAK,CAACjS,QAAQ,CAAC,uBAAuB,EAAE;OACjDG,MAAM,EAAEb,MAAM,CAACiU,IAAI,CAACpT,MAAM;OAC1BiU,SAAS,EAAE,CAAC9U,MAAM,CAACiU,IAAI;MACvB,CAAC;KAEF,MAAMxR,OAAO,GAAG,IAAI,CAACkQ,KAAK,CAACvS,OAAO,CAAC,8BAA8B,CAAC,CAACJ,MAAM,CAACiU,IAAI,CAACpT,MAAM,CAAC;KACtF,KAAK,IAAI,CAAC8R,KAAK,CAACjS,QAAQ,CAAC,8BAA8B,EAAE;OACxDG,MAAM,EAAEb,MAAM,CAACiU,IAAI,CAACpT,MAAM;OAC1B4B,OAAO,EAAEA,OAAO,GAAG;MACnB,CAAC;;GAGHsS,2BAA2B,CAAC/U,MAAM,EAClC;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACa,MAAM,CAAC,EACxC;OACC;;KAGD,KAAK,IAAI,CAAC8R,KAAK,CAACjS,QAAQ,CAAC,0BAA0B,EAAE;OACpDG,MAAM,EAAEb,MAAM,CAACa,MAAM;OACrBJ,EAAE,EAAET,MAAM,CAACqU;MACX,CAAC;;;;;GAKHW,aAAa,CAAChV,MAAM,EACpB;KAAA;KACC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAAChU,MAAM,CAACiU,IAAI,CAACpT,MAAM,CAAC,EAC7C;OACC;;KAGD,KAAK,IAAI,CAACyC,WAAW,CAACkC,eAAe,CAACxF,MAAM,CAACuF,KAAK,CAAC;KACnD,KAAK,IAAI,CAACoN,KAAK,CAACjS,QAAQ,CAAC,WAAW,EAAEV,MAAM,CAACyB,KAAK,CAAC;KAEnD,MAAMwT,OAAO,2BAAGjV,MAAM,CAACiU,IAAI,CAACgB,OAAO,mCAAIC,8BAAkB,CAACC,YAAY;KAEtE,KAAK,IAAI,CAACxC,KAAK,CAACjS,QAAQ,CAAC,mBAAmB,EAAE;OAC7CG,MAAM,EAAEb,MAAM,CAACiU,IAAI,CAACpT,MAAM;OAC1BY,KAAK,EAAE,CAACzB,MAAM,CAACiU,IAAI,CAAC;OACpBgB;MACA,CAAC;;GAGHG,gBAAgB,CAACpV,MAAM,EACvB;KAAA;KACC,MAAMa,MAAM,GAAGwU,cAAI,CAACC,QAAQ,CAACtV,MAAM,CAACa,MAAM,CAAC,GAAGb,MAAM,CAACa,MAAM,GAAG8S,MAAM,CAACC,QAAQ,CAAC5T,MAAM,CAACa,MAAM,EAAE,EAAE,CAAC;KAChG,IAAI,CAAC,IAAI,CAACmT,eAAe,CAACnT,MAAM,CAAC,EACjC;OACC;;KAGD,MAAM0U,aAAa,qBAAGvV,MAAM,CAACqU,MAAM,6BAAIrU,MAAM,CAACwV,MAAM;KACpD,KAAK,IAAI,CAAC7C,KAAK,CAACjS,QAAQ,CAAC,sBAAsB,EAAE;OAChDG,MAAM;OACNJ,EAAE,EAAE8U;MACJ,CAAC;;;;;;GAMHE,oCAAoC,CAACzV,MAA4C,EACjF;KACC,KAAK,IAAI,CAAC2S,KAAK,CAACjS,QAAQ,CAAC,0CAA0C,EAAEV,MAAM,CAAC0V,KAAK,CAAC;;GAGnFC,oBAAoB,CAAC3V,MAA4B,EACjD;KACC,MAAM;OAAE4V,WAAW;OAAEC;MAAO,GAAG7V,MAAM;KACrC,MAAM8V,SAAS,GAAGF,WAAW,CAACE,SAAS;KACvC,IAAI,CAACA,SAAS,EACd;OACC;;KAGD,KAAK,IAAI,CAACnD,KAAK,CAACjS,QAAQ,CAAC,mCAAmC,EAAEmV,KAAK,CAAC;KACpE,KAAK,IAAI,CAAClD,KAAK,CAACjS,QAAQ,CAAC,qCAAqC,EAAE,CAACkV,WAAW,CAAC,CAAC;;GAG/EpG,qBAAqB,CAACxP,MAA6B,EACnD;KACC,IAAI,CAAC+V,wBAAwB,CAAC/V,MAAM,CAAC;;GAGtC2D,iBAAiB,CAAC3D,MAAyB,EAC3C;KACC,IAAI,CAAC+V,wBAAwB,CAAC/V,MAAM,CAAC;;GAGtCgW,6BAA6B,CAAChW,MAAqC,EACnE;KACC,MAAM;OAAEiW,GAAG;OAAEnR,IAAI;OAAE8Q;MAAa,GAAG5V,MAAM;KAEzC,MAAM8V,SAAS,GAAGF,WAAW,CAACE,SAAS;KACvC,IAAI,CAACA,SAAS,EACd;OACC;;KAGD,IAAIhR,IAAI,EACR;OACC,KAAK,IAAI,CAAC6N,KAAK,CAACjS,QAAQ,CAAC,WAAW,EAAEoE,IAAI,CAAC;;KAG5C,IAAImR,GAAG,EACP;OACC,KAAK,IAAI,CAAC3S,WAAW,CAACkC,eAAe,CAACyQ,GAAG,CAAC;;KAG3C,KAAK,IAAI,CAACtD,KAAK,CAACjS,QAAQ,CAAC,qCAAqC,EAAE,CAACkV,WAAW,CAAC,CAAC;;GAG/EtG,aAAa,CAACtP,MAAqB,EACnC;KACC,IAAI,CAACkW,uBAAuB,CAAClW,MAAM,CAAC4V,WAAW,CAAC;;GAGjDpL,gBAAgB,CAACxK,MAAwB,EACzC;KACC,MAAM;OAAEa,MAAM;OAAEK;MAAU,GAAGlB,MAAM;KAEnC,MAAM8V,SAAS,GAAG,IAAI,CAACnD,KAAK,CAACvS,OAAO,CAAC,+BAA+B,CAAC,CAACc,QAAQ,CAAC;KAC/E,MAAMiV,QAAQ,GAAG,IAAI,CAACxD,KAAK,CAACvS,OAAO,CAAC,8BAA8B,CAAC;KAEnE,IAAI0V,SAAS,IAAIK,QAAQ,EACzB;OACC,KAAK,IAAI,CAACxD,KAAK,CAACjS,QAAQ,CAAC,oCAAoC,EAAE,CAACG,MAAM,CAAC,CAAC;;;;;;GAM1E0O,iBAAiB,CAACvP,MAAyB,EAC3C;;KAEC,IAAI,CAACoW,QAAQ,CAACpW,MAAM,CAAC;;;KAGrB,IAAI,CAACkW,uBAAuB,CAAClW,MAAM,CAAC4V,WAAW,CAAC;;;;GAIjDG,wBAAwB,CAAC/V,MAAiD,EAC1E;KACC,MAAMqW,UAAU,GAAGrW,MAAM,CAACyC,OAAO,KAAK,CAAC;KAEvC,IAAI4T,UAAU,EACd;OACC,KAAK,IAAI,CAAC1D,KAAK,CAACjS,QAAQ,CAAC,uCAAuC,EAAEV,MAAM,CAACa,MAAM,CAAC;;;GAIlFqV,uBAAuB,CAACN,WAA0C,EAClE;KACC,IAAI,CAACA,WAAW,EAChB;OACC;;KAGD,MAAMU,cAAc,GAAG,IAAI,CAAC3D,KAAK,CAACvS,OAAO,CAAC,yBAAyB,CAAC,CAACwV,WAAW,CAAC/U,MAAM,CAAC;KACxF,MAAM0V,MAAM,GAAG,CAAAD,cAAc,oBAAdA,cAAc,CAAEC,MAAM,KAAIX,WAAW,CAACW,MAAM;KAE3D,KAAK,IAAI,CAAC5D,KAAK,CAACjS,QAAQ,CAAC,qCAAqC,EAAE,CAAC;OAAE,GAAGkV,WAAW;OAAEW;MAAQ,CAAC,CAAC;KAC7F,KAAK,IAAI,CAAC5D,KAAK,CAACjS,QAAQ,CAAC,oCAAoC,EAAE,CAACkV,WAAW,CAAC/U,MAAM,CAAC,CAAC;;GAGrFuV,QAAQ,CAACpW,MAAyB,EAClC;KACC,MAAM;OAAEa,MAAM;OAAE0E,KAAK;OAAE9D;MAAO,GAAGzB,MAAM;KAEvC,IAAI,CAAC,IAAI,CAACgU,eAAe,CAACnT,MAAM,CAAC,IAAI,IAAI,CAAC2V,gBAAgB,EAAE,EAC5D;OACC;;KAGD,KAAK,IAAI,CAAClT,WAAW,CAACkC,eAAe,CAACC,MAAM,CAACC,MAAM,CAACH,KAAK,CAAC,CAAC;KAC3D,KAAK,IAAI,CAACoN,KAAK,CAACjS,QAAQ,CAAC,WAAW,EAAE+E,MAAM,CAACC,MAAM,CAACjE,KAAK,CAAC,CAAC;KAE3DgE,MAAM,CAACC,MAAM,CAACjE,KAAK,CAAC,CAACkE,OAAO,CAAEC,IAAI,IAAK;OACtC,KAAK,IAAI,CAAC+M,KAAK,CAACjS,QAAQ,CAAC,mBAAmB,EAAE;SAC7CG,MAAM,EAAE+E,IAAI,CAAC/E,MAAM;SACnBY,KAAK,EAAE,CAACmE,IAAI,CAAC;SACbqP,OAAO,EAAEC,8BAAkB,CAACC;QAC5B,CAAC;MACF,CAAC;;GAGHnB,eAAe,CAACnT,MAAc,EAC9B;KACC,OAAO,IAAI,CAAC8R,KAAK,CAACvS,OAAO,CAAC,kBAAkB,CAAC,CAACS,MAAM,CAAC;;GAGtD2V,gBAAgB,GAChB;KACC,OAAO,IAAI,CAAC7D,KAAK,CAAC8D,KAAK,CAACC,OAAO,CAACC,eAAe;;GAGhD7C,wBAAwB,CAACjT,MAAc,EACvC;KACC,OAAO,IAAI,CAAC8R,KAAK,CAACvS,OAAO,CAAC,yBAAyB,CAAC,CAACS,MAAM,CAAC;;CAE9D;;CCrXwE;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;CAAA;AAKxE,CAAO,MAAM+V,mBAAmB,CAChC;GAGChX,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA,KAHAiX,kBAAkB,GAAW,CAAC;KAI7B,IAAI,CAAClE,KAAK,GAAG9S,2BAAI,CAACC,QAAQ,EAAE;KAE5B,4CAAI;KACJ,4CAAI;;GAGLuP,WAAW,GACX;KACC,OAAO,IAAI;;GAGZC,aAAa,CAACtP,MAAM,EAAE8W,SAAS,EAC/B;KACC,IAAI,CAAC/W,gBAAgB,CAACC,MAAM,EAAE8W,SAAS,CAAC;;GAGzCvH,iBAAiB,CAACvP,MAAM,EAAE8W,SAAS,EACnC;KACC,IAAI,CAAC/W,gBAAgB,CAACC,MAAM,EAAE8W,SAAS,CAAC;;GAGzC/W,gBAAgB,CAACC,MAAwB,EAAE8W,SAAwB,EACnE;KACC,IAAI,yCAAC,IAAI,oDAAyB9W,MAAM,EAAE8W,SAAS,CAAC,EACpD;OACC;;KAGD,4CAAI,IAAI,gCAAe9W,MAAM,CAACkB,QAAQ,GACtC;OACC,4CAAI,4DAA6BlB,MAAM;OAEvC;;KAGD,4CAAI,wCAAmBA,MAAM;KAC7B,4CAAI;KAEJ,MAAMM,OAAO,GAAG,IAAI,CAACqS,KAAK,CAACvS,OAAO,CAAC,kBAAkB,CAAC,CAACJ,MAAM,CAACM,OAAO,CAACG,EAAE,CAAC;KACzE,MAAMwB,MAAM,GAAG,IAAI,CAAC0Q,KAAK,CAACvS,OAAO,CAAC,WAAW,CAAC,CAACJ,MAAM,CAACkB,QAAQ,EAAE,IAAI,CAAC;KACrE,MAAM4L,IAAI,GAAG,IAAI,CAAC6F,KAAK,CAACvS,OAAO,CAAC,WAAW,CAAC,CAACE,OAAO,CAACsE,QAAQ,CAAC;KAE9DmS,kCAAe,CAAC/V,WAAW,EAAE,CAACgW,WAAW,CAAC;OACzC1W,OAAO;OACP2B,MAAM;OACN6K,IAAI;OACJyD,KAAK,EAAE5N,OAAO,CAAC3C,MAAM,CAACuQ,KAAK;MAC3B,CAAC;KAEF,4CAAI,wDAA2BvQ,MAAM,CAACM,OAAO,CAACG,EAAE;;GAGjDwS,eAAe,CAACjT,MAAuB,EAAE8W,SAAwB,EACjE;KACC,IAAIA,SAAS,CAACG,eAAe,GAAG,EAAE,EAClC;OACChX,uBAAM,CAACC,IAAI,CAAC,kHAAkH,CAAC;OAE/H;;KAGD,IAAIF,MAAM,CAACS,EAAE,IAAI,IAAI,CAACoW,kBAAkB,EACxC;OACC5W,uBAAM,CAACC,IAAI,CAAC,6EAA6E,CAAC;OAE1F;;KAGD,IACCF,MAAM,CAACkT,SAAS,KAAK,IAAI,4CACtB,IAAI,2BAAa,4CACjB,IAAI,+DAA+B,IACnClJ,0BAAW,CAAChJ,WAAW,EAAE,CAACkW,cAAc,EAAE,EAE9C;OACC;;KAGD,IAAIxI,QAAQ,CAACD,QAAQ,EAAE,EACvB;OACC,MAAM0I,oBAAoB,GAAG,IAAI,CAACxE,KAAK,CAACvS,OAAO,CAAC,kCAAkC,CAAC;OACnF,IAAI+W,oBAAoB,EACxB;SACC;;;KAIF,MAAMC,YAAY,GAAG,IAAI,CAACzE,KAAK,CAACvS,OAAO,CAAC,uBAAuB,CAAC,CAACJ,MAAM,CAACS,EAAE,CAAC;KAC3E,MAAMqM,IAAI,GAAG,IAAI,CAAC6F,KAAK,CAACvS,OAAO,CAAC,WAAW,CAAC,CAACJ,MAAM,CAACmB,MAAM,CAAC;KAE3D,IAAInB,MAAM,CAACqX,MAAM,KAAK,GAAG,EACzB;OACCC,oDAAwB,CAACtW,WAAW,EAAE,CAACuW,QAAQ,CAACC,qBAAS,CAACC,QAAQ,CAAC;;KAGpE,4CAAI;KAEJV,kCAAe,CAAC/V,WAAW,EAAE,CAAC0W,gBAAgB,CAACN,YAAY,EAAEtK,IAAI,CAAC;KAElE,4CAAI,wDAA2B9M,MAAM,CAACS,EAAE;;CAoL1C;CAAC,kCAjLwBT,MAAwB,EAAE8W,SAAwB,EAC1E;GAAA;GACC,IAAIA,SAAS,CAACG,eAAe,GAAG,EAAE,EAClC;KACChX,uBAAM,CAACC,IAAI,CAAC,wGAAwG,CAAC;KAErH,OAAO,KAAK;;GAGb,IAAIF,MAAM,CAACM,OAAO,CAACG,EAAE,IAAI,IAAI,CAACoW,kBAAkB,EAChD;KACC5W,uBAAM,CAACC,IAAI,CAAC,wEAAwE,CAAC;KAErF,OAAO,KAAK;;GAGb,IAAIL,2BAAI,CAACuD,SAAS,EAAE,KAAKpD,MAAM,CAACM,OAAO,CAACc,QAAQ,EAChD;KACC,OAAO,KAAK;;GAGb,IAAIpB,MAAM,CAACuQ,KAAK,IAAI,yCAAC,IAAI,8DAA8BvQ,MAAM,CAAC,EAC9D;KACC,OAAO,KAAK;;GAGb,MAAMiF,0BAA0B,GAAG,CAACjF,MAAM,CAACkF,MAAM,IAAI,oBAAAlF,MAAM,CAACM,OAAO,8CAAd,gBAAgBN,MAAM,qBAAtB,sBAAwBmF,MAAM,MAAK,GAAG;GAC3F,IAAIF,0BAA0B,IAAI,yCAAC,IAAI,wCAAmBjF,MAAM,CAAC,4CAAI,IAAI,+DAA+B,EACxG;KACC,OAAO,KAAK;;GAGb,MAAM2X,YAAY,GAAG3N,0BAAW,CAAChJ,WAAW,EAAE,CAACkW,cAAc,EAAE;GAC/D,IAAIS,YAAY,IAAI3N,0BAAW,CAAChJ,WAAW,EAAE,CAACiJ,sBAAsB,EAAE,KAAKjK,MAAM,CAACkB,QAAQ,CAAC0W,QAAQ,EAAE,EACrG;KACC,OAAO,KAAK;;GAGb,MAAMC,qBAAqB,GAAG7N,0BAAW,CAAChJ,WAAW,EAAE,CAAC8W,uBAAuB,EAAE;GACjF,IAAID,qBAAqB,EACzB;KACC,OAAO,KAAK;;GAGb,OAAO,IAAI;CACZ;CAAC,uCAE4B7X,MAAwB,EACrD;GACC,4CAAI,IAAI,0CAAoBA,MAAM,CAACkB,QAAQ,GAC3C;KACC,OAAO,KAAK;;GAGb,MAAM0D,QAAQ,GAAG5E,MAAM,CAACM,OAAO,CAACc,QAAQ;GACxC,IAAIwD,QAAQ,GAAG,CAAC,IAAI5E,MAAM,CAACuF,KAAK,CAACX,QAAQ,CAAC,CAACoB,IAAI,KAAK+R,oBAAQ,CAACC,QAAQ,EACrE;KACC,OAAO,IAAI;;GAGZ,MAAMvV,OAAO,GAAG,IAAI,CAACkQ,KAAK,CAACvS,OAAO,CAAC,kCAAkC,CAAC,CAACJ,MAAM,CAACa,MAAM,CAAC;GAErF,OAAO4B,OAAO,KAAK,CAAC;CACrB;CAAC,wBAEavB,QAAgB,EAC9B;GACC,MAAM+W,UAAU,GAAG,IAAI,CAACtF,KAAK,CAACvS,OAAO,CAAC,wBAAwB,CAAC,CAACc,QAAQ,CAAC;GAEzE,OAAOyB,OAAO,CAAC+L,QAAQ,CAACD,QAAQ,EAAE,IAAIwJ,UAAU,CAAC;CAClD;CAAC,6BAEkB/W,QAAgB,EACnC;GACC,MAAMgX,eAAe,GAAG,IAAI,CAACvF,KAAK,CAACvS,OAAO,CAAC,6BAA6B,CAAC,CAACc,QAAQ,CAAC;GAEnF,OAAOyB,OAAO,CAAC+L,QAAQ,CAACD,QAAQ,EAAE,IAAIyJ,eAAe,CAAC;CACvD;CAAC,8BAEmBlY,MAAwB,EAC5C;GACC,MAAM;KAAEM;IAAS,GAAGN,MAAM;GAE1B,OAAOM,OAAO,CAAC6X,WAAW,IAAI7X,OAAO,CAAC8X,YAAY,CAAC5Q,QAAQ,CAAC3H,2BAAI,CAACuD,SAAS,EAAE,CAAC;CAC9E;CAAC,4BAEiBpD,MAAwB,EAC1C;GACC,4CAAI,IAAI,4CAAqBA,MAAM,GACnC;KACC,OAAO,IAAI;;GAGZ,MAAMiC,MAAM,GAAG,IAAI,CAAC0Q,KAAK,CAACvS,OAAO,CAAC,WAAW,CAAC,CAACJ,MAAM,CAACkB,QAAQ,EAAE,IAAI,CAAC;GACrE,MAAMmX,OAAO,GAAGpW,MAAM,CAACqW,QAAQ,CAAC9Q,QAAQ,CAAC3H,2BAAI,CAACuD,SAAS,EAAE,CAAC;GAE1D,OAAO,yCAAC,IAAI,2BAAa,IAAI,CAACiV,OAAO;CACtC;CAAC,uBAGD;GACC,MAAM9B,MAAM,GAAG,IAAI,CAAC5D,KAAK,CAACvS,OAAO,CAAC,0BAA0B,CAAC,CAACmY,oBAAQ,CAACzL,IAAI,CAACyJ,MAAM,CAAC;GAEnF,OAAOA,MAAM,KAAKiC,sBAAU,CAACC,GAAG;CACjC;CAAC,yCAGD;GACC,MAAMC,mBAAmB,GAAGnL,gCAAc,CAACqB,YAAY,EAAE;GAEzD,OAAO,CAAC8J,mBAAmB,IAAInL,gCAAc,CAACvM,WAAW,EAAE,CAAC2X,eAAe,EAAE;CAC9E;CAAC,8BAGD;GACC,IAAI,CAACpL,gCAAc,CAACoB,SAAS,EAAE,EAC/B;KACC;;GAGDiK,+BAAU,CAACC,SAAS,EAAE;CACvB;CAAC,sCAE2B7Y,MAAwB,EACpD;GACC,4CAAI,IAAI,4CAAqBA,MAAM,GACnC;KACCsX,oDAAwB,CAACtW,WAAW,EAAE,CAAC8X,aAAa,CAACtB,qBAAS,CAACuB,WAAW,CAAC;KAE3E;;GAGDzB,oDAAwB,CAACtW,WAAW,EAAE,CAACuW,QAAQ,CAACC,qBAAS,CAACuB,WAAW,CAAC;CACvE;CAAC,4BAEiB/Y,MAAwB,EAC1C;GACC,4CAAI,IAAI,4CAAqBA,MAAM,GACnC;KACCsX,oDAAwB,CAACtW,WAAW,EAAE,CAAC8X,aAAa,CAACtB,qBAAS,CAACwB,WAAW,CAAC;KAE3E;;GAGD1B,oDAAwB,CAACtW,WAAW,EAAE,CAACuW,QAAQ,CAACC,qBAAS,CAACwB,WAAW,CAAC;CACvE;CAAC,uCAGD;GACC,MAAMC,qBAAqB,GAAGC,0CAAmB,CAAClY,WAAW,EAAE,CAACmY,GAAG,CAACC,2BAAe,CAACvC,kBAAkB,EAAE,CAAC,CAAC;GAE1G,IAAI,CAACA,kBAAkB,GAAGlD,MAAM,CAACC,QAAQ,CAACqF,qBAAqB,EAAE,EAAE,CAAC;CACrE;CAAC,oCAEyBI,cAAsB,EAChD;GACC,MAAMC,wBAAwB,GAAG,IAAI;GAErC,IAAI,CAACzC,kBAAkB,GAAGwC,cAAc;GACxCE,YAAY,CAAC,IAAI,CAACC,qBAAqB,CAAC;GACxC,IAAI,CAACA,qBAAqB,GAAGC,UAAU,CAAC,MAAM;KAC7CP,0CAAmB,CAAClY,WAAW,EAAE,CAAC0Y,GAAG,CAACN,2BAAe,CAACvC,kBAAkB,EAAEwC,cAAc,CAAC;IACzF,EAAEC,wBAAwB,CAAC;CAC7B;CAAC,kCAGD;GAAA;GACC,MAAMK,eAA0C,GAAG9Z,2BAAI,CAAC+Z,kBAAkB,EAAE;GAC5E,IAAI,2BAACD,eAAe,CAACE,QAAQ,aAAxB,sBAA0BtD,MAAM,GACrC;KACC;;GAGD1W,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,0BAA0B,EAAE;KACpD,CAAC6X,oBAAQ,CAACzL,IAAI,CAACyJ,MAAM,GAAGoD,eAAe,CAACE,QAAQ,CAACtD;IACjD,CAAC;CACH;;CCtSM,MAAMuD,iBAAiB,CAC9B;GACCla,WAAW,GACX;KACC,IAAI,CAAC+S,KAAK,GAAG9S,2BAAI,CAACC,QAAQ,EAAE;;GAG7BuP,WAAW,GACX;KACC,OAAO,QAAQ;;GAGhB2D,mBAAmB,GACnB;KACC,OAAO,QAAQ;;GAGhB+G,gBAAgB,CAAC/Z,MAEhB,EACD;KACC,MAAMsJ,aAAa,GAAGzJ,2BAAI,CAACuD,SAAS,EAAE;KACtC,IAAIiS,cAAI,CAAC2E,aAAa,CAACha,MAAM,CAACuF,KAAK,CAAC+D,aAAa,CAAC,CAAC,EACnD;OACC,MAAM;SAAEiN;QAAQ,GAAGvW,MAAM,CAACuF,KAAK,CAAC+D,aAAa,CAAC;OAC9C,IAAI,CAACqJ,KAAK,CAACjS,QAAQ,CAAC,0BAA0B,EAAE;SAAE6V;QAAQ,CAAC;;KAG5D9Q,MAAM,CAACC,MAAM,CAAC1F,MAAM,CAACuF,KAAK,CAAC,CAACI,OAAO,CAAEsU,QAAQ,IAAK;OACjD,IAAI,CAACtH,KAAK,CAACjS,QAAQ,CAAC,cAAc,EAAE;SACnCD,EAAE,EAAEwZ,QAAQ,CAACxZ,EAAE;SACfE,MAAM,EAAE;WACP2J,gBAAgB,EAAE2P,QAAQ,CAACC;;QAE5B,CAAC;MACF,CAAC;;CAEJ;;CCnC0C;CAAA;CAAA;AAiB1C,CAAO,MAAMC,kBAAkB,CAC/B;GACCva,WAAW,GACX;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KACC,IAAI,CAAC+S,KAAK,GAAG9S,2BAAI,CAACC,QAAQ,EAAE;;GAG7BuP,WAAW,GACX;KACC,OAAO,IAAI;;GAGZC,aAAa,CAACtP,MAAwB,EAAE4D,KAAsB,EAC9D;KACC,IAAI,CAAC7D,gBAAgB,CAACC,MAAM,EAAE4D,KAAK,CAAC;;GAGrC2L,iBAAiB,CAACvP,MAAwB,EAAE4D,KAAsB,EAClE;KACC,IAAI,CAAC7D,gBAAgB,CAACC,MAAM,EAAE4D,KAAK,CAAC;;GAGrC7D,gBAAgB,CAACC,MAAwB,EAAE4D,KAAsB,EACjE;KACC,MAAMwF,OAAO,GAAG,IAAI4G,qCAAiB,CAAChQ,MAAM,EAAE4D,KAAK,CAAC;KACpD,IAAI,CAACwF,OAAO,CAACwC,aAAa,EAAE,EAC5B;OACC;;KAGD,4CAAI,gDAAuB;OAC1BhC,aAAa,EAAER,OAAO,CAAC8G,eAAe,EAAE;OACxCpE,aAAa,EAAE1C,OAAO,CAAC6G,SAAS,EAAE;OAClCmK,cAAc,EAAEpa,MAAM,CAACyC;MACvB;;GAGFb,2BAA2B,CAAC5B,MAAmC,EAC/D;KACC,4CAAI,oCAAiBA,MAAM;;GAG5B2D,iBAAiB,CAAC3D,MAAyB,EAC3C;KACC,4CAAI,oCAAiBA,MAAM;;GAG5BwP,qBAAqB,CAACxP,MAAyB,EAC/C;KACC,4CAAI,oCAAiBA,MAAM;;GAG5Bqa,mBAAmB,CAACra,MAA2B,EAC/C;KACC,4CAAI,oCAAiBA,MAAM;;GAG5Bsa,uBAAuB,CAACta,MAA2B,EACnD;KACC,4CAAI,oCAAiBA,MAAM;;GAG5BwK,gBAAgB,CAACxK,MAAwB,EACzC;KACC,4CAAI,oCAAiB;OACpB,GAAGA,MAAM;OACTkH,MAAM,EAAElH,MAAM,CAAC0K;MACf;;GAGFC,oBAAoB,CAAC3K,MAA4B,EACjD;KACC,4CAAI,oCAAiBA,MAAM;;CA0F7B;CAAC,0BAvFgBA,MAAqB,EACrC;GACC,MAAM;KACLa,MAAM;KACNK,QAAQ;KACRuB,OAAO;KACP8X,WAAW,GAAGC,uBAAW,CAAC1V,IAAI;KAC9B+G,YAAY,GAAG;IACf,GAAG7L,MAAM;GAEV,IAAIua,WAAW,KAAKC,uBAAW,CAACC,QAAQ,EACxC;KACC;;GAGDxa,uBAAM,CAACC,IAAI,CAAC,qCAAqC,EAAEF,MAAM,CAAC;GAE1D,IAAIua,WAAW,KAAKC,uBAAW,CAACtU,OAAO,EACvC;KACC,4CAAI,gDAAuB;OAC1B0D,aAAa,EAAEiC,YAAY;OAC3BC,aAAa,EAAEjL,MAAM;OACrBuZ,cAAc,EAAE3X;MAChB;KAED;;GAGD,MAAMmP,UAA8B,GAAG/R,2BAAI,CAACC,QAAQ,EAAE,CAACM,OAAO,CAAC,YAAY,CAAC,CAACc,QAAQ,CAAC;;GAEtF,IAAI0Q,UAAU,EACd;KACC;;GAGD,MAAM8I,UAAU,2CAAG,IAAI,kCAAgB1a,MAAM,CAAC;;;GAG9C,IAAIua,WAAW,KAAKC,uBAAW,CAAC1K,MAAM,EACtC;KACCjQ,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,oCAAoC,EAAE;OAAE,CAACG,MAAM,GAAG6Z;MAAY,CAAC;;GAGzF7a,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,kCAAkC,EAAE;KAAE,CAACG,MAAM,GAAG6Z;IAAY,CAAC;CACvF;CAAC,yBAEc1a,MAAqB,EACpC;GACC,MAAM;KAAEyC,OAAO;KAAEmI,KAAK;KAAE1D;IAAQ,GAAGlH,MAAM;GAEzC,IAAI0a,UAAU,GAAG,CAAC;GAClB,IAAI9P,KAAK,EACT;KACC8P,UAAU,GAAG,CAAC;IACd,MACI,IAAIxT,MAAM,IAAIzE,OAAO,KAAK,CAAC,EAChC;KACCiY,UAAU,GAAG,CAAC;IACd,MACI,IAAIxT,MAAM,IAAIzE,OAAO,GAAG,CAAC,EAC9B;KACCiY,UAAU,GAAGjY,OAAO;IACpB,MACI,IAAI,CAACyE,MAAM,EAChB;KACCwT,UAAU,GAAGjY,OAAO;;GAGrB,OAAOiY,UAAU;CAClB;CAAC,gCAEqBC,OAAiF,EACvG;GACC,MAAM;KAAE/Q,aAAa;KAAEkC,aAAa;KAAEsO;IAAgB,GAAGO,OAAO;GAChE,IAAItF,cAAI,CAACuF,WAAW,CAACR,cAAc,CAAC,EACpC;KACC;;GAGD,MAAMS,QAAQ,GAAG;KAChB,CAACjR,aAAa,GAAG;OAChB,CAACkC,aAAa,GAAGsO;;IAElB;GAEDva,2BAAI,CAACC,QAAQ,EAAE,CAACY,QAAQ,CAAC,6BAA6B,EAAEma,QAAQ,CAAC;CAClE;;;;;;;;;;;;;;;"}