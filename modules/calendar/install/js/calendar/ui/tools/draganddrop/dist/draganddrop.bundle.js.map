{"version":3,"file":"draganddrop.bundle.js","sources":["../src/draganddropinterface.js","../src/eventdraganddrop.js","../src/resizedraganddrop.js"],"sourcesContent":["/**\n * @interface\n */\nexport default class DragAndDropInterface\n{\n\tonDragStart() {}\n\n\tgetDragBoundary() {}\n\n\tgetFinalFrom() {}\n\n\tgetFinalTo() {}\n}\n","import DragAndDropInterface from './draganddropinterface';\nimport { Util } from 'calendar.util';\n\n/**\n * @implements DragAndDropInterface\n */\nexport class EventDragAndDrop implements DragAndDropInterface\n{\n\tmaxTryDuration = 50;\n\t// stickDistanceInMinutes = 30;\n\tstickDistanceInPercents = 34;\n\tmagnetizeDistanceInMinutes = 15;\n\n\tconstructor(getDateByPos, getPosByDate, getEvents)\n\t{\n\t\tthis.getDateByPos = getDateByPos;\n\t\tthis.getPosByDate = getPosByDate;\n\t\tthis.getEvents = getEvents;\n\t}\n\n\tsetFinalTimeInterval(from, to)\n\t{\n\t\tthis.finalFrom = new Date(from.getTime());\n\t\tthis.finalTo = new Date(to.getTime());\n\t}\n\n\tgetFinalFrom()\n\t{\n\t\treturn this.finalFrom;\n\t}\n\n\tgetFinalTo()\n\t{\n\t\treturn this.finalTo;\n\t}\n\n\tonDragStart(duration, startPosition = 0)\n\t{\n\t\tthis.savedDuration = duration;\n\t\tthis.tryDuration = 0;\n\t\tthis.startBoundary = this.getBoundaryFromPositionAndDuration(startPosition, duration);\n\t\tthis.setFinalTimeInterval(this.startBoundary.from, this.startBoundary.to);\n\t}\n\n\tgetDragBoundary(position)\n\t{\n\t\tconst diff = this.previousPosition ? this.previousPosition - position : 0;\n\t\tthis.previousPosition = position;\n\t\tthis.calculateTryDuration(diff);\n\t\tthis.resetMagnetStamps(diff);\n\n\t\tlet boundary = this.getBoundaryFromPositionAndDuration(position, this.savedDuration);\n\t\tif (this.doMagnetize())\n\t\t{\n\t\t\tboundary = this.getMagnetizedBoundary(boundary, diff);\n\t\t}\n\t\tboundary.size = this.getPosByDate(boundary.to) - this.getPosByDate(boundary.from);\n\n\t\tthis.finalFrom = boundary.from;\n\t\tthis.finalTo = boundary.to;\n\t\treturn boundary;\n\t}\n\n\tgetBoundaryFromPositionAndDuration(position, duration)\n\t{\n\t\tconst from = this.getDateByPos(position);\n\t\tconst to = from ? new Date(from.getTime() + duration) : null;\n\t\treturn { from, to, position, wasMagnetized: false };\n\t}\n\n\tgetMagnetizedBoundary(boundary, diff)\n\t{\n\t\tlet position = boundary.position;\n\t\tlet duration = this.savedDuration;\n\n\t\tconst magnetizedTimeInterval = this.getMagnetizedTimeInterval(boundary.from, boundary.to);\n\t\tconst magnetizedFromPosition = this.getPosByDate(magnetizedTimeInterval.from);\n\t\tconst wasMagnetized = magnetizedTimeInterval.wasMagnetizedTo || magnetizedTimeInterval.wasMagnetizedFrom;\n\t\tif (wasMagnetized)\n\t\t{\n\t\t\tposition = magnetizedFromPosition;\n\t\t\tduration = magnetizedTimeInterval.to.getTime() - magnetizedTimeInterval.from.getTime();\n\t\t}\n\n\t\t// stabilize magnets\n\t\tif (!this.endMagnetStamp && boundary.to.getTime() < magnetizedTimeInterval.to.getTime() && diff < 0)\n\t\t{\n\t\t\tthis.endMagnetStamp = position;\n\t\t}\n\t\tif (this.endMagnetStamp)\n\t\t{\n\t\t\tif (this.endMagnetStamp + 5 < position)\n\t\t\t{\n\t\t\t\tthis.endMagnetStamp = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tposition = this.endMagnetStamp;\n\t\t\t}\n\t\t}\n\t\tif (!this.startMagnetStamp && boundary.from.getTime() > magnetizedTimeInterval.from.getTime() && diff > 0)\n\t\t{\n\t\t\tthis.startMagnetStamp = position;\n\t\t}\n\t\tif (this.startMagnetStamp)\n\t\t{\n\t\t\tif (magnetizedFromPosition < this.startMagnetStamp)\n\t\t\t{\n\t\t\t\tthis.startMagnetStamp = null;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tposition = this.startMagnetStamp;\n\t\t\t}\n\t\t}\n\n\t\tconst from = this.getDateByPos(position);\n\t\tconst to = new Date(from.getTime() + duration);\n\t\treturn { from, to, position, wasMagnetized };\n\t}\n\n\t/**\n\t * stick - behavior when dragged event intersects with another event\n\t * and we push dragged event to top or to bottom of another event\n\t *\n\t * magnetize - behavior when dragged event is close to another event\n\t * and we move it closer to another event\n\t */\n\tgetMagnetizedTimeInterval(fromDate, toDate)\n\t{\n\t\tlet wasMagnetizedFrom = false;\n\t\tlet wasMagnetizedTo = false;\n\t\tlet from = new Date(fromDate.getTime());\n\t\tlet to = new Date(toDate.getTime());\n\t\tconst duration = to.getTime() - from.getTime();\n\t\tconst magnetDistance = this.magnetizeDistanceInMinutes * 60 * 1000;\n\t\tconst stickDistance = (this.stickDistanceInPercents / 100) * this.savedDuration;\n\n\t\t// find lowest fromDate and highest toDate\n\t\tlet fromDateMax = new Date(from.getTime());\n\t\tfromDateMax.setHours(0, 0, 0, 0);\n\t\tlet toDateMin = new Date(to.getTime());\n\t\ttoDateMin.setHours(23, 59, 0, 0);\n\n\t\tconst events = this.getEvents();\n\t\tfor (const event of events)\n\t\t{\n\t\t\tconst eventFrom = event.from.getTime();\n\t\t\tconst eventTo = event.to.getTime();\n\n\t\t\tif (eventTo > fromDateMax.getTime() && eventTo <= to.getTime())\n\t\t\t{\n\t\t\t\tfromDateMax = new Date(eventTo);\n\t\t\t}\n\n\t\t\tif (eventFrom < toDateMin.getTime() && eventFrom >= from.getTime())\n\t\t\t{\n\t\t\t\ttoDateMin = new Date(eventFrom);\n\t\t\t}\n\t\t}\n\n\t\t// if too many events\n\t\tif (fromDateMax.getTime() >= toDateMin.getTime())\n\t\t{\n\t\t\treturn { from, to, wasMagnetizedFrom, wasMagnetizedTo };\n\t\t}\n\n\t\t// stick\n\t\tif (fromDateMax.getTime() > from.getTime() && (fromDateMax.getTime() - from.getTime() <= stickDistance))\n\t\t{\n\t\t\tfrom = new Date(fromDateMax.getTime());\n\t\t\tto = new Date(from.getTime() + duration);\n\t\t\twasMagnetizedFrom = true;\n\t\t}\n\t\tif (toDateMin.getTime() < to.getTime() && (to.getTime() - toDateMin.getTime() <= stickDistance))\n\t\t{\n\t\t\tto = new Date(toDateMin.getTime());\n\t\t\tfrom = new Date(to.getTime() - duration);\n\t\t\twasMagnetizedTo = true;\n\t\t}\n\t\tif (fromDateMax.getTime() > from.getTime() && (fromDateMax.getTime() - from.getTime() <= stickDistance))\n\t\t{\n\t\t\tfrom = new Date(fromDateMax.getTime());\n\t\t\tto = new Date(from.getTime() + duration);\n\t\t\twasMagnetizedFrom = true;\n\t\t}\n\t\tif (wasMagnetizedFrom && wasMagnetizedTo)\n\t\t{\n\t\t\tfrom = new Date(fromDateMax.getTime());\n\t\t\tto = new Date(toDateMin.getTime());\n\t\t}\n\n\t\t// magnetize\n\t\tif (!wasMagnetizedFrom && !wasMagnetizedTo)\n\t\t{\n\t\t\tif (from.getTime() > fromDateMax.getTime() && (from.getTime() - fromDateMax.getTime() <= magnetDistance))\n\t\t\t{\n\t\t\t\twasMagnetizedFrom = true;\n\t\t\t}\n\t\t\tif (toDateMin.getTime() > to.getTime() && (toDateMin.getTime() - to.getTime() <= magnetDistance))\n\t\t\t{\n\t\t\t\twasMagnetizedTo = true;\n\t\t\t}\n\t\t\tif (wasMagnetizedFrom && !wasMagnetizedTo)\n\t\t\t{\n\t\t\t\tfrom = new Date(fromDateMax.getTime());\n\t\t\t\tto = new Date(from.getTime() + duration);\n\t\t\t}\n\t\t\tif (wasMagnetizedTo && !wasMagnetizedFrom)\n\t\t\t{\n\t\t\t\tto = new Date(toDateMin.getTime());\n\t\t\t\tfrom = new Date(to.getTime() - duration);\n\t\t\t}\n\t\t}\n\n\t\treturn { from, to, wasMagnetizedFrom, wasMagnetizedTo };\n\t}\n\n\tresetMagnetStamps(diff)\n\t{\n\t\tif (diff > 0)\n\t\t{\n\t\t\tthis.endMagnetStamp = null;\n\t\t}\n\t\tif (diff < 0)\n\t\t{\n\t\t\tthis.startMagnetStamp = null;\n\t\t}\n\t}\n\n\tcalculateTryDuration(diff)\n\t{\n\t\tif (Math.abs(diff) < 1)\n\t\t{\n\t\t\tthis.tryDuration++;\n\t\t}\n\t\tif (Math.abs(diff) > 3)\n\t\t{\n\t\t\tthis.tryDuration = 0;\n\t\t}\n\t}\n\n\tdoMagnetize()\n\t{\n\t\treturn !Util.isAnyModifierKeyPressed() && !this.isUserTryingToTurnOffMagnet();\n\t}\n\n\tisUserTryingToTurnOffMagnet()\n\t{\n\t\treturn this.tryDuration > this.maxTryDuration;\n\t}\n\n}\n","import DragAndDropInterface from './draganddropinterface';\n\n/**\n * @implements DragAndDropInterface\n */\nexport class ResizeDragAndDrop implements DragAndDropInterface\n{\n\n\tconstructor(getDateByPos, getPosByDate)\n\t{\n\t\tthis.getDateByPos = getDateByPos;\n\t\tthis.getPosByDate = getPosByDate;\n\t}\n\n\tgetFinalFrom()\n\t{\n\t\treturn this.from;\n\t}\n\n\tgetFinalTo()\n\t{\n\t\treturn this.to;\n\t}\n\n\tonDragStart(timeInterval, minSize = 0, isStartResizer = false)\n\t{\n\t\tthis.from = timeInterval.from;\n\t\tthis.to = timeInterval.to;\n\t\tthis.isStartResizer = isStartResizer;\n\t\tthis.direction = isStartResizer ? -1 : 1;\n\n\t\tthis.positionStart = this.getPosByDate(this.from);\n\t\tthis.positionEnd = this.getPosByDate(this.to);\n\t\tthis.size = this.positionEnd - this.positionStart;\n\t\tthis.minSize = minSize;\n\t}\n\n\tgetDragBoundary(dy)\n\t{\n\t\tconst size = Math.max(this.size + dy * this.direction, this.minSize);\n\n\t\tif (this.isStartResizer)\n\t\t{\n\t\t\tthis.positionStart = this.positionEnd - size;\n\t\t\tconst timeFrom = this.getDateByPos(this.positionStart);\n\t\t\tthis.from.setHours(timeFrom.getHours(), timeFrom.getMinutes(), 0, 0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.positionEnd = this.positionStart + size;\n\t\t\tconst timeTo = this.getDateByPos(this.positionEnd);\n\t\t\tthis.to.setHours(timeTo.getHours(), timeTo.getMinutes(), 0, 0);\n\t\t}\n\n\t\treturn { from: this.from, to: this.to, position: this.positionStart, size };\n\t}\n\n}\n"],"names":["EventDragAndDrop","constructor","getDateByPos","getPosByDate","getEvents","maxTryDuration","stickDistanceInPercents","magnetizeDistanceInMinutes","setFinalTimeInterval","from","to","finalFrom","Date","getTime","finalTo","getFinalFrom","getFinalTo","onDragStart","duration","startPosition","savedDuration","tryDuration","startBoundary","getBoundaryFromPositionAndDuration","getDragBoundary","position","diff","previousPosition","calculateTryDuration","resetMagnetStamps","boundary","doMagnetize","getMagnetizedBoundary","size","wasMagnetized","magnetizedTimeInterval","getMagnetizedTimeInterval","magnetizedFromPosition","wasMagnetizedTo","wasMagnetizedFrom","endMagnetStamp","startMagnetStamp","fromDate","toDate","magnetDistance","stickDistance","fromDateMax","setHours","toDateMin","events","event","eventFrom","eventTo","Math","abs","Util","isAnyModifierKeyPressed","isUserTryingToTurnOffMagnet","ResizeDragAndDrop","timeInterval","minSize","isStartResizer","direction","positionStart","positionEnd","dy","max","timeFrom","getHours","getMinutes","timeTo"],"mappings":"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"}