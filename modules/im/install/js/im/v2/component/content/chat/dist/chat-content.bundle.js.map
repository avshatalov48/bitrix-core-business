{"version":3,"file":"chat-content.bundle.js","sources":["../src/components/content/channel/components/comments-button.js","../src/components/content/channel/classes/message-menu.js","../src/components/content/channel/components/message-list.js","../src/components/content/channel/components/dialog.js","../src/components/content/channel/components/join-panel.js","../src/components/content/channel/components/textarea.js","../src/components/content/channel/channel.js","../src/components/content/collab/components/collab-title.js","../src/components/content/collab/components/entities-panel/components/entity-counter.js","../src/components/content/collab/components/entities-panel/components/entity-link.js","../src/components/content/collab/components/entities-panel/entities-panel.js","../src/components/content/collab/components/add-to-chat-button.js","../src/components/content/collab/components/pulse-animation/pulse-animation.js","../src/components/content/collab/components/header.js","../src/components/content/collab/collab.js","../src/components/content/multidialog/components/title.js","../src/components/content/multidialog/components/header.js","../src/components/content/multidialog/multidialog.js","../src/components/openers/chat/components/empty-state/base.js","../src/components/openers/chat/components/empty-state/channel.js","../src/components/openers/chat/classes/user-service.js","../src/components/openers/chat/components/empty-state/collab/components/feature-block.js","../src/components/openers/chat/components/empty-state/collab/collab.js","../src/components/openers/chat/chat.js","../src/components/content/comments/components/subscribe-toggle.js","../src/components/content/comments/components/header.js","../src/components/content/comments/components/dialog-loader.js","../src/components/content/comments/classes/message-menu.js","../src/components/content/comments/components/message-list.js","../src/components/content/comments/components/dialog.js","../src/components/content/comments/components/textarea.js","../src/components/content/comments/components/join-panel.js","../src/components/content/comments/comments.js","../src/components/openers/comments/comments.js","../src/chat-content.js"],"sourcesContent":["import '../css/comments-button.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsButton = {\n\tname: 'CommentsButton',\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tcounter: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-dialog-channel__comments-button\">\n\t\t\t<div class=\"bx-im-dialog-channel__comments-button_counter\">\n\t\t\t\t{{ counter }}\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { MessageMenu } from 'im.v2.component.message-list';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\n\nexport class ChannelMessageMenu extends MessageMenu\n{\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\t// this.getReplyItem(),\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getCopyLinkItem(),\n\t\t\tthis.getCopyFileItem(),\n\t\t\tthis.getPinItem(),\n\t\t\tthis.getForwardItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getMarkItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDownloadFileItem(),\n\t\t\tthis.getSaveToDisk(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getEditItem(),\n\t\t\tthis.getDeleteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getSelectItem(),\n\t\t];\n\t}\n}\n","import { MessageList } from 'im.v2.component.message-list';\n\nimport { ChannelMessageMenu } from '../classes/message-menu';\n\n// @vue/component\nexport const ChannelMessageList = {\n\tname: 'ChannelMessageList',\n\tcomponents: { MessageList },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tChannelMessageMenu: () => ChannelMessageMenu,\n\t},\n\ttemplate: `\n\t\t<MessageList :dialogId=\"dialogId\" :messageMenuClass=\"ChannelMessageMenu\" />\n\t`,\n};\n","import { ChatDialog, ScrollManager } from 'im.v2.component.dialog.chat';\nimport { Layout, UserRole } from 'im.v2.const';\nimport { CommentsService } from 'im.v2.provider.service';\n\nimport { CommentsButton } from './comments-button';\n\nimport { ChannelMessageList } from './message-list';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelLayout } from 'im.v2.model';\n\n// @vue/component\nexport const ChannelDialog = {\n\tname: 'ChannelDialog',\n\tcomponents: { ChatDialog, ChannelMessageList, CommentsButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tlastScrolledChatId: 0,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tisGuest(): boolean\n\t\t{\n\t\t\treturn this.dialog.role === UserRole.guest;\n\t\t},\n\t\tisChatLayout(): boolean\n\t\t{\n\t\t\treturn this.layout.name === Layout.chat.name;\n\t\t},\n\t\tchannelComments(): number[]\n\t\t{\n\t\t\treturn this.$store.getters['counters/getChannelComments'](this.dialog.chatId);\n\t\t},\n\t\ttotalChannelCommentsCounter(): number\n\t\t{\n\t\t\tlet counter = 0;\n\t\t\tObject.values(this.channelComments).forEach((commentCounter) => {\n\t\t\t\tcounter += commentCounter;\n\t\t\t});\n\n\t\t\treturn counter;\n\t\t},\n\t\tshowCommentsButton(): boolean\n\t\t{\n\t\t\treturn this.isChatLayout && this.totalChannelCommentsCounter > 0;\n\t\t},\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.readAllChannelComments();\n\t},\n\tmethods:\n\t{\n\t\tasync onCommentsButtonClick()\n\t\t{\n\t\t\tconst chatIdToJump = this.getNextChatIdToJump();\n\t\t\tthis.lastScrolledChatId = chatIdToJump;\n\n\t\t\tconst messageIdToJump: ?number = this.$store.getters['messages/comments/getMessageIdByChatId'](chatIdToJump);\n\n\t\t\tif (messageIdToJump)\n\t\t\t{\n\t\t\t\tthis.$refs.dialog.goToMessageContext(messageIdToJump, {\n\t\t\t\t\tposition: ScrollManager.scrollPosition.messageBottom,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.goToMessageContextByCommentsChatId(chatIdToJump);\n\t\t},\n\t\tasync goToMessageContextByCommentsChatId(chatId: string)\n\t\t{\n\t\t\tthis.$refs.dialog.showLoadingBar();\n\t\t\tconst messageId = await this.$refs.dialog.getMessageService().loadContextByChatId(chatId)\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\t\tconsole.error('ChannelDialog: goToMessageContextByCommentsChatId error', error);\n\t\t\t\t});\n\t\t\tthis.$refs.dialog.hideLoadingBar();\n\n\t\t\tif (!messageId)\n\t\t\t{\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('ChannelDialog: no messageId after loading context');\n\t\t\t}\n\n\t\t\tawait this.$nextTick();\n\t\t\tthis.$refs.dialog.getScrollManager().scrollToMessage(messageId, {\n\t\t\t\tposition: ScrollManager.scrollPosition.messageBottom,\n\t\t\t});\n\t\t\tawait this.$nextTick();\n\t\t\tthis.$refs.dialog.highlightMessage(messageId);\n\t\t},\n\t\tgetNextChatIdToJump(): number\n\t\t{\n\t\t\tconst commentChatIds = this.getCommentsChatIds();\n\t\t\tcommentChatIds.sort((a, z) => a - z);\n\t\t\tif (this.lastScrolledChatId === 0)\n\t\t\t{\n\t\t\t\treturn commentChatIds[0];\n\t\t\t}\n\n\t\t\tconst filteredChatIds = commentChatIds.filter((chatId) => chatId > this.lastScrolledChatId);\n\t\t\tif (filteredChatIds.length === 0)\n\t\t\t{\n\t\t\t\treturn commentChatIds[0];\n\t\t\t}\n\n\t\t\treturn filteredChatIds[0];\n\t\t},\n\t\tgetCommentsChatIds(): number[]\n\t\t{\n\t\t\treturn Object.keys(this.channelComments).map((chatId) => {\n\t\t\t\treturn Number(chatId);\n\t\t\t});\n\t\t},\n\t\treadAllChannelComments()\n\t\t{\n\t\t\tCommentsService.readAllChannelComments(this.dialogId);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatDialog ref=\"dialog\" :dialogId=\"dialogId\" :resetOnExit=\"isGuest\">\n\t\t\t<template #message-list>\n\t\t\t\t<ChannelMessageList :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #additional-float-button>\n\t\t\t\t<Transition name=\"float-button-transition\">\n\t\t\t\t\t<CommentsButton\n\t\t\t\t\t\tv-if=\"showCommentsButton\"\n\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t:counter=\"totalChannelCommentsCounter\"\n\t\t\t\t\t\t@click=\"onCommentsButtonClick\"\n\t\t\t\t\t\tkey=\"comments\"\n\t\t\t\t\t/>\n\t\t\t\t</Transition>\n\t\t\t</template>\n\t\t</ChatDialog>\n\t`,\n};\n","import { Button as ChatButton, ButtonColor, ButtonSize } from 'im.v2.component.elements';\nimport { ChatService } from 'im.v2.provider.service';\n\n// @vue/component\nexport const JoinPanel = {\n\tcomponents: { ChatButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t},\n\tmethods:\n\t{\n\t\tonButtonClick()\n\t\t{\n\t\t\tthis.getChatService().joinChat(this.dialogId);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat__textarea_placeholder\">\n\t\t\t<ChatButton\n\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t:color=\"ButtonColor.Primary\"\n\t\t\t\t:text=\"loc('IM_CONTENT_BLOCKED_TEXTAREA_JOIN_CHANNEL_V2')\"\n\t\t\t\t:isRounded=\"true\"\n\t\t\t\t@click=\"onButtonClick\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\n// @vue/component\nexport const ChannelTextarea = {\n\tname: 'ChannelTextarea',\n\tcomponents: { ChatTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:placeholder=\"this.loc('IM_CONTENT_CHANNEL_TEXTAREA_PLACEHOLDER')\"\n\t\t\t:withCreateMenu=\"false\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withAudioInput=\"false\"\n\t\t\tclass=\"bx-im-channel-send-panel__container\"\n\t\t/>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { ChannelDialog } from './components/dialog';\nimport { JoinPanel } from './components/join-panel';\nimport { ChannelTextarea } from './components/textarea';\n\nexport const ChannelContent = {\n\tname: 'ChannelContent',\n\tcomponents: { BaseChatContent, ChannelDialog, ChannelTextarea, JoinPanel },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #dialog>\n\t\t\t\t<ChannelDialog :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #join-panel>\n\t\t\t\t<JoinPanel :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<ChannelTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { EventType, SidebarDetailBlock } from 'im.v2.const';\nimport { ChatTitle, LineLoader } from 'im.v2.component.elements';\nimport { FadeAnimation } from 'im.v2.component.animation';\n\nimport '../css/collab-title.css';\n\nimport type { ImModelChat, ImModelCollabInfo } from 'im.v2.model';\n\n// @vue/component\nexport const CollabTitle = {\n\tname: 'CollabTitle',\n\tcomponents: { ChatTitle, LineLoader, FadeAnimation },\n\tinject: ['currentSidebarPanel'],\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tcollabInfo(): ImModelCollabInfo\n\t\t{\n\t\t\treturn this.$store.getters['chats/collabs/getByChatId'](this.dialog.chatId);\n\t\t},\n\t\tguestCounter(): number\n\t\t{\n\t\t\treturn this.collabInfo.guestCount;\n\t\t},\n\t\tuserCounterText(): string\n\t\t{\n\t\t\treturn Loc.getMessagePlural('IM_CONTENT_CHAT_HEADER_USER_COUNT', this.dialog.userCounter, {\n\t\t\t\t'#COUNT#': this.dialog.userCounter,\n\t\t\t});\n\t\t},\n\t\tguestCounterText(): string\n\t\t{\n\t\t\treturn Loc.getMessagePlural('IM_CONTENT_COLLAB_HEADER_GUEST_COUNT', this.guestCounter, {\n\t\t\t\t'#COUNT#': this.guestCounter,\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonMembersClick()\n\t\t{\n\t\t\tif (this.currentSidebarPanel === SidebarDetailBlock.members)\n\t\t\t{\n\t\t\t\tEventEmitter.emit(EventType.sidebar.close, { panel: SidebarDetailBlock.members });\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventEmitter.emit(EventType.sidebar.open, {\n\t\t\t\tpanel: SidebarDetailBlock.members,\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-collab-header-title__container\">\n\t\t\t<div class=\"bx-im-collab-header-title__title-container --ellipsis\">\n\t\t\t\t<ChatTitle :dialogId=\"dialogId\" />\n\t\t\t</div>\n\t\t\t<LineLoader v-if=\"!dialog.inited\" :width=\"50\" :height=\"16\" />\n\t\t\t<FadeAnimation :duration=\"100\">\n\t\t\t\t<div v-if=\"dialog.inited\" class=\"bx-im-collab-header-title__subtitle_container\">\n\t\t\t\t\t<div @click=\"onMembersClick\" class=\"bx-im-collab-header-title__subtitle_content --ellipsis\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t:title=\"loc('IM_CONTENT_CHAT_HEADER_OPEN_MEMBERS')\"\n\t\t\t\t\t\t\tclass=\"bx-im-collab-header-title__user-counter\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{ userCounterText }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span v-if=\"guestCounter > 0\" class=\"bx-im-collab-header-title__guest-counter\">\n\t\t\t\t\t\t\t{{ guestCounterText }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</FadeAnimation>\n\t\t</div>\n\t`,\n};\n","// @vue/component\nexport const EntityCounter = {\n\tname: 'EntityCounter',\n\tprops:\n\t{\n\t\tcounter: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tpreparedCounter(): string\n\t\t{\n\t\t\treturn this.counter > 99 ? '99+' : this.counter.toString();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<span class=\"bx-im-collab-header__link-counter\">\n\t\t\t{{ preparedCounter }}\n\t\t</span>\n\t`,\n};\n","import { Type } from 'main.core';\n\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { EntityCounter } from './entity-counter';\n\nexport const EntityType = {\n\ttasks: 'tasks',\n\tfiles: 'files',\n\tcalendar: 'calendar',\n};\n\n// @vue/component\nexport const EntityLink = {\n\tname: 'EntityLink',\n\tcomponents: { EntityCounter },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tcompactMode: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\turl: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tcounter: {\n\t\t\ttype: [Number, null],\n\t\t\tdefault: null,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tshowCounter(): boolean\n\t\t{\n\t\t\treturn !Type.isNull(this.counter) && this.counter > 0;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonLinkClick()\n\t\t{\n\t\t\tAnalytics.getInstance().collabEntities.onClick(this.dialogId, this.type);\n\n\t\t\tBX.SidePanel.Instance.open(this.url, {\n\t\t\t\tcacheable: false,\n\t\t\t\tcustomLeftBoundary: 0,\n\t\t\t});\n\t\t},\n\t},\n\ttemplate: `\n\t\t<a :href=\"url\" @click.prevent=\"onLinkClick\" class=\"bx-im-collab-header__link\" :class=\"'--' + type\">\n\t\t\t<span v-if=\"compactMode\" class=\"bx-im-collab-header__link-icon\"></span>\n\t\t\t<span v-else class=\"bx-im-collab-header__link-text\">{{ title }}</span>\n\t\t\t<EntityCounter v-if=\"showCounter\" :counter=\"counter\" />\n\t\t</a>\n\t`,\n};\n","import { CollabEntityType } from 'im.v2.const';\n\nimport { EntityLink } from './components/entity-link';\n\nimport './css/entities-panel.css';\n\nimport type { ImModelChat, ImModelCollabInfo } from 'im.v2.model';\n\n// @vue/component\nexport const EntitiesPanel = {\n\tname: 'EntitiesPanel',\n\tcomponents: { EntityLink },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tcompactMode: {\n\t\t\ttype: Boolean,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tCollabEntityType: () => CollabEntityType,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tcollabInfo(): ImModelCollabInfo\n\t\t{\n\t\t\treturn this.$store.getters['chats/collabs/getByChatId'](this.dialog.chatId);\n\t\t},\n\t\ttasksInfo(): { url: string, counter: number }\n\t\t{\n\t\t\treturn this.collabInfo.entities.tasks;\n\t\t},\n\t\ttasksUrl(): string\n\t\t{\n\t\t\treturn this.tasksInfo.url;\n\t\t},\n\t\ttasksCounter(): number\n\t\t{\n\t\t\treturn this.tasksInfo.counter;\n\t\t},\n\t\tfilesInfo(): { url: string, counter: number }\n\t\t{\n\t\t\treturn this.collabInfo.entities.files;\n\t\t},\n\t\tfilesUrl(): string\n\t\t{\n\t\t\treturn this.filesInfo.url;\n\t\t},\n\t\tcalendarInfo(): { url: string, counter: number }\n\t\t{\n\t\t\treturn this.collabInfo.entities.calendar;\n\t\t},\n\t\tcalendarUrl(): string\n\t\t{\n\t\t\treturn this.calendarInfo.url;\n\t\t},\n\t\tcalendarCounter(): number\n\t\t{\n\t\t\treturn this.calendarInfo.counter;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-collab-header__links-container\" :class=\"{'--compact': compactMode}\">\n\t\t\t<EntityLink\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t:compactMode=\"compactMode\"\n\t\t\t\t:url=\"tasksUrl\"\n\t\t\t\t:type=\"CollabEntityType.tasks\"\n\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_HEADER_LINK_TASKS')\"\n\t\t\t\t:counter=\"tasksCounter\"\n\t\t\t/>\n\t\t\t<EntityLink\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t:compactMode=\"compactMode\"\n\t\t\t\t:url=\"filesUrl\"\n\t\t\t\t:type=\"CollabEntityType.files\"\n\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_HEADER_LINK_FILES')\"\n\t\t\t/>\n\t\t\t<EntityLink\n\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t:compactMode=\"compactMode\"\n\t\t\t\t:url=\"calendarUrl\"\n\t\t\t\t:type=\"CollabEntityType.calendar\"\n\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_HEADER_LINK_CALENDAR')\"\n\t\t\t\t:counter=\"calendarCounter\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { AddToCollab } from 'im.v2.component.entity-selector';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const AddToChatButton = {\n\tname: 'AddToChatButton',\n\tcomponents: { AddToCollab },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\twithAnimation: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false,\n\t\t},\n\t},\n\temits: ['close'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowAddToChatPopup: false,\n\t\t};\n\t},\n\tmethods:\n\t{\n\t\topenAddToChatPopup()\n\t\t{\n\t\t\tAnalytics.getInstance().userAdd.onChatHeaderClick(this.dialogId);\n\t\t\tthis.showAddToChatPopup = true;\n\t\t},\n\t\tcloseAddToChatPopup()\n\t\t{\n\t\t\tthis.$emit('close');\n\t\t\tthis.showAddToChatPopup = false;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\t:title=\"loc('IM_CONTENT_CHAT_HEADER_OPEN_INVITE_POPUP_TITLE')\"\n\t\t\t:class=\"{'--active': showAddToChatPopup}\"\n\t\t\tclass=\"bx-im-collab-header__add-people-icon\"\n\t\t\t@click=\"openAddToChatPopup\"\n\t\t\tref=\"add-members\"\n\t\t></div>\n\t\t<AddToCollab\n\t\t\tv-if=\"showAddToChatPopup\"\n\t\t\t:bindElement=\"$refs['add-members'] ?? {}\"\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:popupConfig=\"{ offsetTop: 25, offsetLeft: -300 }\"\n\t\t\t@close=\"closeAddToChatPopup\"\n\t\t/>\n\t`,\n};\n","import './pulse-animation.css';\n\nconst RING_COUNT = 3;\n\n// @vue/component\nexport const PulseAnimation = {\n\tname: 'PulseAnimation',\n\tprops:\n\t{\n\t\tshowPulse: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\trings(): number[]\n\t\t{\n\t\t\tif (!this.showPulse)\n\t\t\t{\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn Array.from({ length: RING_COUNT });\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-pulse-animation__container\">\n\t\t\t<slot />\n\t\t\t<div v-for=\"ring in rings\" class=\"bx-im-pulse-animation__ring\"></div>\n\t\t</div>\n\t`,\n};\n","import { EventEmitter } from 'main.core.events';\n\nimport { ChatHeader } from 'im.v2.component.content.elements';\nimport { EventType } from 'im.v2.const';\nimport { AddToChat as AddToChatPopup } from 'im.v2.component.entity-selector';\n\nimport { CollabTitle } from './collab-title';\nimport { EntitiesPanel } from './entities-panel/entities-panel';\nimport { AddToChatButton } from './add-to-chat-button';\nimport { PulseAnimation } from './pulse-animation/pulse-animation';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CollabHeader = {\n\tname: 'CollabHeader',\n\tcomponents: { ChatHeader, CollabTitle, EntitiesPanel, AddToChatButton, AddToChatPopup, PulseAnimation },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tcompactMode: false,\n\t\t\tshowAddToChatPopupDelayed: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tasync isInited(isInited: boolean)\n\t\t{\n\t\t\tif (isInited && this.showAddToChatPopupDelayed)\n\t\t\t{\n\t\t\t\tawait this.$nextTick();\n\t\t\t\tthis.openAddToChatPopup();\n\t\t\t}\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tEventEmitter.subscribe(EventType.header.openAddToChatPopup, this.onOpenAddToChatPopup);\n\t},\n\tbeforeUnmount()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.header.openAddToChatPopup, this.onOpenAddToChatPopup);\n\t},\n\tmethods:\n\t{\n\t\tonOpenAddToChatPopup()\n\t\t{\n\t\t\tif (!this.isInited)\n\t\t\t{\n\t\t\t\tthis.showAddToChatPopupDelayed = true;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.openAddToChatPopup();\n\t\t},\n\t\topenAddToChatPopup()\n\t\t{\n\t\t\tthis.$refs['add-to-chat-button'].openAddToChatPopup();\n\t\t},\n\t\tonCompactModeChange(compactMode: boolean)\n\t\t{\n\t\t\tthis.compactMode = compactMode;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader :dialogId=\"dialogId\" @compactModeChange=\"onCompactModeChange\" class=\"bx-im-collab-header__container\">\n\t\t\t<template #title>\n\t\t\t\t<CollabTitle :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #before-actions>\n\t\t\t\t<EntitiesPanel :dialogId=\"dialogId\" :compactMode=\"compactMode\" />\n\t\t\t</template>\n\t\t\t<template #add-to-chat-button>\n\t\t\t\t<PulseAnimation :showPulse=\"showAddToChatPopupDelayed\">\n\t\t\t\t\t<AddToChatButton \n\t\t\t\t\t\t:withAnimation=\"showAddToChatPopupDelayed\" \n\t\t\t\t\t\t:dialogId=\"dialogId\" \n\t\t\t\t\t\tref=\"add-to-chat-button\" \n\t\t\t\t\t\t@close=\"showAddToChatPopupDelayed = false\"\n\t\t\t\t\t/>\n\t\t\t\t</PulseAnimation>\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\nimport { SpecialBackground } from 'im.v2.lib.theme';\n\nimport { CollabHeader } from './components/header';\n\nimport './css/collab.css';\n\nexport const CollabContent = {\n\tname: 'CollabContent',\n\tcomponents: { BaseChatContent, CollabHeader },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tSpecialBackground: () => SpecialBackground,\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\" :backgroundId=\"SpecialBackground.collab\">\n\t\t\t<template #header>\n\t\t\t\t<CollabHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { ChatTitle, EditableChatTitle } from 'im.v2.component.elements';\n\n// @vue/component\nexport const MultidialogChatTitle = {\n\tname: 'MultidialogChatTitle',\n\tcomponents: { EditableChatTitle, ChatTitle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['newTitle'],\n\tcomputed:\n\t{\n\t\tisSupportBot(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['users/bots/isSupport'](this.dialogId);\n\t\t},\n\t\tsubtitle(): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage('IM_CONTENT_CHAT_HEADER_SUPPORT_SUBTITLE');\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-chat-header__info\">\n\t\t\t<ChatTitle v-if=\"isSupportBot\" :dialogId=\"dialogId\" />\n\t\t\t<EditableChatTitle v-else :dialogId=\"dialogId\" @newTitleSubmit=\"$emit('newTitle', $event)\" />\n\t\t\t<div class=\"bx-im-chat-header__subtitle_container\">\n\t\t\t\t<div class=\"bx-im-chat-header__subtitle_content\">{{ subtitle }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { ChatHeader } from 'im.v2.component.content.elements';\n\nimport { MultidialogChatTitle } from './title';\n\n// @vue/component\nexport const MultidialogHeader = {\n\tname: 'MultidialogHeader',\n\tcomponents: { ChatHeader, MultidialogChatTitle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader :dialogId=\"dialogId\">\n\t\t\t<template #title=\"{ onNewTitleHandler }\">\n\t\t\t\t<MultidialogChatTitle\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t@newTitle=\"onNewTitleHandler\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { MultidialogHeader } from './components/header';\n\nexport const MultidialogContent = {\n\tname: 'MultidialogContent',\n\tcomponents: { BaseChatContent, MultidialogHeader },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<MultidialogHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { Type } from 'main.core';\n\nimport { ThemeManager } from 'im.v2.lib.theme';\nimport { RecentService } from 'im.v2.provider.service';\n\nimport './css/empty-state.css';\n\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\n// @vue/component\nexport const BaseEmptyState = {\n\tprops:\n\t{\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tsubtext: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tbackgroundId: {\n\t\t\ttype: [String, Number],\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\ticonClass(): string\n\t\t{\n\t\t\treturn this.isEmptyRecent ? '--empty' : '--default';\n\t\t},\n\t\tpreparedText(): string\n\t\t{\n\t\t\tif (this.text)\n\t\t\t{\n\t\t\t\treturn this.text;\n\t\t\t}\n\n\t\t\tif (this.isEmptyRecent)\n\t\t\t{\n\t\t\t\treturn this.loc('IM_CONTENT_CHAT_NO_CHATS_START_MESSAGE');\n\t\t\t}\n\n\t\t\treturn this.loc('IM_CONTENT_CHAT_START_MESSAGE_V2');\n\t\t},\n\t\tpreparedSubtext(): string\n\t\t{\n\t\t\tif (this.subtext)\n\t\t\t{\n\t\t\t\treturn this.subtext;\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\t\tisEmptyRecent(): boolean\n\t\t{\n\t\t\treturn RecentService.getInstance().getCollection().length === 0;\n\t\t},\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\tif (Type.isStringFilled(this.backgroundId) || Type.isNumber(this.backgroundId))\n\t\t\t{\n\t\t\t\treturn ThemeManager.getBackgroundStyleById(this.backgroundId);\n\t\t\t}\n\n\t\t\treturn ThemeManager.getCurrentBackgroundStyle();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat-start__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-im-content-chat-start__content\">\n\t\t\t\t<div class=\"bx-im-content-chat-start__icon\" :class=\"iconClass\"></div>\n\t\t\t\t<div class=\"bx-im-content-chat-start__title\">\n\t\t\t\t\t{{ preparedText }}\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"preparedSubtext\" class=\"bx-im-content-chat-start__subtitle\">\n\t\t\t\t\t{{ preparedSubtext }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { BaseEmptyState } from './base';\n\n// @vue/component\nexport const ChannelEmptyState = {\n\tname: 'ChannelEmptyState',\n\tcomponents: { BaseEmptyState },\n\tcomputed:\n\t{\n\t\ttext(): string\n\t\t{\n\t\t\treturn this.loc('IM_CONTENT_CHANNEL_START_MESSAGE_V3');\n\t\t},\n\t\tsubtext(): string\n\t\t{\n\t\t\treturn this.loc('IM_CONTENT_CHANNEL_START_MESSAGE_SUBTITLE');\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseEmptyState :text=\"text\" :subtext=\"subtext\" />\n\t`,\n};\n","import { Type, type JsonObject } from 'main.core';\n\nimport { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod } from 'im.v2.const';\n\ntype RawUser = {\n\tid: number,\n\t[key: string]: any,\n};\ntype PullUserActivityResult = {\n\t[userId: string]: number,\n};\n\nexport class UserService\n{\n\tasync updateLastActivityDate(userId: number): Promise\n\t{\n\t\tif (this.isPullServerWithUserStatusSupport())\n\t\t{\n\t\t\tconst lastActivityDate = await this.getUserActivityFromPull(userId);\n\t\t\tif (!lastActivityDate)\n\t\t\t{\n\t\t\t\treturn Promise.resolve();\n\t\t\t}\n\n\t\t\treturn this.updateUserModel(userId, { lastActivityDate });\n\t\t}\n\n\t\tconst userData = await this.requestUserData(userId);\n\n\t\treturn this.updateUserModel(userId, userData);\n\t}\n\n\tasync getUserActivityFromPull(userId: number): Promise<null | Date>\n\t{\n\t\tconst result: PullUserActivityResult = await Core.getPullClient().getUsersLastSeen([userId])\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: error getting user activity from P&P', error);\n\t\t\t});\n\n\t\tif (!Type.isNumber(result[userId]))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tconst activityDateAgo = result[userId] * 1000;\n\n\t\treturn new Date(Date.now() - activityDateAgo);\n\t}\n\n\tasync requestUserData(userId: number): Promise<RawUser>\n\t{\n\t\tLogger.warn(`UserService: get actual user data for - ${userId}`);\n\t\tconst answer = await Core.getRestClient().callMethod(RestMethod.imUserGet, { ID: userId })\n\t\t\t.catch((error) => {\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\tconsole.error('UserService: error getting user data', error);\n\t\t\t});\n\n\t\treturn answer.data();\n\t}\n\n\tasync updateUserModel(userId: number, userFields: JsonObject): Promise\n\t{\n\t\tLogger.warn('UserService: update user data', userFields);\n\n\t\treturn Core.getStore().dispatch('users/update', {\n\t\t\tid: userId,\n\t\t\tfields: userFields,\n\t\t});\n\t}\n\n\tisPullServerWithUserStatusSupport(): boolean\n\t{\n\t\treturn Core.getPullClient().isJsonRpc();\n\t}\n}\n","// @vue/component\nexport const FeatureBlock = {\n\tname: 'FeatureBlock',\n\tprops:\n\t{\n\t\tname: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tsubtitle: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-collab-start__block\">\n\t\t\t<div class=\"bx-im-content-collab-start__block_icon\" :class=\"'--' + name\"></div>\n\t\t\t<div class=\"bx-im-content-collab-start__block_content\">\n\t\t\t\t<div class=\"bx-im-content-collab-start__block_title\">\n\t\t\t\t\t{{ title }}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-content-collab-start__block_subtitle\">\n\t\t\t\t\t{{ subtitle }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { Loc } from 'main.core';\n\nimport { Messenger } from 'im.public';\nimport { Color, ActionByUserType } from 'im.v2.const';\nimport { Button as MessengerButton, ButtonSize } from 'im.v2.component.elements';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { CreatableChat } from 'im.v2.component.content.chat-forms.forms';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\n\nimport { FeatureBlock } from './components/feature-block';\n\nimport './css/collab.css';\n\nimport type { CustomColorScheme } from 'im.v2.component.elements';\n\n// @vue/component\nexport const CollabEmptyState = {\n\tname: 'CollabEmptyState',\n\tcomponents: { FeatureBlock, MessengerButton },\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tcanCreateCollab(): boolean\n\t\t{\n\t\t\tconst isAvailable = FeatureManager.isFeatureAvailable(Feature.collabCreationAvailable);\n\t\t\tconst canCreate = PermissionManager.getInstance().canPerformActionByUserType(ActionByUserType.createCollab);\n\n\t\t\treturn isAvailable && canCreate;\n\t\t},\n\t\tpreparedTitle(): string\n\t\t{\n\t\t\treturn Loc.getMessage('IM_CONTENT_COLLAB_START_TITLE', {\n\t\t\t\t'[highlight]': '<span class=\"bx-im-content-collab-start__title_highlight\">',\n\t\t\t\t'[/highlight]': '</span>',\n\t\t\t});\n\t\t},\n\t\tcreateButtonColorScheme(): CustomColorScheme\n\t\t{\n\t\t\treturn {\n\t\t\t\tborderColor: Color.transparent,\n\t\t\t\tbackgroundColor: Color.collab60,\n\t\t\t\ticonColor: Color.white,\n\t\t\t\ttextColor: Color.white,\n\t\t\t\thoverColor: Color.collab50,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonCreateClick()\n\t\t{\n\t\t\tAnalytics.getInstance().chatCreate.onCollabEmptyStateCreateClick();\n\t\t\tMessenger.openChatCreation(CreatableChat.collab);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-collab-start__container\">\n\t\t\t<div class=\"bx-im-content-collab-start__title\" v-html=\"preparedTitle\"></div>\n\t\t\t<div class=\"bx-im-content-collab-start__content\">\n\t\t\t\t<div class=\"bx-im-content-collab-start__blocks\">\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_TITLE_1')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_SUBTITLE_1')\"\n\t\t\t\t\t\tname=\"collaboration\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_TITLE_2')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_SUBTITLE_2')\"\n\t\t\t\t\t\tname=\"business\"\n\t\t\t\t\t/>\n\t\t\t\t\t<FeatureBlock\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COLLAB_START_BLOCK_TITLE_3')\"\n\t\t\t\t\t\t:subtitle=\"loc('IM_CONTENT_COLLAB_START_BLOCK_SUBTITLE_3')\"\n\t\t\t\t\t\tname=\"result\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-content-collab-start__image\"></div>\n\t\t\t</div>\n\t\t\t<MessengerButton\n\t\t\t\tv-if=\"canCreateCollab\"\n\t\t\t\t:size=\"ButtonSize.XXL\"\n\t\t\t\t:customColorScheme=\"createButtonColorScheme\"\n\t\t\t\t:text=\"loc('IM_CONTENT_COLLAB_START_CREATE_BUTTON')\"\n\t\t\t\t:isRounded=\"true\"\n\t\t\t\t@click=\"onCreateClick\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import 'ui.notification';\n\nimport { Messenger } from 'im.public';\nimport { ChatType, Layout, UserRole } from 'im.v2.const';\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { LayoutManager } from 'im.v2.lib.layout';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Utils } from 'im.v2.lib.utils';\nimport { ChannelManager } from 'im.v2.lib.channel';\nimport { ChatService } from 'im.v2.provider.service';\nimport { AccessErrorCode } from 'im.v2.lib.access';\nimport { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { ChannelContent } from '../../content/channel/channel';\nimport { CollabContent } from '../../content/collab/collab';\nimport { MultidialogContent } from '../../content/multidialog/multidialog';\nimport { BaseEmptyState as EmptyState } from './components/empty-state/base';\nimport { ChannelEmptyState } from './components/empty-state/channel';\nimport { UserService } from './classes/user-service';\nimport { CollabEmptyState } from './components/empty-state/collab/collab';\n\nimport './css/default-chat-content.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { BitrixVueComponentProps } from 'ui.vue3';\nimport type { ImModelChat, ImModelLayout } from 'im.v2.model';\n\nconst EmptyStateComponentByLayout = {\n\t[Layout.channel.name]: ChannelEmptyState,\n\t[Layout.collab.name]: CollabEmptyState,\n\tdefault: EmptyState,\n};\n\n// @vue/component\nexport const ChatOpener = {\n\tname: 'ChatOpener',\n\tcomponents: { BaseChatContent, ChannelContent, CollabContent, MultidialogContent, EmptyState, ChannelEmptyState },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisUser(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.user;\n\t\t},\n\t\tisChannel(): boolean\n\t\t{\n\t\t\treturn ChannelManager.isChannel(this.dialogId);\n\t\t},\n\t\tisCollab(): boolean\n\t\t{\n\t\t\treturn this.dialog.type === ChatType.collab;\n\t\t},\n\t\tisMultidialog(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['sidebar/multidialog/isSupport'](this.dialogId);\n\t\t},\n\t\tisGuest(): boolean\n\t\t{\n\t\t\treturn this.dialog.role === UserRole.guest;\n\t\t},\n\t\temptyStateComponent(): BitrixVueComponentProps\n\t\t{\n\t\t\treturn EmptyStateComponentByLayout[this.layout.name] ?? EmptyStateComponentByLayout.default;\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tdialogId(newValue, oldValue)\n\t\t{\n\t\t\tLogger.warn(`ChatContent: switching from ${oldValue || 'empty'} to ${newValue}`);\n\t\t\tthis.onChatChange();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tif (!this.dialogId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChatChange();\n\t},\n\tmethods:\n\t{\n\t\tasync onChatChange()\n\t\t{\n\t\t\tif (this.dialogId === '')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Utils.dialog.isExternalId(this.dialogId))\n\t\t\t{\n\t\t\t\tconst realDialogId = await this.getChatService().prepareDialogId(this.dialogId);\n\n\t\t\t\tvoid LayoutManager.getInstance().setLayout({\n\t\t\t\t\tname: Layout.chat.name,\n\t\t\t\t\tentityId: realDialogId,\n\t\t\t\t\tcontextId: this.layout.contextId,\n\t\t\t\t});\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.inited)\n\t\t\t{\n\t\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is already loaded`);\n\t\t\t\tif (this.isUser)\n\t\t\t\t{\n\t\t\t\t\tconst userId = parseInt(this.dialog.dialogId, 10);\n\t\t\t\t\tvoid this.getUserService().updateLastActivityDate(userId);\n\t\t\t\t}\n\t\t\t\telse if (this.isChannel && !this.isGuest)\n\t\t\t\t{\n\t\t\t\t\tLogger.warn(`ChatContent: channel ${this.dialogId} is loaded, loading comments metadata`);\n\t\t\t\t\tvoid this.getChatService().loadCommentInfo(this.dialogId);\n\t\t\t\t}\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.loading)\n\t\t\t{\n\t\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loading`);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.layout.contextId)\n\t\t\t{\n\t\t\t\tawait this.loadChatWithContext();\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.loadChat();\n\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChatWithContext(): Promise\n\t\t{\n\t\t\tLogger.warn(`ChatContent: loading chat ${this.dialogId} with context - ${this.layout.contextId}`);\n\n\t\t\tawait this.getChatService().loadChatWithContext(this.dialogId, this.layout.contextId)\n\t\t\t\t.catch((errors) => {\n\t\t\t\t\tthis.sendAnalytics(errors);\n\t\t\t\t\tthis.handleChatLoadError(errors);\n\t\t\t\t\tLogger.error(errors);\n\t\t\t\t\tMessenger.openChat();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loaded with context of ${this.layout.contextId}`);\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`ChatContent: loading chat ${this.dialogId}`);\n\n\t\t\tawait this.getChatService().loadChatWithMessages(this.dialogId)\n\t\t\t\t.catch((errors) => {\n\t\t\t\t\tthis.handleChatLoadError(errors);\n\t\t\t\t\tLogger.error(errors);\n\t\t\t\t\tMessenger.openChat();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`ChatContent: chat ${this.dialogId} is loaded`);\n\t\t},\n\t\thandleChatLoadError(errors: Error[]): void\n\t\t{\n\t\t\tconst [firstError] = errors;\n\t\t\tif (firstError.code === AccessErrorCode.accessDenied)\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IM_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t\t}\n\t\t\telse if (firstError.code === AccessErrorCode.messageNotFound)\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IM_CONTENT_CHAT_CONTEXT_MESSAGE_NOT_FOUND'));\n\t\t\t}\n\t\t},\n\t\tsendAnalytics(errors: Error[])\n\t\t{\n\t\t\tconst [firstError] = errors;\n\t\t\tif (firstError.code !== AccessErrorCode.messageNotFound)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tAnalytics.getInstance().messageDelete.onNotFoundNotification({ dialogId: this.dialogId });\n\t\t},\n\t\tshowNotification(text: string)\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({ content: text });\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tgetUserService(): UserService\n\t\t{\n\t\t\tif (!this.userService)\n\t\t\t{\n\t\t\t\tthis.userService = new UserService();\n\t\t\t}\n\n\t\t\treturn this.userService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-default-chat__container\">\n\t\t\t<component :is=\"emptyStateComponent\" v-if=\"!dialogId\" />\n\t\t\t<ChannelContent v-else-if=\"isChannel\" :dialogId=\"dialogId\" />\n\t\t\t<CollabContent v-else-if=\"isCollab\" :dialogId=\"dialogId\" />\n\t\t\t<MultidialogContent v-else-if=\"isMultidialog\" :dialogId=\"dialogId\" />\n\t\t\t<BaseChatContent v-else :dialogId=\"dialogId\" />\n\t\t</div>\n\t`,\n};\n","import { Toggle, ToggleSize } from 'im.v2.component.elements';\nimport { CommentsService } from 'im.v2.provider.service';\n\nimport '../css/follow-toggle.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const SubscribeToggle = {\n\tname: 'SubscribeToggle',\n\tcomponents: { Toggle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tToggleSize: () => ToggleSize,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tpostMessageId(): ?number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tisSubscribed(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/isUserSubscribed'](this.postMessageId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonToggleClick(): void\n\t\t{\n\t\t\tif (this.isSubscribed)\n\t\t\t{\n\t\t\t\tCommentsService.unsubscribe(this.postMessageId);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tCommentsService.subscribe(this.postMessageId);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div @click=\"onToggleClick\" class=\"bx-im-comments-header-follow__container\">\n\t\t\t<div class=\"bx-im-comments-header-follow__text\">{{ loc('IM_CONTENT_COMMENTS_FOLLOW_TOGGLE_TEXT') }}</div>\n\t\t\t<Toggle :size=\"ToggleSize.M\" :isEnabled=\"isSubscribed\" />\n\t\t</div>\n\t`,\n};\n","import { EventEmitter } from 'main.core.events';\n\nimport { EventType, ActionByRole } from 'im.v2.const';\nimport { AvatarSize, ChatAvatar } from 'im.v2.component.elements';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { ChatHeader } from 'im.v2.component.content.elements';\n\nimport { SubscribeToggle } from './subscribe-toggle';\n\nimport '../css/header.css';\n\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsHeader = {\n\tname: 'CommentsHeader',\n\tcomponents: { ChatHeader, ChatAvatar, SubscribeToggle },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tchannel(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.channelId, true);\n\t\t},\n\t\tshowSubscribeToggle(): boolean\n\t\t{\n\t\t\treturn PermissionManager.getInstance().canPerformActionByRole(ActionByRole.subscribeToComments, this.dialogId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonBackClick()\n\t\t{\n\t\t\tEventEmitter.emit(EventType.dialog.closeComments);\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader\n\t\t\t:dialogId=\"dialogId\"\n\t\t\tclass=\"bx-im-comment-header__container\"\n\t\t>\n\t\t\t<template #left>\n\t\t\t\t<div @click=\"onBackClick\" class=\"bx-im-comment-header__back\"></div>\n\t\t\t\t<div class=\"bx-im-comment-header__info\">\n\t\t\t\t\t<div class=\"bx-im-comment-header__title\">{{ loc('IM_CONTENT_COMMENTS_HEADER_TITLE') }}</div>\n\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle\">\n\t\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle_avatar\">\n\t\t\t\t\t\t\t<ChatAvatar :avatarDialogId=\"channelId\" :contextDialogId=\"channelId\" :size=\"AvatarSize.XS\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-im-comment-header__subtitle_text\">{{ channel.name }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template v-if=\"showSubscribeToggle\" #before-actions>\n\t\t\t\t<SubscribeToggle :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { type JsonObject } from 'main.core';\n\nimport '../css/dialog-loader.css';\n\n// @vue/component\nexport const CommentsDialogLoader = {\n\tname: 'CommentsDialogLoader',\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-comments-dialog-loader__container\">\n\t\t\t<div class=\"bx-im-comments-dialog-loader__spinner\"></div>\n\t\t</div>\n\t`,\n};\n","import { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { MessageMenu } from 'im.v2.component.message-list';\nimport { EventType } from 'im.v2.const';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\nimport type { ImModelChat } from 'im.v2.model';\n\nexport class CommentsMessageMenu extends MessageMenu\n{\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\tif (this.isPostMessage())\n\t\t{\n\t\t\treturn [\n\t\t\t\tthis.getCopyItem(),\n\t\t\t\tthis.getCopyFileItem(),\n\t\t\t\tthis.getDelimiter(),\n\t\t\t\tthis.getDownloadFileItem(),\n\t\t\t\tthis.getSaveToDisk(),\n\t\t\t\tthis.getDelimiter(),\n\t\t\t\tthis.getOpenInChannelItem(),\n\t\t\t];\n\t\t}\n\n\t\treturn [\n\t\t\tthis.getReplyItem(),\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getCopyFileItem(),\n\t\t\t// this.getPinItem(),\n\t\t\t// this.getForwardItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\t// this.getMarkItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getCreateItem(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getDownloadFileItem(),\n\t\t\tthis.getSaveToDisk(),\n\t\t\tthis.getDelimiter(),\n\t\t\tthis.getEditItem(),\n\t\t\tthis.getDeleteItem(),\n\t\t];\n\t}\n\n\tgetOpenInChannelItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_CONTENT_COMMENTS_MESSAGE_MENU_OPEN_IN_CHANNEL'),\n\t\t\tonclick: () => {\n\t\t\t\tEventEmitter.emit(EventType.dialog.closeComments);\n\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tisPostMessage(): boolean\n\t{\n\t\tconst { dialogId }: ImModelChat = this.store.getters['chats/getByChatId'](this.context.chatId);\n\n\t\treturn dialogId !== this.context.dialogId;\n\t}\n}\n","import {\n\tMessageList,\n\tAuthorGroup,\n\tMessageComponents,\n\tCollectionManager,\n} from 'im.v2.component.message-list';\nimport { MessageComponentManager } from 'im.v2.lib.message-component-manager';\nimport { MessageComponent } from 'im.v2.const';\n\nimport { CommentsDialogLoader } from './dialog-loader';\nimport { CommentsMessageMenu } from '../classes/message-menu';\n\nimport '../css/message-list.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsMessageList = {\n\tname: 'CommentsMessageList',\n\tcomponents: { MessageList, CommentsDialogLoader, AuthorGroup, ...MessageComponents },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tCommentsMessageMenu: () => CommentsMessageMenu,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tshowPostMessage(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited && !this.dialog.hasPrevPage;\n\t\t},\n\t\tpostMessageId(): number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tpostMessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.postMessageId);\n\t\t},\n\t\tpostAuthorGroup(): JsonObject | null\n\t\t{\n\t\t\tif (!this.dialog.inited)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst collectionManager = new CollectionManager(this.dialogId);\n\n\t\t\treturn collectionManager.formatAuthorGroup(this.postMessage);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonPostMessageMouseUp(message: ImModelMessage, event: MouseEvent)\n\t\t{\n\t\t\tthis.$refs.messageList.onMessageMouseUp(message, event);\n\t\t},\n\t\tgetMessageComponentName(message: ImModelMessage): $Values<typeof MessageComponent>\n\t\t{\n\t\t\treturn (new MessageComponentManager(message)).getName();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<MessageList\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:messageMenuClass=\"CommentsMessageMenu\"\n\t\t\tref=\"messageList\"\n\t\t>\n\t\t\t<template #loader>\n\t\t\t\t<CommentsDialogLoader />\n\t\t\t</template>\n\t\t\t<template v-if=\"showPostMessage\" #before-messages>\n\t\t\t\t<div class=\"bx-im-comments-message-list__channel-post\">\n\t\t\t\t\t<AuthorGroup :item=\"postAuthorGroup\" :contextDialogId=\"dialogId\" :withAvatarMenu=\"false\">\n\t\t\t\t\t\t<template #message>\n\t\t\t\t\t\t\t<component\n\t\t\t\t\t\t\t\t:is=\"getMessageComponentName(postMessage)\"\n\t\t\t\t\t\t\t\t:item=\"postMessage\"\n\t\t\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t\t\t:key=\"postMessage.id\"\n\t\t\t\t\t\t\t\t@mouseup=\"onPostMessageMouseUp(postMessage, $event)\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t</component>\n\t\t\t\t\t\t</template>\n\t\t\t\t\t</AuthorGroup>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t</MessageList>\n\t`,\n};\n","import { Logger } from 'im.v2.lib.logger';\nimport { ImModelMessage } from 'im.v2.model';\n\nimport { ChatDialog, PinnedMessages } from 'im.v2.component.dialog.chat';\n\nimport { CommentsMessageList } from './message-list';\n\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsDialog = {\n\tname: 'CommentsDialog',\n\tcomponents: { ChatDialog, CommentsMessageList, PinnedMessages },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tdialogInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tpostMessageId(): number\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getMessageIdByChatId'](this.dialog.chatId);\n\t\t},\n\t\tpostMessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.$store.getters['messages/getById'](this.postMessageId);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tasync goToPostMessageContext()\n\t\t{\n\t\t\tconst dialog = this.$refs.dialog;\n\n\t\t\tconst postMessageIsShown = this.dialogInited && !this.dialog.hasPrevPage;\n\t\t\tif (postMessageIsShown)\n\t\t\t{\n\t\t\t\tawait dialog.getScrollManager().animatedScrollToMessage(this.postMessageId);\n\t\t\t\tdialog.highlightMessage(this.postMessageId);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdialog.showLoadingBar();\n\t\t\tawait dialog.getMessageService().loadFirstPage()\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tLogger.error('goToMessageContext error', error);\n\t\t\t\t});\n\t\t\tawait this.$nextTick();\n\t\t\tdialog.hideLoadingBar();\n\t\t\tdialog.getScrollManager().scrollToMessage(this.postMessageId);\n\t\t\tawait this.$nextTick();\n\t\t\tdialog.highlightMessage(this.postMessageId);\n\t\t},\n\t\tonPinnedPostMessageClick()\n\t\t{\n\t\t\tthis.goToPostMessageContext();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatDialog ref=\"dialog\" :dialogId=\"dialogId\" :saveScrollOnExit=\"false\" :resetOnExit=\"true\">\n\t\t\t<template v-if=\"dialogInited\" #pinned-panel>\n\t\t\t\t<PinnedMessages\n\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t:messages=\"[postMessage]\"\n\t\t\t\t\t@messageClick=\"onPinnedPostMessageClick\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t\t<template #message-list>\n\t\t\t\t<CommentsMessageList :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatDialog>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\n\n// @vue/component\nexport const CommentsTextarea = {\n\tname: 'CommentsTextarea',\n\tcomponents: { ChatTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withAudioInput=\"false\"\n\t\t\tclass=\"bx-im-comments-send-panel__container\"\n\t\t/>\n\t`,\n};\n","import { Button as ChatButton, ButtonColor, ButtonSize } from 'im.v2.component.elements';\nimport { ChatService } from 'im.v2.provider.service';\n\n// @vue/component\nexport const JoinPanel = {\n\tcomponents: { ChatButton },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t},\n\tmethods:\n\t{\n\t\tonButtonClick()\n\t\t{\n\t\t\tthis.getChatService().joinChat(this.dialogId);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-chat__textarea_placeholder\">\n\t\t\t<ChatButton\n\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t:color=\"ButtonColor.Primary\"\n\t\t\t\t:text=\"loc('IM_CONTENT_BLOCKED_TEXTAREA_JOIN_CHANNEL_V2')\"\n\t\t\t\t:isRounded=\"true\"\n\t\t\t\t@click=\"onButtonClick\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { CommentsHeader } from './components/header';\nimport { CommentsDialog } from './components/dialog';\nimport { CommentsTextarea } from './components/textarea';\nimport { JoinPanel } from './components/join-panel';\n\nimport './css/comments-content.css';\n\nexport const CommentsContent = {\n\tname: 'CommentsContent',\n\tcomponents: { BaseChatContent, CommentsHeader, CommentsDialog, CommentsTextarea, JoinPanel },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\">\n\t\t\t<template #header>\n\t\t\t\t<CommentsHeader :dialogId=\"dialogId\" :channelId=\"channelId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #dialog>\n\t\t\t\t<CommentsDialog :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #join-panel>\n\t\t\t\t<JoinPanel :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<CommentsTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import 'ui.notification';\n\nimport { Analytics } from 'im.v2.lib.analytics';\nimport { Logger } from 'im.v2.lib.logger';\nimport { ChatService } from 'im.v2.provider.service';\n\nimport { CommentsContent } from '../../content/comments/comments';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat, ImModelCommentInfo } from 'im.v2.model';\n\n// @vue/component\nexport const CommentsOpener = {\n\tname: 'CommentsOpener',\n\tcomponents: { CommentsContent },\n\tprops:\n\t{\n\t\tpostId: {\n\t\t\ttype: Number,\n\t\t\trequired: true,\n\t\t},\n\t\tchannelId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ?ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/getByChatId'](this.commentsChatId);\n\t\t},\n\t\tcommentInfo(): ImModelCommentInfo\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/getByMessageId'](this.postId);\n\t\t},\n\t\tcommentsChatId(): number\n\t\t{\n\t\t\treturn this.commentInfo.chatId;\n\t\t},\n\t\tcommentsDialogId(): string\n\t\t{\n\t\t\tif (!this.dialog)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn this.dialog.dialogId;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.onCreated();\n\t},\n\tmethods:\n\t{\n\t\tasync onCreated()\n\t\t{\n\t\t\tawait this.loadChat();\n\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`CommentsContent: loading comments for post ${this.postId}`);\n\n\t\t\tawait this.getChatService().loadComments(this.postId)\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tthis.handleChatLoadError(error);\n\t\t\t\t\tLogger.error(error);\n\t\t\t\t\tthis.$emit('close');\n\t\t\t\t});\n\n\t\t\tLogger.warn(`CommentsContent: comments for post ${this.postId} are loaded`);\n\t\t},\n\t\thandleChatLoadError(error: Error[]): void\n\t\t{\n\t\t\tconst [firstError] = error;\n\t\t\tif (firstError.code === 'ACCESS_DENIED')\n\t\t\t{\n\t\t\t\tthis.showNotification(this.loc('IM_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t\t}\n\t\t},\n\t\tshowNotification(text: string)\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({ content: text });\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-comments__container\">\n\t\t\t<CommentsContent :dialogId=\"commentsDialogId\" :channelId=\"channelId\" />\n\t\t</div>\n\t`,\n};\n","import { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport { EventType } from 'im.v2.const';\n\nimport { ChatOpener } from './components/openers/chat/chat';\nimport { CommentsOpener } from './components/openers/comments/comments';\n\nimport './css/chat-content.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelLayout } from 'im.v2.model';\n\n// @vue/component\nexport const ChatContent = {\n\tname: 'ChatContent',\n\tcomponents: { ChatOpener, CommentsOpener },\n\tprops:\n\t{\n\t\tentityId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tcommentsPostId: 0,\n\t\t\tcommentsAnimationFlag: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tshowComments(): boolean\n\t\t{\n\t\t\treturn this.$store.getters['messages/comments/areOpened'];\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tlayout()\n\t\t{\n\t\t\tthis.closeComments();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tEventEmitter.subscribe(EventType.dialog.openComments, this.onOpenComments);\n\t\tEventEmitter.subscribe(EventType.dialog.closeComments, this.onCloseComments);\n\t},\n\tbeforeUnmount()\n\t{\n\t\tEventEmitter.unsubscribe(EventType.dialog.openComments, this.onOpenComments);\n\t\tEventEmitter.unsubscribe(EventType.dialog.closeComments, this.onCloseComments);\n\t},\n\tmethods:\n\t{\n\t\tonOpenComments(event: BaseEvent<{ messageId: number }>)\n\t\t{\n\t\t\tconst { messageId } = event.getData();\n\t\t\tthis.commentsPostId = messageId;\n\t\t\tthis.commentsAnimationFlag = true;\n\t\t\tthis.$store.dispatch('messages/comments/setOpened', {\n\t\t\t\tchannelDialogId: this.entityId,\n\t\t\t\tcommentsPostId: this.commentsPostId,\n\t\t\t});\n\t\t},\n\t\tonCloseComments()\n\t\t{\n\t\t\tthis.closeComments();\n\t\t},\n\t\tcloseComments()\n\t\t{\n\t\t\tthis.commentsPostId = 0;\n\t\t\tthis.$store.dispatch('messages/comments/setClosed');\n\t\t},\n\t\tonCommentsAnimationEnd()\n\t\t{\n\t\t\tthis.commentsAnimationFlag = false;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatOpener :dialogId=\"entityId\" :class=\"{'--comments-show-animation': commentsAnimationFlag}\" />\n\t\t<Transition name=\"comments-content\" @after-enter=\"onCommentsAnimationEnd\">\n\t\t\t<CommentsOpener\n\t\t\t\tv-if=\"showComments\"\n\t\t\t\t:postId=\"commentsPostId\"\n\t\t\t\t:channelId=\"entityId\"\n\t\t\t/>\n\t\t</Transition>\n\t`,\n};\n"],"names":["CommentsButton","name","props","dialogId","type","String","required","counter","Number","data","computed","dialog","$store","getters","template","ChannelMessageMenu","MessageMenu","getMenuItems","getCopyItem","getCopyLinkItem","getCopyFileItem","getPinItem","getForwardItem","getDelimiter","getMarkItem","getFavoriteItem","getDownloadFileItem","getSaveToDisk","getEditItem","getDeleteItem","getSelectItem","ChannelMessageList","components","MessageList","ChannelDialog","ChatDialog","lastScrolledChatId","layout","isGuest","role","UserRole","guest","isChatLayout","Layout","chat","channelComments","chatId","totalChannelCommentsCounter","Object","values","forEach","commentCounter","showCommentsButton","beforeUnmount","readAllChannelComments","methods","onCommentsButtonClick","chatIdToJump","getNextChatIdToJump","messageIdToJump","$refs","goToMessageContext","position","ScrollManager","scrollPosition","messageBottom","goToMessageContextByCommentsChatId","showLoadingBar","messageId","getMessageService","loadContextByChatId","catch","error","console","hideLoadingBar","$nextTick","getScrollManager","scrollToMessage","highlightMessage","commentChatIds","getCommentsChatIds","sort","a","z","filteredChatIds","filter","length","keys","map","CommentsService","JoinPanel","ChatButton","ButtonSize","ButtonColor","onButtonClick","getChatService","joinChat","chatService","ChatService","loc","phraseCode","$Bitrix","Loc","getMessage","ChannelTextarea","ChatTextarea","default","ChannelContent","BaseChatContent","CollabTitle","ChatTitle","LineLoader","FadeAnimation","inject","collabInfo","guestCounter","guestCount","userCounterText","getMessagePlural","userCounter","guestCounterText","onMembersClick","currentSidebarPanel","SidebarDetailBlock","members","EventEmitter","emit","EventType","sidebar","close","panel","open","EntityCounter","preparedCounter","toString","EntityLink","compactMode","Boolean","title","url","showCounter","Type","isNull","onLinkClick","Analytics","getInstance","collabEntities","onClick","BX","SidePanel","Instance","cacheable","customLeftBoundary","EntitiesPanel","CollabEntityType","tasksInfo","entities","tasks","tasksUrl","tasksCounter","filesInfo","files","filesUrl","calendarInfo","calendar","calendarUrl","calendarCounter","AddToChatButton","AddToCollab","withAnimation","emits","showAddToChatPopup","openAddToChatPopup","userAdd","onChatHeaderClick","closeAddToChatPopup","$emit","RING_COUNT","PulseAnimation","showPulse","rings","Array","from","CollabHeader","ChatHeader","AddToChatPopup","showAddToChatPopupDelayed","isInited","inited","watch","created","subscribe","header","onOpenAddToChatPopup","unsubscribe","onCompactModeChange","CollabContent","SpecialBackground","MultidialogChatTitle","EditableChatTitle","isSupportBot","subtitle","MultidialogHeader","MultidialogContent","BaseEmptyState","text","subtext","backgroundId","iconClass","isEmptyRecent","preparedText","preparedSubtext","RecentService","getCollection","backgroundStyle","isStringFilled","isNumber","ThemeManager","getBackgroundStyleById","getCurrentBackgroundStyle","replacements","ChannelEmptyState","UserService","updateLastActivityDate","userId","isPullServerWithUserStatusSupport","lastActivityDate","getUserActivityFromPull","Promise","resolve","updateUserModel","userData","requestUserData","result","Core","getPullClient","getUsersLastSeen","activityDateAgo","Date","now","Logger","warn","answer","getRestClient","callMethod","RestMethod","imUserGet","ID","userFields","getStore","dispatch","id","fields","isJsonRpc","FeatureBlock","CollabEmptyState","MessengerButton","canCreateCollab","isAvailable","FeatureManager","isFeatureAvailable","Feature","collabCreationAvailable","canCreate","PermissionManager","canPerformActionByUserType","ActionByUserType","createCollab","preparedTitle","createButtonColorScheme","borderColor","Color","transparent","backgroundColor","collab60","iconColor","white","textColor","hoverColor","collab50","onCreateClick","chatCreate","onCollabEmptyStateCreateClick","Messenger","openChatCreation","CreatableChat","collab","EmptyStateComponentByLayout","channel","EmptyState","ChatOpener","isUser","ChatType","user","isChannel","ChannelManager","isCollab","isMultidialog","emptyStateComponent","newValue","oldValue","onChatChange","Utils","isExternalId","realDialogId","prepareDialogId","LayoutManager","setLayout","entityId","contextId","parseInt","getUserService","loadCommentInfo","onOpenChat","loading","loadChatWithContext","loadChat","errors","sendAnalytics","handleChatLoadError","openChat","loadChatWithMessages","firstError","code","AccessErrorCode","accessDenied","showNotification","messageNotFound","messageDelete","onNotFoundNotification","UI","Notification","Center","notify","content","userService","SubscribeToggle","Toggle","ToggleSize","postMessageId","isSubscribed","onToggleClick","CommentsHeader","ChatAvatar","channelId","AvatarSize","showSubscribeToggle","canPerformActionByRole","ActionByRole","subscribeToComments","onBackClick","closeComments","CommentsDialogLoader","CommentsMessageMenu","isPostMessage","getOpenInChannelItem","getReplyItem","getCreateItem","onclick","menuInstance","store","context","CommentsMessageList","AuthorGroup","MessageComponents","showPostMessage","hasPrevPage","postMessage","postAuthorGroup","collectionManager","CollectionManager","formatAuthorGroup","onPostMessageMouseUp","message","event","messageList","onMessageMouseUp","getMessageComponentName","MessageComponentManager","getName","CommentsDialog","PinnedMessages","dialogInited","goToPostMessageContext","postMessageIsShown","animatedScrollToMessage","loadFirstPage","onPinnedPostMessageClick","CommentsTextarea","CommentsContent","CommentsOpener","postId","commentsChatId","commentInfo","commentsDialogId","onCreated","loadComments","ChatContent","commentsPostId","commentsAnimationFlag","showComments","openComments","onOpenComments","onCloseComments","getData","channelDialogId","onCommentsAnimationEnd"],"mappings":"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"}