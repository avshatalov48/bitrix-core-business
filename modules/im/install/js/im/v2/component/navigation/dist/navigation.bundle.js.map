{"version":3,"file":"navigation.bundle.js","sources":["../src/components/settings/button-panel.js","../src/classes/status-service.js","../src/components/status/user-status-content.js","../src/components/status/user-status-popup.js","../src/classes/desktop-item-context-menu.js","../src/components/settings/desktop-account-list/desktop-account-item.js","../src/components/settings/desktop-account-list/desktop-account-list.js","../src/components/settings/user-settings-content.js","../src/components/settings/user-settings-popup.js","../src/components/user-settings.js","../src/components/market-apps.js","../src/navigation.js"],"sourcesContent":["import { Core } from 'im.v2.application.core';\nimport { Utils } from 'im.v2.lib.utils';\nimport { Button as ChatButton, ButtonSize, ButtonColor } from 'im.v2.component.elements';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\n\n// @vue/component\nexport const ButtonPanel = {\n\tname: 'ButtonPanel',\n\tcomponents: { ChatButton },\n\temits: ['openProfile', 'logout'],\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tButtonColor: () => ButtonColor,\n\t\tcurrentUserId(): number\n\t\t{\n\t\t\treturn Core.getUserId();\n\t\t},\n\t\tprofileUri(): string\n\t\t{\n\t\t\treturn Utils.user.getProfileLink(this.currentUserId);\n\t\t},\n\t\tisDesktop(): boolean\n\t\t{\n\t\t\treturn DesktopApi.isDesktop();\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t\tonLogoutClick()\n\t\t{\n\t\t\tvoid DesktopApi.logout();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-user-settings-popup__button-panel\">\n\t\t\t<a :href=\"profileUri\" target=\"_blank\" class=\"bx-im-user-settings-popup__user_link\">\n\t\t\t\t<ChatButton\n\t\t\t\t\t:color=\"ButtonColor.PrimaryBorder\"\n\t\t\t\t\t:size=\"ButtonSize.M\"\n\t\t\t\t\t:isUppercase=\"false\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t:text=\"loc('IM_USER_SETTINGS_OPEN_PROFILE')\"\n\t\t\t\t\t@click=\"$emit('openProfile')\"\n\t\t\t\t/>\n\t\t\t</a>\n\t\t\t<ChatButton\n\t\t\t\tv-if=\"isDesktop\" \n\t\t\t\t:color=\"ButtonColor.DangerBorder\"\n\t\t\t\t:size=\"ButtonSize.M\"\n\t\t\t\t:isUppercase=\"false\"\n\t\t\t\t:isRounded=\"true\"\n\t\t\t\t:text=\"loc('IM_USER_SETTINGS_LOGOUT')\"\n\t\t\t\t@click=\"onLogoutClick\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { Logger } from 'im.v2.lib.logger';\nimport { RestMethod, UserStatus } from 'im.v2.const';\n\nexport class StatusService\n{\n\tstore: Object = null;\n\trestClient: Object = null;\n\n\tconstructor()\n\t{\n\t\tthis.store = Core.getStore();\n\t\tthis.restClient = Core.getRestClient();\n\t}\n\n\tchangeStatus(status: string): Promise\n\t{\n\t\tif (!UserStatus[status])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tLogger.warn(`StatusService: change current user status to ${status}`);\n\t\tthis.store.dispatch('users/setStatus', { status });\n\t\tthis.store.dispatch('application/settings/set', { status });\n\n\t\treturn this.restClient.callMethod(RestMethod.imUserStatusSet, {\n\t\t\tSTATUS: status\n\t\t}).catch((error) => {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('StatusService: changeStatus error', error);\n\t\t});\n\t}\n}","import {UserStatus, UserStatusSize} from 'im.v2.component.elements';\nimport {UserStatus as UserStatusType} from 'im.v2.const';\nimport {Utils} from 'im.v2.lib.utils';\n\nimport {StatusService} from '../../classes/status-service';\n\n// @vue/component\nexport const UserStatusContent = {\n\tname: 'UserStatusContent',\n\tcomponents: {UserStatus},\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tUserStatusSize: () => UserStatusSize,\n\t\tUserStatusType: () => UserStatusType,\n\t\tstatusList(): string[]\n\t\t{\n\t\t\treturn [UserStatusType.online, UserStatusType.dnd];\n\t\t}\n\t},\n\tmethods:\n\t{\n\t\tonStatusClick(statusName: string)\n\t\t{\n\t\t\tthis.getStatusService().changeStatus(statusName);\n\t\t\tthis.$emit('close');\n\t\t},\n\t\tgetStatusService(): StatusService\n\t\t{\n\t\t\tif (!this.statusService)\n\t\t\t{\n\t\t\t\tthis.statusService = new StatusService();\n\t\t\t}\n\n\t\t\treturn this.statusService;\n\t\t},\n\t\tgetStatusText(status: string): string\n\t\t{\n\t\t\treturn Utils.user.getStatusText(status);\n\t\t}\n\t},\n\ttemplate:\n\t`\n\t\t<div class=\"bx-im-user-status-popup__scope bx-im-user-status-popup__container\">\n\t\t\t<div\n\t\t\t\tv-for=\"status in statusList\"\n\t\t\t\t:key=\"status\"\n\t\t\t\t@click=\"onStatusClick(status)\"\n\t\t\t\tclass=\"bx-im-user-status-popup__item\"\n\t\t\t>\n\t\t\t\t<UserStatus :status=\"status\" :size=\"UserStatusSize.M\" />\n\t\t\t\t<div class=\"bx-im-user-status-popup__text\">{{ getStatusText(status) }}</div>\n\t\t\t</div>\n\t\t</div>\n\t`\n};","import {MessengerPopup} from 'im.v2.component.elements';\n\nimport {UserStatusContent} from './user-status-content';\n\nconst POPUP_ID = 'im-user-status-popup';\n\n// @vue/component\nexport const UserStatusPopup = {\n\tname: 'UserStatusPopup',\n\tcomponents: {MessengerPopup, UserStatusContent},\n\tprops:\n\t{\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true\n\t\t}\n\t},\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tPOPUP_ID: () => POPUP_ID,\n\t\tconfig()\n\t\t{\n\t\t\treturn {\n\t\t\t\twidth: 190,\n\t\t\t\tbindElement: this.bindElement,\n\t\t\t\toffsetTop: 4,\n\t\t\t\tpadding: 0,\n\t\t\t};\n\t\t}\n\t},\n\ttemplate: `\n\t\t<MessengerPopup\n\t\t\t:config=\"config\"\n\t\t\t@close=\"$emit('close')\"\n\t\t\t:id=\"POPUP_ID\"\n\t\t>\n\t\t\t<UserStatusContent @close=\"$emit('close')\" />\n\t\t</MessengerPopup>\n\t`\n};","import { Loc } from 'main.core';\nimport { PopupManager } from 'main.popup';\n\nimport { BaseMenu } from 'im.v2.lib.menu';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { PopupType } from 'im.v2.const';\nimport { showDesktopDeleteConfirm } from 'im.v2.lib.confirm';\n\nimport type { MenuItem } from 'im.v2.lib.menu';\nimport type { DesktopAccount } from 'im.v2.lib.desktop-api';\n\nexport class DesktopItemContextMenu extends BaseMenu\n{\n\tcontext: DesktopAccount;\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.id = PopupType.desktopItemMenu;\n\t}\n\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.#getConnectItem(),\n\t\t\tthis.#getDeleteItem(),\n\t\t];\n\t}\n\n\t#getConnectItem(): MenuItem\n\t{\n\t\tconst title = this.context.connected\n\t\t\t? Loc.getMessage('IM_USER_SETTINGS_DESKTOP_CONTEXT_MENU_DISCONNECT_V2')\n\t\t\t: Loc.getMessage('IM_USER_SETTINGS_DESKTOP_CONTEXT_MENU_CONNECT_V2')\n\t\t;\n\n\t\treturn {\n\t\t\ttext: title,\n\t\t\tonclick: function() {\n\t\t\t\tif (this.context.connected)\n\t\t\t\t{\n\t\t\t\t\tthis.#disconnect();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.#connect();\n\t\t\t\t}\n\t\t\t\tthis.menuInstance.close();\n\t\t\t\tPopupManager.getPopupById(PopupType.userProfile)?.close();\n\t\t\t}.bind(this),\n\t\t};\n\t}\n\n\t#getDeleteItem(): MenuItem\n\t{\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_USER_SETTINGS_DESKTOP_CONTEXT_MENU_DELETE_V2'),\n\t\t\tonclick: async function() {\n\t\t\t\tconst userChoice = await showDesktopDeleteConfirm();\n\t\t\t\tif (userChoice === true)\n\t\t\t\t{\n\t\t\t\t\tDesktopApi.deleteAccount(this.context.host, this.context.login);\n\t\t\t\t\tPopupManager.getPopupById(PopupType.userProfile)?.close();\n\t\t\t\t}\n\t\t\t}.bind(this),\n\t\t};\n\t}\n\n\t#connect()\n\t{\n\t\tconst { host, login, protocol } = this.context;\n\n\t\tconst userLang = navigator.language;\n\t\tDesktopApi.connectAccount(host, login, protocol, userLang);\n\t}\n\n\t#disconnect()\n\t{\n\t\tconst { host } = this.context;\n\t\tDesktopApi.disconnectAccount(host);\n\t}\n\n\tclose()\n\t{\n\t\tPopupManager.getPopupById(PopupType.userProfile)?.setAutoHide(true);\n\t\tsuper.close();\n\t}\n}\n","import { DesktopManager } from 'im.v2.lib.desktop';\n\nimport '../../../css/desktop-account-list/desktop-account-item.css';\n\nimport type { DesktopAccount } from 'im.v2.lib.desktop-api';\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const DesktopAccountItem = {\n\tname: 'DesktopAccountItem',\n\tprops:\n\t{\n\t\taccount: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['contextMenuClick'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\terrorLoadAvatar: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\taccountItem(): DesktopAccount\n\t\t{\n\t\t\treturn this.account;\n\t\t},\n\t\tavatarUrl(): string\n\t\t{\n\t\t\tif (this.errorLoadAvatar || !this.hasAvatar)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\tif (this.accountItem.avatar.startsWith('http'))\n\t\t\t{\n\t\t\t\treturn this.accountItem.avatar;\n\t\t\t}\n\n\t\t\treturn `${this.accountItem.protocol}://${this.accountItem.host}${this.accountItem.avatar}`;\n\t\t},\n\t\tisConnected(): boolean\n\t\t{\n\t\t\treturn this.accountItem.connected;\n\t\t},\n\t\thasAvatar(): boolean\n\t\t{\n\t\t\treturn this.accountItem.avatar && this.accountItem.avatar !== '/bitrix/js/im/images/blank.gif';\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonContextMenuClick(event)\n\t\t{\n\t\t\tthis.$emit('contextMenuClick', {\n\t\t\t\taccount: this.account,\n\t\t\t\ttarget: event.target,\n\t\t\t});\n\t\t},\n\t\tonDomainClick()\n\t\t{\n\t\t\tif (!this.isConnected)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tDesktopManager.getInstance().openAccountTab(this.accountItem.portal);\n\t\t},\n\t\tonError()\n\t\t{\n\t\t\tthis.errorLoadAvatar = true;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-desktop-connection-list-item__container bx-im-desktop-connection-list-item__scope\">\n\t\t\t<div class=\"bx-im-desktop-connection-list-item__content\" :class=\"{'--disconnected': !isConnected}\">\n\t\t\t\t<img \n\t\t\t\t\tv-if=\"avatarUrl\" \n\t\t\t\t\t:src=\"avatarUrl\"\n\t\t\t\t\t:alt=\"accountItem.portal\"\n\t\t\t\t\t@error=\"onError\"\n\t\t\t\t\tclass=\"bx-im-desktop-connection-list-item__avatar\" \n\t\t\t\t/>\n\t\t\t\t<span v-else class=\"bx-im-desktop-connection-list-item__avatar-default\"></span>\n\t\t\t\t<div class=\"bx-im-desktop-connection-list-item__title-container\">\n\t\t\t\t\t<span class=\"bx-im-desktop-connection-list-item__title\" @click=\"onDomainClick\">\n\t\t\t\t\t\t{{ accountItem.portal }}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"bx-im-desktop-connection-list-item__login\">{{ accountItem.login }}</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tclass=\"bx-im-messenger__context-menu-icon bx-im-desktop-connection-list-item__context-menu\"\n\t\t\t\t@click=\"onContextMenuClick\"\n\t\t\t></button>\n\t\t</div>\n\t`,\n};\n","import { PopupManager } from 'main.popup';\n\nimport { PopupType } from 'im.v2.const';\nimport { DesktopApi, type DesktopAccount } from 'im.v2.lib.desktop-api';\n\nimport { DesktopItemContextMenu } from '../../../classes/desktop-item-context-menu';\nimport { DesktopAccountItem } from './desktop-account-item';\n\nimport '../../../css/desktop-account-list/desktop-account-list.css';\n\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const DesktopAccountList = {\n\tname: 'DesktopAccountList',\n\tcomponents: { DesktopAccountItem },\n\temits: ['openContextMenu'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\taccounts: [],\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tisEmptyState(): boolean\n\t\t{\n\t\t\treturn this.accounts.length === 0;\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tthis.contextMenu = new DesktopItemContextMenu();\n\t\tthis.accounts = DesktopApi.getAccountList();\n\t},\n\tbeforeUnmount()\n\t{\n\t\tthis.contextMenu.destroy();\n\t},\n\tmethods:\n\t{\n\t\topenLoginTab()\n\t\t{\n\t\t\tthis.contextMenu.destroy();\n\t\t\tPopupManager.getPopupById(PopupType.userProfile)?.close();\n\t\t\tDesktopApi.openAddAccountTab();\n\t\t},\n\t\tonContextMenuClick(event: { account: DesktopAccount, target: HTMLElement })\n\t\t{\n\t\t\tconst { account, target } = event;\n\t\t\tthis.contextMenu.openMenu(account, target);\n\t\t\tthis.$emit('openContextMenu');\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-desktop-connection-list__container bx-im-desktop-connection-list__scope\">\n\t\t\t<div class=\"bx-im-desktop-connection-list__header\">\n\t\t\t\t<span class=\"bx-im-desktop-connection-list__title\">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_USER_SETTINGS_CONNECTED_BITRIX24') }}\n\t\t\t\t</span>\n\t\t\t\t<span class=\"bx-im-desktop-connection-list__add\" @click=\"openLoginTab\">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_USER_SETTINGS_CONNECT_BITRIX24') }}\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-desktop-connection-list__items\">\n\t\t\t\t<DesktopAccountItem \n\t\t\t\t\tv-for=\"account in accounts\" \n\t\t\t\t\t:account=\"account\" \n\t\t\t\t\t@contextMenuClick=\"onContextMenuClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n","import { MenuManager } from 'main.popup';\n\nimport { Core } from 'im.v2.application.core';\nimport { ChatAvatar, AvatarSize, UserStatus, UserStatusSize, ScrollWithGradient } from 'im.v2.component.elements';\nimport { DesktopApi, DesktopFeature } from 'im.v2.lib.desktop-api';\nimport { Utils } from 'im.v2.lib.utils';\nimport { PopupType, Settings, UserStatus as UserStatusType } from 'im.v2.const';\n\nimport { ButtonPanel } from './button-panel';\nimport { UserStatusPopup } from '../status/user-status-popup';\nimport { DesktopAccountList } from './desktop-account-list/desktop-account-list';\n\nimport 'ui.buttons';\nimport 'ui.feedback.form';\n\nimport type { ImModelUser } from 'im.v2.model';\n\n// @vue/component\nexport const UserSettingsContent = {\n\tname: 'UserSettingsContent',\n\tcomponents: { ChatAvatar, UserStatus, ButtonPanel, UserStatusPopup, DesktopAccountList, ScrollWithGradient },\n\temits: ['closePopup', 'enableAutoHide', 'disableAutoHide'],\n\tdata(): Object\n\t{\n\t\treturn {\n\t\t\tshowStatusPopup: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tUserStatusSize: () => UserStatusSize,\n\t\tcurrentUserId(): number\n\t\t{\n\t\t\treturn Core.getUserId();\n\t\t},\n\t\tcurrentUserDialogId(): string\n\t\t{\n\t\t\treturn this.currentUserId.toString();\n\t\t},\n\t\tcurrentUser(): ImModelUser\n\t\t{\n\t\t\treturn this.$store.getters['users/get'](this.currentUserId, true);\n\t\t},\n\t\tcurrentUserPosition(): string\n\t\t{\n\t\t\treturn this.$store.getters['users/getPosition'](this.currentUserId);\n\t\t},\n\t\tuserStatus(): string\n\t\t{\n\t\t\tconst status = this.$store.getters['application/settings/get'](Settings.user.status);\n\t\t\tif (status)\n\t\t\t{\n\t\t\t\treturn status;\n\t\t\t}\n\n\t\t\treturn UserStatusType.online;\n\t\t},\n\t\tcurrentHost(): string\n\t\t{\n\t\t\treturn location.hostname;\n\t\t},\n\t\tuserStatusText(): string\n\t\t{\n\t\t\treturn Utils.user.getStatusText(this.userStatus);\n\t\t},\n\t\tisDesktopAccountManagementAvailable(): boolean\n\t\t{\n\t\t\treturn DesktopApi.isFeatureSupported(DesktopFeature.accountManagement.id);\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonStatusClick()\n\t\t{\n\t\t\tthis.showStatusPopup = true;\n\t\t\tthis.$emit('disableAutoHide');\n\t\t},\n\t\tonStatusPopupClose()\n\t\t{\n\t\t\tthis.showStatusPopup = false;\n\t\t\tthis.$emit('enableAutoHide');\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t\tonScroll()\n\t\t{\n\t\t\tMenuManager.getMenuById(PopupType.desktopItemMenu)?.close();\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-user-settings-popup__scope bx-im-user-settings-popup__container\">\n\t\t\t<div class=\"bx-im-user-settings-popup__header\">\n\t\t\t\t<div class=\"bx-im-user-settings-popup__header_left\">\n\t\t\t\t\t<ChatAvatar \n\t\t\t\t\t\t:avatarDialogId=\"currentUserDialogId\" \n\t\t\t\t\t\t:contextDialogId=\"currentUserDialogId\" \n\t\t\t\t\t\t:size=\"AvatarSize.XL\" \n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-user-settings-popup__header_right\">\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__domain\">{{ currentHost }}</div>\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__user_name\" :title=\"currentUser.name\">{{ currentUser.name }}</div>\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__user_title\" :title=\"currentUserPosition\">{{ currentUserPosition }}</div>\n\t\t\t\t\t<ButtonPanel @openProfile=\"$emit('closePopup')\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ScrollWithGradient :containerMaxHeight=\"328\" :gradientHeight=\"24\" @scroll=\"onScroll\">\n\t\t\t\t<div class=\"bx-im-user-settings-popup__list\">\n\t\t\t\t\t<div class=\"bx-im-user-settings-popup__separator\"></div>\n\t\t\t\t\t<!-- Status select -->\n\t\t\t\t\t<div @click=\"onStatusClick\" class=\"bx-im-user-settings-popup__list-item --with-icon\">\n\t\t\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_left\">\n\t\t\t\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_status\">\n\t\t\t\t\t\t\t\t<UserStatus :status=\"userStatus\" :size=\"UserStatusSize.M\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_text\">{{ userStatusText }}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"bx-im-user-settings-popup__list-item_icon --chevron\" ref=\"status-select\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-user-settings-popup__separator\"></div>\n\t\t\t\t<DesktopAccountList \n\t\t\t\t\tv-if=\"isDesktopAccountManagementAvailable\"\n\t\t\t\t\t@openContextMenu=\"$emit('disableAutoHide')\"\n\t\t\t\t/>\n\t\t\t</ScrollWithGradient>\n\t\t</div>\n\t\t<UserStatusPopup\n\t\t\tv-if=\"showStatusPopup\"\n\t\t\t:bindElement=\"$refs['status-select'] || {}\"\n\t\t\t@close=\"onStatusPopupClose\"\n\t\t/>\n\t`,\n};\n","import { MessengerPopup } from 'im.v2.component.elements';\n\nimport { UserSettingsContent } from './user-settings-content';\n\nimport type { JsonObject } from 'main.core';\n\nconst POPUP_ID = 'im-user-settings-popup';\n\n// @vue/component\nexport const UserSettingsPopup = {\n\tname: 'UserSettingsPopup',\n\tcomponents: { MessengerPopup, UserSettingsContent },\n\tprops:\n\t{\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close'],\n\tcomputed:\n\t{\n\t\tPOPUP_ID: () => POPUP_ID,\n\t\tconfig(): JsonObject\n\t\t{\n\t\t\treturn {\n\t\t\t\twidth: 313,\n\t\t\t\tbindElement: this.bindElement,\n\t\t\t\toffsetTop: 4,\n\t\t\t\tpadding: 0,\n\t\t\t};\n\t\t},\n\t},\n\ttemplate: `\n\t\t<MessengerPopup\n\t\t\tv-slot=\"{enableAutoHide, disableAutoHide}\"\n\t\t\t:config=\"config\"\n\t\t\t@close=\"$emit('close')\"\n\t\t\t:id=\"POPUP_ID\"\n\t\t>\n\t\t\t<UserSettingsContent \n\t\t\t\t@closePopup=\"$emit('close')\" \n\t\t\t\t@enableAutoHide=\"enableAutoHide\" \n\t\t\t\t@disableAutoHide=\"disableAutoHide\" \n\t\t\t/>\n\t\t</MessengerPopup>\n\t`,\n};\n","import { Core } from 'im.v2.application.core';\nimport { Settings, UserStatus as UserStatusType } from 'im.v2.const';\nimport { ChatAvatar, AvatarSize } from 'im.v2.component.elements';\n\nimport { UserSettingsPopup } from './settings/user-settings-popup';\nimport { UserStatusPopup } from './status/user-status-popup';\n\nimport '../css/user-settings.css';\nimport '../css/user-status.css';\n\n// @vue/component\nexport const UserSettings = {\n\tname: 'UserSettings',\n\tcomponents: { UserSettingsPopup, UserStatusPopup, ChatAvatar },\n\tdata(): Object\n\t{\n\t\treturn {\n\t\t\tshowSettingsPopup: false,\n\t\t\tshowStatusPopup: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tcurrentUserDialogId(): string\n\t\t{\n\t\t\treturn Core.getUserId().toString();\n\t\t},\n\t\tuserStatus(): string\n\t\t{\n\t\t\tconst status = this.$store.getters['application/settings/get'](Settings.user.status);\n\t\t\tif (status)\n\t\t\t{\n\t\t\t\treturn status;\n\t\t\t}\n\n\t\t\treturn UserStatusType.online;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonAvatarClick()\n\t\t{\n\t\t\tthis.showSettingsPopup = true;\n\t\t},\n\t\tonStatusClick()\n\t\t{\n\t\t\tthis.showStatusPopup = true;\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-navigation__user\">\n\t\t\t<div @click=\"onAvatarClick\" class=\"bx-im-navigation__user_avatar\" ref=\"avatar\">\n\t\t\t\t<ChatAvatar \n\t\t\t\t\t:avatarDialogId=\"currentUserDialogId\"\n\t\t\t\t\t:contextDialogId=\"currentUserDialogId\" \n\t\t\t\t\t:size=\"AvatarSize.M\" \n\t\t\t\t/>\n\t\t\t\t<div @click.stop=\"onStatusClick\" :class=\"'--' + userStatus\" class=\"bx-im-navigation__user_status\" ref=\"status\"></div>\n\t\t\t</div>\n\t\t\t<UserStatusPopup\n\t\t\t\tv-if=\"showStatusPopup\"\n\t\t\t\t:bindElement=\"$refs['status'] || {}\"\n\t\t\t\t@close=\"showStatusPopup = false\"\n\t\t\t/>\n\t\t\t<UserSettingsPopup\n\t\t\t\tv-if=\"showSettingsPopup\"\n\t\t\t\t:bindElement=\"$refs['avatar'] || {}\"\n\t\t\t\t@close=\"showSettingsPopup = false\" \n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import 'ui.fontawesome4';\n\nimport {Core} from 'im.v2.application.core';\nimport {Layout, PlacementType} from 'im.v2.const';\nimport {MarketManager} from 'im.v2.lib.market';\n\nimport type {ImModelMarketApplication, ImModelLayout} from 'im.v2.model';\n\nexport type MarketMenuItem = {\n\tid: string,\n\ttext: string,\n\tcounter: number,\n\tactive: boolean,\n\ticonName: string,\n\tloadConfiguration?: ImModelMarketApplication['loadConfiguration']\n};\n\n// @vue/component\nexport const MarketApps = {\n\tname: 'MarketApps',\n\temits: ['clickMarketItem'],\n\tcomputed:\n\t{\n\t\tmarketMenuItems(): MarketMenuItem[]\n\t\t{\n\t\t\tconst navigationApps = MarketManager.getInstance().getAvailablePlacementsByType(PlacementType.navigation);\n\n\t\t\treturn navigationApps.map((item: ImModelMarketApplication) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: item.id,\n\t\t\t\t\ttext: item.title,\n\t\t\t\t\tcounter: 0,\n\t\t\t\t\tactive: true,\n\t\t\t\t\ticonName: item.options.iconName ? item.options.iconName : '',\n\t\t\t\t\tloadConfiguration: item.loadConfiguration\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tcanShowMarket(): boolean\n\t\t{\n\t\t\treturn Core.isCloud();\n\t\t}\n\t},\n\tmethods:\n\t{\n\t\tonMarketClick()\n\t\t{\n\t\t\tMarketManager.openMarketplace();\n\t\t},\n\t\tonMarketItemClick(item: MarketMenuItem)\n\t\t{\n\t\t\tthis.$emit('clickMarketItem', {\n\t\t\t\tlayoutName: Layout.market.name,\n\t\t\t\tlayoutEntityId: item.id\n\t\t\t});\n\t\t},\n\t\tgetMenuItemClasses(item: MarketMenuItem)\n\t\t{\n\t\t\treturn {\n\t\t\t\t'--selected': this.isItemSelected(item.id),\n\t\t\t\t'--active': item.active\n\t\t\t};\n\t\t},\n\t\tisItemSelected(itemId: string): boolean\n\t\t{\n\t\t\treturn this.layout.name === Layout.market.name && this.layout.entityId === itemId;\n\t\t},\n\t\tgetIconClassNames(item: MarketMenuItem): string\n\t\t{\n\t\t\treturn item.iconName.toString();\n\t\t}\n\t},\n\ttemplate: `\n\t\t<div\n\t\t\tv-if=\"canShowMarket\"\n\t\t\t@click=\"onMarketClick\"\n\t\t\tclass=\"bx-im-navigation__item_container\"\n\t\t>\n\t\t\t<div class=\"bx-im-navigation__item --active\">\n\t\t\t\t<div class=\"bx-im-navigation__item_icon --market\"></div>\n\t\t\t\t<div class=\"bx-im-navigation__item_text\" :title=\"$Bitrix.Loc.getMessage('IM_NAVIGATION_MARKET_TITLE')\">\n\t\t\t\t\t{{ $Bitrix.Loc.getMessage('IM_NAVIGATION_MARKET_TITLE') }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tv-for=\"item in marketMenuItems\"\n\t\t\t@click=\"onMarketItemClick(item)\"\n\t\t\tclass=\"bx-im-navigation__item_container\"\n\t\t>\n\t\t\t<div :class=\"getMenuItemClasses(item)\" class=\"bx-im-navigation__item\">\n\t\t\t\t<div class=\"bx-im-navigation__market-item_icon-container\">\n\t\t\t\t\t<i \n\t\t\t\t\t\tclass=\"bx-im-navigation__market-item_icon fa\" \n\t\t\t\t\t\t:class=\"getIconClassNames(item)\" \n\t\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\t></i>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-navigation__item_text\" :title=\"item.text\">{{item.text}}</div>\n\t\t\t</div>\n\t\t</div>\n\t`\n};","import { Type } from 'main.core';\nimport { hint } from 'ui.vue3.directives.hint';\nimport { MessageBox, MessageBoxButtons } from 'ui.dialogs.messagebox';\nimport { FeaturePromoter } from 'ui.info-helper';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { MessengerSlider } from 'im.v2.lib.slider';\nimport { CallManager } from 'im.v2.lib.call';\nimport { Layout, SliderCode } from 'im.v2.const';\nimport { DesktopApi } from 'im.v2.lib.desktop-api';\nimport { PhoneManager } from 'im.v2.lib.phone';\nimport { Feature, FeatureManager } from 'im.v2.lib.feature';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { UserSettings } from './components/user-settings';\nimport { MarketApps } from './components/market-apps';\n\nimport './css/navigation.css';\n\nimport type { JsonObject } from 'main.core';\n\ntype MenuItem = {\n\tid: string,\n\ttext: string,\n\tactive?: boolean,\n\tcounter?: number,\n\tclickHandler?: (clickTarget: HTMLElement) => void,\n\tshowCondition?: () => boolean,\n};\n\n// @vue/component\nexport const MessengerNavigation = {\n\tname: 'MessengerNavigation',\n\tdirectives: { hint },\n\tcomponents: { UserSettings, MarketApps },\n\tprops: {\n\t\tcurrentLayoutName: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['navigationClick'],\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tneedTopShadow: false,\n\t\t\tneedBottomShadow: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tmenuItems(): MenuItem[]\n\t\t{\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tid: Layout.chat.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_CHATS'),\n\t\t\t\t\tcounter: this.formatCounter(this.$store.getters['counters/getTotalChatCounter']),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: Layout.copilot.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_COPILOT'),\n\t\t\t\t\tcounter: this.formatCounter(this.$store.getters['counters/getTotalCopilotCounter']),\n\t\t\t\t\tclickHandler: this.onCopilotClick,\n\t\t\t\t\tshowCondition: () => FeatureManager.isFeatureAvailable(Feature.copilotAvailable),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: Layout.channel.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_CHANNELS'),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: Layout.openlines.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_OPENLINES'),\n\t\t\t\t\tcounter: this.formatCounter(this.$store.getters['counters/getTotalLinesCounter']),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: Layout.notification.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_NOTIFICATIONS'),\n\t\t\t\t\tcounter: this.formatCounter(this.$store.getters['notifications/getCounter']),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: Layout.call.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_CALLS_V2'),\n\t\t\t\t\tclickHandler: this.onCallClick,\n\t\t\t\t\tshowCondition: PhoneManager.getInstance().canCall.bind(PhoneManager.getInstance()),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'timemanager',\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_TIMEMANAGER'),\n\t\t\t\t\tclickHandler: this.onTimeManagerClick,\n\t\t\t\t\tshowCondition: this.isTimeManagerActive,\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: 'market',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: Layout.settings.name,\n\t\t\t\t\ttext: this.prepareNavigationText('IM_NAVIGATION_SETTINGS'),\n\t\t\t\t\tactive: true,\n\t\t\t\t},\n\t\t\t];\n\t\t},\n\t\tshowCloseIcon(): boolean\n\t\t{\n\t\t\treturn !DesktopApi.isChatTab();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tLogger.warn('Navigation created');\n\t},\n\tmounted()\n\t{\n\t\tconst container = this.$refs.navigation;\n\t\tthis.needBottomShadow = container.scrollTop + container.clientHeight !== container.scrollHeight;\n\t},\n\tmethods:\n\t{\n\t\tonMenuItemClick(item: MenuItem, event: PointerEvent)\n\t\t{\n\t\t\tif (!item.active)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (Type.isFunction(item.clickHandler))\n\t\t\t{\n\t\t\t\titem.clickHandler(event.target);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.sendClickEvent({ layoutName: item.id });\n\t\t},\n\t\tsendClickEvent({ layoutName, layoutEntityId = '' })\n\t\t{\n\t\t\tthis.$emit('navigationClick', { layoutName, layoutEntityId });\n\t\t},\n\t\tcloseSlider()\n\t\t{\n\t\t\tconst hasCall = CallManager.getInstance().hasCurrentCall();\n\t\t\tif (hasCall)\n\t\t\t{\n\t\t\t\tthis.showExitConfirm();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tMessengerSlider.getInstance().getCurrent().close();\n\t\t},\n\t\tgetMenuItemClasses(item: MenuItem): Object<string, boolean>\n\t\t{\n\t\t\treturn {\n\t\t\t\t'--selected': item.id === this.currentLayoutName,\n\t\t\t\t'--with-counter': item.counter && item.id !== this.currentLayoutName,\n\t\t\t\t'--active': item.active,\n\t\t\t};\n\t\t},\n\t\tformatCounter(counter: number): string\n\t\t{\n\t\t\tif (counter === 0)\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn counter > 99 ? '99+' : String(counter);\n\t\t},\n\t\tgetHintContent(item: MenuItem): ?{text: string, popupOptions: Object<string, any>}\n\t\t{\n\t\t\tif (item.active)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttext: this.loc('IM_MESSENGER_NOT_AVAILABLE'),\n\t\t\t\tpopupOptions: {\n\t\t\t\t\tangle: { position: 'left' },\n\t\t\t\t\ttargetContainer: document.body,\n\t\t\t\t\toffsetLeft: 80,\n\t\t\t\t\toffsetTop: -54,\n\t\t\t\t},\n\t\t\t};\n\t\t},\n\t\tprepareNavigationText(phraseCode: string): string\n\t\t{\n\t\t\treturn this.loc(phraseCode, {\n\t\t\t\t'#BR#': '</br>',\n\t\t\t});\n\t\t},\n\t\tshowExitConfirm()\n\t\t{\n\t\t\tMessageBox.show({\n\t\t\t\tmessage: this.loc('IM_NAVIGATION_ACTIVE_CALL_CONFIRM'),\n\t\t\t\tmodal: true,\n\t\t\t\tbuttons: MessageBoxButtons.OK_CANCEL,\n\t\t\t\tonOk: (messageBox: MessageBox) => {\n\t\t\t\t\tCallManager.getInstance().leaveCurrentCall();\n\t\t\t\t\tMessengerSlider.getInstance().getCurrent().close();\n\t\t\t\t\tmessageBox.close();\n\t\t\t\t},\n\t\t\t\tonCancel: (messageBox: MessageBox) => {\n\t\t\t\t\tmessageBox.close();\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tneedToShowMenuItem(item: MenuItem): boolean\n\t\t{\n\t\t\tif (!Type.isFunction(item.showCondition))\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn item.showCondition() === true;\n\t\t},\n\t\tonScroll(event: Event)\n\t\t{\n\t\t\tconst scrollPosition = Math.round(event.target.scrollTop + event.target.clientHeight);\n\t\t\tthis.needBottomShadow = scrollPosition !== event.target.scrollHeight;\n\n\t\t\tif (event.target.scrollTop === 0)\n\t\t\t{\n\t\t\t\tthis.needTopShadow = false;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.needTopShadow = true;\n\t\t},\n\t\tonClickScrollDown()\n\t\t{\n\t\t\tthis.$refs.navigation.scrollTo({\n\t\t\t\ttop: this.$refs.navigation.scrollHeight,\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t},\n\t\tonClickScrollUp()\n\t\t{\n\t\t\tthis.$refs.navigation.scrollTo({\n\t\t\t\ttop: 0,\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t},\n\t\tonCallClick(clickTarget: HTMLElement)\n\t\t{\n\t\t\tconst MENU_ITEM_CLASS = 'bx-im-navigation__item';\n\t\t\tconst KEYPAD_OFFSET_TOP = -30;\n\t\t\tconst KEYPAD_OFFSET_LEFT = 64;\n\n\t\t\tPhoneManager.getInstance().openKeyPad({\n\t\t\t\tbindElement: clickTarget.closest(`.${MENU_ITEM_CLASS}`),\n\t\t\t\toffsetTop: KEYPAD_OFFSET_TOP,\n\t\t\t\toffsetLeft: KEYPAD_OFFSET_LEFT,\n\t\t\t});\n\t\t},\n\t\tisTimeManagerActive(): boolean\n\t\t{\n\t\t\treturn Boolean(BX.Timeman?.Monitor?.isEnabled());\n\t\t},\n\t\tasync onTimeManagerClick()\n\t\t{\n\t\t\tBX.Timeman?.Monitor?.openReport();\n\t\t},\n\t\tonCopilotClick()\n\t\t{\n\t\t\tif (!FeatureManager.isFeatureAvailable(Feature.copilotActive))\n\t\t\t{\n\t\t\t\tconst promoter = new FeaturePromoter({ code: SliderCode.copilotDisabled });\n\t\t\t\tpromoter.show();\n\t\t\t\tAnalytics.getInstance().onOpenCopilotTab({ isAvailable: false });\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.sendClickEvent({ layoutName: Layout.copilot.name });\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-navigation__scope bx-im-navigation__container\">\n\t\t\t<div v-if=\"needTopShadow\" class=\"bx-im-navigation__shadow --top\">\n\t\t\t\t<div class=\"bx-im-navigation__scroll-button\" @click=\"onClickScrollUp\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"bx-im-navigation__top\" @scroll=\"onScroll\" ref=\"navigation\">\n\t\t\t\t<template v-if=\"showCloseIcon\">\n\t\t\t\t\t<!-- Close -->\n\t\t\t\t\t<div class=\"bx-im-navigation__close_container\" @click=\"closeSlider\">\n\t\t\t\t\t\t<div class=\"bx-im-navigation__close\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<!-- Separator -->\n\t\t\t\t\t<div class=\"bx-im-navigation__separator_container\">\n\t\t\t\t\t\t<div class=\"bx-im-navigation__close_separator\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t\t<!-- Menu items -->\n\t\t\t\t<template v-for=\"item in menuItems\">\n\t\t\t\t\t<MarketApps v-if=\"item.id === 'market'\" @clickMarketItem=\"sendClickEvent\"/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-else-if=\"needToShowMenuItem(item)\"\n\t\t\t\t\t\t:key=\"item.id\"\n\t\t\t\t\t\tv-hint=\"getHintContent(item)\"\n\t\t\t\t\t\t@click=\"onMenuItemClick(item, $event)\"\n\t\t\t\t\t\tclass=\"bx-im-navigation__item_container\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div :class=\"getMenuItemClasses(item)\" class=\"bx-im-navigation__item\">\n\t\t\t\t\t\t\t<div :class=\"'--' + item.id\" class=\"bx-im-navigation__item_icon\"></div>\n\t\t\t\t\t\t\t<div class=\"bx-im-navigation__item_text\" :title=\"item.text\" v-html=\"item.text\"></div>\n\t\t\t\t\t\t\t<div v-if=\"item.active && item.counter\" class=\"bx-im-navigation__item_counter\">\n\t\t\t\t\t\t\t\t<div class=\"bx-im-navigation__item_counter-text\">\n\t\t\t\t\t\t\t\t\t{{ item.counter }}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t\t<div v-if=\"needBottomShadow\" class=\"bx-im-navigation__shadow --bottom\">\n\t\t\t\t<div class=\"bx-im-navigation__scroll-button --bottom\" @click=\"onClickScrollDown\"></div>\n\t\t\t</div>\n\t\t\t<!-- Avatar -->\n\t\t\t<div class=\"bx-im-navigation__user_container\">\n\t\t\t\t<UserSettings />\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n"],"names":["ButtonPanel","name","components","ChatButton","emits","computed","ButtonSize","ButtonColor","currentUserId","Core","getUserId","profileUri","Utils","user","getProfileLink","isDesktop","DesktopApi","methods","loc","phraseCode","$Bitrix","Loc","getMessage","onLogoutClick","logout","template","StatusService","constructor","store","restClient","getStore","getRestClient","changeStatus","status","UserStatus","Logger","warn","dispatch","callMethod","RestMethod","imUserStatusSet","STATUS","catch","error","console","UserStatusContent","UserStatusSize","UserStatusType","statusList","online","dnd","onStatusClick","statusName","getStatusService","$emit","statusService","getStatusText","POPUP_ID","UserStatusPopup","MessengerPopup","props","bindElement","type","Object","required","config","width","offsetTop","padding","DesktopItemContextMenu","BaseMenu","id","PopupType","desktopItemMenu","getMenuItems","close","PopupManager","getPopupById","userProfile","setAutoHide","title","context","connected","text","onclick","menuInstance","bind","userChoice","showDesktopDeleteConfirm","deleteAccount","host","login","protocol","userLang","navigator","language","connectAccount","disconnectAccount","DesktopAccountItem","account","data","errorLoadAvatar","accountItem","avatarUrl","hasAvatar","avatar","startsWith","isConnected","onContextMenuClick","event","target","onDomainClick","DesktopManager","getInstance","openAccountTab","portal","onError","DesktopAccountList","accounts","isEmptyState","length","created","contextMenu","getAccountList","beforeUnmount","destroy","openLoginTab","openAddAccountTab","openMenu","UserSettingsContent","ChatAvatar","ScrollWithGradient","showStatusPopup","AvatarSize","currentUserDialogId","toString","currentUser","$store","getters","currentUserPosition","userStatus","Settings","currentHost","location","hostname","userStatusText","isDesktopAccountManagementAvailable","isFeatureSupported","DesktopFeature","accountManagement","onStatusPopupClose","onScroll","MenuManager","getMenuById","UserSettingsPopup","UserSettings","showSettingsPopup","onAvatarClick","MarketApps","marketMenuItems","navigationApps","MarketManager","getAvailablePlacementsByType","PlacementType","navigation","map","item","counter","active","iconName","options","loadConfiguration","layout","canShowMarket","isCloud","onMarketClick","openMarketplace","onMarketItemClick","layoutName","Layout","market","layoutEntityId","getMenuItemClasses","isItemSelected","itemId","entityId","getIconClassNames","MessengerNavigation","directives","hint","currentLayoutName","String","needTopShadow","needBottomShadow","menuItems","chat","prepareNavigationText","formatCounter","copilot","clickHandler","onCopilotClick","showCondition","FeatureManager","isFeatureAvailable","Feature","copilotAvailable","channel","openlines","notification","call","onCallClick","PhoneManager","canCall","onTimeManagerClick","isTimeManagerActive","settings","showCloseIcon","isChatTab","mounted","container","$refs","scrollTop","clientHeight","scrollHeight","onMenuItemClick","Type","isFunction","sendClickEvent","closeSlider","hasCall","CallManager","hasCurrentCall","showExitConfirm","MessengerSlider","getCurrent","getHintContent","popupOptions","angle","position","targetContainer","document","body","offsetLeft","MessageBox","show","message","modal","buttons","MessageBoxButtons","OK_CANCEL","onOk","messageBox","leaveCurrentCall","onCancel","needToShowMenuItem","scrollPosition","Math","round","onClickScrollDown","scrollTo","top","behavior","onClickScrollUp","clickTarget","MENU_ITEM_CLASS","KEYPAD_OFFSET_TOP","KEYPAD_OFFSET_LEFT","openKeyPad","closest","Boolean","BX","Timeman","Monitor","isEnabled","openReport","copilotActive","promoter","FeaturePromoter","code","SliderCode","copilotDisabled","Analytics","onOpenCopilotTab","isAvailable","replacements"],"mappings":";;;;;;;CAKA;AACA,CAAO,MAAMA,WAAW,GAAG;GAC1BC,IAAI,EAAE,aAAa;GACnBC,UAAU,EAAE;iBAAEC;IAAY;GAC1BC,KAAK,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC;GAChCC,QAAQ,EACR;KACCC,UAAU,EAAE,MAAMA,mCAAU;KAC5BC,WAAW,EAAE,MAAMA,oCAAW;KAC9BC,aAAa,GACb;OACC,OAAOC,2BAAI,CAACC,SAAS,EAAE;MACvB;KACDC,UAAU,GACV;OACC,OAAOC,qBAAK,CAACC,IAAI,CAACC,cAAc,CAAC,IAAI,CAACN,aAAa,CAAC;MACpD;KACDO,SAAS,GACT;OACC,OAAOC,+BAAU,CAACD,SAAS,EAAE;;IAE9B;GACDE,OAAO,EACP;KACCC,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;MAC9C;KACDI,aAAa,GACb;OACC,KAAKP,+BAAU,CAACQ,MAAM,EAAE;;IAEzB;GACDC,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;CAuBZ,CAAC;;CCzDM,MAAMC,aAAa,CAC1B;GAICC,WAAW,GACX;KAAA,KAJAC,KAAK,GAAW,IAAI;KAAA,KACpBC,UAAU,GAAW,IAAI;KAIxB,IAAI,CAACD,KAAK,GAAGnB,2BAAI,CAACqB,QAAQ,EAAE;KAC5B,IAAI,CAACD,UAAU,GAAGpB,2BAAI,CAACsB,aAAa,EAAE;;GAGvCC,YAAY,CAACC,MAAc,EAC3B;KACC,IAAI,CAACC,sBAAU,CAACD,MAAM,CAAC,EACvB;OACC,OAAO,KAAK;;KAGbE,uBAAM,CAACC,IAAI,CAAE,gDAA+CH,MAAO,EAAC,CAAC;KACrE,IAAI,CAACL,KAAK,CAACS,QAAQ,CAAC,iBAAiB,EAAE;OAAEJ;MAAQ,CAAC;KAClD,IAAI,CAACL,KAAK,CAACS,QAAQ,CAAC,0BAA0B,EAAE;OAAEJ;MAAQ,CAAC;KAE3D,OAAO,IAAI,CAACJ,UAAU,CAACS,UAAU,CAACC,sBAAU,CAACC,eAAe,EAAE;OAC7DC,MAAM,EAAER;MACR,CAAC,CAACS,KAAK,CAAEC,KAAK,IAAK;;OAEnBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,CAAC;;CAEJ;;CC3BA;AACA,CAAO,MAAME,iBAAiB,GAAG;GAChC5C,IAAI,EAAE,mBAAmB;GACzBC,UAAU,EAAE;iBAACgC;IAAW;GACxB9B,KAAK,EAAE,CAAC,OAAO,CAAC;GAChBC,QAAQ,EACR;KACCyC,cAAc,EAAE,MAAMA,uCAAc;KACpCC,cAAc,EAAE,MAAMA,sBAAc;KACpCC,UAAU,GACV;OACC,OAAO,CAACD,sBAAc,CAACE,MAAM,EAAEF,sBAAc,CAACG,GAAG,CAAC;;IAEnD;GACDjC,OAAO,EACP;KACCkC,aAAa,CAACC,UAAkB,EAChC;OACC,IAAI,CAACC,gBAAgB,EAAE,CAACrB,YAAY,CAACoB,UAAU,CAAC;OAChD,IAAI,CAACE,KAAK,CAAC,OAAO,CAAC;MACnB;KACDD,gBAAgB,GAChB;OACC,IAAI,CAAC,IAAI,CAACE,aAAa,EACvB;SACC,IAAI,CAACA,aAAa,GAAG,IAAI7B,aAAa,EAAE;;OAGzC,OAAO,IAAI,CAAC6B,aAAa;MACzB;KACDC,aAAa,CAACvB,MAAc,EAC5B;OACC,OAAOrB,qBAAK,CAACC,IAAI,CAAC2C,aAAa,CAACvB,MAAM,CAAC;;IAExC;GACDR,QAAQ,EACP;;;;;;;;;;;;;CAaF,CAAC;;CCnDD,MAAMgC,QAAQ,GAAG,sBAAsB;;CAEvC;AACA,CAAO,MAAMC,eAAe,GAAG;GAC9BzD,IAAI,EAAE,iBAAiB;GACvBC,UAAU,EAAE;qBAACyD,uCAAc;KAAEd;IAAkB;GAC/Ce,KAAK,EACL;KACCC,WAAW,EAAE;OACZC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;;IAEX;GACD5D,KAAK,EAAE,CAAC,OAAO,CAAC;GAChBC,QAAQ,EACR;KACCoD,QAAQ,EAAE,MAAMA,QAAQ;KACxBQ,MAAM,GACN;OACC,OAAO;SACNC,KAAK,EAAE,GAAG;SACVL,WAAW,EAAE,IAAI,CAACA,WAAW;SAC7BM,SAAS,EAAE,CAAC;SACZC,OAAO,EAAE;QACT;;IAEF;GACD3C,QAAQ,EAAG;;;;;;;;;CASZ,CAAC;;CClC4D;CAAA;CAAA;CAAA;AAK7D,CAAO,MAAM4C,sBAAsB,SAASC,uBAAQ,CACpD;GAGC3C,WAAW,GACX;KACC,KAAK,EAAE;KAAC;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KAAA;OAAA;;KACR,IAAI,CAAC4C,EAAE,GAAGC,qBAAS,CAACC,eAAe;;GAGpCC,YAAY,GACZ;KACC,OAAO,yCACN,IAAI,+EACJ,IAAI,oCACJ;;GAwDFC,KAAK,GACL;KAAA;KACC,yBAAAC,uBAAY,CAACC,YAAY,CAACL,qBAAS,CAACM,WAAW,CAAC,qBAAhD,sBAAkDC,WAAW,CAAC,IAAI,CAAC;KACnE,KAAK,CAACJ,KAAK,EAAE;;CAEf;CAAC,4BAzDA;GACC,MAAMK,KAAK,GAAG,IAAI,CAACC,OAAO,CAACC,SAAS,GACjC7D,aAAG,CAACC,UAAU,CAAC,qDAAqD,CAAC,GACrED,aAAG,CAACC,UAAU,CAAC,kDAAkD,CAAC;GAGrE,OAAO;KACN6D,IAAI,EAAEH,KAAK;KACXI,OAAO,EAAE,YAAW;OAAA;OACnB,IAAI,IAAI,CAACH,OAAO,CAACC,SAAS,EAC1B;SACC,4CAAI;QACJ,MAED;SACC,4CAAI;;OAEL,IAAI,CAACG,YAAY,CAACV,KAAK,EAAE;OACzB,0BAAAC,uBAAY,CAACC,YAAY,CAACL,qBAAS,CAACM,WAAW,CAAC,qBAAhD,uBAAkDH,KAAK,EAAE;MACzD,CAACW,IAAI,CAAC,IAAI;IACX;CACF;CAAC,2BAGD;GACC,OAAO;KACNH,IAAI,EAAE9D,aAAG,CAACC,UAAU,CAAC,iDAAiD,CAAC;KACvE8D,OAAO,EAAE,kBAAiB;OACzB,MAAMG,UAAU,GAAG,MAAMC,0CAAwB,EAAE;OACnD,IAAID,UAAU,KAAK,IAAI,EACvB;SAAA;SACCvE,+BAAU,CAACyE,aAAa,CAAC,IAAI,CAACR,OAAO,CAACS,IAAI,EAAE,IAAI,CAACT,OAAO,CAACU,KAAK,CAAC;SAC/D,0BAAAf,uBAAY,CAACC,YAAY,CAACL,qBAAS,CAACM,WAAW,CAAC,qBAAhD,uBAAkDH,KAAK,EAAE;;MAE1D,CAACW,IAAI,CAAC,IAAI;IACX;CACF;CAAC,qBAGD;GACC,MAAM;KAAEI,IAAI;KAAEC,KAAK;KAAEC;IAAU,GAAG,IAAI,CAACX,OAAO;GAE9C,MAAMY,QAAQ,GAAGC,SAAS,CAACC,QAAQ;GACnC/E,+BAAU,CAACgF,cAAc,CAACN,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;CAC3D;CAAC,wBAGD;GACC,MAAM;KAAEH;IAAM,GAAG,IAAI,CAACT,OAAO;GAC7BjE,+BAAU,CAACiF,iBAAiB,CAACP,IAAI,CAAC;CACnC;;CCzED;AACA,CAAO,MAAMQ,kBAAkB,GAAG;GACjCjG,IAAI,EAAE,oBAAoB;GAC1B2D,KAAK,EACL;KACCuC,OAAO,EAAE;OACRrC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;;IAEX;GACD5D,KAAK,EAAE,CAAC,kBAAkB,CAAC;GAC3BgG,IAAI,GACJ;KACC,OAAO;OACNC,eAAe,EAAE;MACjB;IACD;GACDhG,QAAQ,EACR;KACCiG,WAAW,GACX;OACC,OAAO,IAAI,CAACH,OAAO;MACnB;KACDI,SAAS,GACT;OACC,IAAI,IAAI,CAACF,eAAe,IAAI,CAAC,IAAI,CAACG,SAAS,EAC3C;SACC,OAAO,EAAE;;OAGV,IAAI,IAAI,CAACF,WAAW,CAACG,MAAM,CAACC,UAAU,CAAC,MAAM,CAAC,EAC9C;SACC,OAAO,IAAI,CAACJ,WAAW,CAACG,MAAM;;OAG/B,OAAQ,GAAE,IAAI,CAACH,WAAW,CAACV,QAAS,MAAK,IAAI,CAACU,WAAW,CAACZ,IAAK,GAAE,IAAI,CAACY,WAAW,CAACG,MAAO,EAAC;MAC1F;KACDE,WAAW,GACX;OACC,OAAO,IAAI,CAACL,WAAW,CAACpB,SAAS;MACjC;KACDsB,SAAS,GACT;OACC,OAAO,IAAI,CAACF,WAAW,CAACG,MAAM,IAAI,IAAI,CAACH,WAAW,CAACG,MAAM,KAAK,gCAAgC;;IAE/F;GACDxF,OAAO,EACP;KACC2F,kBAAkB,CAACC,KAAK,EACxB;OACC,IAAI,CAACvD,KAAK,CAAC,kBAAkB,EAAE;SAC9B6C,OAAO,EAAE,IAAI,CAACA,OAAO;SACrBW,MAAM,EAAED,KAAK,CAACC;QACd,CAAC;MACF;KACDC,aAAa,GACb;OACC,IAAI,CAAC,IAAI,CAACJ,WAAW,EACrB;SACC;;OAGDK,gCAAc,CAACC,WAAW,EAAE,CAACC,cAAc,CAAC,IAAI,CAACZ,WAAW,CAACa,MAAM,CAAC;MACpE;KACDC,OAAO,GACP;OACC,IAAI,CAACf,eAAe,GAAG,IAAI;;IAE5B;GACD5E,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;CAwBZ,CAAC;;CCxFD;AACA,CAAO,MAAM4F,kBAAkB,GAAG;GACjCpH,IAAI,EAAE,oBAAoB;GAC1BC,UAAU,EAAE;KAAEgG;IAAoB;GAClC9F,KAAK,EAAE,CAAC,iBAAiB,CAAC;GAC1BgG,IAAI,GACJ;KACC,OAAO;OACNkB,QAAQ,EAAE;MACV;IACD;GACDjH,QAAQ,EACR;KACCkH,YAAY,GACZ;OACC,OAAO,IAAI,CAACD,QAAQ,CAACE,MAAM,KAAK,CAAC;;IAElC;GACDC,OAAO,GACP;KACC,IAAI,CAACC,WAAW,GAAG,IAAIrD,sBAAsB,EAAE;KAC/C,IAAI,CAACiD,QAAQ,GAAGtG,+BAAU,CAAC2G,cAAc,EAAE;IAC3C;GACDC,aAAa,GACb;KACC,IAAI,CAACF,WAAW,CAACG,OAAO,EAAE;IAC1B;GACD5G,OAAO,EACP;KACC6G,YAAY,GACZ;OAAA;OACC,IAAI,CAACJ,WAAW,CAACG,OAAO,EAAE;OAC1B,yBAAAjD,uBAAY,CAACC,YAAY,CAACL,qBAAS,CAACM,WAAW,CAAC,qBAAhD,sBAAkDH,KAAK,EAAE;OACzD3D,+BAAU,CAAC+G,iBAAiB,EAAE;MAC9B;KACDnB,kBAAkB,CAACC,KAAuD,EAC1E;OACC,MAAM;SAAEV,OAAO;SAAEW;QAAQ,GAAGD,KAAK;OACjC,IAAI,CAACa,WAAW,CAACM,QAAQ,CAAC7B,OAAO,EAAEW,MAAM,CAAC;OAC1C,IAAI,CAACxD,KAAK,CAAC,iBAAiB,CAAC;;IAE9B;GACD7B,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;CAmBZ,CAAC;;CCxDD;AACA,CAAO,MAAMwG,mBAAmB,GAAG;GAClChI,IAAI,EAAE,qBAAqB;GAC3BC,UAAU,EAAE;iBAAEgI,mCAAU;iBAAEhG,mCAAU;KAAElC,WAAW;KAAE0D,eAAe;KAAE2D,kBAAkB;yBAAEc;IAAoB;GAC5G/H,KAAK,EAAE,CAAC,YAAY,EAAE,gBAAgB,EAAE,iBAAiB,CAAC;GAC1DgG,IAAI,GACJ;KACC,OAAO;OACNgC,eAAe,EAAE;MACjB;IACD;GACD/H,QAAQ,EACR;KACCgI,UAAU,EAAE,MAAMA,mCAAU;KAC5BvF,cAAc,EAAE,MAAMA,uCAAc;KACpCtC,aAAa,GACb;OACC,OAAOC,2BAAI,CAACC,SAAS,EAAE;MACvB;KACD4H,mBAAmB,GACnB;OACC,OAAO,IAAI,CAAC9H,aAAa,CAAC+H,QAAQ,EAAE;MACpC;KACDC,WAAW,GACX;OACC,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAClI,aAAa,EAAE,IAAI,CAAC;MACjE;KACDmI,mBAAmB,GACnB;OACC,OAAO,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAClI,aAAa,CAAC;MACnE;KACDoI,UAAU,GACV;OACC,MAAM3G,MAAM,GAAG,IAAI,CAACwG,MAAM,CAACC,OAAO,CAAC,0BAA0B,CAAC,CAACG,oBAAQ,CAAChI,IAAI,CAACoB,MAAM,CAAC;OACpF,IAAIA,MAAM,EACV;SACC,OAAOA,MAAM;;OAGd,OAAOc,sBAAc,CAACE,MAAM;MAC5B;KACD6F,WAAW,GACX;OACC,OAAOC,QAAQ,CAACC,QAAQ;MACxB;KACDC,cAAc,GACd;OACC,OAAOrI,qBAAK,CAACC,IAAI,CAAC2C,aAAa,CAAC,IAAI,CAACoF,UAAU,CAAC;MAChD;KACDM,mCAAmC,GACnC;OACC,OAAOlI,+BAAU,CAACmI,kBAAkB,CAACC,mCAAc,CAACC,iBAAiB,CAAC9E,EAAE,CAAC;;IAE1E;GACDtD,OAAO,EACP;KACCkC,aAAa,GACb;OACC,IAAI,CAACiF,eAAe,GAAG,IAAI;OAC3B,IAAI,CAAC9E,KAAK,CAAC,iBAAiB,CAAC;MAC7B;KACDgG,kBAAkB,GAClB;OACC,IAAI,CAAClB,eAAe,GAAG,KAAK;OAC5B,IAAI,CAAC9E,KAAK,CAAC,gBAAgB,CAAC;MAC5B;KACDpC,GAAG,CAACC,UAAkB,EACtB;OACC,OAAO,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,CAAC;MAC9C;KACDoI,QAAQ,GACR;OAAA;OACC,yBAAAC,sBAAW,CAACC,WAAW,CAACjF,qBAAS,CAACC,eAAe,CAAC,qBAAlD,sBAAoDE,KAAK,EAAE;;IAE5D;GACDlD,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4CZ,CAAC;;CClID,MAAMgC,UAAQ,GAAG,wBAAwB;;CAEzC;AACA,CAAO,MAAMiG,iBAAiB,GAAG;GAChCzJ,IAAI,EAAE,mBAAmB;GACzBC,UAAU,EAAE;qBAAEyD,uCAAc;KAAEsE;IAAqB;GACnDrE,KAAK,EACL;KACCC,WAAW,EAAE;OACZC,IAAI,EAAEC,MAAM;OACZC,QAAQ,EAAE;;IAEX;GACD5D,KAAK,EAAE,CAAC,OAAO,CAAC;GAChBC,QAAQ,EACR;KACCoD,QAAQ,EAAE,MAAMA,UAAQ;KACxBQ,MAAM,GACN;OACC,OAAO;SACNC,KAAK,EAAE,GAAG;SACVL,WAAW,EAAE,IAAI,CAACA,WAAW;SAC7BM,SAAS,EAAE,CAAC;SACZC,OAAO,EAAE;QACT;;IAEF;GACD3C,QAAQ,EAAG;;;;;;;;;;;;;;CAcZ,CAAC;;CCrCD;AACA,CAAO,MAAMkI,YAAY,GAAG;GAC3B1J,IAAI,EAAE,cAAc;GACpBC,UAAU,EAAE;KAAEwJ,iBAAiB;KAAEhG,eAAe;iBAAEwE;IAAY;GAC9D9B,IAAI,GACJ;KACC,OAAO;OACNwD,iBAAiB,EAAE,KAAK;OACxBxB,eAAe,EAAE;MACjB;IACD;GACD/H,QAAQ,EACR;KACCgI,UAAU,EAAE,MAAMA,mCAAU;KAC5BC,mBAAmB,GACnB;OACC,OAAO7H,2BAAI,CAACC,SAAS,EAAE,CAAC6H,QAAQ,EAAE;MAClC;KACDK,UAAU,GACV;OACC,MAAM3G,MAAM,GAAG,IAAI,CAACwG,MAAM,CAACC,OAAO,CAAC,0BAA0B,CAAC,CAACG,oBAAQ,CAAChI,IAAI,CAACoB,MAAM,CAAC;OACpF,IAAIA,MAAM,EACV;SACC,OAAOA,MAAM;;OAGd,OAAOc,sBAAc,CAACE,MAAM;;IAE7B;GACDhC,OAAO,EACP;KACC4I,aAAa,GACb;OACC,IAAI,CAACD,iBAAiB,GAAG,IAAI;MAC7B;KACDzG,aAAa,GACb;OACC,IAAI,CAACiF,eAAe,GAAG,IAAI;;IAE5B;GACD3G,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;CAsBZ,CAAC;;CCvDD;AACA,CAAO,MAAMqI,UAAU,GAAG;GACzB7J,IAAI,EAAE,YAAY;GAClBG,KAAK,EAAE,CAAC,iBAAiB,CAAC;GAC1BC,QAAQ,EACR;KACC0J,eAAe,GACf;OACC,MAAMC,cAAc,GAAGC,8BAAa,CAAChD,WAAW,EAAE,CAACiD,4BAA4B,CAACC,yBAAa,CAACC,UAAU,CAAC;OAEzG,OAAOJ,cAAc,CAACK,GAAG,CAAEC,IAA8B,IAAK;SAC7D,OAAO;WACN/F,EAAE,EAAE+F,IAAI,CAAC/F,EAAE;WACXY,IAAI,EAAEmF,IAAI,CAACtF,KAAK;WAChBuF,OAAO,EAAE,CAAC;WACVC,MAAM,EAAE,IAAI;WACZC,QAAQ,EAAEH,IAAI,CAACI,OAAO,CAACD,QAAQ,GAAGH,IAAI,CAACI,OAAO,CAACD,QAAQ,GAAG,EAAE;WAC5DE,iBAAiB,EAAEL,IAAI,CAACK;UACxB;QACD,CAAC;MACF;KACDC,MAAM,GACN;OACC,OAAO,IAAI,CAACnC,MAAM,CAACC,OAAO,CAAC,uBAAuB,CAAC;MACnD;KACDmC,aAAa,GACb;OACC,OAAOpK,2BAAI,CAACqK,OAAO,EAAE;;IAEtB;GACD7J,OAAO,EACP;KACC8J,aAAa,GACb;OACCd,8BAAa,CAACe,eAAe,EAAE;MAC/B;KACDC,iBAAiB,CAACX,IAAoB,EACtC;OACC,IAAI,CAAChH,KAAK,CAAC,iBAAiB,EAAE;SAC7B4H,UAAU,EAAEC,kBAAM,CAACC,MAAM,CAACnL,IAAI;SAC9BoL,cAAc,EAAEf,IAAI,CAAC/F;QACrB,CAAC;MACF;KACD+G,kBAAkB,CAAChB,IAAoB,EACvC;OACC,OAAO;SACN,YAAY,EAAE,IAAI,CAACiB,cAAc,CAACjB,IAAI,CAAC/F,EAAE,CAAC;SAC1C,UAAU,EAAE+F,IAAI,CAACE;QACjB;MACD;KACDe,cAAc,CAACC,MAAc,EAC7B;OACC,OAAO,IAAI,CAACZ,MAAM,CAAC3K,IAAI,KAAKkL,kBAAM,CAACC,MAAM,CAACnL,IAAI,IAAI,IAAI,CAAC2K,MAAM,CAACa,QAAQ,KAAKD,MAAM;MACjF;KACDE,iBAAiB,CAACpB,IAAoB,EACtC;OACC,OAAOA,IAAI,CAACG,QAAQ,CAAClC,QAAQ,EAAE;;IAEhC;GACD9G,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA8BZ,CAAC;;CC5ED;AACA,OAAakK,mBAAmB,GAAG;GAClC1L,IAAI,EAAE,qBAAqB;GAC3B2L,UAAU,EAAE;WAAEC;IAAM;GACpB3L,UAAU,EAAE;KAAEyJ,YAAY;KAAEG;IAAY;GACxClG,KAAK,EAAE;KACNkI,iBAAiB,EAAE;OAClBhI,IAAI,EAAEiI,MAAM;OACZ/H,QAAQ,EAAE;;IAEX;GACD5D,KAAK,EAAE,CAAC,iBAAiB,CAAC;GAC1BgG,IAAI,GACJ;KACC,OAAO;OACN4F,aAAa,EAAE,KAAK;OACpBC,gBAAgB,EAAE;MAClB;IACD;GACD5L,QAAQ,EACR;KACC6L,SAAS,GACT;OACC,OAAO,CACN;SACC3H,EAAE,EAAE4G,kBAAM,CAACgB,IAAI,CAAClM,IAAI;SACpBkF,IAAI,EAAE,IAAI,CAACiH,qBAAqB,CAAC,qBAAqB,CAAC;SACvD7B,OAAO,EAAE,IAAI,CAAC8B,aAAa,CAAC,IAAI,CAAC5D,MAAM,CAACC,OAAO,CAAC,8BAA8B,CAAC,CAAC;SAChF8B,MAAM,EAAE;QACR,EACD;SACCjG,EAAE,EAAE4G,kBAAM,CAACmB,OAAO,CAACrM,IAAI;SACvBkF,IAAI,EAAE,IAAI,CAACiH,qBAAqB,CAAC,uBAAuB,CAAC;SACzD7B,OAAO,EAAE,IAAI,CAAC8B,aAAa,CAAC,IAAI,CAAC5D,MAAM,CAACC,OAAO,CAAC,iCAAiC,CAAC,CAAC;SACnF6D,YAAY,EAAE,IAAI,CAACC,cAAc;SACjCC,aAAa,EAAE,MAAMC,gCAAc,CAACC,kBAAkB,CAACC,yBAAO,CAACC,gBAAgB,CAAC;SAChFrC,MAAM,EAAE;QACR,EACD;SACCjG,EAAE,EAAE4G,kBAAM,CAAC2B,OAAO,CAAC7M,IAAI;SACvBkF,IAAI,EAAE,IAAI,CAACiH,qBAAqB,CAAC,wBAAwB,CAAC;SAC1D5B,MAAM,EAAE;QACR,EACD;SACCjG,EAAE,EAAE4G,kBAAM,CAAC4B,SAAS,CAAC9M,IAAI;SACzBkF,IAAI,EAAE,IAAI,CAACiH,qBAAqB,CAAC,yBAAyB,CAAC;SAC3D7B,OAAO,EAAE,IAAI,CAAC8B,aAAa,CAAC,IAAI,CAAC5D,MAAM,CAACC,OAAO,CAAC,+BAA+B,CAAC,CAAC;SACjF8B,MAAM,EAAE;QACR,EACD;SACCjG,EAAE,EAAE4G,kBAAM,CAAC6B,YAAY,CAAC/M,IAAI;SAC5BkF,IAAI,EAAE,IAAI,CAACiH,qBAAqB,CAAC,6BAA6B,CAAC;SAC/D7B,OAAO,EAAE,IAAI,CAAC8B,aAAa,CAAC,IAAI,CAAC5D,MAAM,CAACC,OAAO,CAAC,0BAA0B,CAAC,CAAC;SAC5E8B,MAAM,EAAE;QACR,EACD;SACCjG,EAAE,EAAE4G,kBAAM,CAAC8B,IAAI,CAAChN,IAAI;SACpBkF,IAAI,EAAE,IAAI,CAACiH,qBAAqB,CAAC,wBAAwB,CAAC;SAC1DG,YAAY,EAAE,IAAI,CAACW,WAAW;SAC9BT,aAAa,EAAEU,4BAAY,CAAClG,WAAW,EAAE,CAACmG,OAAO,CAAC9H,IAAI,CAAC6H,4BAAY,CAAClG,WAAW,EAAE,CAAC;SAClFuD,MAAM,EAAE;QACR,EACD;SACCjG,EAAE,EAAE,aAAa;SACjBY,IAAI,EAAE,IAAI,CAACiH,qBAAqB,CAAC,2BAA2B,CAAC;SAC7DG,YAAY,EAAE,IAAI,CAACc,kBAAkB;SACrCZ,aAAa,EAAE,IAAI,CAACa,mBAAmB;SACvC9C,MAAM,EAAE;QACR,EACD;SACCjG,EAAE,EAAE;QACJ,EACD;SACCA,EAAE,EAAE4G,kBAAM,CAACoC,QAAQ,CAACtN,IAAI;SACxBkF,IAAI,EAAE,IAAI,CAACiH,qBAAqB,CAAC,wBAAwB,CAAC;SAC1D5B,MAAM,EAAE;QACR,CACD;MACD;KACDgD,aAAa,GACb;OACC,OAAO,CAACxM,+BAAU,CAACyM,SAAS,EAAE;;IAE/B;GACDhG,OAAO,GACP;KACCtF,uBAAM,CAACC,IAAI,CAAC,oBAAoB,CAAC;IACjC;GACDsL,OAAO,GACP;KACC,MAAMC,SAAS,GAAG,IAAI,CAACC,KAAK,CAACxD,UAAU;KACvC,IAAI,CAAC6B,gBAAgB,GAAG0B,SAAS,CAACE,SAAS,GAAGF,SAAS,CAACG,YAAY,KAAKH,SAAS,CAACI,YAAY;IAC/F;GACD9M,OAAO,EACP;KACC+M,eAAe,CAAC1D,IAAc,EAAEzD,KAAmB,EACnD;OACC,IAAI,CAACyD,IAAI,CAACE,MAAM,EAChB;SACC;;OAGD,IAAIyD,cAAI,CAACC,UAAU,CAAC5D,IAAI,CAACiC,YAAY,CAAC,EACtC;SACCjC,IAAI,CAACiC,YAAY,CAAC1F,KAAK,CAACC,MAAM,CAAC;SAE/B;;OAGD,IAAI,CAACqH,cAAc,CAAC;SAAEjD,UAAU,EAAEZ,IAAI,CAAC/F;QAAI,CAAC;MAC5C;KACD4J,cAAc,CAAC;OAAEjD,UAAU;OAAEG,cAAc,GAAG;MAAI,EAClD;OACC,IAAI,CAAC/H,KAAK,CAAC,iBAAiB,EAAE;SAAE4H,UAAU;SAAEG;QAAgB,CAAC;MAC7D;KACD+C,WAAW,GACX;OACC,MAAMC,OAAO,GAAGC,0BAAW,CAACrH,WAAW,EAAE,CAACsH,cAAc,EAAE;OAC1D,IAAIF,OAAO,EACX;SACC,IAAI,CAACG,eAAe,EAAE;SAEtB;;OAGDC,gCAAe,CAACxH,WAAW,EAAE,CAACyH,UAAU,EAAE,CAAC/J,KAAK,EAAE;MAClD;KACD2G,kBAAkB,CAAChB,IAAc,EACjC;OACC,OAAO;SACN,YAAY,EAAEA,IAAI,CAAC/F,EAAE,KAAK,IAAI,CAACuH,iBAAiB;SAChD,gBAAgB,EAAExB,IAAI,CAACC,OAAO,IAAID,IAAI,CAAC/F,EAAE,KAAK,IAAI,CAACuH,iBAAiB;SACpE,UAAU,EAAExB,IAAI,CAACE;QACjB;MACD;KACD6B,aAAa,CAAC9B,OAAe,EAC7B;OACC,IAAIA,OAAO,KAAK,CAAC,EACjB;SACC,OAAO,EAAE;;OAGV,OAAOA,OAAO,GAAG,EAAE,GAAG,KAAK,GAAGwB,MAAM,CAACxB,OAAO,CAAC;MAC7C;KACDoE,cAAc,CAACrE,IAAc,EAC7B;OACC,IAAIA,IAAI,CAACE,MAAM,EACf;SACC,OAAO,IAAI;;OAGZ,OAAO;SACNrF,IAAI,EAAE,IAAI,CAACjE,GAAG,CAAC,4BAA4B,CAAC;SAC5C0N,YAAY,EAAE;WACbC,KAAK,EAAE;aAAEC,QAAQ,EAAE;YAAQ;WAC3BC,eAAe,EAAEC,QAAQ,CAACC,IAAI;WAC9BC,UAAU,EAAE,EAAE;WACd/K,SAAS,EAAE,CAAC;;QAEb;MACD;KACDiI,qBAAqB,CAACjL,UAAkB,EACxC;OACC,OAAO,IAAI,CAACD,GAAG,CAACC,UAAU,EAAE;SAC3B,MAAM,EAAE;QACR,CAAC;MACF;KACDqN,eAAe,GACf;OACCW,gCAAU,CAACC,IAAI,CAAC;SACfC,OAAO,EAAE,IAAI,CAACnO,GAAG,CAAC,mCAAmC,CAAC;SACtDoO,KAAK,EAAE,IAAI;SACXC,OAAO,EAAEC,uCAAiB,CAACC,SAAS;SACpCC,IAAI,EAAGC,UAAsB,IAAK;WACjCrB,0BAAW,CAACrH,WAAW,EAAE,CAAC2I,gBAAgB,EAAE;WAC5CnB,gCAAe,CAACxH,WAAW,EAAE,CAACyH,UAAU,EAAE,CAAC/J,KAAK,EAAE;WAClDgL,UAAU,CAAChL,KAAK,EAAE;UAClB;SACDkL,QAAQ,EAAGF,UAAsB,IAAK;WACrCA,UAAU,CAAChL,KAAK,EAAE;;QAEnB,CAAC;MACF;KACDmL,kBAAkB,CAACxF,IAAc,EACjC;OACC,IAAI,CAAC2D,cAAI,CAACC,UAAU,CAAC5D,IAAI,CAACmC,aAAa,CAAC,EACxC;SACC,OAAO,IAAI;;OAGZ,OAAOnC,IAAI,CAACmC,aAAa,EAAE,KAAK,IAAI;MACpC;KACDlD,QAAQ,CAAC1C,KAAY,EACrB;OACC,MAAMkJ,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACpJ,KAAK,CAACC,MAAM,CAAC+G,SAAS,GAAGhH,KAAK,CAACC,MAAM,CAACgH,YAAY,CAAC;OACrF,IAAI,CAAC7B,gBAAgB,GAAG8D,cAAc,KAAKlJ,KAAK,CAACC,MAAM,CAACiH,YAAY;OAEpE,IAAIlH,KAAK,CAACC,MAAM,CAAC+G,SAAS,KAAK,CAAC,EAChC;SACC,IAAI,CAAC7B,aAAa,GAAG,KAAK;SAE1B;;OAGD,IAAI,CAACA,aAAa,GAAG,IAAI;MACzB;KACDkE,iBAAiB,GACjB;OACC,IAAI,CAACtC,KAAK,CAACxD,UAAU,CAAC+F,QAAQ,CAAC;SAC9BC,GAAG,EAAE,IAAI,CAACxC,KAAK,CAACxD,UAAU,CAAC2D,YAAY;SACvCsC,QAAQ,EAAE;QACV,CAAC;MACF;KACDC,eAAe,GACf;OACC,IAAI,CAAC1C,KAAK,CAACxD,UAAU,CAAC+F,QAAQ,CAAC;SAC9BC,GAAG,EAAE,CAAC;SACNC,QAAQ,EAAE;QACV,CAAC;MACF;KACDnD,WAAW,CAACqD,WAAwB,EACpC;OACC,MAAMC,eAAe,GAAG,wBAAwB;OAChD,MAAMC,iBAAiB,GAAG,CAAC,EAAE;OAC7B,MAAMC,kBAAkB,GAAG,EAAE;OAE7BvD,4BAAY,CAAClG,WAAW,EAAE,CAAC0J,UAAU,CAAC;SACrC9M,WAAW,EAAE0M,WAAW,CAACK,OAAO,CAAE,IAAGJ,eAAgB,EAAC,CAAC;SACvDrM,SAAS,EAAEsM,iBAAiB;SAC5BvB,UAAU,EAAEwB;QACZ,CAAC;MACF;KACDpD,mBAAmB,GACnB;OAAA;OACC,OAAOuD,OAAO,gBAACC,EAAE,CAACC,OAAO,4CAAV,YAAYC,OAAO,qBAAnB,oBAAqBC,SAAS,EAAE,CAAC;MAChD;KACD,MAAM5D,kBAAkB,GACxB;OAAA;OACC,gBAAAyD,EAAE,CAACC,OAAO,6CAAV,aAAYC,OAAO,qBAAnB,qBAAqBE,UAAU,EAAE;MACjC;KACD1E,cAAc,GACd;OACC,IAAI,CAACE,gCAAc,CAACC,kBAAkB,CAACC,yBAAO,CAACuE,aAAa,CAAC,EAC7D;SACC,MAAMC,QAAQ,GAAG,IAAIC,6BAAe,CAAC;WAAEC,IAAI,EAAEC,sBAAU,CAACC;UAAiB,CAAC;SAC1EJ,QAAQ,CAAChC,IAAI,EAAE;SACfqC,6BAAS,CAACxK,WAAW,EAAE,CAACyK,gBAAgB,CAAC;WAAEC,WAAW,EAAE;UAAO,CAAC;SAEhE;;OAGD,IAAI,CAACxD,cAAc,CAAC;SAAEjD,UAAU,EAAEC,kBAAM,CAACmB,OAAO,CAACrM;QAAM,CAAC;MACxD;KACDiB,GAAG,CAACC,UAAkB,EAAEyQ,YAAgC,GAAG,EAAE,EAC7D;OACC,OAAO,IAAI,CAACxQ,OAAO,CAACC,GAAG,CAACC,UAAU,CAACH,UAAU,EAAEyQ,YAAY,CAAC;;IAE7D;GACDnQ,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+CZ,CAAC;;;;;;;;"}