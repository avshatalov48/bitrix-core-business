this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};(function(t,e,s,r,a,i,n,o){"use strict";const c="bx-im-drafts";const h="recentDraft";const f="copilotDraft";class g{static getInstance(){if(!this.instance){this.instance=new this}return this.instance}constructor(){this.db=new i.Dexie(c);this.db.version(1).stores({drafts:""})}async migrateFromLocalStorage(){const t=await this.db.drafts.get("migration_status");if(t){return}const e=n.LocalStorageManager.getInstance().get(h,{});this.set(h,e);n.LocalStorageManager.getInstance().remove(h);const s=n.LocalStorageManager.getInstance().get(f,{});this.set(f,s);n.LocalStorageManager.getInstance().remove(f);this.setMigrationFinished()}set(t,e){this.db.drafts.put(e,t)}setMigrationFinished(){const t={[h]:true,[f]:true};this.db.drafts.put(t,"migration_status")}async get(t,e=null){await this.migrateFromLocalStorage();const s=await this.db.drafts.get(t);return s||e}}const u=1e3;const d=1500;const l="recentDraft";const m=new Set([o.ChatType.comment]);class D{static getInstance(){if(!D.instance){D.instance=new D}return D.instance}constructor(){this.inited=false;this.drafts={};this.initPromise=new Promise((t=>{this.initPromiseResolver=t}));s.EventEmitter.subscribe(o.EventType.layout.onLayoutChange,this.onLayoutChange.bind(this))}async initDraftHistory(){if(this.inited){return}this.inited=true;let t=null;try{t=await g.getInstance().get(this.getStorageKey(),{})}catch(t){console.error("DraftManager: error initing draft history",t);this.initPromiseResolver();return}this.fillDraftsFromStorage(t);r.Logger.warn("DraftManager: initDrafts:",this.drafts);this.initPromiseResolver();this.setRecentListDraftText()}ready(){return this.initPromise}fillDraftsFromStorage(t){if(!e.Type.isPlainObject(t)){return}Object.entries(t).forEach((([t,s])=>{if(!e.Type.isPlainObject(s)){return}this.drafts[t]=s}))}setDraftText(t,e){if(!this.drafts[t]){this.drafts[t]={}}this.drafts[t].text=e.trim();this.refreshSaveTimeout()}setDraftPanel(t,e,s){if(!this.drafts[t]){this.drafts[t]={}}this.drafts[t].panelType=e;this.drafts[t].panelMessageId=s;this.refreshSaveTimeout()}setDraftMentions(t,e){if(!this.drafts[t]){this.drafts[t]={}}this.drafts[t].mentions=e;this.refreshSaveTimeout()}async getDraft(t){var e;await this.initPromise;const s=(e=this.drafts[t])!=null?e:{};return Promise.resolve(s)}clearDraft(t){delete this.drafts[t];this.setRecentItemDraftText(t,"")}setRecentListDraftText(){Object.entries(this.drafts).forEach((([t,e])=>{var s;this.setRecentItemDraftText(t,(s=e.text)!=null?s:"")}))}setRecentItemDraftText(t,e){if(!this.canSetRecentItemDraftText(t)){return}void a.Core.getStore().dispatch(this.getDraftMethodName(),{id:t,text:e})}onLayoutChange(t){const{from:e}=t.getData();if(e.name!==this.getLayoutName()||e.entityId===""){return}const s=e.entityId;setTimeout((async()=>{const{text:t=""}=await this.getDraft(s);this.setRecentItemDraftText(s,t)}),d)}refreshSaveTimeout(){clearTimeout(this.writeToStorageTimeout);this.writeToStorageTimeout=setTimeout((()=>{this.saveToIndexedDb()}),u)}saveToIndexedDb(){g.getInstance().set(this.getStorageKey(),this.prepareDrafts())}prepareDrafts(){const t={};Object.entries(this.drafts).forEach((([e,s])=>{if(!s.text&&!s.panelType){return}if(s.panelType===o.TextareaPanelType.edit){return}t[e]={text:s.text,mentions:s.mentions}}));return t}getLayoutName(){return o.Layout.chat.name}getStorageKey(){return l}getDraftMethodName(){return"recent/setRecentDraft"}canSetRecentItemDraftText(t){const e=a.Core.getStore().getters["chats/get"](t);if(!e){return false}return!m.has(e.type)}}D.instance=null;const y="copilotDraft";class T extends D{static getInstance(){if(!T.instance){T.instance=new T}return T.instance}getLayoutName(){return o.Layout.copilot.name}getStorageKey(){return y}getDraftMethodName(){return"recent/setCopilotDraft"}}T.instance=null;t.DraftManager=D;t.CopilotDraftManager=T})(this.BX.Messenger.v2.Lib=this.BX.Messenger.v2.Lib||{},BX,BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Application,BX.Dexie3,BX.Messenger.v2.Lib,BX.Messenger.v2.Const);
//# sourceMappingURL=draft.bundle.map.js