this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Provider=this.BX.Messenger.v2.Provider||{};(function(e,s,a,t,i,l,r,d,o,n,h,c,g,u,p,b,v,I,f,P,L){"use strict";var M=babelHelpers.classPrivateFieldLooseKey("store");var H=babelHelpers.classPrivateFieldLooseKey("messageViews");var C=babelHelpers.classPrivateFieldLooseKey("setMessageChat");var F=babelHelpers.classPrivateFieldLooseKey("setUsers");var B=babelHelpers.classPrivateFieldLooseKey("setFiles");var m=babelHelpers.classPrivateFieldLooseKey("setAdditionalEntities");var y=babelHelpers.classPrivateFieldLooseKey("handleAddingMessageToModel");var w=babelHelpers.classPrivateFieldLooseKey("addMessageToModel");var U=babelHelpers.classPrivateFieldLooseKey("updateDialog");var S=babelHelpers.classPrivateFieldLooseKey("updateMessageViewedByOthers");var O=babelHelpers.classPrivateFieldLooseKey("updateChatLastMessageViews");var k=babelHelpers.classPrivateFieldLooseKey("checkMessageViewsRegistry");var D=babelHelpers.classPrivateFieldLooseKey("updateMessageViewsRegistry");var R=babelHelpers.classPrivateFieldLooseKey("sendScrollEvent");var A=babelHelpers.classPrivateFieldLooseKey("getDialog");class N{constructor(){Object.defineProperty(this,A,{value:G});Object.defineProperty(this,R,{value:z});Object.defineProperty(this,D,{value:q});Object.defineProperty(this,k,{value:Y});Object.defineProperty(this,O,{value:x});Object.defineProperty(this,S,{value:_});Object.defineProperty(this,U,{value:V});Object.defineProperty(this,w,{value:W});Object.defineProperty(this,y,{value:E});Object.defineProperty(this,m,{value:X});Object.defineProperty(this,B,{value:K});Object.defineProperty(this,F,{value:T});Object.defineProperty(this,C,{value:j});Object.defineProperty(this,M,{writable:true,value:void 0});Object.defineProperty(this,H,{writable:true,value:{}});babelHelpers.classPrivateFieldLooseBase(this,M)[M]=L.Core.getStore()}handleMessageAdd(e){f.Logger.warn("MessagePullHandler: handleMessageAdd",e);babelHelpers.classPrivateFieldLooseBase(this,C)[C](e);babelHelpers.classPrivateFieldLooseBase(this,F)[F](e);babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);babelHelpers.classPrivateFieldLooseBase(this,m)[m](e);const s=babelHelpers.classPrivateFieldLooseBase(this,M)[M].getters["messages/isInChatCollection"]({messageId:e.message.templateId});const a=babelHelpers.classPrivateFieldLooseBase(this,M)[M].getters["messages/isInChatCollection"]({messageId:e.message.id});if(a){f.Logger.warn("New message pull handler: we already have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/update",{id:e.message.id,fields:{...e.message,error:false}});babelHelpers.classPrivateFieldLooseBase(this,R)[R](e.chatId)}else if(!a&&s){f.Logger.warn("New message pull handler: we already have the TEMPORARY message",e.message);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/updateWithId",{id:e.message.templateId,fields:{...e.message,error:false}})}else if(!a&&!s){f.Logger.warn("New message pull handler: we dont have this message",e.message);babelHelpers.classPrivateFieldLooseBase(this,y)[y](e)}l.WritingManager.getInstance().stopWriting({dialogId:e.dialogId,userId:e.message.senderId});babelHelpers.classPrivateFieldLooseBase(this,U)[U](e)}handleMessageUpdate(e){f.Logger.warn("MessagePullHandler: handleMessageUpdate",e);l.WritingManager.getInstance().stopWriting({dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/update",{id:e.id,fields:{text:e.text,params:e.params}});babelHelpers.classPrivateFieldLooseBase(this,R)[R](e.chatId)}handleMessageDelete(e){f.Logger.warn("MessagePullHandler: handleMessageDelete",e);l.WritingManager.getInstance().stopWriting({dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/update",{id:e.id,fields:{text:"",isDeleted:true,files:[],attach:[],replyId:0}})}handleMessageDeleteComplete(e){f.Logger.warn("MessagePullHandler: handleMessageDeleteComplete",e);l.WritingManager.getInstance().stopWriting({dialogId:e.dialogId,userId:e.senderId});babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/delete",{id:e.id});const s={counter:e.counter};const a=Boolean(e.newLastMessage);if(a){s.lastMessageId=e.newLastMessage.id;s.lastMessageViews=e.lastMessageViews;babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/store",e.newLastMessage)}babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("chats/update",{dialogId:e.dialogId,fields:s})}handleAddReaction(e){f.Logger.warn("MessagePullHandler: handleAddReaction",e);const{actualReactions:{reaction:s,usersShort:a},userId:t,reaction:i}=e;if(L.Core.getUserId()===t){s.ownReactions=[i]}const l=new h.UserManager;l.addUsersToModel(a);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/reactions/set",[s])}handleDeleteReaction(e){f.Logger.warn("MessagePullHandler: handleDeleteReaction",e);const{actualReactions:{reaction:s}}=e;babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/reactions/set",[s])}handleMessageParamsUpdate(e){f.Logger.warn("MessagePullHandler: handleMessageParamsUpdate",e);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/update",{id:e.id,chatId:e.chatId,fields:{params:e.params}})}handleReadMessage(e,s){f.Logger.warn("MessagePullHandler: handleReadMessage",e);const t=a.UuidManager.getInstance();if(t.hasActionUuid(s.action_uuid)){f.Logger.warn("MessagePullHandler: handleReadMessage: we have this uuid, skip");t.removeActionUuid(s.action_uuid);return}babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/readMessages",{chatId:e.chatId,messageIds:e.viewedMessages}).then((()=>{babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("chats/update",{dialogId:e.dialogId,fields:{counter:e.counter,lastId:e.lastId}})})).catch((e=>{console.error("MessagePullHandler: error handling readMessage",e)}))}handleReadMessageOpponent(e){f.Logger.warn("MessagePullHandler: handleReadMessageOpponent",e);babelHelpers.classPrivateFieldLooseBase(this,S)[S](e);babelHelpers.classPrivateFieldLooseBase(this,O)[O](e)}handlePinAdd(e){f.Logger.warn("MessagePullHandler: handlePinAdd",e);babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);babelHelpers.classPrivateFieldLooseBase(this,F)[F](e);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/store",e.additionalMessages);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/pin/add",{chatId:e.pin.chatId,messageId:e.pin.messageId});if(L.Core.getUserId()!==e.pin.authorId);}handlePinDelete(e){f.Logger.warn("MessagePullHandler: handlePinDelete",e);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/pin/delete",{chatId:e.chatId,messageId:e.messageId})}}function j(e){var s,a;if(!(e!=null&&e.chat[e.chatId])){return}const t={...e.chat[e.chatId],dialogId:e.dialogId};const i=Boolean(babelHelpers.classPrivateFieldLooseBase(this,A)[A](e.dialogId));const l=!e.notify||((s=e.message)==null?void 0:(a=s.params)==null?void 0:a.NOTIFY)==="N";if(!i&&!l&&!t.role){t.role=g.UserRole.member}babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("chats/set",t)}function T(e){if(!e.users){return}const s=new h.UserManager;s.setUsersToModel(Object.values(e.users))}function K(e){if(!e.files){return}const s=Object.values(e.files);s.forEach((s=>{var a;const t=babelHelpers.classPrivateFieldLooseBase(this,M)[M].getters["files/isInCollection"]({fileId:(a=e.message)==null?void 0:a.templateFileId});if(t){var i;babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("files/updateWithId",{id:(i=e.message)==null?void 0:i.templateFileId,fields:s})}else{babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("files/set",s)}}))}function X(e){if(!e.message.additionalEntities){return}const{additionalMessages:s,messages:a,files:t,users:i}=e.message.additionalEntities;const l=[...a,...s];babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/store",l);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("files/set",t);babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("users/set",i)}function E(e){const s=babelHelpers.classPrivateFieldLooseBase(this,A)[A](e.dialogId,true);if(s.inited&&s.hasNextPage){babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/store",e.message);return}const a=babelHelpers.classPrivateFieldLooseBase(this,M)[M].getters["application/isChatOpen"](e.dialogId);const i=babelHelpers.classPrivateFieldLooseBase(this,M)[M].getters["messages/getChatUnreadMessages"](e.chatId);if(!a&&i.length>t.MessageService.getMessageRequestLimit()){babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/store",e.message);const s=new t.MessageService({chatId:e.chatId});s.reloadMessageList();return}babelHelpers.classPrivateFieldLooseBase(this,w)[w](e.message);babelHelpers.classPrivateFieldLooseBase(this,R)[R](e.chatId)}function W(e){const s={...e};if(e.senderId===L.Core.getUserId()){s.unread=false}else{s.unread=true;s.viewed=false}babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/setChatCollection",{messages:[s]})}function V(e){const s=babelHelpers.classPrivateFieldLooseBase(this,A)[A](e.dialogId,true);const a={};if(e.message.id>s.lastMessageId){a.lastMessageId=e.message.id}if(e.message.senderId===L.Core.getUserId()&&e.message.id>s.lastReadId){a.lastId=e.message.id}a.counter=e.counter;babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("chats/update",{dialogId:e.dialogId,fields:a});babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("chats/clearLastMessageViews",{dialogId:e.dialogId})}function _(e){babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("messages/setViewedByOthers",{ids:e.viewedMessages})}function x(e){const s=babelHelpers.classPrivateFieldLooseBase(this,A)[A](e.dialogId);if(!s){return}const a=e.viewedMessages.includes(s.lastMessageId);if(!a){return}if(babelHelpers.classPrivateFieldLooseBase(this,k)[k](e.userId,s.lastMessageId)){return}const t=Boolean(s.lastMessageViews.firstViewer);if(t){babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("chats/incrementLastMessageViews",{dialogId:e.dialogId});return}babelHelpers.classPrivateFieldLooseBase(this,M)[M].dispatch("chats/setLastMessageViews",{dialogId:e.dialogId,fields:{userId:e.userId,userName:e.userName,date:e.date,messageId:s.lastMessageId}});babelHelpers.classPrivateFieldLooseBase(this,D)[D](e.userId,s.lastMessageId)}function Y(e,s){var a;return Boolean((a=babelHelpers.classPrivateFieldLooseBase(this,H)[H][s])==null?void 0:a.has(e))}function q(e,s){if(!babelHelpers.classPrivateFieldLooseBase(this,H)[H][s]){babelHelpers.classPrivateFieldLooseBase(this,H)[H][s]=new Set}babelHelpers.classPrivateFieldLooseBase(this,H)[H][s].add(e)}function z(e){s.EventEmitter.emit(g.EventType.dialog.scrollToBottom,{chatId:e,threshold:g.DialogScrollThreshold.nearTheBottom})}function G(e,s=false){return babelHelpers.classPrivateFieldLooseBase(this,M)[M].getters["chats/get"](e,s)}var J=babelHelpers.classPrivateFieldLooseKey("store");var Q=babelHelpers.classPrivateFieldLooseKey("updateChatUsers");class Z{constructor(){Object.defineProperty(this,Q,{value:$});Object.defineProperty(this,J,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,J)[J]=L.Core.getStore()}handleChatOwner(e){f.Logger.warn("ChatPullHandler: handleChatOwner",e);babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/update",{dialogId:e.dialogId,fields:{ownerId:e.userId}})}handleChatManagers(e){f.Logger.warn("ChatPullHandler: handleChatManagers",e);babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/update",{dialogId:e.dialogId,fields:{managerList:e.list}})}handleChatUserAdd(e){f.Logger.warn("ChatPullHandler: handleChatUserAdd",e);babelHelpers.classPrivateFieldLooseBase(this,Q)[Q](e)}handleChatUserLeave(e){f.Logger.warn("ChatPullHandler: handleChatUserLeave",e);const s=e.userId===L.Core.getUserId();if(s){babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/update",{dialogId:e.dialogId,fields:{inited:false}});babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("messages/clearChatCollection",{chatId:e.chatId})}const a=babelHelpers.classPrivateFieldLooseBase(this,J)[J].getters["application/isChatOpen"](e.dialogId);if(s&&a){i.Messenger.openChat()}const t=b.CallManager.getInstance().getCurrentCallDialogId()===e.dialogId;if(s&&t){b.CallManager.getInstance().leaveCurrentCall()}babelHelpers.classPrivateFieldLooseBase(this,Q)[Q](e)}handleStartWriting(e){f.Logger.warn("ChatPullHandler: handleStartWriting",e);const{dialogId:s,userId:a,userName:t}=e;l.WritingManager.getInstance().startWriting({dialogId:s,userId:a,userName:t});babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("users/update",{id:a,fields:{lastActivityDate:new Date}})}handleChatUnread(e){f.Logger.warn("ChatPullHandler: handleChatUnread",e);let s=0;if(e.active===true){s=e.markedId}babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/update",{dialogId:e.dialogId,fields:{markedId:s}})}handleChatMuteNotify(e){if(e.muted){babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/mute",{dialogId:e.dialogId});return}babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/unmute",{dialogId:e.dialogId})}handleChatRename(e){const s=babelHelpers.classPrivateFieldLooseBase(this,J)[J].getters["chats/getByChatId"](e.chatId);if(!s){return}babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/update",{dialogId:s.dialogId,fields:{name:e.name}})}handleChatAvatar(e){const s=babelHelpers.classPrivateFieldLooseBase(this,J)[J].getters["chats/getByChatId"](e.chatId);if(!s){return}babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/update",{dialogId:s.dialogId,fields:{avatar:e.avatar}})}handleReadAllChats(){f.Logger.warn("ChatPullHandler: handleReadAllChats");babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/clearCounters");babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("recent/clearUnread")}}function $(e){if(e.users){const s=new h.UserManager;s.setUsersToModel(Object.values(e.users))}babelHelpers.classPrivateFieldLooseBase(this,J)[J].dispatch("chats/update",{dialogId:e.dialogId,fields:{userCounter:e.userCount}})}var ee=babelHelpers.classPrivateFieldLooseKey("store");class se{constructor(){Object.defineProperty(this,ee,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ee)[ee]=L.Core.getStore()}handleUserInvite(e){if(e.invited){const s=new h.UserManager;s.setUsersToModel([e.user]);return}babelHelpers.classPrivateFieldLooseBase(this,ee)[ee].dispatch("users/update",{id:e.userId,fields:e.user})}}class ae{handleDesktopOnline(e){f.Logger.warn("DesktopPullHandler: handleDesktopOnline",e);const s=p.DesktopManager.getInstance();s.setDesktopActive(true);d.CounterManager.getInstance().removeBrowserTitleCounter()}handleDesktopOffline(){f.Logger.warn("DesktopPullHandler: handleDesktopOffline");p.DesktopManager.getInstance().setDesktopActive(false)}}class te{handleSettingsUpdate(e){f.Logger.warn("SettingsPullHandler: handleSettingsUpdate",e);Object.entries(e).forEach((([e,s])=>{L.Core.getStore().dispatch("application/settings/set",{[e]:s})}))}}var ie=babelHelpers.classPrivateFieldLooseKey("messageHandler");var le=babelHelpers.classPrivateFieldLooseKey("chatHandler");var re=babelHelpers.classPrivateFieldLooseKey("userHandler");var de=babelHelpers.classPrivateFieldLooseKey("desktopHandler");var oe=babelHelpers.classPrivateFieldLooseKey("settingsHandler");class ne{constructor(){Object.defineProperty(this,ie,{writable:true,value:void 0});Object.defineProperty(this,le,{writable:true,value:void 0});Object.defineProperty(this,re,{writable:true,value:void 0});Object.defineProperty(this,de,{writable:true,value:void 0});Object.defineProperty(this,oe,{writable:true,value:void 0});babelHelpers.classPrivateFieldLooseBase(this,ie)[ie]=new N;babelHelpers.classPrivateFieldLooseBase(this,le)[le]=new Z;babelHelpers.classPrivateFieldLooseBase(this,re)[re]=new se;babelHelpers.classPrivateFieldLooseBase(this,de)[de]=new ae;babelHelpers.classPrivateFieldLooseBase(this,oe)[oe]=new te}getModuleId(){return"im"}handleMessage(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleMessageAdd(e)}handleMessageChat(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleMessageAdd(e)}handleMessageUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleMessageUpdate(e)}handleMessageDelete(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleMessageDelete(e)}handleMessageDeleteComplete(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleMessageDeleteComplete(e)}handleAddReaction(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleAddReaction(e)}handleDeleteReaction(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleDeleteReaction(e)}handleMessageParamsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleMessageParamsUpdate(e)}handleReadMessage(e,s){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleReadMessage(e,s)}handleReadMessageChat(e,s){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleReadMessage(e,s)}handleReadMessageOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleReadMessageOpponent(e)}handleReadMessageChatOpponent(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handleReadMessageOpponent(e)}handlePinAdd(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handlePinAdd(e)}handlePinDelete(e){babelHelpers.classPrivateFieldLooseBase(this,ie)[ie].handlePinDelete(e)}handleChatOwner(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleChatOwner(e)}handleChatManagers(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleChatManagers(e)}handleChatUserAdd(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleChatUserAdd(e)}handleChatUserLeave(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleChatUserLeave(e)}handleStartWriting(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleStartWriting(e)}handleChatUnread(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleChatUnread(e)}handleReadAllChats(){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleReadAllChats()}handleChatMuteNotify(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleChatMuteNotify(e)}handleChatRename(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleChatRename(e)}handleChatAvatar(e){babelHelpers.classPrivateFieldLooseBase(this,le)[le].handleChatAvatar(e)}handleUserInvite(e){babelHelpers.classPrivateFieldLooseBase(this,re)[re].handleUserInvite(e)}handleDesktopOnline(e){babelHelpers.classPrivateFieldLooseBase(this,de)[de].handleDesktopOnline(e)}handleDesktopOffline(){babelHelpers.classPrivateFieldLooseBase(this,de)[de].handleDesktopOffline()}handleSettingsUpdate(e){babelHelpers.classPrivateFieldLooseBase(this,oe)[oe].handleSettingsUpdate(e)}}const he={[g.ChatType.copilot]:"recent/setCopilot",default:"recent/setRecent"};class ce{getModuleId(){return"im"}handleMessage(e){this.handleMessageAdd(e)}handleMessageChat(e){this.handleMessageAdd(e)}handleMessageAdd(e){if(e.lines){return}const s=e.userInChat[e.chatId];if(s&&!s.includes(L.Core.getUserId())){return}f.Logger.warn("RecentPullHandler: handleMessageAdd",e);const a={id:e.dialogId,messageId:e.message.id};const t=L.Core.getStore().getters["recent/get"](e.dialogId);if(t){a.isFakeElement=false;a.isBirthdayPlaceholder=false;a.liked=false}this.setRecentItem(e,a)}handleMessageDeleteComplete(e){const s=Boolean(e.newLastMessage);if(s){this.updateRecentForMessageDelete(e.dialogId,e.newLastMessage.id)}this.updateUnloadedChatCounter(e)}handleReadMessage(e){this.updateUnloadedChatCounter(e)}handleReadMessageChat(e){this.updateUnloadedChatCounter(e)}handleUnreadMessage(e){this.updateUnloadedChatCounter(e)}handleUnreadMessageChat(e){this.updateUnloadedChatCounter(e)}handleChatMuteNotify(e){this.updateUnloadedChatCounter(e)}handleChatUnread(e){f.Logger.warn("RecentPullHandler: handleChatUnread",e);this.updateUnloadedChatCounter({dialogId:e.dialogId,chatId:e.chatId,counter:e.counter,muted:e.muted,unread:e.active});L.Core.getStore().dispatch("recent/unread",{id:e.dialogId,action:e.active})}handleAddReaction(e){f.Logger.warn("RecentPullHandler: handleAddReaction",e);const s=L.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}const a=L.Core.getStore().getters["application/isChatOpen"](e.dialogId);if(a){return}const t=L.Core.getStore().getters["recent/getMessage"](e.dialogId);const i=L.Core.getUserId()===e.userId;const l=L.Core.getUserId()===t.authorId;if(i||!l){return}L.Core.getStore().dispatch("recent/like",{id:e.dialogId,messageId:e.actualReactions.reaction.messageId,liked:true})}handleChatPin(e){f.Logger.warn("RecentPullHandler: handleChatPin",e);const s=L.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}L.Core.getStore().dispatch("recent/pin",{id:e.dialogId,action:e.active})}handleChatHide(e){f.Logger.warn("RecentPullHandler: handleChatHide",e);const s=L.Core.getStore().getters["recent/get"](e.dialogId);if(!s){return}L.Core.getStore().dispatch("recent/delete",{id:e.dialogId})}handleChatUserLeave(e){f.Logger.warn("RecentPullHandler: handleChatUserLeave",e);const s=L.Core.getStore().getters["recent/get"](e.dialogId);if(!s||e.userId!==L.Core.getUserId()){return}L.Core.getStore().dispatch("recent/delete",{id:e.dialogId})}handleUserInvite(e){var s;f.Logger.warn("RecentPullHandler: handleUserInvite",e);const a=o.Utils.text.getUuidV4();L.Core.getStore().dispatch("messages/store",{id:a,date:e.date});L.Core.getStore().dispatch("recent/setRecent",{id:e.user.id,invited:(s=e.invited)!=null?s:false,isFakeElement:true,messageId:a})}updateUnloadedChatCounter(e){const{dialogId:s,chatId:a,counter:t,muted:i,unread:l,lines:r=false}=e;if(r){return}const d=L.Core.getStore().getters["recent/get"](s);if(d){return}f.Logger.warn("RecentPullHandler: updateUnloadedChatCounter:",{dialogId:s,chatId:a,counter:t,muted:i,unread:l});let o=0;if(i){o=0}else if(l&&t===0){o=1}else if(l&&t>0){o=t}else if(!l){o=t}L.Core.getStore().dispatch("counters/setUnloadedChatCounters",{[a]:o})}setRecentItem(e,s){var a,t;const i=(a=e.chat[e.chatId])==null?void 0:a.type;const l=(t=he[i])!=null?t:he.default;L.Core.getStore().dispatch(l,s)}updateRecentForMessageDelete(e,s){if(!s){L.Core.getStore().dispatch("recent/delete",{id:e});return}L.Core.getStore().dispatch("recent/update",{id:e,fields:{messageId:s}})}}class ge{constructor(){this.store=L.Core.getStore();this.userManager=new h.UserManager;this.updateCounterDebounced=P.Runtime.debounce(this.updateCounter,1500,this)}getModuleId(){return"im"}getSubscriptionType(){return"server"}handleNotifyAdd(e){if(e.onlyFlash===true){return}this.userManager.setUsersToModel(e.users);this.store.dispatch("notifications/set",e);this.updateCounterDebounced(e.counter)}handleNotifyConfirm(e){this.store.dispatch("notifications/delete",{id:e.id});this.updateCounterDebounced(e.counter)}handleNotifyRead(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:true})}));this.updateCounterDebounced(e.counter)}handleNotifyUnread(e){e.list.forEach((e=>{this.store.dispatch("notifications/read",{ids:[e],read:false})}));this.updateCounterDebounced(e.counter)}handleNotifyDelete(e){const s=Object.keys(e.id).map((e=>Number.parseInt(e,10)));s.forEach((e=>{this.store.dispatch("notifications/delete",{id:e})}));this.updateCounterDebounced(e.counter)}updateCounter(e){this.store.dispatch("notifications/setCounter",e)}}class ue{constructor(){this.store=L.Core.getStore();this.userManager=new h.UserManager}getModuleId(){return"im"}handleChatUserAdd(e){if(this.getMembersCountFromStore(e.chatId)===0){return}void this.userManager.setUsersToModel(Object.values(e.users));void this.store.dispatch("sidebar/members/set",{chatId:e.chatId,users:e.newUsers})}handleChatUserLeave(e){if(this.getMembersCountFromStore(e.chatId)===0){return}void this.store.dispatch("sidebar/members/delete",{chatId:e.chatId,userId:e.userId})}handleTaskAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/tasks/set",{chatId:e.link.chatId,tasks:[e.link]})}handleTaskUpdate(e,s){this.handleTaskAdd(e,s)}handleTaskDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/tasks/delete",{chatId:e.chatId,id:e.linkId})}handleCalendarAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/meetings/set",{chatId:e.link.chatId,meetings:[e.link]})}handleCalendarUpdate(e,s){this.handleCalendarAdd(e,s)}handleCalendarDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/meetings/delete",{chatId:e.chatId,id:e.linkId})}handleUrlAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("sidebar/links/set",{chatId:e.link.chatId,links:[e.link]});const s=this.store.getters["sidebar/links/getCounter"](e.link.chatId);void this.store.dispatch("sidebar/links/setCounter",{chatId:e.link.chatId,counter:s+1})}handleUrlDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/links/delete",{chatId:e.chatId,id:e.linkId})}handleMessageFavoriteAdd(e){if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("files/set",e.files);void this.store.dispatch("messages/store",[e.link.message]);void this.store.dispatch("sidebar/favorites/set",{chatId:e.link.chatId,favorites:[e.link]});const s=this.store.getters["sidebar/favorites/getCounter"](e.link.chatId);void this.store.dispatch("sidebar/favorites/setCounter",{chatId:e.link.chatId,counter:s+1})}handleMessageFavoriteDelete(e){if(!this.isSidebarInited(e.chatId)){return}void this.store.dispatch("sidebar/favorites/delete",{chatId:e.chatId,id:e.linkId})}handleFileAdd(e){var s;if(!this.isSidebarInited(e.link.chatId)){return}void this.userManager.setUsersToModel(e.users);void this.store.dispatch("files/set",e.files);const a=(s=e.link.subType)!=null?s:g.SidebarDetailBlock.fileUnsorted;void this.store.dispatch("sidebar/files/set",{chatId:e.link.chatId,files:[e.link],subType:a})}handleFileDelete(e){var s;const a=P.Type.isNumber(e.chatId)?e.chatId:Number.parseInt(e.chatId,10);if(!this.isSidebarInited(a)){return}const t=(s=e.linkId)!=null?s:e.fileId;void this.store.dispatch("sidebar/files/delete",{chatId:a,id:t})}handleMessageChat(e){if(!this.isSidebarInited(e.chatId)||this.isFilesMigrated()){return}void this.userManager.setUsersToModel(Object.values(e.users));void this.store.dispatch("files/set",Object.values(e.files));Object.values(e.files).forEach((e=>{void this.store.dispatch("sidebar/files/set",{chatId:e.chatId,files:[e],subType:g.SidebarDetailBlock.fileUnsorted})}))}isSidebarInited(e){return this.store.getters["sidebar/isInited"](e)}isFilesMigrated(){return this.store.state.sidebar.isFilesMigrated}getMembersCountFromStore(e){return this.store.getters["sidebar/members/getSize"](e)}}var pe=babelHelpers.classPrivateFieldLooseKey("shouldShowNotification");var be=babelHelpers.classPrivateFieldLooseKey("shouldShowLinesNotification");var ve=babelHelpers.classPrivateFieldLooseKey("isChatOpened");var Ie=babelHelpers.classPrivateFieldLooseKey("isLinesChatOpened");var fe=babelHelpers.classPrivateFieldLooseKey("isImportantMessage");var Pe=babelHelpers.classPrivateFieldLooseKey("shouldShowToUser");var Le=babelHelpers.classPrivateFieldLooseKey("isUserDnd");var Me=babelHelpers.classPrivateFieldLooseKey("desktopWillShowNotification");var He=babelHelpers.classPrivateFieldLooseKey("flashDesktopIcon");var Ce=babelHelpers.classPrivateFieldLooseKey("playOpenedChatMessageSound");var Fe=babelHelpers.classPrivateFieldLooseKey("playMessageSound");var Be=babelHelpers.classPrivateFieldLooseKey("restoreLastNotificationId");var me=babelHelpers.classPrivateFieldLooseKey("updateLastNotificationId");var ye=babelHelpers.classPrivateFieldLooseKey("setCurrentUserStatus");class we{constructor(){Object.defineProperty(this,ye,{value:We});Object.defineProperty(this,me,{value:Ee});Object.defineProperty(this,Be,{value:Xe});Object.defineProperty(this,Fe,{value:Ke});Object.defineProperty(this,Ce,{value:Te});Object.defineProperty(this,He,{value:je});Object.defineProperty(this,Me,{value:Ne});Object.defineProperty(this,Le,{value:Ae});Object.defineProperty(this,Pe,{value:Re});Object.defineProperty(this,fe,{value:De});Object.defineProperty(this,Ie,{value:ke});Object.defineProperty(this,ve,{value:Oe});Object.defineProperty(this,be,{value:Se});Object.defineProperty(this,pe,{value:Ue});this.lastNotificationId=0;this.store=L.Core.getStore();babelHelpers.classPrivateFieldLooseBase(this,ye)[ye]();babelHelpers.classPrivateFieldLooseBase(this,Be)[Be]()}getModuleId(){return"im"}handleMessage(e,s){this.handleMessageAdd(e,s)}handleMessageChat(e,s){this.handleMessageAdd(e,s)}handleMessageAdd(e,s){if(!babelHelpers.classPrivateFieldLooseBase(this,pe)[pe](e,s)){return}if(babelHelpers.classPrivateFieldLooseBase(this,ve)[ve](e.dialogId)){babelHelpers.classPrivateFieldLooseBase(this,Ce)[Ce](e);return}babelHelpers.classPrivateFieldLooseBase(this,Fe)[Fe](e);babelHelpers.classPrivateFieldLooseBase(this,He)[He]();const a=this.store.getters["messages/getById"](e.message.id);const t=this.store.getters["chats/get"](e.dialogId,true);const i=this.store.getters["users/get"](a.authorId);u.NotifierManager.getInstance().showMessage({message:a,dialog:t,user:i,lines:Boolean(e.lines)});babelHelpers.classPrivateFieldLooseBase(this,me)[me](e.message.id)}handleNotifyAdd(e,s){if(s.server_time_ago>10){f.Logger.warn("NotifierPullHandler: notification arrived to the user 30 seconds after it was actually sent, ignore notification");return}if(e.id<=this.lastNotificationId){f.Logger.warn("NotifierPullHandler: new notification id is smaller than lastNotificationId");return}if(e.onlyFlash===true||babelHelpers.classPrivateFieldLooseBase(this,Le)[Le]()||babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]()||b.CallManager.getInstance().hasCurrentCall()){return}if(document.hasFocus()){const e=this.store.getters["application/areNotificationsOpen"];if(e){return}}const a=this.store.getters["notifications/getById"](e.id);const t=this.store.getters["users/get"](e.userId);if(e.silent!=="Y"){I.SoundNotificationManager.getInstance().playOnce(g.SoundType.reminder)}babelHelpers.classPrivateFieldLooseBase(this,He)[He]();u.NotifierManager.getInstance().showNotification(a,t);babelHelpers.classPrivateFieldLooseBase(this,me)[me](e.id)}}function Ue(e,s){var a,t;if(s.server_time_ago>10){f.Logger.warn("NotifierPullHandler: message arrived to the user 30 seconds after it was actually sent, ignore message");return false}if(e.message.id<=this.lastNotificationId){f.Logger.warn("NotifierPullHandler: new message id is smaller than lastNotificationId");return false}if(L.Core.getUserId()===e.message.senderId){return false}if(e.lines&&!babelHelpers.classPrivateFieldLooseBase(this,be)[be](e)){return false}const i=!e.notify||((a=e.message)==null?void 0:(t=a.params)==null?void 0:t.NOTIFY)==="N";if(i||!babelHelpers.classPrivateFieldLooseBase(this,Pe)[Pe](e)||babelHelpers.classPrivateFieldLooseBase(this,Me)[Me]()){return false}const l=b.CallManager.getInstance().hasCurrentCall();if(l&&b.CallManager.getInstance().getCurrentCallDialogId()!==e.dialogId.toString()){return false}const r=b.CallManager.getInstance().hasCurrentScreenSharing();if(r){return false}return true}function Se(e){if(babelHelpers.classPrivateFieldLooseBase(this,Ie)[Ie](e.dialogId)){return false}const s=e.message.senderId;if(s>0&&e.users[s].extranet===false){return true}const a=this.store.getters["counters/getSpecificLinesCounter"](e.chatId);return a===0}function Oe(e){const s=this.store.getters["application/isChatOpen"](e);return Boolean(document.hasFocus()&&s)}function ke(e){const s=this.store.getters["application/isLinesChatOpen"](e);return Boolean(document.hasFocus()&&s)}function De(e){const{message:s}=e;return s.isImportant||s.importantFor.includes(L.Core.getUserId())}function Re(e){if(babelHelpers.classPrivateFieldLooseBase(this,fe)[fe](e)){return true}const s=this.store.getters["chats/get"](e.dialogId,true);const a=s.muteList.includes(L.Core.getUserId());return!babelHelpers.classPrivateFieldLooseBase(this,Le)[Le]()&&!a}function Ae(){const e=this.store.getters["application/settings/get"](g.Settings.user.status);return e===g.UserStatus.dnd}function Ne(){const e=p.DesktopManager.isChatWindow();return!e&&p.DesktopManager.getInstance().isDesktopActive()}function je(){if(!p.DesktopManager.isDesktop()){return}c.DesktopApi.flashIcon()}function Te(e){if(babelHelpers.classPrivateFieldLooseBase(this,fe)[fe](e)){I.SoundNotificationManager.getInstance().forcePlayOnce(g.SoundType.newMessage2);return}I.SoundNotificationManager.getInstance().playOnce(g.SoundType.newMessage2)}function Ke(e){if(babelHelpers.classPrivateFieldLooseBase(this,fe)[fe](e)){I.SoundNotificationManager.getInstance().forcePlayOnce(g.SoundType.newMessage1);return}I.SoundNotificationManager.getInstance().playOnce(g.SoundType.newMessage1)}function Xe(){const e=v.LocalStorageManager.getInstance().get(g.LocalStorageKey.lastNotificationId,0);this.lastNotificationId=Number.parseInt(e,10)}function Ee(e){const s=2e3;this.lastNotificationId=e;clearTimeout(this.writeToStorageTimeout);this.writeToStorageTimeout=setTimeout((()=>{v.LocalStorageManager.getInstance().set(g.LocalStorageKey.lastNotificationId,e)}),s)}function We(){var e;const s=L.Core.getApplicationData();if(!((e=s.settings)!=null&&e.status)){return}L.Core.getStore().dispatch("application/settings/set",{[g.Settings.user.status]:s.settings.status})}class Ve{constructor(){this.store=L.Core.getStore()}getModuleId(){return"im"}handleMessageChat(e){this.updateUnloadedLinesCounter(e)}handleReadMessageChat(e){this.updateUnloadedLinesCounter(e)}handleUnreadMessageChat(e){this.updateUnloadedLinesCounter(e)}handleChatHide(e){this.updateUnloadedLinesCounter({dialogId:e.dialogId,chatId:e.chatId,lines:e.lines,counter:0})}updateUnloadedLinesCounter(e){const{dialogId:s,chatId:a,counter:t,lines:i}=e;if(!i||P.Type.isUndefined(t)){return}f.Logger.warn("LinesPullHandler: updateUnloadedLinesCounter:",{dialogId:s,chatId:a,counter:t});this.store.dispatch("counters/setUnloadedLinesCounters",{[a]:t})}}class _e{constructor(){this.store=L.Core.getStore()}getModuleId(){return"online"}getSubscriptionType(){return"online"}handleUserStatus(e){const s=L.Core.getUserId();if(P.Type.isPlainObject(e.users[s])){const{status:a}=e.users[s];this.store.dispatch("application/settings/set",{status:a})}Object.values(e.users).forEach((e=>{this.store.dispatch("users/update",{id:e.id,fields:{lastActivityDate:e.last_activity_date}})}))}}e.BasePullHandler=ne;e.RecentPullHandler=ce;e.NotificationPullHandler=ge;e.SidebarPullHandler=ue;e.NotifierPullHandler=we;e.LinesPullHandler=Ve;e.OnlinePullHandler=_e})(this.BX.Messenger.v2.Provider.Pull=this.BX.Messenger.v2.Provider.Pull||{},BX.Event,BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Vue3.Vuex,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Model,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Application);
//# sourceMappingURL=registry.bundle.map.js