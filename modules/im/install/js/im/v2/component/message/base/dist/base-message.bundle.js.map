{"version":3,"file":"base-message.bundle.js","sources":["../src/base-message.js"],"sourcesContent":["import { Core } from 'im.v2.application.core';\nimport { Parser } from 'im.v2.lib.parser';\nimport { ContextMenu, RetryButton, MessageKeyboard, ReactionSelector } from 'im.v2.component.message.elements';\nimport { ChatActionType, ChatType } from 'im.v2.const';\nimport { PermissionManager } from 'im.v2.lib.permission';\nimport { ChannelManager } from 'im.v2.lib.channel';\n\nimport './css/base-message.css';\n\nimport type { ImModelChat, ImModelMessage } from 'im.v2.model';\n\n// @vue/component\nexport const BaseMessage = {\n\tname: 'BaseMessage',\n\tcomponents: { ContextMenu, RetryButton, MessageKeyboard, ReactionSelector },\n\tprops:\n\t{\n\t\titem: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t\twithBackground: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\twithContextMenu: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\twithReactions: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\twithRetryButton: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t\tmenuIsActiveForId: {\n\t\t\ttype: [Number, String],\n\t\t\tdefault: 0,\n\t\t},\n\t\tafterMessageWidthLimit: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tmessage(): ImModelMessage\n\t\t{\n\t\t\treturn this.item;\n\t\t},\n\t\tisSystemMessage(): boolean\n\t\t{\n\t\t\treturn this.message.authorId === 0;\n\t\t},\n\t\tisSelfMessage(): boolean\n\t\t{\n\t\t\treturn this.message.authorId === Core.getUserId();\n\t\t},\n\t\tisOpponentMessage(): boolean\n\t\t{\n\t\t\treturn !this.isSystemMessage && !this.isSelfMessage;\n\t\t},\n\t\tisChannelPost(): boolean\n\t\t{\n\t\t\treturn ChannelManager.isChannel(this.dialogId);\n\t\t},\n\t\tshowMessageAngle(): boolean\n\t\t{\n\t\t\tconst hasAfterContent = Boolean(this.$slots['after-message']);\n\n\t\t\treturn !this.withBackground || this.isChannelPost || hasAfterContent;\n\t\t},\n\t\tcontainerClasses(): {[className: string]: boolean}\n\t\t{\n\t\t\treturn {\n\t\t\t\t'--self': this.isSelfMessage,\n\t\t\t\t'--opponent': this.isOpponentMessage,\n\t\t\t\t'--has-error': this.hasError,\n\t\t\t\t'--has-after-content': Boolean(this.$slots['after-message']),\n\t\t\t};\n\t\t},\n\t\tbodyClasses(): {[className: string]: boolean}\n\t\t{\n\t\t\treturn {\n\t\t\t\t'--transparent': !this.withBackground,\n\t\t\t\t'--no-angle': this.showMessageAngle,\n\t\t\t};\n\t\t},\n\t\tshowRetryButton(): boolean\n\t\t{\n\t\t\treturn this.withRetryButton && this.isSelfMessage && this.hasError;\n\t\t},\n\t\tshowContextMenu(): boolean\n\t\t{\n\t\t\treturn this.withContextMenu && !this.hasError && this.canOpenContextMenu;\n\t\t},\n\t\tcanOpenContextMenu(): boolean\n\t\t{\n\t\t\treturn PermissionManager.getInstance().canPerformAction(ChatActionType.openMessageMenu, this.dialogId);\n\t\t},\n\t\thasError(): boolean\n\t\t{\n\t\t\treturn this.message.error;\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonContainerClick(event: PointerEvent)\n\t\t{\n\t\t\tParser.executeClickEvent(event);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-message-base__wrap bx-im-message-base__scope\" :class=\"containerClasses\" :data-id=\"message.id\">\n\t\t\t<div\n\t\t\t\tclass=\"bx-im-message-base__container\" \n\t\t\t\t@click=\"onContainerClick\"\n\t\t\t>\n\t\t\t\t<!-- Before content -->\n\t\t\t\t<slot name=\"before-message\"></slot>\n\t\t\t\t<!-- Content + retry + context menu -->\n\t\t\t\t<div class=\"bx-im-message-base__content\">\n\t\t\t\t\t<div class=\"bx-im-message-base__body\" :class=\"bodyClasses\">\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t\t<ReactionSelector v-if=\"withReactions\" :messageId=\"message.id\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<RetryButton v-if=\"showRetryButton\" :message=\"message\" :dialogId=\"dialogId\"/>\n\t\t\t\t\t<ContextMenu\n\t\t\t\t\t\tv-else-if=\"showContextMenu\"\n\t\t\t\t\t\t:dialogId=\"dialogId\"\n\t\t\t\t\t\t:message=\"message\" \n\t\t\t\t\t\t:menuIsActiveForId=\"menuIsActiveForId\" \n\t\t\t\t\t/>\n\t\t\t\t\t<div v-else class=\"bx-im-message-base__context-menu-placeholder\"></div>\n\t\t\t\t</div>\n\t\t\t\t<!-- After content -->\n\t\t\t\t<div\n\t\t\t\t\tv-if=\"$slots['after-message']\"\n\t\t\t\t\tclass=\"bx-im-message-base__bottom\"\n\t\t\t\t\t:class=\"{'--width-limit': afterMessageWidthLimit}\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"bx-im-message-base__bottom-content\">\n\t\t\t\t\t\t<slot name=\"after-message\"></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`,\n};\n"],"names":["BaseMessage","name","components","ContextMenu","RetryButton","MessageKeyboard","ReactionSelector","props","item","type","Object","required","dialogId","String","withBackground","Boolean","default","withContextMenu","withReactions","withRetryButton","menuIsActiveForId","Number","afterMessageWidthLimit","computed","dialog","$store","getters","message","isSystemMessage","authorId","isSelfMessage","Core","getUserId","isOpponentMessage","isChannelPost","ChannelManager","isChannel","showMessageAngle","hasAfterContent","$slots","containerClasses","hasError","bodyClasses","showRetryButton","showContextMenu","canOpenContextMenu","PermissionManager","getInstance","canPerformAction","ChatActionType","openMessageMenu","error","methods","onContainerClick","event","Parser","executeClickEvent","template"],"mappings":"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"}