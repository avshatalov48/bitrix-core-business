this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(e,t,s,i,a,r,n,l,o,c,d,g){"use strict";const h={name:"EmptyState",methods:{loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-list-collab__empty">\n\t\t\t<div class="bx-im-list-collab__empty_icon"></div>\n\t\t\t<div class="bx-im-list-collab__empty_text">\n\t\t\t\t{{ loc('IM_LIST_COLLAB_EMPTY') }}\n\t\t\t</div>\n\t\t</div>\n\t`};var b=babelHelpers.classPrivateFieldLooseKey("itemsPerPage");var v=babelHelpers.classPrivateFieldLooseKey("isLoading");var m=babelHelpers.classPrivateFieldLooseKey("pagesLoaded");var u=babelHelpers.classPrivateFieldLooseKey("hasMoreItemsToLoad");var p=babelHelpers.classPrivateFieldLooseKey("lastMessageDate");var L=babelHelpers.classPrivateFieldLooseKey("requestItems");var P=babelHelpers.classPrivateFieldLooseKey("updateModels");var f=babelHelpers.classPrivateFieldLooseKey("getChatsWithCounters");var M=babelHelpers.classPrivateFieldLooseKey("getLastMessageDate");var B=babelHelpers.classPrivateFieldLooseKey("filterPinnedItemsMessages");class I{constructor(){Object.defineProperty(this,B,{value:_});Object.defineProperty(this,M,{value:H});Object.defineProperty(this,f,{value:F});Object.defineProperty(this,P,{value:C});Object.defineProperty(this,L,{value:y});this.firstPageIsLoaded=false;Object.defineProperty(this,b,{writable:true,value:50});Object.defineProperty(this,v,{writable:true,value:false});Object.defineProperty(this,m,{writable:true,value:0});Object.defineProperty(this,u,{writable:true,value:true});Object.defineProperty(this,p,{writable:true,value:0})}async loadFirstPage(){babelHelpers.classPrivateFieldLooseBase(this,v)[v]=true;const e=await babelHelpers.classPrivateFieldLooseBase(this,L)[L]({firstPage:true});this.firstPageIsLoaded=true;return e}loadNextPage(){if(babelHelpers.classPrivateFieldLooseBase(this,v)[v]||!babelHelpers.classPrivateFieldLooseBase(this,u)[u]){return Promise.resolve()}babelHelpers.classPrivateFieldLooseBase(this,v)[v]=true;return babelHelpers.classPrivateFieldLooseBase(this,L)[L]()}hasMoreItemsToLoad(){return babelHelpers.classPrivateFieldLooseBase(this,u)[u]}}async function y({firstPage:e=false}={}){const t={data:{limit:babelHelpers.classPrivateFieldLooseBase(this,b)[b],filter:{lastMessageDate:e?null:babelHelpers.classPrivateFieldLooseBase(this,p)[p]}}};const s=await r.runAction(c.RestMethod.imV2RecentCollabTail,t).catch((e=>{console.error("Im.CollabList: page request error",e)}));babelHelpers.classPrivateFieldLooseBase(this,m)[m]++;n.Logger.warn(`Im.CollabList: ${e?"First":babelHelpers.classPrivateFieldLooseBase(this,m)[m]} page request result`,s);const{hasNextPage:i}=s;babelHelpers.classPrivateFieldLooseBase(this,p)[p]=babelHelpers.classPrivateFieldLooseBase(this,M)[M](s);if(!i){babelHelpers.classPrivateFieldLooseBase(this,u)[u]=false}babelHelpers.classPrivateFieldLooseBase(this,v)[v]=false;return babelHelpers.classPrivateFieldLooseBase(this,P)[P](s)}function C(e){const{users:t,chats:s,messages:i,files:r,recentItems:n}=e;const o=babelHelpers.classPrivateFieldLooseBase(this,f)[f](s,n);const c=(new l.UserManager).setUsersToModel(t);const d=a.Core.getStore().dispatch("chats/set",o);const g=a.Core.getStore().dispatch("messages/store",i);const h=a.Core.getStore().dispatch("files/set",r);const b=a.Core.getStore().dispatch("recent/setCollab",n);return Promise.all([c,d,g,h,b])}function F(e,t){const s={};e.forEach((e=>{s[e.id]=e}));t.forEach((e=>{const{counter:t,chatId:i}=e;if(t===0){return}s[i]={...s[i],counter:t}}));return Object.values(s)}function H(e){const t=babelHelpers.classPrivateFieldLooseBase(this,B)[B](e);if(t.length===0){return""}let s=t[0].date;t.forEach((e=>{if(e.date<s){s=e.date}}));return s}function _(e){const{messages:t,recentItems:s}=e;return t.filter((e=>{const t=e.chat_id;const i=s.find((e=>e.chatId===t));return i.pinned===false}))}class x extends g.RecentMenu{getMenuItems(){return[this.getUnreadMessageItem(),this.getPinMessageItem(),this.getMuteItem()]}getOpenItem(){return{text:o.Loc.getMessage("IM_LIB_MENU_OPEN"),onclick:()=>{d.LayoutManager.getInstance().setLayout({name:c.Layout.collab.name,entityId:this.context.dialogId});this.menuInstance.close()}}}}const X={name:"CollabList",components:{EmptyState:h,LoadingState:s.ListLoadingState,RecentItem:i.RecentItem},emits:["chatClick"],data(){return{isLoading:false,isLoadingNextPage:false,firstPageLoaded:false}},computed:{collection(){return this.$store.getters["recent/getCollabCollection"]},preparedItems(){return[...this.collection].sort(((e,t)=>{const s=this.$store.getters["messages/getById"](e.messageId);const i=this.$store.getters["messages/getById"](t.messageId);return i.date-s.date}))},pinnedItems(){return this.preparedItems.filter((e=>e.pinned===true))},generalItems(){return this.preparedItems.filter((e=>e.pinned===false))},isEmptyCollection(){return this.collection.length===0}},created(){this.contextMenuManager=new x},beforeUnmount(){this.contextMenuManager.destroy()},async activated(){this.isLoading=true;await this.getRecentService().loadFirstPage();this.firstPageLoaded=true;this.isLoading=false},methods:{async onScroll(e){this.contextMenuManager.close();if(!t.Utils.dom.isOneScreenRemaining(e.target)||!this.getRecentService().hasMoreItemsToLoad){return}this.isLoadingNextPage=true;await this.getRecentService().loadNextPage();this.isLoadingNextPage=false},onClick(e){this.$emit("chatClick",e.dialogId)},onRightClick(e,t){t.preventDefault();this.contextMenuManager.openMenu(e,t.currentTarget)},getRecentService(){if(!this.service){this.service=new I}return this.service},loc(e){return this.$Bitrix.Loc.getMessage(e)}},template:`\n\t\t<div class="bx-im-list-collab__container">\n\t\t\t<LoadingState v-if="isLoading && !firstPageLoaded" />\n\t\t\t<div v-else @scroll="onScroll" class="bx-im-list-collab__scroll-container">\n\t\t\t\t<EmptyState v-if="isEmptyCollection" />\n\t\t\t\t<div v-if="pinnedItems.length > 0" class="bx-im-list-collab__pinned_container">\n\t\t\t\t\t<RecentItem\n\t\t\t\t\t\tv-for="item in pinnedItems"\n\t\t\t\t\t\t:key="item.dialogId"\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t@click="onClick(item)"\n\t\t\t\t\t\t@click.right="onRightClick(item, $event)"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-list-collab__general_container">\n\t\t\t\t\t<RecentItem\n\t\t\t\t\t\tv-for="item in generalItems"\n\t\t\t\t\t\t:key="item.dialogId"\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t@click="onClick(item)"\n\t\t\t\t\t\t@click.right="onRightClick(item, $event)"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<LoadingState v-if="isLoadingNextPage" />\n\t\t\t</div>\n\t\t</div>\n\t`};e.CollabList=X})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Elements,BX.Messenger.v2.Component.List,BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=collab-list.bundle.map.js