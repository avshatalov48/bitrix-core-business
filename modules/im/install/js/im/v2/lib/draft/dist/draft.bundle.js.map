{"version":3,"file":"draft.bundle.js","sources":["../src/indexed-db-manager.js","../src/draft.js","../src/copilot-draft.js"],"sourcesContent":["import { Dexie } from 'ui.dexie';\n\nimport { LocalStorageManager } from 'im.v2.lib.local-storage';\n\nconst DB_NAME = 'bx-im-drafts';\n\nconst recentDraftLocalStorageKey = 'recentDraft';\nconst copilotDraftLocalStorageKey = 'copilotDraft';\n\nexport class IndexedDbManager\n{\n\tdb: Dexie;\n\tstatic instance: IndexedDbManager;\n\n\tstatic getInstance(): IndexedDbManager\n\t{\n\t\tif (!this.instance)\n\t\t{\n\t\t\tthis.instance = new this();\n\t\t}\n\n\t\treturn this.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.db = new Dexie(DB_NAME);\n\t\tthis.db.version(1).stores({\n\t\t\tdrafts: '',\n\t\t});\n\t}\n\n\tasync migrateFromLocalStorage()\n\t{\n\t\tconst migrationStatus = await this.db.drafts.get('migration_status');\n\t\tif (migrationStatus)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst recentDrafts = LocalStorageManager.getInstance().get(recentDraftLocalStorageKey, {});\n\t\tthis.set(recentDraftLocalStorageKey, recentDrafts);\n\t\tLocalStorageManager.getInstance().remove(recentDraftLocalStorageKey);\n\n\t\tconst copilotDrafts = LocalStorageManager.getInstance().get(copilotDraftLocalStorageKey, {});\n\t\tthis.set(copilotDraftLocalStorageKey, copilotDrafts);\n\t\tLocalStorageManager.getInstance().remove(copilotDraftLocalStorageKey);\n\n\t\tthis.setMigrationFinished();\n\t}\n\n\tset(key: string, value: any)\n\t{\n\t\tthis.db.drafts.put(value, key);\n\t}\n\n\tsetMigrationFinished()\n\t{\n\t\tconst result = {\n\t\t\t[recentDraftLocalStorageKey]: true,\n\t\t\t[copilotDraftLocalStorageKey]: true,\n\t\t};\n\n\t\tthis.db.drafts.put(result, 'migration_status');\n\t}\n\n\tasync get(key: string, defaultValue = null): Promise<any>\n\t{\n\t\tawait this.migrateFromLocalStorage();\n\t\tconst value = await this.db.drafts.get(key);\n\n\t\treturn value || defaultValue;\n\t}\n}\n","import { Type } from 'main.core';\nimport { EventEmitter, BaseEvent } from 'main.core.events';\n\nimport { Logger } from 'im.v2.lib.logger';\nimport { Core } from 'im.v2.application.core';\nimport { ChatType, EventType, Layout, TextareaPanelType } from 'im.v2.const';\n\nimport { IndexedDbManager } from './indexed-db-manager';\n\nimport type { JsonObject } from 'main.core';\nimport type { OnLayoutChangeEvent } from 'im.v2.const';\ntype TextareaPanelTypeItem = $Values<typeof TextareaPanelType>;\ntype Draft = {\n\ttext?: string,\n\tpanelType?: TextareaPanelTypeItem,\n\tpanelMessageId?: number,\n\tmentions?: JsonObject\n};\n\nconst WRITE_TO_STORAGE_TIMEOUT = 1000;\nconst SHOW_DRAFT_IN_RECENT_TIMEOUT = 1500;\n\nconst STORAGE_KEY = 'recentDraft';\n\nconst NOT_AVAILABLE_CHAT_TYPES = new Set([ChatType.comment]);\n\nexport class DraftManager\n{\n\tstatic instance: DraftManager = null;\n\n\tinited: boolean = false;\n\tinitPromise: Promise;\n\tinitPromiseResolver: () => void;\n\tdrafts: { [dialogId: string]: Draft } = {};\n\n\tstatic getInstance(): DraftManager\n\t{\n\t\tif (!DraftManager.instance)\n\t\t{\n\t\t\tDraftManager.instance = new DraftManager();\n\t\t}\n\n\t\treturn DraftManager.instance;\n\t}\n\n\tconstructor()\n\t{\n\t\tthis.initPromise = new Promise((resolve) => {\n\t\t\tthis.initPromiseResolver = resolve;\n\t\t});\n\t\tEventEmitter.subscribe(EventType.layout.onLayoutChange, this.onLayoutChange.bind(this));\n\t}\n\n\tasync initDraftHistory()\n\t{\n\t\tif (this.inited)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.inited = true;\n\t\tlet draftHistory = null;\n\t\ttry\n\t\t{\n\t\t\tdraftHistory = await IndexedDbManager.getInstance().get(this.getStorageKey(), {});\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error('DraftManager: error initing draft history', error);\n\t\t\tthis.initPromiseResolver();\n\n\t\t\treturn;\n\t\t}\n\t\tthis.fillDraftsFromStorage(draftHistory);\n\n\t\tLogger.warn('DraftManager: initDrafts:', this.drafts);\n\t\tthis.initPromiseResolver();\n\t\tthis.setRecentListDraftText();\n\t}\n\n\tready(): Promise\n\t{\n\t\treturn this.initPromise;\n\t}\n\n\tfillDraftsFromStorage(draftHistory: { [dialogId: string]: Draft }): void\n\t{\n\t\tif (!Type.isPlainObject(draftHistory))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tObject.entries(draftHistory).forEach(([dialogId, draft]) => {\n\t\t\tif (!Type.isPlainObject(draft))\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.drafts[dialogId] = draft;\n\t\t});\n\t}\n\n\tsetDraftText(dialogId: number, text: string): void\n\t{\n\t\tif (!this.drafts[dialogId])\n\t\t{\n\t\t\tthis.drafts[dialogId] = {};\n\t\t}\n\t\tthis.drafts[dialogId].text = text.trim();\n\n\t\tthis.refreshSaveTimeout();\n\t}\n\n\tsetDraftPanel(dialogId: number, panelType: TextareaPanelTypeItem, messageId: number): void\n\t{\n\t\tif (!this.drafts[dialogId])\n\t\t{\n\t\t\tthis.drafts[dialogId] = {};\n\t\t}\n\t\tthis.drafts[dialogId].panelType = panelType;\n\t\tthis.drafts[dialogId].panelMessageId = messageId;\n\n\t\tthis.refreshSaveTimeout();\n\t}\n\n\tsetDraftMentions(dialogId: number, mentions: JsonObject): void\n\t{\n\t\tif (!this.drafts[dialogId])\n\t\t{\n\t\t\tthis.drafts[dialogId] = {};\n\t\t}\n\t\tthis.drafts[dialogId].mentions = mentions;\n\n\t\tthis.refreshSaveTimeout();\n\t}\n\n\tasync getDraft(dialogId: number): Promise<Draft>\n\t{\n\t\tawait this.initPromise;\n\t\tconst draft = this.drafts[dialogId] ?? {};\n\n\t\treturn Promise.resolve(draft);\n\t}\n\n\tclearDraft(dialogId: string)\n\t{\n\t\tdelete this.drafts[dialogId];\n\t\tthis.setRecentItemDraftText(dialogId, '');\n\t}\n\n\tsetRecentListDraftText()\n\t{\n\t\tObject.entries(this.drafts).forEach(([dialogId, draft]) => {\n\t\t\tthis.setRecentItemDraftText(dialogId, draft.text ?? '');\n\t\t});\n\t}\n\n\tsetRecentItemDraftText(dialogId: number, text: string)\n\t{\n\t\tif (!this.canSetRecentItemDraftText(dialogId))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvoid Core.getStore().dispatch(this.getDraftMethodName(), {\n\t\t\tid: dialogId,\n\t\t\ttext,\n\t\t});\n\t}\n\n\tonLayoutChange(event: BaseEvent<OnLayoutChangeEvent>)\n\t{\n\t\tconst { from } = event.getData();\n\t\tif (from.name !== this.getLayoutName() || from.entityId === '')\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialogId = from.entityId;\n\t\tsetTimeout(async () => {\n\t\t\tconst { text = '' } = await this.getDraft(dialogId);\n\t\t\tthis.setRecentItemDraftText(dialogId, text);\n\t\t}, SHOW_DRAFT_IN_RECENT_TIMEOUT);\n\t}\n\n\trefreshSaveTimeout()\n\t{\n\t\tclearTimeout(this.writeToStorageTimeout);\n\t\tthis.writeToStorageTimeout = setTimeout(() => {\n\t\t\tthis.saveToIndexedDb();\n\t\t}, WRITE_TO_STORAGE_TIMEOUT);\n\t}\n\n\tsaveToIndexedDb()\n\t{\n\t\tIndexedDbManager.getInstance().set(this.getStorageKey(), this.prepareDrafts());\n\t}\n\n\tprepareDrafts(): { [dialogId: string]: Draft }\n\t{\n\t\tconst result = {};\n\t\tObject.entries(this.drafts).forEach(([dialogId, draft]) => {\n\t\t\tif (!draft.text && !draft.panelType)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (draft.panelType === TextareaPanelType.edit)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult[dialogId] = {\n\t\t\t\ttext: draft.text,\n\t\t\t\tmentions: draft.mentions,\n\t\t\t};\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tgetLayoutName(): string\n\t{\n\t\treturn Layout.chat.name;\n\t}\n\n\tgetStorageKey(): string\n\t{\n\t\treturn STORAGE_KEY;\n\t}\n\n\tgetDraftMethodName(): string\n\t{\n\t\treturn 'recent/setRecentDraft';\n\t}\n\n\tcanSetRecentItemDraftText(dialogId: string): boolean\n\t{\n\t\tconst chat = Core.getStore().getters['chats/get'](dialogId);\n\t\tif (!chat)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !NOT_AVAILABLE_CHAT_TYPES.has(chat.type);\n\t}\n}\n","import { Layout } from 'im.v2.const';\n\nimport { DraftManager } from './draft';\n\nconst STORAGE_KEY = 'copilotDraft';\n\nexport class CopilotDraftManager extends DraftManager\n{\n\tstatic instance: CopilotDraftManager = null;\n\n\tstatic getInstance(): CopilotDraftManager\n\t{\n\t\tif (!CopilotDraftManager.instance)\n\t\t{\n\t\t\tCopilotDraftManager.instance = new CopilotDraftManager();\n\t\t}\n\n\t\treturn CopilotDraftManager.instance;\n\t}\n\n\tgetLayoutName(): string\n\t{\n\t\treturn Layout.copilot.name;\n\t}\n\n\tgetStorageKey(): string\n\t{\n\t\treturn STORAGE_KEY;\n\t}\n\n\tgetDraftMethodName(): string\n\t{\n\t\treturn 'recent/setCopilotDraft';\n\t}\n}\n"],"names":["DB_NAME","recentDraftLocalStorageKey","copilotDraftLocalStorageKey","IndexedDbManager","getInstance","instance","constructor","db","Dexie","version","stores","drafts","migrateFromLocalStorage","migrationStatus","get","recentDrafts","LocalStorageManager","set","remove","copilotDrafts","setMigrationFinished","key","value","put","result","defaultValue","WRITE_TO_STORAGE_TIMEOUT","SHOW_DRAFT_IN_RECENT_TIMEOUT","STORAGE_KEY","NOT_AVAILABLE_CHAT_TYPES","Set","ChatType","comment","DraftManager","inited","initPromise","Promise","resolve","initPromiseResolver","EventEmitter","subscribe","EventType","layout","onLayoutChange","bind","initDraftHistory","draftHistory","getStorageKey","error","console","fillDraftsFromStorage","Logger","warn","setRecentListDraftText","ready","Type","isPlainObject","Object","entries","forEach","dialogId","draft","setDraftText","text","trim","refreshSaveTimeout","setDraftPanel","panelType","messageId","panelMessageId","setDraftMentions","mentions","getDraft","clearDraft","setRecentItemDraftText","canSetRecentItemDraftText","Core","getStore","dispatch","getDraftMethodName","id","event","from","getData","name","getLayoutName","entityId","setTimeout","clearTimeout","writeToStorageTimeout","saveToIndexedDb","prepareDrafts","TextareaPanelType","edit","Layout","chat","getters","has","type","CopilotDraftManager","copilot"],"mappings":"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"}