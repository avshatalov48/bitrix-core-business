this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,i,n,s,a,r,c,o){"use strict";const l={name:"RecentItem",components:{Avatar:o.Avatar},props:{item:{type:Object,required:true}},data(){return{}},computed:{AvatarSize:()=>o.AvatarSize,recentItem(){return this.item},formattedCounter(){return this.dialog.counter>99?"99+":this.dialog.counter.toString()},dialog(){return this.$store.getters["chats/get"](this.recentItem.dialogId,true)},isUser(){return this.dialog.type===c.ChatType.user},isChatMuted(){if(this.isUser){return false}const t=this.dialog.muteList.find((t=>t===r.Core.getUserId()));return Boolean(t)},invitation(){return this.recentItem.invitation},wrapClasses(){return{"--pinned":this.recentItem.pinned}},itemClasses(){return{"--no-counter":this.dialog.counter===0}}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div :data-id="recentItem.dialogId" :class="wrapClasses" class="bx-im-list-recent-compact-item__wrap">\n\t\t\t<div :class="itemClasses" class="bx-im-list-recent-compact-item__container" ref="container">\n\t\t\t\t<div class="bx-im-list-recent-compact-item__avatar_container">\n\t\t\t\t\t<div v-if="invitation.isActive" class="bx-im-list-recent-compact-item__avatar_invitation"></div>\n\t\t\t\t\t<Avatar v-else :dialogId="recentItem.dialogId" :size="AvatarSize.M" :withSpecialTypes="false" />\n\t\t\t\t\t<div v-if="dialog.counter > 0" :class="{'--muted': isChatMuted}" class="bx-im-list-recent-compact-item__avatar_counter">\n\t\t\t\t\t\t{{ formattedCounter }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const d={name:"ActiveCall",components:{Avatar:o.Avatar},props:{item:{type:Object,required:true}},emits:["click"],computed:{AvatarSize:()=>o.AvatarSize,activeCall(){return this.item}},methods:{onClick(t){const e=this.$store.getters["recent/get"](this.activeCall.dialogId);if(!e){return}this.$emit("click",{item:e,$event:t})},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div :data-id="activeCall.dialogId" class="bx-im-list-recent-compact-item__wrap">\n\t\t\t<div @click="onClick" class="bx-im-list-recent-compact-item__container">\n\t\t\t\t<div class="bx-im-list-recent-compact-item__avatar_container">\n\t\t\t\t\t<Avatar :dialogId="activeCall.dialogId" :size="AvatarSize.M" :withSpecialTypes="false" />\n\t\t\t\t\t<div class="bx-im-list-recent-compact-active-call__icon" :class="'--' + activeCall.state"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};const m={name:"EmptyState",data(){return{}},methods:{loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-list-recent-compact__empty">\n\t\t\t{{ loc('IM_LIST_RECENT_COMPACT_EMPTY') }}\n\t\t</div>\n\t`};const v={name:"RecentList",components:{RecentItem:l,ActiveCall:d,EmptyState:m},emits:["chatClick"],data(){return{}},computed:{collection(){return this.getRecentService().getCollection()},preparedItems(){const t=this.collection.filter((t=>{let e=true;if(!this.showBirthdays&&t.isBirthdayPlaceholder){e=false}if(t.isFakeElement&&!this.isFakeItemNeeded(t)){e=false}return e}));return[...t].sort(((t,e)=>{const i=this.$store.getters["recent/getMessageDate"](t.dialogId);const n=this.$store.getters["recent/getMessageDate"](e.dialogId);return n-i}))},activeCalls(){return this.$store.getters["recent/calls/get"]},pinnedItems(){return this.preparedItems.filter((t=>t.pinned===true))},generalItems(){return this.preparedItems.filter((t=>t.pinned===false))},showBirthdays(){return this.$store.getters["application/settings/get"](c.Settings.recent.showBirthday)},showInvited(){return this.$store.getters["application/settings/get"](c.Settings.recent.showInvited)}},async created(){this.contextMenuManager=new n.RecentMenu;this.managePreloadedList();await this.getRecentService().loadFirstPage()},beforeUnmount(){this.contextMenuManager.destroy()},methods:{onClick(t){s.Messenger.openChat(t.dialogId)},onRightClick(t,i){if(e.Utils.key.isCombination(i,"Alt+Shift")){return}const n={...t,compactMode:true};this.contextMenuManager.openMenu(n,i.currentTarget);i.preventDefault()},managePreloadedList(){const{preloadedList:t}=r.Core.getApplicationData();if(!t){return}this.getRecentService().setPreloadedData(t)},isFakeItemNeeded(t){const e=this.$store.getters["chats/get"](t.dialogId,true);const i=e.type===c.ChatType.user;const n=i&&this.showBirthdays&&this.$store.getters["users/hasBirthday"](t.dialogId);return this.showInvited||n},getRecentService(){if(!this.service){this.service=i.RecentService.getInstance()}return this.service},loc(t){return this.$Bitrix.Loc.getMessage(t)}},template:`\n\t\t<div class="bx-im-messenger__scope bx-im-list-recent-compact__container">\n\t\t\t<div v-if="activeCalls.length > 0" class="bx-im-list-recent-compact__calls_container">\n\t\t\t\t<ActiveCall\n\t\t\t\t\tv-for="activeCall in activeCalls"\n\t\t\t\t\t:key="activeCall.dialogId"\n\t\t\t\t\t:item="activeCall"\n\t\t\t\t\t@click="onClick"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div class="bx-im-list-recent-compact__scroll-container">\n\t\t\t\t<div v-if="pinnedItems.length > 0" class="bx-im-list-recent-compact__pinned_container">\n\t\t\t\t\t<RecentItem\n\t\t\t\t\t\tv-for="item in pinnedItems"\n\t\t\t\t\t\t:key="item.dialogId"\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t@click="onClick(item)"\n\t\t\t\t\t\t@click.right="onRightClick(item, $event)"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class="bx-im-list-recent-compact__general_container">\n\t\t\t\t\t<RecentItem\n\t\t\t\t\t\tv-for="item in generalItems"\n\t\t\t\t\t\t:key="item.dialogId"\n\t\t\t\t\t\t:item="item"\n\t\t\t\t\t\t@click="onClick(item)"\n\t\t\t\t\t\t@click.right="onRightClick(item, $event)"\n\t\t\t\t\t/>\n\t\t\t\t</div>\t\n\t\t\t\t<EmptyState v-if="collection.length === 0" />\n\t\t\t</div>\n\t\t</div>\n\t`};t.RecentList=v})(this.BX.Messenger.v2.Component.List=this.BX.Messenger.v2.Component.List||{},BX.Messenger.v2.Lib,BX.Messenger.v2.Provider.Service,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib,BX.Messenger.v2.Css,BX.Messenger.v2.Application,BX.Messenger.v2.Const,BX.Messenger.v2.Component.Elements);
//# sourceMappingURL=recent-compact.bundle.map.js