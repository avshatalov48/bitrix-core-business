this.BX=this.BX||{};this.BX.UI=this.BX.UI||{};(function(e,t,n){"use strict";function s(e,n){if(!t.Type.isArray(e)){throw new TypeError("array is not a array")}if(!t.Type.isInteger(n)){throw new TypeError("index is not a integer")}const s=n<0?e.length+n:n;return e[s]}class i extends n.BBCodeScheme{getTagScheme(e){if(e==="code"){return new n.BBCodeTagScheme({name:"code",convertChild:(e,t)=>{if(["#linebreak","#tab","#text"].includes(e.getName())){return e}return t.createText(e.toString())}})}return new n.BBCodeTagScheme({name:"any"})}isAllowedTag(e){return true}isChildAllowed(e,t){return true}}const r=/\[(\/)?(\w+|\*)(.*?)]/gs;const c=e=>["\n","\t"].includes(e);const a=e=>["list","ul","ol"].includes(String(e).toLowerCase());const o=e=>["*","li"].includes(String(e).toLowerCase());const l=new i;class d{constructor(e={}){if(e.scheme){this.setScheme(e.scheme)}else{this.setScheme(new n.DefaultBBCodeScheme)}if(t.Type.isFunction(e.onUnknown)){this.setOnUnknown(e.onUnknown)}else{this.setOnUnknown(d.defaultOnUnknownHandler)}}setScheme(e){this.scheme=e}getScheme(){return this.scheme}setOnUnknown(e){if(!t.Type.isFunction(e)){throw new TypeError("handler is not a function")}this.onUnknownHandler=e}getOnUnknownHandler(){return this.onUnknownHandler}static defaultOnUnknownHandler(e,t){if(e.getType()===n.BBCodeNode.ELEMENT_NODE){const n=e.getName();if(["left","center","right","justify"].includes(n)){e.replace(t.createElement({name:"p",children:e.getChildren()}))}else if(["background","color","size"].includes(n)){e.replace(t.createElement({name:"b",children:e.getChildren()}))}else{const n=e.getOpeningTag();const s=e.getClosingTag();e.replace(t.createText(n),...e.getChildren(),t.createText(s))}}}static toLowerCase(e){if(t.Type.isStringFilled(e)){return e.toLowerCase()}return e}parseText(e){if(t.Type.isStringFilled(e)){return[...e].reduce(((e,n)=>{if(c(n)){e.push(n)}else{const i=s(e,-1);if(c(i)||t.Type.isNil(i)){e.push(n)}else{e[e.length-1]+=n}}return e}),[]).map((e=>{if(e==="\n"){return l.createNewLine()}if(e==="\t"){return l.createTab()}return l.createText({content:e})}))}return[]}static findNextTagIndex(e,t=0){const n=e.slice(t);const[s]=n.match(new RegExp(r))||[];if(s){return e.indexOf(s,t)}return-1}static trimQuotes(e){const t=String(e);if(/^["'].*["']$/g.test(t)){return t.slice(1,-1)}return e}parseAttributes(e){const n={value:"",attributes:[]};if(t.Type.isStringFilled(e)){if(e.startsWith("=")){n.value=d.trimQuotes(e.slice(1));return n}return e.trim().split(" ").filter(Boolean).reduce(((e,t)=>{const[n,s=""]=t.split("=");e.attributes.push([d.toLowerCase(n),d.trimQuotes(s)]);return e}),n)}return n}parse(e){const t=l.createRoot();const i=d.findNextTagIndex(e);if(i!==0){const n=i===-1?e:e.slice(0,i);t.appendChild(...this.parseText(n))}const c=[t];const h=[];let u=null;let f=0;e.replace(r,((t,n,s,i,r)=>{const g=Boolean(n)===false;const p=t.length+r;const m=e.slice(p);const T=this.parseAttributes(i);const w=d.toLowerCase(s);let C=c[f];if(g){const n=!m.includes(`[/${s}]`);if(n&&!o(w)){const n=this.getScheme().getTagScheme(w);const s=n&&n.isVoid();if(s){u=l.createElement({name:w,value:T.value,attributes:Object.fromEntries(T.attributes)});u.setScheme(this.getScheme());C.appendChild(u)}else{C.appendChild(l.createText(t))}const i=d.findNextTagIndex(e,p);if(i!==0){const t=i===-1?m:e.slice(p,i);C.appendChild(...this.parseText(t))}}else{if(o(w)&&u&&o(u.getName())){f--;C=c[f]}u=l.createElement({name:w,value:T.value,attributes:Object.fromEntries(T.attributes)});const t=d.findNextTagIndex(e,p);if(t!==0){const n=t===-1?m:e.slice(p,t);u.appendChild(...this.parseText(n))}C.appendChild(u);f++;c[f]=u;h.push(w)}}else{if(h.includes(w)){f--;const e=h.indexOf(w);h.splice(e,1)}else{c[f].appendChild(l.createText(t))}if(a(w)&&f>0){f--}const n=d.findNextTagIndex(e,p);if(n!==0&&c[f]){const t=n===-1?m:e.slice(p,n);c[f].appendChild(...this.parseText(t))}if(o(c[f].getName())&&f>0){f--}}}));const g=e=>{let t=false;return e.getChildren().reduceRight(((e,n,s)=>{if(!t&&n.getName()==="#linebreak"){e.push(s)}else if(!t&&n.getName()!=="#tab"){t=true}return e}),[])};n.BBCodeNode.flattenAst(t).forEach((e=>{if(e.getName()==="*"){const t=g(e);if(t.length===1){e.setChildren(e.getChildren().slice(0,s(t,0)))}if(t.length>1&&(t&2)===0){e.setChildren(e.getChildren().slice(0,s(t,0)))}}}));t.setScheme(this.getScheme(),this.getOnUnknownHandler());return t}}e.BBCodeParser=d})(this.BX.UI.Bbcode=this.BX.UI.Bbcode||{},BX,BX.UI.Bbcode);
//# sourceMappingURL=parser.bundle.map.js