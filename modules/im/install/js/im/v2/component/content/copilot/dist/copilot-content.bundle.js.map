{"version":3,"file":"copilot-content.bundle.js","sources":["../src/components/add-to-chat-hint.js","../src/components/chat-header.js","../src/components/textarea.js","../src/classes/message-menu.js","../src/components/message-list.js","../src/components/dialog.js","../src/const/const.js","../src/components/content.js","../src/components/empty-state.js","../src/copilot-content.js"],"sourcesContent":["import { PopupOptions } from 'main.popup';\n\nimport { MessengerPopup } from 'im.v2.component.elements';\n\nimport '../css/add-to-chat-hint.css';\n\nconst POPUP_ID = 'im-add-to-chat-hint-popup';\n\n// @vue/component\nexport const AddToChatHint = {\n\tname: 'AddToChatHint',\n\tcomponents: { MessengerPopup },\n\tprops:\n\t{\n\t\tbindElement: {\n\t\t\ttype: Object,\n\t\t\trequired: true,\n\t\t},\n\t},\n\temits: ['close', 'hide'],\n\tcomputed:\n\t{\n\t\tPOPUP_ID: () => POPUP_ID,\n\t\tconfig(): PopupOptions\n\t\t{\n\t\t\treturn {\n\t\t\t\tdarkMode: true,\n\t\t\t\tbindElement: this.bindElement,\n\t\t\t\tangle: true,\n\t\t\t\twidth: 346,\n\t\t\t\tcloseIcon: true,\n\t\t\t\toffsetLeft: 8,\n\t\t\t\tclassName: 'bx-im-copilot-add-to-chat-hint__scope',\n\t\t\t\tcontentBorderRadius: 0,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<MessengerPopup\n\t\t\tv-slot=\"{enableAutoHide, disableAutoHide}\"\n\t\t\t:config=\"config\"\n\t\t\t@close=\"$emit('close')\"\n\t\t\t:id=\"POPUP_ID\"\n\t\t>\n\t\t\t<div class=\"bx-im-copilot-add-to-chat-hint__title\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_TITLE') }}\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<div class=\"bx-im-copilot-add-to-chat-hint__description\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_DESCRIPTION') }}\n\t\t\t</div>\n\t\t\t<br />\n\t\t\t<button class=\"bx-im-copilot-add-to-chat-hint__hide\" @click=\"$emit('hide')\">\n\t\t\t\t{{ loc('IM_CONTENT_COPILOT_ADD_TO_CHAT_HINT_HIDE') }}\n\t\t\t</button>\n\t\t</MessengerPopup>\n\t`,\n};\n","import 'ui.notification';\nimport { Loc } from 'main.core';\nimport { EventEmitter } from 'main.core.events';\n\nimport { PromoManager } from 'im.v2.lib.promo';\nimport { ChatService } from 'im.v2.provider.service';\nimport { EditableChatTitle, AvatarSize, ChatAvatar } from 'im.v2.component.elements';\nimport { ChatHeader } from 'im.v2.component.content.elements';\nimport { EventType, PromoId, SidebarDetailBlock } from 'im.v2.const';\n\nimport { AddToChatHint } from './add-to-chat-hint';\n\nimport '../css/chat-header.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { ImModelChat } from 'im.v2.model';\n\n// @vue/component\nexport const CopilotChatHeader = {\n\tname: 'CopilotChatHeader',\n\tcomponents: { ChatHeader, EditableChatTitle, ChatAvatar, AddToChatHint },\n\tinject: ['currentSidebarPanel'],\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tshowAddToChatPopup: false,\n\t\t\tshowAddToChatHint: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tAvatarSize: () => AvatarSize,\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.dialogId, true);\n\t\t},\n\t\tisInited(): boolean\n\t\t{\n\t\t\treturn this.dialog.inited;\n\t\t},\n\t\tisGroupCopilotChat(): boolean\n\t\t{\n\t\t\treturn this.dialog.userCounter > 2;\n\t\t},\n\t\tcopilotRole(): string\n\t\t{\n\t\t\tconst role = this.$store.getters['copilot/chats/getRole'](this.dialogId);\n\n\t\t\treturn role?.name ?? '';\n\t\t},\n\t\tformattedUserCounter(): string\n\t\t{\n\t\t\treturn Loc.getMessagePlural('IM_CONTENT_COPILOT_HEADER_USER_COUNT', this.dialog.userCounter, {\n\t\t\t\t'#COUNT#': this.dialog.userCounter,\n\t\t\t});\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonNewTitleSubmit(newTitle: string)\n\t\t{\n\t\t\tthis.getChatService().renameChat(this.dialogId, newTitle).catch(() => {\n\t\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\t\tcontent: this.loc('IM_CONTENT_CHAT_HEADER_RENAME_ERROR'),\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tonHintHide()\n\t\t{\n\t\t\tvoid PromoManager.getInstance().markAsWatched(PromoId.addUsersToCopilotChat);\n\t\t\tthis.showAddToChatHint = false;\n\t\t},\n\t\tonMembersClick()\n\t\t{\n\t\t\tif (!this.isInited)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.currentSidebarPanel === SidebarDetailBlock.members)\n\t\t\t{\n\t\t\t\tEventEmitter.emit(EventType.sidebar.close, { panel: SidebarDetailBlock.members });\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tEventEmitter.emit(EventType.sidebar.open, {\n\t\t\t\tpanel: SidebarDetailBlock.members,\n\t\t\t\tdialogId: this.dialogId,\n\t\t\t});\n\t\t},\n\t\thandleAddToChatHint(): void\n\t\t{\n\t\t\tthis.showAddToChatHint = PromoManager.getInstance().needToShow(PromoId.addUsersToCopilotChat);\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatHeader\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:withSearchButton=\"false\"\n\t\t\tclass=\"bx-im-copilot-header__container\"\n\t\t\t@buttonPanelReady=\"handleAddToChatHint\"\n\t\t>\n\t\t\t<template #left>\n\t\t\t\t<div class=\"bx-im-copilot-header__avatar\">\n\t\t\t\t\t<ChatAvatar\n\t\t\t\t\t\t:avatarDialogId=\"dialogId\"\n\t\t\t\t\t\t:contextDialogId=\"dialogId\"\n\t\t\t\t\t\t:withSpecialTypes=\"false\"\n\t\t\t\t\t\t:size=\"AvatarSize.L\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"bx-im-copilot-header__info\">\n\t\t\t\t\t<EditableChatTitle :dialogId=\"dialogId\" @newTitleSubmit=\"onNewTitleSubmit\" />\n\t\t\t\t\t<div\n\t\t\t\t\t\tv-if=\"isGroupCopilotChat\"\n\t\t\t\t\t\t:title=\"loc('IM_CONTENT_COPILOT_HEADER_OPEN_MEMBERS_TITLE')\"\n\t\t\t\t\t\t@click=\"onMembersClick\"\n\t\t\t\t\t\tclass=\"bx-im-copilot-header__subtitle --click\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{{ formattedUserCounter }}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div v-else class=\"bx-im-copilot-header__subtitle\">\n\t\t\t\t\t\t{{ copilotRole }}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</template>\n\t\t\t<template #invite-hint=\"{ inviteButtonRef }\">\n\t\t\t\t<AddToChatHint\n\t\t\t\t\tv-if=\"showAddToChatHint\"\n\t\t\t\t\t:bindElement=\"inviteButtonRef\"\n\t\t\t\t\t@close=\"showAddToChatHint = false\"\n\t\t\t\t\t@hide=\"onHintHide\"\n\t\t\t\t/>\n\t\t\t</template>\n\t\t</ChatHeader>\n\t`,\n};\n","import { ChatTextarea } from 'im.v2.component.textarea';\nimport { CopilotDraftManager } from 'im.v2.lib.draft';\n\n// @vue/component\nexport const CopilotTextarea = {\n\tname: 'CopilotTextarea',\n\tcomponents: { ChatTextarea },\n\tprops: {\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tCopilotDraftManager: () => CopilotDraftManager,\n\t},\n\tmethods:\n\t{\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatTextarea\n\t\t\t:dialogId=\"dialogId\"\n\t\t\t:placeholder=\"this.loc('IM_CONTENT_COPILOT_TEXTAREA_PLACEHOLDER')\"\n\t\t\t:withCreateMenu=\"false\"\n\t\t\t:withMarket=\"false\"\n\t\t\t:withEdit=\"false\"\n\t\t\t:withUploadMenu=\"false\"\n\t\t\t:withSmileSelector=\"false\"\n\t\t\t:draftManagerClass=\"CopilotDraftManager\"\n\t\t/>\n\t`,\n};\n","import { Loc, Runtime } from 'main.core';\n\nimport { MessageMenu } from 'im.v2.component.message-list';\nimport { CopilotManager } from 'im.v2.lib.copilot';\n\nimport type { ImModelChat } from 'im.v2.model';\nimport type { MenuItem } from 'im.v2.lib.menu';\n\nconst CopilotChatContext = Object.freeze({\n\tpersonal: 'chat_copilot_tab_one_by_one',\n\tgroup: 'chat_copilot_tab_multi',\n});\n\nexport class CopilotMessageMenu extends MessageMenu\n{\n\tgetMenuItems(): MenuItem[]\n\t{\n\t\treturn [\n\t\t\tthis.getCopyItem(),\n\t\t\tthis.getFavoriteItem(),\n\t\t\tthis.getForwardItem(),\n\t\t\tthis.getSendFeedbackItem(),\n\t\t\tthis.getDeleteItem(),\n\t\t];\n\t}\n\n\tgetSendFeedbackItem(): MenuItem\n\t{\n\t\tconst copilotManager = new CopilotManager();\n\t\tif (!copilotManager.isCopilotBot(this.context.authorId))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\ttext: Loc.getMessage('IM_CONTENT_COPILOT_CONTEXT_MENU_FEEDBACK'),\n\t\t\tonclick: () => {\n\t\t\t\tvoid this.openForm();\n\t\t\t\tthis.menuInstance.close();\n\t\t\t},\n\t\t};\n\t}\n\n\tasync openForm()\n\t{\n\t\tconst formId = Math.round(Math.random() * 1000);\n\n\t\tawait Runtime.loadExtension(['ui.feedback.form']);\n\t\tBX.UI.Feedback.Form.open({\n\t\t\tid: `im.copilot.feedback-${formId}`,\n\t\t\tforms: [\n\t\t\t\t{ zones: ['es'], id: 684, lang: 'es', sec: 'svvq1x' },\n\t\t\t\t{ zones: ['en'], id: 686, lang: 'en', sec: 'tjwodz' },\n\t\t\t\t{ zones: ['de'], id: 688, lang: 'de', sec: 'nrwksg' },\n\t\t\t\t{ zones: ['com.br'], id: 690, lang: 'com.br', sec: 'kpte6m' },\n\t\t\t\t{ zones: ['ru', 'by', 'kz'], id: 692, lang: 'ru', sec: 'jbujn0' },\n\t\t\t],\n\t\t\tpresets: {\n\t\t\t\tsender_page: this.getCopilotChatContext(),\n\t\t\t\tlanguage: Loc.getMessage('LANGUAGE_ID'),\n\t\t\t\tcp_answer: this.context.text,\n\t\t\t},\n\t\t});\n\t}\n\n\tgetCopilotChatContext(): $Values<typeof CopilotChatContext>\n\t{\n\t\tconst chat: ImModelChat = this.store.getters['chats/get'](this.context.dialogId);\n\t\tif (chat.userCounter <= 2)\n\t\t{\n\t\t\treturn CopilotChatContext.personal;\n\t\t}\n\n\t\treturn CopilotChatContext.group;\n\t}\n}\n","import { DialogStatus } from 'im.v2.component.elements';\nimport { MessageList } from 'im.v2.component.message-list';\n\nimport { CopilotMessageMenu } from '../classes/message-menu';\n\n// @vue/component\nexport const CopilotMessageList = {\n\tname: 'CopilotMessageList',\n\tcomponents: { MessageList, DialogStatus },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tCopilotMessageMenu: () => CopilotMessageMenu,\n\t},\n\ttemplate: `\n\t\t<MessageList :dialogId=\"dialogId\" :messageMenuClass=\"CopilotMessageMenu\" />\n\t`,\n};\n","import { ChatDialog } from 'im.v2.component.dialog.chat';\n\nimport { CopilotMessageList } from './message-list';\n\n// @vue/component\nexport const CopilotDialog = {\n\tname: 'CopilotDialog',\n\tcomponents: { ChatDialog, CopilotMessageList },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\trequired: true,\n\t\t},\n\t},\n\ttemplate: `\n\t\t<ChatDialog :dialogId=\"dialogId\">\n\t\t\t<template #message-list>\n\t\t\t\t<CopilotMessageList :dialogId=\"dialogId\" />\n\t\t\t</template>\n\t\t</ChatDialog>\t\n\t`,\n};\n","export const COPILOT_BACKGROUND_ID = 4;\n","import { BaseChatContent } from 'im.v2.component.content.elements';\n\nimport { CopilotChatHeader } from './chat-header';\nimport { CopilotTextarea } from './textarea';\nimport { CopilotDialog } from './dialog';\nimport { COPILOT_BACKGROUND_ID } from '../const/const';\n\n// @vue/component\nexport const CopilotInternalContent = {\n\tname: 'CopilotInternalContent',\n\tcomponents: { BaseChatContent, CopilotChatHeader, CopilotDialog, CopilotTextarea },\n\tprops:\n\t{\n\t\tdialogId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t},\n\tcomputed:\n\t{\n\t\tCOPILOT_BACKGROUND_ID: () => COPILOT_BACKGROUND_ID,\n\t},\n\ttemplate: `\n\t\t<BaseChatContent :dialogId=\"dialogId\" :backgroundId=\"COPILOT_BACKGROUND_ID\">\n\t\t\t<template #header>\n\t\t\t\t<CopilotChatHeader :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #dialog>\n\t\t\t\t<CopilotDialog :dialogId=\"dialogId\" :key=\"dialogId\" />\n\t\t\t</template>\n\t\t\t<template #textarea=\"{ onTextareaMount }\">\n\t\t\t\t<CopilotTextarea :dialogId=\"dialogId\" :key=\"dialogId\" @mounted=\"onTextareaMount\" />\n\t\t\t</template>\n\t\t</BaseChatContent>\n\t`,\n};\n","import { Messenger } from 'im.public';\nimport { Button as ChatButton, ButtonSize, CopilotRolesDialog } from 'im.v2.component.elements';\nimport { Color } from 'im.v2.const';\nimport { ThemeManager } from 'im.v2.lib.theme';\nimport { CopilotService } from 'im.v2.provider.service';\n\nimport { COPILOT_BACKGROUND_ID } from '../const/const';\n\nimport '../css/empty-state.css';\n\nimport type { JsonObject } from 'main.core';\nimport type { CustomColorScheme } from 'im.v2.component.elements';\nimport type { BackgroundStyle } from 'im.v2.lib.theme';\n\nconst BUTTON_BACKGROUND_COLOR = '#fff';\nconst BUTTON_HOVER_COLOR = '#eee';\nconst BUTTON_TEXT_COLOR = 'rgba(82, 92, 105, 0.9)';\n\n// @vue/component\nexport const EmptyState = {\n\tname: 'EmptyState',\n\tcomponents: { ChatButton, CopilotRolesDialog },\n\tdata(): JsonObject\n\t{\n\t\treturn {\n\t\t\tisCreatingChat: false,\n\t\t\tshowRolesDialog: false,\n\t\t};\n\t},\n\tcomputed:\n\t{\n\t\tButtonSize: () => ButtonSize,\n\t\tbackgroundStyle(): BackgroundStyle\n\t\t{\n\t\t\treturn ThemeManager.getBackgroundStyleById(COPILOT_BACKGROUND_ID);\n\t\t},\n\t\tpreparedText(): string\n\t\t{\n\t\t\treturn this.loc('IM_CONTENT_COPILOT_EMPTY_STATE_MESSAGE_MSGVER_1', {\n\t\t\t\t'#BR#': '\\n',\n\t\t\t});\n\t\t},\n\t\tbuttonColorScheme(): CustomColorScheme\n\t\t{\n\t\t\treturn {\n\t\t\t\tborderColor: Color.transparent,\n\t\t\t\tbackgroundColor: BUTTON_BACKGROUND_COLOR,\n\t\t\t\ticonColor: BUTTON_TEXT_COLOR,\n\t\t\t\ttextColor: BUTTON_TEXT_COLOR,\n\t\t\t\thoverColor: BUTTON_HOVER_COLOR,\n\t\t\t};\n\t\t},\n\t},\n\tmethods:\n\t{\n\t\tonCreateChatClick()\n\t\t{\n\t\t\tthis.showRolesDialog = true;\n\t\t},\n\t\tasync createChat(role): Promise<void>\n\t\t{\n\t\t\tconst roleCode = role.code;\n\t\t\tthis.isCreatingChat = true;\n\t\t\tthis.showRolesDialog = false;\n\n\t\t\tconst newDialogId = await this.getCopilotService().createChat({ roleCode })\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.isCreatingChat = false;\n\t\t\t\t\tthis.showCreateChatError();\n\t\t\t\t});\n\n\t\t\tthis.isCreatingChat = false;\n\t\t\tvoid Messenger.openCopilot(newDialogId);\n\t\t},\n\t\tshowCreateChatError()\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({\n\t\t\t\tcontent: this.loc('IM_CONTENT_COPILOT_EMPTY_STATE_ERROR_CREATING_CHAT'),\n\t\t\t});\n\t\t},\n\t\tgetCopilotService(): CopilotService\n\t\t{\n\t\t\tif (!this.copilotService)\n\t\t\t{\n\t\t\t\tthis.copilotService = new CopilotService();\n\t\t\t}\n\n\t\t\treturn this.copilotService;\n\t\t},\n\t\tloc(phraseCode: string, replacements: {[p: string]: string} = {}): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode, replacements);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<div class=\"bx-im-content-copilot-empty-state__container\" :style=\"backgroundStyle\">\n\t\t\t<div class=\"bx-im-content-copilot-empty-state__content\">\n\t\t\t\t<div class=\"bx-im-content-copilot-empty-state__icon\"></div>\n\t\t\t\t<div class=\"bx-im-content-copilot-empty-state__text\">{{ preparedText }}</div>\n\t\t\t\t<ChatButton\n\t\t\t\t\tclass=\"--black-loader\"\n\t\t\t\t\t:size=\"ButtonSize.XL\"\n\t\t\t\t\t:customColorScheme=\"buttonColorScheme\"\n\t\t\t\t\t:text=\"loc('IM_CONTENT_COPILOT_EMPTY_STATE_ASK_QUESTION')\"\n\t\t\t\t\t:isRounded=\"true\"\n\t\t\t\t\t:isLoading=\"isCreatingChat\"\n\t\t\t\t\t@click=\"onCreateChatClick\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<CopilotRolesDialog \n\t\t\t\tv-if=\"showRolesDialog\"\n\t\t\t\t@selectRole=\"createChat\"\n\t\t\t\t@close=\"showRolesDialog = false\"\n\t\t\t/>\n\t\t</div>\n\t`,\n};\n","import 'ui.notification';\n\nimport { Messenger } from 'im.public';\nimport { ChatService } from 'im.v2.provider.service';\nimport { Logger } from 'im.v2.lib.logger';\nimport { Analytics } from 'im.v2.lib.analytics';\n\nimport { CopilotInternalContent } from './components/content';\nimport { EmptyState } from './components/empty-state';\n\nimport type { ImModelChat, ImModelLayout } from 'im.v2.model';\nimport type { JsonObject } from 'main.core';\n\n// @vue/component\nexport const CopilotContent = {\n\tname: 'CopilotContent',\n\tcomponents: { EmptyState, CopilotInternalContent },\n\tprops:\n\t{\n\t\tentityId: {\n\t\t\ttype: String,\n\t\t\tdefault: '',\n\t\t},\n\t\tcontextMessageId: {\n\t\t\ttype: Number,\n\t\t\tdefault: 0,\n\t\t},\n\t},\n\tdata(): JsonObject\n\t{\n\t\treturn {};\n\t},\n\tcomputed:\n\t{\n\t\tlayout(): ImModelLayout\n\t\t{\n\t\t\treturn this.$store.getters['application/getLayout'];\n\t\t},\n\t\tdialog(): ImModelChat\n\t\t{\n\t\t\treturn this.$store.getters['chats/get'](this.entityId, true);\n\t\t},\n\t},\n\twatch:\n\t{\n\t\tentityId(newValue, oldValue)\n\t\t{\n\t\t\tLogger.warn(`CopilotContent: switching from ${oldValue || 'empty'} to ${newValue}`);\n\t\t\tthis.onChatChange();\n\t\t},\n\t},\n\tcreated()\n\t{\n\t\tif (!this.entityId)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChatChange();\n\t},\n\tmethods:\n\t{\n\t\tasync onChatChange()\n\t\t{\n\t\t\tif (this.entityId === '')\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.inited)\n\t\t\t{\n\t\t\t\tLogger.warn(`CopilotContent: chat ${this.entityId} is already loaded`);\n\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.dialog.loading)\n\t\t\t{\n\t\t\t\tLogger.warn(`CopilotContent: chat ${this.entityId} is loading`);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.layout.contextId)\n\t\t\t{\n\t\t\t\tawait this.loadChatWithContext();\n\t\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tawait this.loadChat();\n\t\t\tAnalytics.getInstance().onOpenChat(this.dialog);\n\t\t},\n\t\tasync loadChatWithContext(): Promise\n\t\t{\n\t\t\tLogger.warn(`CopilotContent: loading chat ${this.entityId} with context - ${this.layout.contextId}`);\n\n\t\t\tawait this.getChatService().loadChatWithContext(this.entityId, this.layout.contextId)\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tif (error.code === 'ACCESS_ERROR')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showNotification(this.loc('IM_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t\t\t\t}\n\t\t\t\t\tLogger.error(error);\n\t\t\t\t\tMessenger.openCopilot();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`CopilotContent: chat ${this.entityId} is loaded with context of ${this.layout.contextId}`);\n\n\t\t\treturn Promise.resolve();\n\t\t},\n\t\tasync loadChat(): Promise\n\t\t{\n\t\t\tLogger.warn(`CopilotContent: loading chat ${this.entityId}`);\n\n\t\t\tawait this.getChatService().loadChatWithMessages(this.entityId)\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconst [firstError] = error;\n\t\t\t\t\tif (firstError.code === 'ACCESS_DENIED')\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.showNotification(this.loc('IM_CONTENT_CHAT_ACCESS_ERROR_MSGVER_1'));\n\t\t\t\t\t}\n\t\t\t\t\tMessenger.openCopilot();\n\t\t\t\t});\n\n\t\t\tLogger.warn(`CopilotContent: chat ${this.entityId} is loaded`);\n\n\t\t\treturn Promise.resolve();\n\t\t},\n\t\tshowNotification(text: string)\n\t\t{\n\t\t\tBX.UI.Notification.Center.notify({ content: text });\n\t\t},\n\t\tgetChatService(): ChatService\n\t\t{\n\t\t\tif (!this.chatService)\n\t\t\t{\n\t\t\t\tthis.chatService = new ChatService();\n\t\t\t}\n\n\t\t\treturn this.chatService;\n\t\t},\n\t\tloc(phraseCode: string): string\n\t\t{\n\t\t\treturn this.$Bitrix.Loc.getMessage(phraseCode);\n\t\t},\n\t},\n\ttemplate: `\n\t\t<EmptyState v-if=\"!entityId\" />\n\t\t<CopilotInternalContent v-else :dialogId=\"entityId\" />\n\t`,\n};\n"],"names":["POPUP_ID","AddToChatHint","name","components","MessengerPopup","props","bindElement","type","Object","required","emits","computed","config","darkMode","angle","width","closeIcon","offsetLeft","className","contentBorderRadius","methods","loc","phraseCode","$Bitrix","Loc","getMessage","template","CopilotChatHeader","ChatHeader","EditableChatTitle","ChatAvatar","inject","dialogId","String","default","data","showAddToChatPopup","showAddToChatHint","AvatarSize","dialog","$store","getters","isInited","inited","isGroupCopilotChat","userCounter","copilotRole","role","formattedUserCounter","getMessagePlural","onNewTitleSubmit","newTitle","getChatService","renameChat","catch","BX","UI","Notification","Center","notify","content","onHintHide","PromoManager","getInstance","markAsWatched","PromoId","addUsersToCopilotChat","onMembersClick","currentSidebarPanel","SidebarDetailBlock","members","EventEmitter","emit","EventType","sidebar","close","panel","open","handleAddToChatHint","needToShow","chatService","ChatService","replacements","CopilotTextarea","ChatTextarea","CopilotDraftManager","CopilotChatContext","freeze","personal","group","CopilotMessageMenu","MessageMenu","getMenuItems","getCopyItem","getFavoriteItem","getForwardItem","getSendFeedbackItem","getDeleteItem","copilotManager","CopilotManager","isCopilotBot","context","authorId","text","onclick","openForm","menuInstance","formId","Math","round","random","Runtime","loadExtension","Feedback","Form","id","forms","zones","lang","sec","presets","sender_page","getCopilotChatContext","language","cp_answer","chat","store","CopilotMessageList","MessageList","DialogStatus","CopilotDialog","ChatDialog","COPILOT_BACKGROUND_ID","CopilotInternalContent","BaseChatContent","BUTTON_BACKGROUND_COLOR","BUTTON_HOVER_COLOR","BUTTON_TEXT_COLOR","EmptyState","ChatButton","CopilotRolesDialog","isCreatingChat","showRolesDialog","ButtonSize","backgroundStyle","ThemeManager","getBackgroundStyleById","preparedText","buttonColorScheme","borderColor","Color","transparent","backgroundColor","iconColor","textColor","hoverColor","onCreateChatClick","createChat","roleCode","code","newDialogId","getCopilotService","showCreateChatError","Messenger","openCopilot","copilotService","CopilotService","CopilotContent","entityId","contextMessageId","Number","layout","watch","newValue","oldValue","Logger","warn","onChatChange","created","Analytics","onOpenChat","loading","contextId","loadChatWithContext","loadChat","error","showNotification","Promise","resolve","loadChatWithMessages","firstError"],"mappings":"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"}