{"version":3,"file":"main.date.js","sources":["src/internal/convert-bitrix-format.js","src/internal/get-format.js","src/date-time-format.js","src/timezone/offset.js","src/timezone/internal/helpers.js","src/timezone/internal/di.js","src/timezone/browser-time.js","src/timezone/server-time.js","src/timezone/user-time.js","src/index.js"],"sourcesContent":["import { Type } from 'main.core';\n\nexport function convertBitrixFormat(format: any): string\n{\n\tif (!Type.isStringFilled(format))\n\t{\n\t\treturn '';\n\t}\n\n\treturn format.replace('YYYY', 'Y')    // 1999\n\t\t.replace('MMMM', 'F')    // January - December\n\t\t.replace('MM', 'm')    // 01 - 12\n\t\t.replace('M', 'M')    // Jan - Dec\n\t\t.replace('DD', 'd')    // 01 - 31\n\t\t.replace('G', 'g')    //  1 - 12\n\t\t.replace(/GG/i, 'G')    //  0 - 23\n\t\t.replace('H', 'h')    // 01 - 12\n\t\t.replace(/HH/i, 'H')    // 00 - 24\n\t\t.replace('MI', 'i')    // 00 - 59\n\t\t.replace('SS', 's')    // 00 - 59\n\t\t.replace('TT', 'A')    // AM - PM\n\t\t.replace('T', 'a');\t// am - pm\n}\n","import { Cache, Extension, Type } from 'main.core';\nimport { convertBitrixFormat } from './convert-bitrix-format';\n\nconst formatsCache = new Cache.MemoryCache();\n\n/**\n * Returns culture-specific datetime format by code.\n * The full list with examples can be found in config.php of this extension in ['settings']['formats'].\n * All formats are compatible with this.format() without any additional transformations.\n *\n * @param code\n * @returns {string|null}\n */\nexport function getFormat(code: string): ?string\n\t{\n\t\treturn formatsCache.remember(`main.date.format.${code}`, () => {\n\t\t\tlet format = Extension.getSettings('main.date').get(`formats.${code}`);\n\n\t\t\tif (\n\t\t\t\tType.isStringFilled(format)\n\t\t\t\t&& (code === 'FORMAT_DATE' || code === 'FORMAT_DATETIME')\n\t\t\t)\n\t\t\t{\n\t\t\t\tformat = convertBitrixFormat(format);\n\t\t\t}\n\n\t\t\treturn format;\n\t\t});\n\t}\n","import { Type, Loc } from 'main.core';\nimport { convertBitrixFormat } from './internal/convert-bitrix-format';\nimport { getFormat } from './internal/get-format';\n\n/**\n * @memberOf BX.Main\n * @alias Date\n */\nexport class DateTimeFormat\n{\n\tstatic AM_PM_MODE = {\n\t\tUPPER: 1,\n\t\tLOWER: 2,\n\t\tNONE: false\n\t};\n\n\tstatic convertBitrixFormat = convertBitrixFormat;\n\n\tstatic getFormat = getFormat;\n\n\tstatic isAmPmMode(returnConst: any)\n\t{\n\t\tif (returnConst === true)\n\t\t{\n\t\t\treturn this._getMessage('AMPM_MODE');\n\t\t}\n\n\t\treturn this._getMessage('AMPM_MODE') !== false;\n\t}\n\n\tstatic convertToUTC(date: any): ?Date\n\t{\n\t\tif (!Type.isDate(date))\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new Date(\n\t\t\tDate.UTC(\n\t\t\t\tdate.getFullYear(),\n\t\t\t\tdate.getMonth(),\n\t\t\t\tdate.getDate(),\n\t\t\t\tdate.getHours(),\n\t\t\t\tdate.getMinutes(),\n\t\t\t\tdate.getSeconds(),\n\t\t\t\tdate.getMilliseconds(),\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Function creates and returns Javascript Date() object from server timestamp regardless of local browser (system) timezone.\n\t * For example can be used to convert timestamp from some exact date on server to the JS Date object with the same value.\n\t *\n\t * @param timestamp - timestamp in seconds\n\t * @returns {Date}\n\t */\n\tstatic getNewDate(timestamp: any): Date\n\t{\n\t\treturn new Date(this.getBrowserTimestamp(timestamp));\n\t}\n\n\t/**\n\t * Function transforms server timestamp (in sec) to javascript timestamp (calculated depend on local browser timezone offset). Returns timestamp in milliseconds.\n\t * Also see BX.Main.Date.getNewDate description.\n\t *\n\t * @param timestamp - timestamp in seconds\n\t * @returns {number}\n\t */\n\tstatic getBrowserTimestamp(timestamp: any): number\n\t{\n\t\ttimestamp = parseInt(timestamp, 10);\n\t\tconst browserOffset = new Date(timestamp * 1000).getTimezoneOffset() * 60;\n\t\treturn (parseInt(timestamp, 10) + parseInt(this._getMessage('SERVER_TZ_OFFSET')) + browserOffset) * 1000;\n\t}\n\n\t/**\n\t * Function transforms local browser timestamp (in ms) to server timestamp (calculated depend on local browser timezone offset). Returns timestamp in seconds.\n\t *\n\t * @param timestamp - timestamp in milliseconds\n\t * @returns {number}\n\t */\n\tstatic getServerTimestamp(timestamp: any): number\n\t{\n\t\ttimestamp = parseInt(timestamp, 10);\n\t\tconst browserOffset = new Date(timestamp).getTimezoneOffset() * 60;\n\t\treturn Math.round(timestamp / 1000 - (parseInt(this._getMessage('SERVER_TZ_OFFSET'), 10) + parseInt(browserOffset, 10)));\n\t}\n\n\tstatic formatLastActivityDate(timestamp, now, utc)\n\t{\n\t\tconst ampm = this.isAmPmMode(true);\n\t\tconst timeFormat = (ampm === this.AM_PM_MODE.LOWER ? 'g:i a' : (ampm === this.AM_PM_MODE.UPPER ? 'g:i A' : 'H:i'));\n\n\t\tconst format = [\n\t\t\t['tomorrow', '#01#' + timeFormat],\n\t\t\t['now', '#02#'],\n\t\t\t['todayFuture', '#03#' + timeFormat],\n\t\t\t['yesterday', '#04#' + timeFormat],\n\t\t\t['-', this.convertBitrixFormat(this._getMessage('FORMAT_DATETIME')).replace(/:s/g, '')],\n\t\t\t['s60', 'sago'],\n\t\t\t['i60', 'iago'],\n\t\t\t['H5', 'Hago'],\n\t\t\t['H24', '#03#' + timeFormat],\n\t\t\t['d31', 'dago'],\n\t\t\t['m12>1', 'mago'],\n\t\t\t['m12>0', 'dago'],\n\t\t\t['', '#05#']\n\t\t];\n\t\tlet formattedDate = this.format(format, timestamp, now, utc);\n\t\tlet match = null;\n\t\tif ((match = /^#(\\d+)#(.*)/.exec(formattedDate)) != null)\n\t\t{\n\t\t\tswitch (match[1])\n\t\t\t{\n\t\t\t\tcase '01':\n\t\t\t\t\tformattedDate = this._getMessage('FD_LAST_SEEN_TOMORROW').replace('#TIME#', match[2]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '02':\n\t\t\t\t\tformattedDate = this._getMessage('FD_LAST_SEEN_NOW');\n\t\t\t\t\tbreak;\n\t\t\t\tcase '03':\n\t\t\t\t\tformattedDate = this._getMessage('FD_LAST_SEEN_TODAY').replace('#TIME#', match[2]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '04':\n\t\t\t\t\tformattedDate = this._getMessage('FD_LAST_SEEN_YESTERDAY').replace('#TIME#', match[2]);\n\t\t\t\t\tbreak;\n\t\t\t\tcase '05':\n\t\t\t\t\tformattedDate = this._getMessage('FD_LAST_SEEN_MORE_YEAR');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tformattedDate = match[2];\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn formattedDate;\n\t}\n\n\t/**\n\t * The method is designed to replace the localization storage on sites without Bitrix Framework.\n\t * It gets overloaded with custom implementation:\n\t *\n\t * const CustomDate = Object.create(BX.Main.Date);\n\t * CustomDate._getMessage = () => ...new implementation...;\n\t *\n\t * This class should get messages only via this method.\n\t * Otherwise, the class won't work on sites without Bitrix Framework.\n\t *\n\t * @param message\n\t * @returns {*}\n\t * @private\n\t */\n\tstatic _getMessage(message)\n\t{\n\t\treturn Loc.getMessage(message);\n\t}\n\n\t/**\n\t * The method used to parse date from string by given format.\n\t *\n\t * @param {string} str - date in given format\n\t * @param {boolean} isUTC - is date in UTC\n\t * @param {string} formatDate - format of the date without time\n\t * @param {string} formatDatetime - format of the date with time\n\t * @returns {Date|null} - returns Date object if string was parsed or null\n\t */\n\tstatic parse(str, isUTC, formatDate, formatDatetime): ?Date\n\t{\n\t\tif (Type.isStringFilled(str))\n\t\t{\n\t\t\tif (!formatDate)\n\t\t\t{\n\t\t\t\tformatDate = this._getMessage('FORMAT_DATE');\n\t\t\t}\n\t\t\tif (!formatDatetime)\n\t\t\t{\n\t\t\t\tformatDatetime = this._getMessage('FORMAT_DATETIME');\n\t\t\t}\n\n\t\t\tlet regMonths = '';\n\t\t\tfor (let i = 1; i <= 12; i++)\n\t\t\t{\n\t\t\t\tregMonths = regMonths + '|' + this._getMessage('MON_' + i);\n\t\t\t}\n\n\t\t\tconst expr = new RegExp('([0-9]+|[a-z]+' + regMonths + ')', 'ig');\n\t\t\tconst aDate = str.match(expr);\n\t\t\tlet aFormat = formatDate.match(/(DD|MI|MMMM|MM|M|YYYY)/ig);\n\t\t\tconst aDateArgs = [];\n\t\t\tconst aFormatArgs = [];\n\t\t\tconst aResult = {};\n\n\t\t\tif (!aDate)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (aDate.length > aFormat.length)\n\t\t\t{\n\t\t\t\taFormat = formatDatetime.match(/(DD|MI|MMMM|MM|M|YYYY|HH|H|SS|TT|T|GG|G)/ig);\n\t\t\t}\n\n\t\t\tfor (let i = 0, cnt = aDate.length; i < cnt; i++)\n\t\t\t{\n\t\t\t\tif (aDate[i].trim() !== '')\n\t\t\t\t{\n\t\t\t\t\taDateArgs[aDateArgs.length] = aDate[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0, cnt = aFormat.length; i < cnt; i++)\n\t\t\t{\n\t\t\t\tif (aFormat[i].trim() !== '')\n\t\t\t\t{\n\t\t\t\t\taFormatArgs[aFormatArgs.length] = aFormat[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet m = aFormatArgs.findIndex(item => item === 'MMMM');\n\t\t\tif (m > 0)\n\t\t\t{\n\t\t\t\taDateArgs[m] = this.getMonthIndex(aDateArgs[m]);\n\t\t\t\taFormatArgs[m] = 'MM';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tm = aFormatArgs.findIndex(item => item === 'M');\n\t\t\t\tif (m > 0)\n\t\t\t\t{\n\t\t\t\t\taDateArgs[m] = this.getMonthIndex(aDateArgs[m]);\n\t\t\t\t\taFormatArgs[m] = 'MM';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0, cnt = aFormatArgs.length; i < cnt; i++)\n\t\t\t{\n\t\t\t\tconst k = aFormatArgs[i].toUpperCase();\n\t\t\t\taResult[k] = k === 'T' || k === 'TT' ? aDateArgs[i] : parseInt(aDateArgs[i], 10);\n\t\t\t}\n\n\t\t\tif (aResult['DD'] > 0 && aResult['MM'] > 0 && aResult['YYYY'] > 0)\n\t\t\t{\n\t\t\t\tconst d = new Date();\n\n\t\t\t\tif (isUTC)\n\t\t\t\t{\n\t\t\t\t\td.setUTCDate(1);\n\t\t\t\t\td.setUTCFullYear(aResult['YYYY']);\n\t\t\t\t\td.setUTCMonth(aResult['MM'] - 1);\n\t\t\t\t\td.setUTCDate(aResult['DD']);\n\t\t\t\t\td.setUTCHours(0, 0, 0, 0);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\td.setDate(1);\n\t\t\t\t\td.setFullYear(aResult['YYYY']);\n\t\t\t\t\td.setMonth(aResult['MM'] - 1);\n\t\t\t\t\td.setDate(aResult['DD']);\n\t\t\t\t\td.setHours(0, 0, 0, 0);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!isNaN(aResult['HH']) || !isNaN(aResult['GG']) || !isNaN(aResult['H']) || !isNaN(aResult['G']))\n\t\t\t\t\t&& !isNaN(aResult['MI'])\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\tif (!isNaN(aResult['H']) || !isNaN(aResult['G']))\n\t\t\t\t\t{\n\t\t\t\t\t\tconst bPM = (aResult['T'] || aResult['TT'] || 'am').toUpperCase() === 'PM',\n\t\t\t\t\t\t\th = parseInt(aResult['H'] || aResult['G'] || 0, 10);\n\n\t\t\t\t\t\tif (bPM)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taResult['HH'] = h + (h === 12 ? 0 : 12);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taResult['HH'] = h < 12 ? h : 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\taResult['HH'] = parseInt(aResult['HH'] || aResult['GG'] || 0, 10);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isNaN(aResult['SS']))\n\t\t\t\t\t{\n\t\t\t\t\t\taResult['SS'] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isUTC)\n\t\t\t\t\t{\n\t\t\t\t\t\td.setUTCHours(aResult['HH'], aResult['MI'], aResult['SS']);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\td.setHours(aResult['HH'], aResult['MI'], aResult['SS']);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn d;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tstatic getMonthIndex(month: string): string | number\n\t{\n\t\tconst q = month.toUpperCase();\n\t\tconst wordMonthCut = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n\t\tconst wordMonth = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n\n\t\tfor (let i = 1; i <= 12; i++)\n\t\t{\n\t\t\tif (q === this._getMessage('MON_' + i).toUpperCase()\n\t\t\t\t|| q === this._getMessage('MONTH_' + i).toUpperCase()\n\t\t\t\t|| q === this._getMessage('MONTH_' + i + '_S').toUpperCase()\n\t\t\t\t|| q === wordMonthCut[i - 1].toUpperCase()\n\t\t\t\t|| q === wordMonth[i - 1].toUpperCase())\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn month;\n\t}\n\n\tstatic format(format, timestamp, now, utc): string\n\t{\n\t\t/*\n\t\tPHP to Javascript:\n\t\t\ttime() = new Date()\n\t\t\tmktime(...) = new Date(...)\n\t\t\tgmmktime(...) = new Date(Date.UTC(...))\n\t\t\tmktime(0,0,0, 1, 1, 1970) != 0          new Date(1970,0,1).getTime() != 0\n\t\t\tgmmktime(0,0,0, 1, 1, 1970) == 0        new Date(Date.UTC(1970,0,1)).getTime() == 0\n\t\t\tdate('d.m.Y H:i:s') = BX.Main.Date.format('d.m.Y H:i:s')\n\t\t\tgmdate('d.m.Y H:i:s') = BX.Main.Date.format('d.m.Y H:i:s', null, null, true);\n\t\t*/\n\t\tconst date = Type.isDate(timestamp) ? new Date(timestamp.getTime()) : Type.isNumber(timestamp) ? new Date(timestamp * 1000) : new Date();\n\t\tconst nowDate = Type.isDate(now) ? new Date(now.getTime()) : Type.isNumber(now) ? new Date(now * 1000) : new Date();\n\t\tconst isUTC = !!utc;\n\t\t// used in hoisting inner functions, like _formatDateInterval\n\t\tconst thisDateTimeFormat = this;\n\n\t\tif (Type.isArray(format))\n\t\t{\n\t\t\treturn _formatDateInterval(format, date, nowDate, isUTC);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (!Type.isStringFilled(format))\n\t\t\t{\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\n\t\tconst replaceMap = (format.match(/{{([^{}]*)}}/g) || []).map((x) => {\n\t\t\treturn (x.match(/[^{}]+/) || [''])[0];\n\t\t});\n\t\tif (replaceMap.length > 0)\n\t\t{\n\t\t\treplaceMap.forEach((element, index) => {\n\t\t\t\tformat = format.replace('{{' + element + '}}', '{{' + index + '}}');\n\t\t\t});\n\t\t}\n\n\t\tconst formatRegex = /\\\\?(sago|iago|isago|Hago|dago|mago|Yago|sdiff|idiff|Hdiff|ddiff|mdiff|Ydiff|sshort|ishort|Hshort|dshort|mhort|Yshort|yesterday|today|tommorow|tomorrow|[a-z])/gi;\n\n\t\tconst dateFormats = {\n\t\t\td: () => {\n\t\t\t\t// Day of the month 01 to 31\n\t\t\t\treturn getDate(date).toString().padStart(2, '0');\n\t\t\t},\n\n\t\t\tD: () => {\n\t\t\t\t//Mon through Sun\n\t\t\t\treturn this._getMessage('DOW_' + getDay(date));\n\t\t\t},\n\n\t\t\tj: () => {\n\t\t\t\t//Day of the month 1 to 31\n\t\t\t\treturn getDate(date);\n\t\t\t},\n\n\t\t\tl: () => {\n\t\t\t\t//Sunday through Saturday\n\t\t\t\treturn this._getMessage('DAY_OF_WEEK_' + getDay(date));\n\t\t\t},\n\n\t\t\tN: () => {\n\t\t\t\t//1 (for Monday) through 7 (for Sunday)\n\t\t\t\treturn getDay(date) || 7;\n\t\t\t},\n\n\t\t\tS: () => {\n\t\t\t\t//st, nd, rd or th. Works well with j\n\t\t\t\tif (getDate(date) % 10 == 1 && getDate(date) != 11)\n\t\t\t\t{\n\t\t\t\t\treturn 'st';\n\t\t\t\t}\n\t\t\t\telse if (getDate(date) % 10 == 2 && getDate(date) != 12)\n\t\t\t\t{\n\t\t\t\t\treturn 'nd';\n\t\t\t\t}\n\t\t\t\telse if (getDate(date) % 10 == 3 && getDate(date) != 13)\n\t\t\t\t{\n\t\t\t\t\treturn 'rd';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn 'th';\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tw: () => {\n\t\t\t\t//0 (for Sunday) through 6 (for Saturday)\n\t\t\t\treturn getDay(date);\n\t\t\t},\n\n\t\t\tz: () => {\n\t\t\t\t//0 through 365\n\t\t\t\tconst firstDay = new Date(getFullYear(date), 0, 1);\n\t\t\t\tconst currentDay = new Date(getFullYear(date), getMonth(date), getDate(date));\n\t\t\t\treturn Math.ceil((currentDay - firstDay) / (24 * 3600 * 1000));\n\t\t\t},\n\n\t\t\tW: () => {\n\t\t\t\t//ISO-8601 week number of year\n\t\t\t\tconst newDate = new Date(date.getTime());\n\t\t\t\tconst dayNumber = (getDay(date) + 6) % 7;\n\t\t\t\tsetDate(newDate, getDate(newDate) - dayNumber + 3);\n\t\t\t\tconst firstThursday = newDate.getTime();\n\t\t\t\tsetMonth(newDate, 0, 1);\n\t\t\t\tif (getDay(newDate) != 4)\n\t\t\t\t{\n\t\t\t\t\tsetMonth(newDate, 0, 1 + ((4 - getDay(newDate)) + 7) % 7);\n\t\t\t\t}\n\t\t\t\tconst weekNumber = 1 + Math.ceil((firstThursday - newDate) / (7 * 24 * 3600 * 1000));\n\n\t\t\t\treturn weekNumber.toString().padStart(2, '0');\n\t\t\t},\n\n\t\t\tF: () => {\n\t\t\t\t//January through December\n\t\t\t\treturn this._getMessage('MONTH_' + (getMonth(date) + 1) + '_S');\n\t\t\t},\n\n\t\t\tf: () => {\n\t\t\t\t//January through December\n\t\t\t\treturn this._getMessage('MONTH_' + (getMonth(date) + 1));\n\t\t\t},\n\n\t\t\tm: () => {\n\t\t\t\t//Numeric representation of a month 01 through 12\n\t\t\t\treturn (getMonth(date) + 1).toString().padStart(2, '0');\n\t\t\t},\n\n\t\t\tM: () => {\n\t\t\t\t//A short textual representation of a month, three letters Jan through Dec\n\t\t\t\treturn this._getMessage('MON_' + (getMonth(date) + 1));\n\t\t\t},\n\n\t\t\tn: () => {\n\t\t\t\t//Numeric representation of a month 1 through 12\n\t\t\t\treturn getMonth(date) + 1;\n\t\t\t},\n\n\t\t\tt: () => {\n\t\t\t\t//Number of days in the given month 28 through 31\n\t\t\t\tconst lastMonthDay = isUTC ? new Date(Date.UTC(getFullYear(date), getMonth(date) + 1, 0)) : new Date(getFullYear(date), getMonth(date) + 1, 0);\n\t\t\t\treturn getDate(lastMonthDay);\n\t\t\t},\n\n\t\t\tL: () => {\n\t\t\t\t//1 if it is a leap year, 0 otherwise.\n\t\t\t\tconst year = getFullYear(date);\n\t\t\t\treturn (year % 4 == 0 && year % 100 != 0 || year % 400 == 0 ? 1 : 0);\n\t\t\t},\n\n\t\t\to: () => {\n\t\t\t\t//ISO-8601 year number\n\t\t\t\tconst correctDate = new Date(date.getTime());\n\t\t\t\tsetDate(correctDate, getDate(correctDate) - ((getDay(date) + 6) % 7) + 3);\n\t\t\t\treturn getFullYear(correctDate);\n\t\t\t},\n\n\t\t\tY: () => {\n\t\t\t\t//A full numeric representation of a year, 4 digits\n\t\t\t\treturn getFullYear(date);\n\t\t\t},\n\n\t\t\ty: () => {\n\t\t\t\t//A two digit representation of a year\n\t\t\t\treturn getFullYear(date).toString().slice(2);\n\t\t\t},\n\n\t\t\ta: () => {\n\t\t\t\t//am or pm\n\t\t\t\treturn getHours(date) > 11 ? 'pm' : 'am';\n\t\t\t},\n\n\t\t\tA: () => {\n\t\t\t\t//AM or PM\n\t\t\t\treturn getHours(date) > 11 ? 'PM' : 'AM';\n\t\t\t},\n\n\t\t\tB: () => {\n\t\t\t\t//000 through 999\n\t\t\t\tconst swatch = ((date.getUTCHours() + 1) % 24) + date.getUTCMinutes() / 60 + date.getUTCSeconds() / 3600;\n\t\t\t\treturn Math.floor(swatch * 1000 / 24).toString().padStart(3, '0');\n\t\t\t},\n\n\t\t\tg: () => {\n\t\t\t\t//12-hour format of an hour without leading zeros 1 through 12\n\t\t\t\treturn getHours(date) % 12 || 12;\n\t\t\t},\n\n\t\t\tG: () => {\n\t\t\t\t//24-hour format of an hour without leading zeros 0 through 23\n\t\t\t\treturn getHours(date);\n\t\t\t},\n\n\t\t\th: () => {\n\t\t\t\t//12-hour format of an hour with leading zeros 01 through 12\n\t\t\t\treturn (getHours(date) % 12 || 12).toString().padStart(2, '0');\n\t\t\t},\n\n\t\t\tH: () => {\n\t\t\t\t//24-hour format of an hour with leading zeros 00 through 23\n\t\t\t\treturn getHours(date).toString().padStart(2, '0');\n\t\t\t},\n\n\t\t\ti: () => {\n\t\t\t\t//Minutes with leading zeros 00 to 59\n\t\t\t\treturn getMinutes(date).toString().padStart(2, '0');\n\t\t\t},\n\n\t\t\ts: () => {\n\t\t\t\t//Seconds, with leading zeros 00 through 59\n\t\t\t\treturn getSeconds(date).toString().padStart(2, '0');\n\t\t\t},\n\n\t\t\tu: () => {\n\t\t\t\t//Microseconds\n\t\t\t\treturn (getMilliseconds(date) * 1000).toString().padStart(6, '0');\n\t\t\t},\n\n\t\t\te: () => {\n\t\t\t\tif (isUTC)\n\t\t\t\t{\n\t\t\t\t\treturn 'UTC';\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t},\n\n\t\t\tI: () => {\n\t\t\t\tif (isUTC)\n\t\t\t\t{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\t//Whether or not the date is in daylight saving time 1 if Daylight Saving Time, 0 otherwise\n\t\t\t\tconst firstJanuary = new Date(getFullYear(date), 0, 1);\n\t\t\t\tconst firstJanuaryUTC = Date.UTC(getFullYear(date), 0, 1);\n\t\t\t\tconst firstJuly = new Date(getFullYear(date), 6, 0);\n\t\t\t\tconst firstJulyUTC = Date.UTC(getFullYear(date), 6, 0);\n\t\t\t\treturn 0 + ((firstJanuary - firstJanuaryUTC) !== (firstJuly - firstJulyUTC));\n\t\t\t},\n\n\t\t\tO: () => {\n\t\t\t\tif (isUTC)\n\t\t\t\t{\n\t\t\t\t\treturn '+0000';\n\t\t\t\t}\n\n\t\t\t\t//Difference to Greenwich time (GMT) in hours +0200\n\t\t\t\tconst timezoneOffset = date.getTimezoneOffset();\n\t\t\t\tconst timezoneOffsetAbs = Math.abs(timezoneOffset);\n\t\t\t\treturn (timezoneOffset > 0 ? '-' : '+') + (Math.floor(timezoneOffsetAbs / 60) * 100 + timezoneOffsetAbs % 60).toString().padStart(4, '0');\n\t\t\t},\n\n\t\t\t//this method references 'O' method of the same object, arrow function is not suitable here\n\t\t\tP: function() {\n\t\t\t\tif (isUTC)\n\t\t\t\t{\n\t\t\t\t\treturn '+00:00';\n\t\t\t\t}\n\n\t\t\t\t//Difference to Greenwich time (GMT) with colon between hours and minutes +02:00\n\t\t\t\tconst difference = this.O();\n\t\t\t\treturn difference.substr(0, 3) + ':' + difference.substr(3);\n\t\t\t},\n\n\t\t\tZ: () => {\n\t\t\t\tif (isUTC)\n\t\t\t\t{\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\t//Timezone offset in seconds. The offset for timezones west of UTC is always negative,\n\t\t\t\t//and for those east of UTC is always positive.\n\t\t\t\treturn -date.getTimezoneOffset() * 60;\n\t\t\t},\n\n\t\t\tc: () => {\n\t\t\t\t//ISO 8601 date\n\t\t\t\treturn 'Y-m-d\\\\TH:i:sP'.replace(formatRegex, _replaceDateFormat);\n\t\t\t},\n\n\t\t\tr: () => {\n\t\t\t\t//RFC 2822 formatted date\n\t\t\t\treturn 'D, d M Y H:i:s O'.replace(formatRegex, _replaceDateFormat);\n\t\t\t},\n\n\t\t\tU: () => {\n\t\t\t\t//Seconds since the Unix Epoch\n\t\t\t\treturn Math.floor(date.getTime() / 1000);\n\t\t\t},\n\n\t\t\tsago: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 1000), {\n\t\t\t\t\t'0': 'FD_SECOND_AGO_0',\n\t\t\t\t\t'1': 'FD_SECOND_AGO_1',\n\t\t\t\t\t'10_20': 'FD_SECOND_AGO_10_20',\n\t\t\t\t\t'MOD_1': 'FD_SECOND_AGO_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_SECOND_AGO_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_SECOND_AGO_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tsdiff: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 1000), {\n\t\t\t\t\t'0': 'FD_SECOND_DIFF_0',\n\t\t\t\t\t'1': 'FD_SECOND_DIFF_1',\n\t\t\t\t\t'10_20': 'FD_SECOND_DIFF_10_20',\n\t\t\t\t\t'MOD_1': 'FD_SECOND_DIFF_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_SECOND_DIFF_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_SECOND_DIFF_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tsshort: () => {\n\t\t\t\treturn this._getMessage('FD_SECOND_SHORT').replace(/#VALUE#/g, intval((nowDate - date) / 1000));\n\t\t\t},\n\n\t\t\tiago: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 1000), {\n\t\t\t\t\t'0': 'FD_MINUTE_AGO_0',\n\t\t\t\t\t'1': 'FD_MINUTE_AGO_1',\n\t\t\t\t\t'10_20': 'FD_MINUTE_AGO_10_20',\n\t\t\t\t\t'MOD_1': 'FD_MINUTE_AGO_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_MINUTE_AGO_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_MINUTE_AGO_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tidiff: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 1000), {\n\t\t\t\t\t'0': 'FD_MINUTE_DIFF_0',\n\t\t\t\t\t'1': 'FD_MINUTE_DIFF_1',\n\t\t\t\t\t'10_20': 'FD_MINUTE_DIFF_10_20',\n\t\t\t\t\t'MOD_1': 'FD_MINUTE_DIFF_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_MINUTE_DIFF_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_MINUTE_DIFF_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tisago: () => {\n\t\t\t\tconst minutesAgo = intval((nowDate - date) / 60 / 1000);\n\t\t\t\tlet result = _formatDateMessage(minutesAgo, {\n\t\t\t\t\t'0': 'FD_MINUTE_0',\n\t\t\t\t\t'1': 'FD_MINUTE_1',\n\t\t\t\t\t'10_20': 'FD_MINUTE_10_20',\n\t\t\t\t\t'MOD_1': 'FD_MINUTE_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_MINUTE_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_MINUTE_MOD_OTHER'\n\t\t\t\t});\n\n\t\t\t\tresult += ' ';\n\n\t\t\t\tconst secondsAgo = intval((nowDate - date) / 1000) - (minutesAgo * 60);\n\t\t\t\tresult += _formatDateMessage(secondsAgo, {\n\t\t\t\t\t'0': 'FD_SECOND_AGO_0',\n\t\t\t\t\t'1': 'FD_SECOND_AGO_1',\n\t\t\t\t\t'10_20': 'FD_SECOND_AGO_10_20',\n\t\t\t\t\t'MOD_1': 'FD_SECOND_AGO_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_SECOND_AGO_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_SECOND_AGO_MOD_OTHER'\n\t\t\t\t});\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tishort: () => {\n\t\t\t\treturn this._getMessage('FD_MINUTE_SHORT').replace(/#VALUE#/g, intval((nowDate - date) / 60 / 1000));\n\t\t\t},\n\n\t\t\tHago: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 1000), {\n\t\t\t\t\t'0': 'FD_HOUR_AGO_0',\n\t\t\t\t\t'1': 'FD_HOUR_AGO_1',\n\t\t\t\t\t'10_20': 'FD_HOUR_AGO_10_20',\n\t\t\t\t\t'MOD_1': 'FD_HOUR_AGO_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_HOUR_AGO_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_HOUR_AGO_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tHdiff: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 1000), {\n\t\t\t\t\t'0': 'FD_HOUR_DIFF_0',\n\t\t\t\t\t'1': 'FD_HOUR_DIFF_1',\n\t\t\t\t\t'10_20': 'FD_HOUR_DIFF_10_20',\n\t\t\t\t\t'MOD_1': 'FD_HOUR_DIFF_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_HOUR_DIFF_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_HOUR_DIFF_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tHshort: () => {\n\t\t\t\treturn this._getMessage('FD_HOUR_SHORT').replace(/#VALUE#/g, intval((nowDate - date) / 60 / 60 / 1000));\n\t\t\t},\n\n\t\t\tyesterday: () => {\n\t\t\t\treturn this._getMessage('FD_YESTERDAY');\n\t\t\t},\n\n\t\t\ttoday: () => {\n\t\t\t\treturn this._getMessage('FD_TODAY');\n\t\t\t},\n\n\t\t\ttommorow: () => {\n\t\t\t\treturn this._getMessage('FD_TOMORROW');\n\t\t\t},\n\n\t\t\ttomorrow: () => {\n\t\t\t\treturn this._getMessage('FD_TOMORROW');\n\t\t\t},\n\n\t\t\tdago: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 24 / 1000), {\n\t\t\t\t\t'0': 'FD_DAY_AGO_0',\n\t\t\t\t\t'1': 'FD_DAY_AGO_1',\n\t\t\t\t\t'10_20': 'FD_DAY_AGO_10_20',\n\t\t\t\t\t'MOD_1': 'FD_DAY_AGO_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_DAY_AGO_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_DAY_AGO_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tddiff: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 24 / 1000), {\n\t\t\t\t\t'0': 'FD_DAY_DIFF_0',\n\t\t\t\t\t'1': 'FD_DAY_DIFF_1',\n\t\t\t\t\t'10_20': 'FD_DAY_DIFF_10_20',\n\t\t\t\t\t'MOD_1': 'FD_DAY_DIFF_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_DAY_DIFF_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_DAY_DIFF_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdshort: () => {\n\t\t\t\treturn this._getMessage('FD_DAY_SHORT').replace(/#VALUE#/g, intval((nowDate - date) / 60 / 60 / 24 / 1000));\n\t\t\t},\n\n\t\t\tmago: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 24 / 31 / 1000), {\n\t\t\t\t\t'0': 'FD_MONTH_AGO_0',\n\t\t\t\t\t'1': 'FD_MONTH_AGO_1',\n\t\t\t\t\t'10_20': 'FD_MONTH_AGO_10_20',\n\t\t\t\t\t'MOD_1': 'FD_MONTH_AGO_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_MONTH_AGO_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_MONTH_AGO_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tmdiff: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 24 / 31 / 1000), {\n\t\t\t\t\t'0': 'FD_MONTH_DIFF_0',\n\t\t\t\t\t'1': 'FD_MONTH_DIFF_1',\n\t\t\t\t\t'10_20': 'FD_MONTH_DIFF_10_20',\n\t\t\t\t\t'MOD_1': 'FD_MONTH_DIFF_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_MONTH_DIFF_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_MONTH_DIFF_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tmshort: () => {\n\t\t\t\treturn this._getMessage('FD_MONTH_SHORT').replace(/#VALUE#/g, intval((nowDate - date) / 60 / 60 / 24 / 31 / 1000));\n\t\t\t},\n\n\t\t\tYago: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 24 / 365 / 1000), {\n\t\t\t\t\t'0': 'FD_YEARS_AGO_0',\n\t\t\t\t\t'1': 'FD_YEARS_AGO_1',\n\t\t\t\t\t'10_20': 'FD_YEARS_AGO_10_20',\n\t\t\t\t\t'MOD_1': 'FD_YEARS_AGO_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_YEARS_AGO_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_YEARS_AGO_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tYdiff: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 24 / 365 / 1000), {\n\t\t\t\t\t'0': 'FD_YEARS_DIFF_0',\n\t\t\t\t\t'1': 'FD_YEARS_DIFF_1',\n\t\t\t\t\t'10_20': 'FD_YEARS_DIFF_10_20',\n\t\t\t\t\t'MOD_1': 'FD_YEARS_DIFF_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_YEARS_DIFF_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_YEARS_DIFF_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tYshort: () => {\n\t\t\t\treturn _formatDateMessage(intval((nowDate - date) / 60 / 60 / 24 / 365 / 1000), {\n\t\t\t\t\t'0': 'FD_YEARS_SHORT_0',\n\t\t\t\t\t'1': 'FD_YEARS_SHORT_1',\n\t\t\t\t\t'10_20': 'FD_YEARS_SHORT_10_20',\n\t\t\t\t\t'MOD_1': 'FD_YEARS_SHORT_MOD_1',\n\t\t\t\t\t'MOD_2_4': 'FD_YEARS_SHORT_MOD_2_4',\n\t\t\t\t\t'MOD_OTHER': 'FD_YEARS_SHORT_MOD_OTHER'\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tx: () => {\n\t\t\t\tconst ampm = this.isAmPmMode(true);\n\t\t\t\tconst timeFormat = (ampm === this.AM_PM_MODE.LOWER ? 'g:i a' : (ampm === this.AM_PM_MODE.UPPER ? 'g:i A' : 'H:i'));\n\n\t\t\t\treturn this.format([\n\t\t\t\t\t['tomorrow', 'tomorrow, ' + timeFormat],\n\t\t\t\t\t['-', this.convertBitrixFormat(this._getMessage('FORMAT_DATETIME')).replace(/:s/g, '')],\n\t\t\t\t\t['s', 'sago'],\n\t\t\t\t\t['i', 'iago'],\n\t\t\t\t\t['today', 'today, ' + timeFormat],\n\t\t\t\t\t['yesterday', 'yesterday, ' + timeFormat],\n\t\t\t\t\t['', this.convertBitrixFormat(this._getMessage('FORMAT_DATETIME')).replace(/:s/g, '')]\n\t\t\t\t], date, nowDate, isUTC);\n\t\t\t},\n\n\t\t\tX: () => {\n\n\t\t\t\tconst ampm = this.isAmPmMode(true);\n\t\t\t\tconst timeFormat = (ampm === this.AM_PM_MODE.LOWER ? 'g:i a' : (ampm === this.AM_PM_MODE.UPPER ? 'g:i A' : 'H:i'));\n\n\t\t\t\tconst day = this.format([\n\t\t\t\t\t['tomorrow', 'tomorrow'],\n\t\t\t\t\t['-', this.convertBitrixFormat(this._getMessage('FORMAT_DATE'))],\n\t\t\t\t\t['today', 'today'],\n\t\t\t\t\t['yesterday', 'yesterday'],\n\t\t\t\t\t['', this.convertBitrixFormat(this._getMessage('FORMAT_DATE'))]\n\t\t\t\t], date, nowDate, isUTC);\n\n\t\t\t\tconst time = this.format([\n\t\t\t\t\t['tomorrow', timeFormat],\n\t\t\t\t\t['today', timeFormat],\n\t\t\t\t\t['yesterday', timeFormat],\n\t\t\t\t\t['', '']\n\t\t\t\t], date, nowDate, isUTC);\n\n\t\t\t\tif (time.length > 0)\n\t\t\t\t{\n\t\t\t\t\treturn this._getMessage('FD_DAY_AT_TIME').replace(/#DAY#/g, day).replace(/#TIME#/g, time);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn day;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tQ: () => {\n\t\t\t\tconst daysAgo = intval((nowDate - date) / 60 / 60 / 24 / 1000);\n\t\t\t\tif (daysAgo == 0)\n\t\t\t\t{\n\t\t\t\t\treturn this._getMessage('FD_DAY_DIFF_1').replace(/#VALUE#/g, 1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn this.format([['d', 'ddiff'], ['m', 'mdiff'], ['', 'Ydiff']], date, nowDate);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet cutZeroTime = false;\n\t\tif (format[0] && format[0] == '^')\n\t\t{\n\t\t\tcutZeroTime = true;\n\t\t\tformat = format.substr(1);\n\t\t}\n\n\t\tlet result = format.replace(formatRegex, _replaceDateFormat);\n\n\t\tif (cutZeroTime)\n\t\t{\n\t\t\t/* \t15.04.12 13:00:00 => 15.04.12 13:00\n\t\t\t\t00:01:00 => 00:01\n\t\t\t\t4 may 00:00:00 => 4 may\n\t\t\t\t01-01-12 00:00 => 01-01-12\n\t\t\t*/\n\n\t\t\tresult = result.replace(/\\s*00:00:00\\s*/g, '').replace(/(\\d\\d:\\d\\d)(:00)/g, '$1').replace(/(\\s*00:00\\s*)(?!:)/g, '');\n\t\t}\n\n\t\tif (replaceMap.length > 0)\n\t\t{\n\t\t\treplaceMap.forEach(function(element, index)\n\t\t\t{\n\t\t\t\tresult = result.replace('{{' + index + '}}', element);\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\n\t\tfunction _formatDateInterval(formats, date, nowDate, isUTC)\n\t\t{\n\t\t\tconst secondsAgo = intval((nowDate - date) / 1000);\n\t\t\tfor (let i = 0; i < formats.length; i++)\n\t\t\t{\n\t\t\t\tconst formatInterval = formats[i][0];\n\t\t\t\tconst formatValue = formats[i][1];\n\t\t\t\tlet match = null;\n\t\t\t\tif (formatInterval == 's')\n\t\t\t\t{\n\t\t\t\t\tif (secondsAgo < 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ((match = /^s(\\d+)\\>?(\\d+)?/.exec(formatInterval)) != null)\n\t\t\t\t{\n\t\t\t\t\tif (match[1] && match[2])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsecondsAgo < match[1]\n\t\t\t\t\t\t\t&& secondsAgo > match[2]\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (secondsAgo < match[1])\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'i')\n\t\t\t\t{\n\t\t\t\t\tif (secondsAgo < 60 * 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ((match = /^i(\\d+)\\>?(\\d+)?/.exec(formatInterval)) != null)\n\t\t\t\t{\n\t\t\t\t\tif (match[1] && match[2])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsecondsAgo < match[1] * 60\n\t\t\t\t\t\t\t&& secondsAgo > match[2] * 60\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (secondsAgo < match[1] * 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'H')\n\t\t\t\t{\n\t\t\t\t\tif (secondsAgo < 24 * 60 * 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ((match = /^H(\\d+)\\>?(\\d+)?/.exec(formatInterval)) != null)\n\t\t\t\t{\n\t\t\t\t\tif (match[1] && match[2])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsecondsAgo < match[1] * 60 * 60\n\t\t\t\t\t\t\t&& secondsAgo > match[2] * 60 * 60\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (secondsAgo < match[1] * 60 * 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'd')\n\t\t\t\t{\n\t\t\t\t\tif (secondsAgo < 31 * 24 * 60 * 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ((match = /^d(\\d+)\\>?(\\d+)?/.exec(formatInterval)) != null)\n\t\t\t\t{\n\t\t\t\t\tif (match[1] && match[2])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsecondsAgo < match[1] * 24 * 60 * 60\n\t\t\t\t\t\t\t&& secondsAgo > match[2] * 24 * 60 * 60\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (secondsAgo < match[1] * 24 * 60 * 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'm')\n\t\t\t\t{\n\t\t\t\t\tif (secondsAgo < 365 * 24 * 60 * 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ((match = /^m(\\d+)\\>?(\\d+)?/.exec(formatInterval)) != null)\n\t\t\t\t{\n\t\t\t\t\tif (match[1] && match[2])\n\t\t\t\t\t{\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tsecondsAgo < match[1] * 31 * 24 * 60 * 60\n\t\t\t\t\t\t\t&& secondsAgo > match[2] * 31 * 24 * 60 * 60\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (secondsAgo < match[1] * 31 * 24 * 60 * 60)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'now')\n\t\t\t\t{\n\t\t\t\t\tif (date.getTime() == nowDate.getTime())\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'today')\n\t\t\t\t{\n\t\t\t\t\tconst year = getFullYear(nowDate);\n\t\t\t\t\tconst month = getMonth(nowDate);\n\t\t\t\t\tconst day = getDate(nowDate);\n\t\t\t\t\tconst todayStart = isUTC ? new Date(Date.UTC(year, month, day, 0, 0, 0, 0)) : new Date(year, month, day, 0, 0, 0, 0);\n\t\t\t\t\tconst todayEnd = isUTC ? new Date(Date.UTC(year, month, day + 1, 0, 0, 0, 0)) : new Date(year, month, day + 1, 0, 0, 0, 0);\n\t\t\t\t\tif (date >= todayStart && date < todayEnd)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'todayFuture')\n\t\t\t\t{\n\t\t\t\t\tconst year = getFullYear(nowDate);\n\t\t\t\t\tconst month = getMonth(nowDate);\n\t\t\t\t\tconst day = getDate(nowDate);\n\t\t\t\t\tconst todayStart = nowDate.getTime();\n\t\t\t\t\tconst todayEnd = isUTC ? new Date(Date.UTC(year, month, day + 1, 0, 0, 0, 0)) : new Date(year, month, day + 1, 0, 0, 0, 0);\n\t\t\t\t\tif (date >= todayStart && date < todayEnd)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'yesterday')\n\t\t\t\t{\n\t\t\t\t\tconst year = getFullYear(nowDate);\n\t\t\t\t\tconst month = getMonth(nowDate);\n\t\t\t\t\tconst day = getDate(nowDate);\n\t\t\t\t\tconst yesterdayStart = isUTC ? new Date(Date.UTC(year, month, day - 1, 0, 0, 0, 0)) : new Date(year, month, day - 1, 0, 0, 0, 0);\n\t\t\t\t\tconst yesterdayEnd = isUTC ? new Date(Date.UTC(year, month, day, 0, 0, 0, 0)) : new Date(year, month, day, 0, 0, 0, 0);\n\t\t\t\t\tif (date >= yesterdayStart && date < yesterdayEnd)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == 'tommorow' || formatInterval == 'tomorrow')\n\t\t\t\t{\n\t\t\t\t\tconst year = getFullYear(nowDate);\n\t\t\t\t\tconst month = getMonth(nowDate);\n\t\t\t\t\tconst day = getDate(nowDate);\n\t\t\t\t\tconst tomorrowStart = isUTC ? new Date(Date.UTC(year, month, day + 1, 0, 0, 0, 0)) : new Date(year, month, day + 1, 0, 0, 0, 0);\n\t\t\t\t\tconst tomorrowEnd = isUTC ? new Date(Date.UTC(year, month, day + 2, 0, 0, 0, 0)) : new Date(year, month, day + 2, 0, 0, 0, 0);\n\t\t\t\t\tif (date >= tomorrowStart && date < tomorrowEnd)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (formatInterval == '-')\n\t\t\t\t{\n\t\t\t\t\tif (secondsAgo < 0)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn thisDateTimeFormat.format(formatValue, date, nowDate, isUTC);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//return formats.length > 0 ? thisDateTimeFormat.format(formats.pop()[1], date, nowDate, isUTC) : '';\n\t\t\treturn formats.length > 0 ? thisDateTimeFormat.format(formats[formats.length - 1][1], date, nowDate, isUTC) : '';\n\t\t}\n\n\t\tfunction getFullYear(date)\n\t\t{\n\t\t\treturn isUTC ? date.getUTCFullYear() : date.getFullYear();\n\t\t}\n\n\t\tfunction getDate(date)\n\t\t{\n\t\t\treturn isUTC ? date.getUTCDate() : date.getDate();\n\t\t}\n\n\t\tfunction getMonth(date)\n\t\t{\n\t\t\treturn isUTC ? date.getUTCMonth() : date.getMonth();\n\t\t}\n\n\t\tfunction getHours(date)\n\t\t{\n\t\t\treturn isUTC ? date.getUTCHours() : date.getHours();\n\t\t}\n\n\t\tfunction getMinutes(date)\n\t\t{\n\t\t\treturn isUTC ? date.getUTCMinutes() : date.getMinutes();\n\t\t}\n\n\t\tfunction getSeconds(date)\n\t\t{\n\t\t\treturn isUTC ? date.getUTCSeconds() : date.getSeconds();\n\t\t}\n\n\t\tfunction getMilliseconds(date)\n\t\t{\n\t\t\treturn isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n\t\t}\n\n\t\tfunction getDay(date)\n\t\t{\n\t\t\treturn isUTC ? date.getUTCDay() : date.getDay();\n\t\t}\n\n\t\tfunction setDate(date, dayValue)\n\t\t{\n\t\t\treturn isUTC ? date.setUTCDate(dayValue) : date.setDate(dayValue);\n\t\t}\n\n\t\tfunction setMonth(date, monthValue, dayValue)\n\t\t{\n\t\t\treturn isUTC ? date.setUTCMonth(monthValue, dayValue) : date.setMonth(monthValue, dayValue);\n\t\t}\n\n\t\tfunction _formatDateMessage(value, messages)\n\t\t{\n\t\t\tconst val = value < 100 ? Math.abs(value) : Math.abs(value % 100);\n\t\t\tconst dec = val % 10;\n\t\t\tlet message = '';\n\n\t\t\tif (val == 0)\n\t\t\t{\n\t\t\t\tmessage = thisDateTimeFormat._getMessage(messages['0']);\n\t\t\t}\n\t\t\telse if (val == 1)\n\t\t\t{\n\t\t\t\tmessage = thisDateTimeFormat._getMessage(messages['1']);\n\t\t\t}\n\t\t\telse if (val >= 10 && val <= 20)\n\t\t\t{\n\t\t\t\tmessage = thisDateTimeFormat._getMessage(messages['10_20']);\n\t\t\t}\n\t\t\telse if (dec == 1)\n\t\t\t{\n\t\t\t\tmessage = thisDateTimeFormat._getMessage(messages['MOD_1']);\n\t\t\t}\n\t\t\telse if (2 <= dec && dec <= 4)\n\t\t\t{\n\t\t\t\tmessage = thisDateTimeFormat._getMessage(messages['MOD_2_4']);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmessage = thisDateTimeFormat._getMessage(messages['MOD_OTHER']);\n\t\t\t}\n\n\t\t\treturn message.replace(/#VALUE#/g, value);\n\t\t}\n\n\t\tfunction _replaceDateFormat(match, matchFull)\n\t\t{\n\t\t\tif (dateFormats[match])\n\t\t\t{\n\t\t\t\treturn dateFormats[match]();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn matchFull;\n\t\t\t}\n\t\t}\n\n\t\tfunction intval(number)\n\t\t{\n\t\t\treturn number >= 0 ? Math.floor(number) : Math.ceil(number);\n\t\t}\n\t}\n}\n","import { Cache, Loc, Text } from 'main.core';\n\nconst cache = new Cache.MemoryCache();\n\nexport type OffsetInterface = {\n\tSERVER_TO_UTC: number,\n\tUSER_TO_SERVER: number,\n\tBROWSER_TO_UTC: number,\n}\n\n/**\n * @memberOf BX.Main.Timezone\n *\n * WARNING! Don't use this class or any classes from Timezone namespace on sites without Bitrix Framework.\n * It is not designed to handle this case and will definitely break.\n */\nconst Offset: OffsetInterface = {\n\tget SERVER_TO_UTC(): number\n\t{\n\t\treturn cache.remember('SERVER_TO_UTC', () => {\n\t\t\treturn Text.toInteger(Loc.getMessage('SERVER_TZ_OFFSET'));\n\t\t});\n\t},\n\n\tget USER_TO_SERVER(): number\n\t{\n\t\treturn cache.remember('USER_TO_SERVER', () => {\n\t\t\treturn Text.toInteger(Loc.getMessage('USER_TZ_OFFSET'));\n\t\t});\n\t},\n\n\t// Date returns timezone offset in minutes by default, change it to seconds\n\t// Also offset is negative in UTC+ timezones and positive in UTC- timezones.\n\t// By convention Bitrix uses the opposite approach, so change offset sign.\n\tget BROWSER_TO_UTC(): number\n\t{\n\t\treturn cache.remember('BROWSER_TO_UTC', () => {\n\t\t\tconst offset = Text.toInteger((new Date()).getTimezoneOffset() * 60);\n\n\t\t\treturn -offset;\n\t\t});\n\t},\n};\n\nObject.freeze(Offset);\n\nexport {\n\tOffset,\n};\n","import { Text, Type } from 'main.core';\n\nexport function normalizeTimeValue(timeValue: any): number\n{\n\tif (Type.isDate(timeValue))\n\t{\n\t\treturn getTimestampFromDate(timeValue);\n\t}\n\n\treturn Text.toInteger(timeValue);\n}\n\nexport function createDateFromTimestamp(timestampInSeconds: number): Date\n{\n\treturn new Date(timestampInSeconds * 1000);\n}\n\nexport function getTimestampFromDate(date: Date): number\n{\n\treturn Math.floor(date.getTime() / 1000);\n}\n","import type { OffsetInterface } from '../offset';\nimport { Offset } from '../offset';\nimport { getTimestampFromDate } from './helpers';\n\nlet offset: OffsetInterface = Offset;\nlet now: ?number = null;\n\nexport function getOffset(): OffsetInterface\n{\n\treturn offset;\n}\n\nexport function setOffset(newOffset: OffsetInterface): void\n{\n\toffset = newOffset;\n}\n\nexport function resetOffset(): void\n{\n\toffset = Offset;\n}\n\nexport function getNowTimestamp(): number\n{\n\treturn now ?? getTimestampFromDate(new Date());\n}\n\nexport function setNow(timestamp: number): void\n{\n\tnow = timestamp;\n}\n\nexport function resetNow(): void\n{\n\tnow = null;\n}\n","import { Type } from 'main.core';\nimport { getNowTimestamp, getOffset } from './internal/di';\nimport { createDateFromTimestamp, normalizeTimeValue } from './internal/helpers';\n\n/**\n * @memberOf BX.Main.Timezone\n *\n * WARNING! Don't use this class or any classes from Timezone namespace on sites without Bitrix Framework.\n * It is not designed to handle this case and will definitely break.\n */\nexport class BrowserTime\n{\n\t/**\n\t * Returns a Date object with time and date that represent a specific moment in Browser (device) timezone.\n\t *\n\t * @param utcTimestamp - normal utc timestamp in seconds. 'now' by default\n\t * @returns {Date}\n\t */\n\tstatic getDate(utcTimestamp: ?number = null): Date\n\t{\n\t\tconst timestamp = Type.isNumber(utcTimestamp) ? utcTimestamp : this.getTimestamp();\n\n\t\treturn createDateFromTimestamp(timestamp);\n\t}\n\n\t/**\n\t * Transforms a moment in Browser (device) timezone to a moment in User timezone.\n\t *\n\t * ATTENTION! Date.getTime() and Date.getTimezoneOffset() will return inaccurate data. Since a native Date object\n\t * doesn't support timezone other that device timezone, we have to manually change timestamp to shift time value in\n\t * a Date object.\n\t *\n\t * @param browserTime - a moment in Browser (device) timezone. Either a Date object (recommended way). Or timestamp\n\t * in seconds in Browser timezone (see this.getTimestamp for details).\n\t * @returns {Date}\n\t */\n\tstatic toUserDate(browserTime: Date | number): Date\n\t{\n\t\treturn createDateFromTimestamp(this.toUser(browserTime));\n\t}\n\n\t/**\n\t * Transforms a moment in Browser (device) timezone to a moment in Server timezone.\n\t *\n\t * ATTENTION! Date.getTime() and Date.getTimezoneOffset() will return inaccurate data. Since a native Date object\n\t * doesn't support timezone other that device timezone, we have to manually change timestamp to shift time value in\n\t * a Date object.\n\t *\n\t * @param browserTime - a moment in Browser (device) timezone. Either a Date object (recommended way). Or timestamp\n\t * in seconds in Browser timezone (see this.getTimestamp for details).\n\t * @returns {Date}\n\t */\n\tstatic toServerDate(browserTime: Date | number): Date\n\t{\n\t\treturn createDateFromTimestamp(this.toServer(browserTime));\n\t}\n\n\t/**\n\t * Transforms a moment in Browser (device) timezone to a timestamp in User timezone.\n\t * It's recommended to use this.toUserDate for more clear code.\n\t *\n\t * @param browserTime - a moment in Browser timezone. Either a Date object (recommended way). Or timestamp in seconds\n\t * in Browser timezone (see this.getTimestamp for details).\n\t * @returns {number} - timestamp that when passed to 'new Date' will create an object with absolute time matching\n\t * the time in User timezone\n\t */\n\tstatic toUser(browserTime: Date | number): number\n\t{\n\t\treturn this.toServer(browserTime) + getOffset().USER_TO_SERVER;\n\t}\n\n\t/**\n\t * Transforms a moment in Browser (device) timezone to a timestamp in Server timezone.\n\t * It's recommended to use this.toServerDate for more clear code.\n\t *\n\t * @param browserTime - a moment in Browser timezone. Either a Date object (recommended way). Or timestamp in seconds\n\t * in Browser timezone (see this.getTimestamp for details).\n\t * @returns {number} - timestamp that when passed to 'new Date' will create an object with absolute time matching\n\t * the time in Server timezone\n\t */\n\tstatic toServer(browserTime: Date | number): number\n\t{\n\t\treturn normalizeTimeValue(browserTime) - getOffset().BROWSER_TO_UTC + getOffset().SERVER_TO_UTC;\n\t}\n\n\t/**\n\t * Returns 'now' timestamp in Browser (device) timezone - when it's passed to a 'new Date', it will create an object\n\t * with absolute time matching the time as if it was in Browser (device) timezone.\n\t *\n\t * @returns {number}\n\t */\n\tstatic getTimestamp(): number\n\t{\n\t\t// since 'Date' class in JS is hardcoded to use device timezone, 'browser timestamp' is just normal UTC timestamp :)\n\n\t\treturn getNowTimestamp();\n\t}\n}\n","import { Type } from 'main.core';\nimport { BrowserTime } from './browser-time';\nimport { getOffset } from './internal/di';\nimport { createDateFromTimestamp, normalizeTimeValue } from './internal/helpers';\n\n/**\n * @memberOf BX.Main.Timezone\n *\n * WARNING! Don't use this class or any classes from Timezone namespace on sites without Bitrix Framework.\n * It is not designed to handle this case and will definitely break.\n */\nexport class ServerTime\n{\n\t/**\n\t * Returns a Date object with time and date that represent a specific moment in Server timezone.\n\t *\n\t * ATTENTION! Date.getTime() and Date.getTimezoneOffset() will return inaccurate data. Since a native Date object\n\t * doesn't support timezone other that device timezone, we have to manually change timestamp to shift time value in\n\t * a Date object.\n\t *\n\t * @param utcTimestamp - normal utc timestamp in seconds. 'now' by default\n\t * @returns {Date}\n\t */\n\tstatic getDate(utcTimestamp: ?number = null): Date\n\t{\n\t\tif (Type.isNumber(utcTimestamp))\n\t\t{\n\t\t\tconst browserToServerOffset = getOffset().SERVER_TO_UTC - getOffset().BROWSER_TO_UTC;\n\n\t\t\treturn createDateFromTimestamp(utcTimestamp + browserToServerOffset);\n\t\t}\n\n\t\treturn BrowserTime.toServerDate(BrowserTime.getDate());\n\t}\n\n\t/**\n\t * Transforms a moment in Server timezone to a moment in User timezone.\n\t *\n\t * ATTENTION! Date.getTime() and Date.getTimezoneOffset() will return inaccurate data. Since a native Date object\n\t * doesn't support timezone other that device timezone, we have to manually change timestamp to shift time value in\n\t * a Date object.\n\t *\n\t * @param serverTime - a moment in Server timezone. Either a Date object (recommended way). Or timestamp in seconds in\n\t * Server timezone (see this.getTimestamp for details).\n\t * @returns {Date}\n\t */\n\tstatic toUserDate(serverTime: Date | number): Date\n\t{\n\t\treturn createDateFromTimestamp(this.toUser(serverTime));\n\t}\n\n\t/**\n\t * Transforms a moment in Server timezone to a moment in Browser (device) timezone.\n\t *\n\t * @param serverTime - a moment in Server timezone. Either a Date object (recommended way). Or timestamp in seconds in\n\t * Server timezone (see this.getTimestamp for details).\n\t * @returns {Date}\n\t */\n\tstatic toBrowserDate(serverTime: Date | number): Date\n\t{\n\t\treturn createDateFromTimestamp(this.toBrowser(serverTime));\n\t}\n\n\t/**\n\t * Transforms a moment in Server timezone to a timestamp in User timezone.\n\t * It's recommended to use this.toServerDate for more clear code.\n\t *\n\t * @param serverTime - a moment in Server timezone. Either a Date object (recommended way). Or timestamp in seconds in\n\t * Server timezone (see this.getTimestamp for details).\n\t * @returns {number} - timestamp that when passed to 'new Date' will create an object with absolute time matching\n\t * the time in User timezone\n\t */\n\tstatic toUser(serverTime: Date | number): number\n\t{\n\t\treturn normalizeTimeValue(serverTime) + getOffset().USER_TO_SERVER;\n\t}\n\n\t/**\n\t * Transforms a moment in Server timezone to a timestamp in Browser (device) timezone.\n\t * It's recommended to use this.toBrowserDate for more clear code.\n\t *\n\t * @param serverTime - a moment in Server timezone. Either a Date object (recommended way). Or timestamp in seconds in\n\t * Server timezone (see this.getTimestamp for details).\n\t * @returns {number} - timestamp that when passed to 'new Date' will create an object with absolute time matching\n\t * the time in Browser (device) timezone\n\t */\n\tstatic toBrowser(serverTime: Date | number): number\n\t{\n\t\treturn normalizeTimeValue(serverTime) + getOffset().BROWSER_TO_UTC - getOffset().SERVER_TO_UTC;\n\t}\n\n\t/**\n\t * Returns 'now' timestamp in Server timezone - when it's passed to a 'new Date', it will create an object with\n\t * absolute time matching the time as if it was in Server timezone.\n\t *\n\t * @returns {number}\n\t */\n\tstatic getTimestamp(): number\n\t{\n\t\treturn BrowserTime.toServer(BrowserTime.getTimestamp());\n\t}\n}\n","import { Type } from 'main.core';\nimport { BrowserTime } from './browser-time';\nimport { getOffset } from './internal/di';\nimport { createDateFromTimestamp, normalizeTimeValue } from './internal/helpers';\n\n/**\n * @memberOf BX.Main.Timezone\n *\n * WARNING! Don't use this class or any classes from Timezone namespace on sites without Bitrix Framework.\n * It is not designed to handle this case and will definitely break.\n *\n * ATTENTION! In Bitrix user timezone !== browser timezone. Users can change their timezone from their profile settings\n * and the timezone will be different from browser timezone.\n */\nexport class UserTime\n{\n\t/**\n\t * Returns a Date object with time and date that represent a specific moment in User timezone.\n\t *\n\t * ATTENTION! Date.getTime() and Date.getTimezoneOffset() will return inaccurate data. Since a native Date object\n\t * doesn't support timezone other that device timezone, we have to manually change timestamp to shift time value in\n\t * a Date object.\n\t *\n\t * @param utcTimestamp - normal utc timestamp in seconds. 'now' by default\n\t * @returns {Date}\n\t */\n\tstatic getDate(utcTimestamp: ?number = null): Date\n\t{\n\t\tif (Type.isNumber(utcTimestamp))\n\t\t{\n\t\t\treturn createDateFromTimestamp(utcTimestamp + this.#userToBrowserOffset);\n\t\t}\n\n\t\treturn createDateFromTimestamp(this.getTimestamp());\n\t}\n\n\tstatic get #userToBrowserOffset(): number\n\t{\n\t\tconst userToUTCOffset = getOffset().SERVER_TO_UTC + getOffset().USER_TO_SERVER;\n\n\t\treturn userToUTCOffset - getOffset().BROWSER_TO_UTC;\n\t}\n\n\t/**\n\t * Transforms a moment in User timezone to a moment in Browser (device) timezone.\n\t *\n\t * @param userTime - a moment in User timezone. Either a Date object (recommended way). Or timestamp in seconds in\n\t * User timezone (see this.getTimestamp for details).\n\t * @returns {Date}\n\t */\n\tstatic toBrowserDate(userTime: Date | number): Date\n\t{\n\t\treturn createDateFromTimestamp(this.toBrowser(userTime));\n\t}\n\n\t/**\n\t * Transforms a moment in User timezone to a moment in Server timezone.\n\t *\n\t * ATTENTION! Date.getTime() and Date.getTimezoneOffset() will return inaccurate data. Since a native Date object\n\t * doesn't support timezone other that device timezone, we have to manually change timestamp to shift time value in\n\t * a Date object.\n\t *\n\t * @param userTime - a moment in User timezone. Either a Date object (recommended way). Or timestamp in seconds in\n\t * User timezone (see this.getTimestamp for details).\n\t * @returns {Date}\n\t */\n\tstatic toServerDate(userTime: Date | number): Date\n\t{\n\t\treturn createDateFromTimestamp(this.toServer(userTime));\n\t}\n\n\tstatic toUTCTimestamp(userTime: Date | number): number\n\t{\n\t\treturn normalizeTimeValue(userTime) - this.#userToBrowserOffset;\n\t}\n\n\t/**\n\t * Transforms a moment in User timezone to a timestamp in Browser timezone.\n\t * It's recommended to use this.toBrowserDate for more clear code.\n\t *\n\t * @param userTime - a moment in User timezone. Either a Date object (recommended way). Or timestamp in seconds in\n\t * User timezone (see this.getTimestamp for details).\n\t * @returns {number} - timestamp that when passed to 'new Date' will create an object with absolute time matching\n\t * the time in Browser (device) timezone\n\t */\n\tstatic toBrowser(userTime: Date | number): number\n\t{\n\t\treturn (\n\t\t\tnormalizeTimeValue(userTime)\n\t\t\t+ getOffset().BROWSER_TO_UTC\n\t\t\t- getOffset().SERVER_TO_UTC\n\t\t\t- getOffset().USER_TO_SERVER\n\t\t);\n\t}\n\n\t/**\n\t * Transforms a moment in User timezone to a timestamp in Server timezone.\n\t * It's recommended to use this.toServerDate for more clear code.\n\t *\n\t * @param userTime - a moment in User timezone. Either a Date object (recommended way). Or timestamp in seconds in\n\t * User timezone (see this.getTimestamp for details).\n\t * @returns {number} - timestamp that when passed to 'new Date' will create an object with absolute time matching\n\t * the time in Server timezone\n\t */\n\tstatic toServer(userTime: Date | number): number\n\t{\n\t\treturn normalizeTimeValue(userTime) - getOffset().USER_TO_SERVER;\n\t}\n\n\t/**\n\t * Returns 'now' timestamp in User timezone - when it's passed to a 'new Date', it will create an object with absolute\n\t * time matching the time as if it was in User timezone.\n\t *\n\t * @returns {number}\n\t */\n\tstatic getTimestamp(): number\n\t{\n\t\treturn BrowserTime.toUser(BrowserTime.getTimestamp());\n\t}\n}\n","import { DateTimeFormat } from './date-time-format';\nimport { BrowserTime } from './timezone/browser-time';\n\nimport { Offset } from './timezone/offset';\nimport { ServerTime } from './timezone/server-time';\nimport { UserTime } from './timezone/user-time';\n\n// compatibility alias\nconst Date = DateTimeFormat;\n\nconst Timezone = Object.freeze({\n\tOffset,\n\tBrowserTime,\n\tUserTime,\n\tServerTime,\n});\n\nexport {\n\tDateTimeFormat,\n\tDate,\n\tTimezone,\n};\n"],"names":["convertBitrixFormat","format","Type","isStringFilled","replace","formatsCache","Cache","MemoryCache","getFormat","code","remember","Extension","getSettings","get","DateTimeFormat","returnConst","_getMessage","date","isDate","Date","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","timestamp","getBrowserTimestamp","parseInt","browserOffset","getTimezoneOffset","Math","round","now","utc","ampm","isAmPmMode","timeFormat","AM_PM_MODE","LOWER","UPPER","formattedDate","match","exec","message","Loc","getMessage","str","isUTC","formatDate","formatDatetime","regMonths","i","expr","RegExp","aDate","aFormat","aDateArgs","aFormatArgs","aResult","length","cnt","trim","m","findIndex","item","getMonthIndex","k","toUpperCase","d","setUTCDate","setUTCFullYear","setUTCMonth","setUTCHours","setDate","setFullYear","setMonth","setHours","isNaN","bPM","h","month","q","wordMonthCut","wordMonth","getTime","isNumber","nowDate","thisDateTimeFormat","isArray","_formatDateInterval","replaceMap","map","x","forEach","element","index","formatRegex","dateFormats","toString","padStart","D","getDay","j","l","N","S","w","z","firstDay","currentDay","ceil","W","newDate","dayNumber","firstThursday","weekNumber","F","f","M","n","t","lastMonthDay","L","year","o","correctDate","Y","y","slice","a","A","B","swatch","getUTCHours","getUTCMinutes","getUTCSeconds","floor","g","G","H","s","u","e","I","firstJanuary","firstJanuaryUTC","firstJuly","firstJulyUTC","O","timezoneOffset","timezoneOffsetAbs","abs","P","difference","substr","Z","c","_replaceDateFormat","r","U","sago","_formatDateMessage","intval","sdiff","sshort","iago","idiff","isago","minutesAgo","result","secondsAgo","ishort","Hago","Hdiff","Hshort","yesterday","today","tommorow","tomorrow","dago","ddiff","dshort","mago","mdiff","mshort","Yago","Ydiff","Yshort","X","day","time","Q","daysAgo","cutZeroTime","formats","formatInterval","formatValue","todayStart","todayEnd","yesterdayStart","yesterdayEnd","tomorrowStart","tomorrowEnd","getUTCFullYear","getUTCDate","getUTCMonth","getUTCMilliseconds","getUTCDay","dayValue","monthValue","value","messages","val","dec","matchFull","number","NONE","cache","Offset","SERVER_TO_UTC","Text","toInteger","USER_TO_SERVER","BROWSER_TO_UTC","offset","Object","freeze","normalizeTimeValue","timeValue","getTimestampFromDate","createDateFromTimestamp","timestampInSeconds","getOffset","getNowTimestamp","BrowserTime","utcTimestamp","getTimestamp","browserTime","toUser","toServer","ServerTime","browserToServerOffset","toServerDate","serverTime","toBrowser","UserTime","userTime","userToUTCOffset","Timezone"],"mappings":"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"}