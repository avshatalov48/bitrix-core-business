this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};this.BX.Messenger.v2=this.BX.Messenger.v2||{};this.BX.Messenger.v2.Component=this.BX.Messenger.v2.Component||{};(function(t,e,s,n,a,o,i){"use strict";const r={name:"BaseMessage",components:{ContextMenu:n.ContextMenu,RetryButton:n.RetryButton,MessageKeyboard:n.MessageKeyboard,ReactionSelector:n.ReactionSelector},props:{item:{type:Object,required:true},dialogId:{type:String,required:true},withBackground:{type:Boolean,default:true},withContextMenu:{type:Boolean,default:true},withReactions:{type:Boolean,default:true},withRetryButton:{type:Boolean,default:true},menuIsActiveForId:{type:[Number,String],default:0},afterMessageWidthLimit:{type:Boolean,default:true}},computed:{dialog(){return this.$store.getters["chats/get"](this.dialogId,true)},message(){return this.item},isSystemMessage(){return this.message.authorId===0},isSelfMessage(){return this.message.authorId===e.Core.getUserId()},isOpponentMessage(){return!this.isSystemMessage&&!this.isSelfMessage},isChannelPost(){return i.ChannelManager.isChannel(this.dialogId)},showMessageAngle(){const t=Boolean(this.$slots["after-message"]);return!this.withBackground||this.isChannelPost||t},containerClasses(){return{"--self":this.isSelfMessage,"--opponent":this.isOpponentMessage,"--has-error":this.hasError,"--has-after-content":Boolean(this.$slots["after-message"])}},bodyClasses(){return{"--transparent":!this.withBackground,"--no-angle":this.showMessageAngle}},showRetryButton(){return this.withRetryButton&&this.isSelfMessage&&this.hasError},showContextMenu(){return this.withContextMenu&&!this.hasError&&this.canOpenContextMenu},canOpenContextMenu(){return o.PermissionManager.getInstance().canPerformAction(a.ChatActionType.openMessageMenu,this.dialogId)},hasError(){return this.message.error}},methods:{onContainerClick(t){s.Parser.executeClickEvent(t)}},template:`\n\t\t<div class="bx-im-message-base__wrap bx-im-message-base__scope" :class="containerClasses" :data-id="message.id">\n\t\t\t<div\n\t\t\t\tclass="bx-im-message-base__container" \n\t\t\t\t@click="onContainerClick"\n\t\t\t>\n\t\t\t\t\x3c!-- Before content --\x3e\n\t\t\t\t<slot name="before-message"></slot>\n\t\t\t\t\x3c!-- Content + retry + context menu --\x3e\n\t\t\t\t<div class="bx-im-message-base__content">\n\t\t\t\t\t<div class="bx-im-message-base__body" :class="bodyClasses">\n\t\t\t\t\t\t<slot></slot>\n\t\t\t\t\t\t<ReactionSelector v-if="withReactions" :messageId="message.id" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<RetryButton v-if="showRetryButton" :message="message" :dialogId="dialogId"/>\n\t\t\t\t\t<ContextMenu\n\t\t\t\t\t\tv-else-if="showContextMenu"\n\t\t\t\t\t\t:dialogId="dialogId"\n\t\t\t\t\t\t:message="message" \n\t\t\t\t\t\t:menuIsActiveForId="menuIsActiveForId" \n\t\t\t\t\t/>\n\t\t\t\t\t<div v-else class="bx-im-message-base__context-menu-placeholder"></div>\n\t\t\t\t</div>\n\t\t\t\t\x3c!-- After content --\x3e\n\t\t\t\t<div\n\t\t\t\t\tv-if="$slots['after-message']"\n\t\t\t\t\tclass="bx-im-message-base__bottom"\n\t\t\t\t\t:class="{'--width-limit': afterMessageWidthLimit}"\n\t\t\t\t>\n\t\t\t\t\t<div class="bx-im-message-base__bottom-content">\n\t\t\t\t\t\t<slot name="after-message"></slot>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`};t.BaseMessage=r})(this.BX.Messenger.v2.Component.Message=this.BX.Messenger.v2.Component.Message||{},BX.Messenger.v2.Application,BX.Messenger.v2.Lib,BX.Messenger.v2.Component.Message,BX.Messenger.v2.Const,BX.Messenger.v2.Lib,BX.Messenger.v2.Lib);
//# sourceMappingURL=base-message.bundle.map.js