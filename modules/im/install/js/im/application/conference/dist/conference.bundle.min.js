this.BX=this.BX||{};this.BX.Messenger=this.BX.Messenger||{};(function(e,t,n,i,r,a,o,l,s,c,u,d,h,f,C,p,g,m,v,S,w,y,k,I,b,V,U,E,R){"use strict";var B=Object.freeze({guest:"guest"});var M=function(){function e(t){babelHelpers.classCallCheck(this,e);this.queryAuthRestore=false;this.setAuthId(B.guest);this.restClient=new E.RestClient({endpoint:t.endpoint,queryParams:this.queryParams,cors:true})}babelHelpers.createClass(e,[{key:"setAuthId",value:function e(t){var n=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"";if(babelHelpers["typeof"](this.queryParams)!=="object"){this.queryParams={}}if(t==B.guest||typeof t==="string"&&t.match(/^[a-f0-9]{32}$/)){this.queryParams.call_auth_id=t}else{console.error("%CallRestClient.setAuthId: auth is not correct (%c".concat(t,"%c)"),"color: black;","font-weight: bold; color: red","color: black");return false}if(t==B.guest&&typeof n==="string"&&n.match(/^[a-f0-9]{32}$/)){this.queryParams.call_custom_auth_id=n}return true}},{key:"setChatId",value:function e(t){if(babelHelpers["typeof"](this.queryParams)!=="object"){this.queryParams={}}this.queryParams.call_chat_id=t}},{key:"setConfId",value:function e(t){if(babelHelpers["typeof"](this.queryParams)!=="object"){this.queryParams={}}this.queryParams.videoconf_id=t}},{key:"setPassword",value:function e(t){if(babelHelpers["typeof"](this.queryParams)!=="object"){this.queryParams={}}this.queryParams.videoconf_password=t}},{key:"callMethod",value:function e(t,n,i,r){var a=this;var o=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;if(!o){o=R.Utils.getLogTrackingParams({name:t})}var l=new BX.Promise;this.restClient.callMethod(t,n,null,r,o).then((function(e){a.queryAuthRestore=false;l.fulfill(e)}))["catch"]((function(e){var i=e.error();if(i.ex.error=="LIVECHAT_AUTH_WIDGET_USER"){a.setAuthId(i.ex.hash);if(t===RestMethod.widgetUserRegister){console.warn("BX.LiveChatRestClient: ".concat(i.ex.error_description," (").concat(i.ex.error,")"));a.queryAuthRestore=false;l.reject(e);return false}if(!a.queryAuthRestore){console.warn("BX.LiveChatRestClient: your auth-token has expired, send query with a new token");a.queryAuthRestore=true;a.restClient.callMethod(t,n,null,r,o).then((function(e){a.queryAuthRestore=false;l.fulfill(e)}))["catch"]((function(e){a.queryAuthRestore=false;l.reject(e)}));return false}}a.queryAuthRestore=false;l.reject(e)}));return l}},{key:"callBatch",value:function e(t,n,i,r,a){var o=this;var l=function e(l){for(var s in t){if(!t.hasOwnProperty(s)){continue}var c=l[s].error();if(c&&c.ex.error=="LIVECHAT_AUTH_WIDGET_USER"){o.setAuthId(c.ex.hash);if(s===RestMethod.widgetUserRegister){console.warn("BX.LiveChatRestClient: ".concat(c.ex.error_description," (").concat(c.ex.error,")"));o.queryAuthRestore=false;n(l);return false}if(!o.queryAuthRestore){console.warn("BX.LiveChatRestClient: your auth-token has expired, send query with a new token");o.queryAuthRestore=true;o.restClient.callBatch(t,n,i,r,a);return false}}}o.queryAuthRestore=false;n(l);return true};return this.restClient.callBatch(t,l,i,r,a)}}]);return e}();
/**
	 * Bitrix Im
	 * Conference application
	 *
	 * @package bitrix
	 * @subpackage mobile
	 * @copyright 2001-2021 Bitrix
	 */var P=function(){function e(){var n=this;var i=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};babelHelpers.classCallCheck(this,e);this.inited=false;this.hardwareInited=false;this.dialogInited=false;this.initPromise=new BX.Promise;this.params=i;this.params.userId=this.params.userId?parseInt(this.params.userId):0;this.params.siteId=this.params.siteId||"";this.params.chatId=this.params.chatId?parseInt(this.params.chatId):0;this.params.dialogId=this.params.chatId?"chat"+this.params.chatId.toString():"0";this.params.passwordRequired=!!this.params.passwordRequired;this.params.isBroadcast=!!this.params.isBroadcast;BX.Messenger.Lib.Logger.setConfig(i.loggerConfig);this.messagesQueue=[];this.template=null;this.rootNode=this.params.node||document.createElement("div");this.event=new S.VueVendorV2;this.callContainer=null;this.preCall=null;this.currentCall=null;this.videoStrategy=null;this.callDetails={};this.showFeedback=true;this.featureConfig={};(i.featureConfig||[]).forEach((function(e){n.featureConfig[e.id]=e}));this.localVideoStream=null;this.lastUsedCameraId=null;this.reconnectingCameraId=null;this.conferencePageTagInterval=null;this.onCallUserInvitedHandler=this.onCallUserInvited.bind(this);this.onCallUserStateChangedHandler=this.onCallUserStateChanged.bind(this);this.onCallUserMicrophoneStateHandler=this.onCallUserMicrophoneState.bind(this);this.onCallUserCameraStateHandler=this.onCallUserCameraState.bind(this);this.onCallUserVideoPausedHandler=this.onCallUserVideoPaused.bind(this);this.onCallLocalMediaReceivedHandler=BX.debounce(this.onCallLocalMediaReceived.bind(this),1e3);this.onCallRemoteMediaReceivedHandler=this.onCallRemoteMediaReceived.bind(this);this.onCallRemoteMediaStoppedHandler=this.onCallRemoteMediaStopped.bind(this);this.onCallUserVoiceStartedHandler=this.onCallUserVoiceStarted.bind(this);this.onCallUserVoiceStoppedHandler=this.onCallUserVoiceStopped.bind(this);this.onUserStatsReceivedHandler=this.onUserStatsReceived.bind(this);this.onCallUserScreenStateHandler=this.onCallUserScreenState.bind(this);this.onCallUserRecordStateHandler=this.onCallUserRecordState.bind(this);this.onCallUserFloorRequestHandler=this.onCallUserFloorRequest.bind(this);this.onMicrophoneLevelHandler=this.onMicrophoneLevel.bind(this);this._onCallJoinHandler=this.onCallJoin.bind(this);this.onCallLeaveHandler=this.onCallLeave.bind(this);this.onCallDestroyHandler=this.onCallDestroy.bind(this);this.onInputFocusHandler=this.onInputFocus.bind(this);this.onInputBlurHandler=this.onInputBlur.bind(this);this.onReconnectingHandler=this.onReconnecting.bind(this);this.onReconnectedHandler=this.onReconnected.bind(this);this.onUpdateLastUsedCameraIdHandler=this.onUpdateLastUsedCameraId.bind(this);this.onCallConnectionQualityChangedHandler=this.onCallConnectionQualityChanged.bind(this);this.onCallToggleRemoteParticipantVideoHandler=this.onCallToggleRemoteParticipantVideo.bind(this);this.onPreCallDestroyHandler=this.onPreCallDestroy.bind(this);this.onPreCallUserStateChangedHandler=this.onPreCallUserStateChanged.bind(this);this.waitingForCallStatus=false;this.waitingForCallStatusTimeout=null;this.callEventReceived=false;this.callRecordState=t.View.RecordState.Stopped;this.floatingScreenShareWindow=null;this.webScreenSharePopup=null;this.mutePopup=null;this.allowMutePopup=true;this.loopTimers={};this.initDesktopEvents().then((function(){return n.initRestClient()})).then((function(){return n.subscribePreCallChanges()})).then((function(){return n.subscribeNotifierEvents()})).then((function(){return n.initPullClient()})).then((function(){return n.initCore()})).then((function(){return n.setModelData()})).then((function(){return n.initComponent()})).then((function(){return n.initCallInterface()})).then((function(){return n.initHardware()})).then((function(){return n.initUserComplete()}))["catch"]((function(e){console.error("Init error",e)}))}babelHelpers.createClass(e,[{key:"initDesktopEvents",value:function e(){var n=this;if(!a.DesktopApi.isDesktop()){return new Promise((function(e,t){return e()}))}this.floatingScreenShareWindow=new t.FloatingScreenShare({onBackToCallClick:this.onFloatingScreenShareBackToCallClick.bind(this),onStopSharingClick:this.onFloatingScreenShareStopClick.bind(this),onChangeScreenClick:this.onFloatingScreenShareChangeScreenClick.bind(this)});if(this.floatingScreenShareWindow){a.DesktopApi.subscribe("BXScreenMediaSharing",(function(e,t,i,r,a,o,l){n.floatingScreenShareWindow.setSharingData({title:t,x:i,y:r,width:a,height:o,app:l}).then((function(){n.floatingScreenShareWindow.show()}))["catch"]((function(e){u.Logger.error("setSharingData error",e)}))}));window.addEventListener("focus",(function(){n.onWindowFocus()}));window.addEventListener("blur",(function(){n.onWindowBlur()}))}a.DesktopApi.subscribe("bxImUpdateCounterMessage",(function(e){if(!n.controller){return false}n.controller.getStore().commit("conference/common",{messageCount:e})}));b.EventEmitter.subscribe(f.EventType.textarea.focus,this.onInputFocusHandler);b.EventEmitter.subscribe(f.EventType.textarea.blur,this.onInputBlurHandler);b.EventEmitter.subscribe(f.EventType.conference.userRenameFocus,this.onInputFocusHandler);b.EventEmitter.subscribe(f.EventType.conference.userRenameBlur,this.onInputBlurHandler);return new Promise((function(e,t){return e()}))}},{key:"initRestClient",value:function e(){this.restClient=new M({endpoint:this.getHost()+"/rest"});this.restClient.setConfId(this.params.conferenceId);return new Promise((function(e,t){return e()}))}},{key:"subscribePreCallChanges",value:function e(){BX.addCustomEvent(window,"CallEvents::callCreated",this.onCallCreated.bind(this))}},{key:"subscribeNotifierEvents",value:function e(){var t=this;C.Notifier.subscribe("click",(function(e){var n=e.getData(),i=n.id;if(i.startsWith("im-videconf")){t.toggleChat()}}))}},{key:"initPullClient",value:function e(){if(!this.params.isIntranetOrExtranet){this.pullClient=new V.PullClient({serverEnabled:true,userId:this.params.userId,siteId:this.params.siteId,restClient:this.restClient,skipStorageInit:true,configTimestamp:0,skipCheckRevision:true,getPublicListMethod:"im.call.channel.public.list"});return new Promise((function(e,t){return e()}))}else{this.pullClient=BX.PULL;return this.pullClient.start().then((function(){return new Promise((function(e,t){return e()}))}))}}},{key:"initCore",value:function e(){var t=this;this.controller=new l.Controller({host:this.getHost(),siteId:this.params.siteId,userId:this.params.userId,languageId:this.params.language,pull:{client:this.pullClient},rest:{client:this.restClient},vuexBuilder:{database:!R.Utils.browser.isIe(),databaseName:"imol/call",databaseType:w.VuexBuilder.DatabaseType.localStorage,models:[o.ConferenceModel.create(),o.CallModel.create()]}});window.BX.Messenger.Application.Core={controller:this.controller};return new Promise((function(e,n){t.controller.ready().then((function(){return e()}))}))}},{key:"setModelData",value:function e(){var t=this;this.controller.getStore().commit("application/set",{dialog:{chatId:this.getChatId(),dialogId:this.getDialogId()},options:{darkBackground:true}});var n=this.params.presenters.map((function(e){return e["id"]}));this.controller.getStore().dispatch("conference/setBroadcastMode",{broadcastMode:this.params.isBroadcast});this.controller.getStore().dispatch("conference/setPresenters",{presenters:n});this.params.presenters.forEach((function(e){t.controller.getStore().dispatch("users/set",e)}));if(this.params.passwordRequired){this.controller.getStore().commit("conference/common",{passChecked:false})}if(this.params.conferenceTitle){this.controller.getStore().dispatch("conference/setConferenceTitle",{conferenceTitle:this.params.conferenceTitle})}if(this.params.alias){this.controller.getStore().commit("conference/setAlias",{alias:this.params.alias})}return new Promise((function(e,t){return e()}))}},{key:"initComponent",value:function e(){var t=this;if(this.getStartupErrorCode()){this.setError(this.getStartupErrorCode())}return new Promise((function(e,n){t.controller.createVue(t,{el:t.rootNode,data:function e(){return{dialogId:t.getDialogId()}},template:'<bx-im-component-conference-public :dialogId="dialogId"/>'}).then((function(n){t.template=n;e()}))["catch"]((function(e){return n(e)}))}))}},{key:"initCallInterface",value:function n(){var i=this;return new Promise((function(n,r){i.callContainer=document.getElementById("bx-im-component-call-container");var a=["document"];if(i.isViewerMode()){a=["camera","microphone","screen","record","floorRequest","document"]}if(!i.params.isIntranetOrExtranet){a.push("record")}i.callView=new t.View({container:i.callContainer,showChatButtons:true,showUsersButton:true,showShareButton:i.getFeatureState("screenSharing")!==e.FeatureState.Disabled,showRecordButton:i.getFeatureState("record")!==e.FeatureState.Disabled,userLimit:t.Util.getUserLimit(),isIntranetOrExtranet:!!i.params.isIntranetOrExtranet,language:i.params.language,layout:R.Utils.device.isMobile()?t.View.Layout.Mobile:t.View.Layout.Centered,enableNewLayoutLogic:t.Util.isNewCallLayoutEnabled(),uiState:t.View.UiState.Preparing,blockedButtons:["camera","microphone","floorRequest","screen","record"],localUserState:t.UserState.Idle,hiddenTopButtons:!i.isBroadcast()||i.getBroadcastPresenters().length>1?[]:["grid"],hiddenButtons:a,broadcastingMode:i.isBroadcast(),broadcastingPresenters:i.getBroadcastPresenters()});i.callView.subscribe(t.View.Event.onButtonClick,i.onCallButtonClick.bind(i));i.callView.subscribe(t.View.Event.onReplaceCamera,i.onCallReplaceCamera.bind(i));i.callView.subscribe(t.View.Event.onReplaceMicrophone,i.onCallReplaceMicrophone.bind(i));i.callView.subscribe(t.View.Event.onReplaceSpeaker,i.onCallReplaceSpeaker.bind(i));i.callView.subscribe(t.View.Event.onHasMainStream,i.onCallViewHasMainStream.bind(i));i.callView.subscribe(t.View.Event.onChangeHdVideo,i.onCallViewChangeHdVideo.bind(i));i.callView.subscribe(t.View.Event.onChangeMicAutoParams,i.onCallViewChangeMicAutoParams.bind(i));i.callView.subscribe(t.View.Event.onChangeFaceImprove,i.onCallViewChangeFaceImprove.bind(i));i.callView.subscribe(t.View.Event.onUserRename,i.onCallViewUserRename.bind(i));i.callView.subscribe(t.View.Event.onUserPinned,i.onCallViewUserPinned.bind(i));i.callView.subscribe(t.View.Event.onToggleSubscribe,i.onCallToggleSubscribe.bind(i));i.callView.blockAddUser();i.callView.blockHistoryButton();if(!R.Utils.device.isMobile()){i.callView.show()}n()}))}},{key:"initUserComplete",value:function e(){var t=this;return new Promise((function(e,n){t.initUser().then((function(){return t.startPageTagInterval()})).then((function(){return t.tryJoinExistingCall()})).then((function(){return t.initCall()})).then((function(){return t.initPullHandlers()})).then((function(){return t.subscribeToStoreChanges()})).then((function(){return t.initComplete()})).then((function(){return e}))["catch"]((function(e){return n(e)}))}))}},{key:"initUser",value:function e(){var t=this;return new Promise((function(e,n){if(t.getStartupErrorCode()||!t.getConference().common.passChecked){return n()}if(t.params.userId>0){t.controller.setUserId(t.params.userId);if(t.params.isIntranetOrExtranet){t.switchToSessAuth();t.controller.getStore().commit("conference/user",{id:t.params.userId})}else{var i=t.getUserHashCookie();if(i){t.restClient.setAuthId(i);t.restClient.setChatId(t.getChatId());t.controller.getStore().commit("conference/user",{id:t.params.userId,hash:i});t.pullClient.start()}}t.controller.getStore().commit("conference/common",{inited:true});return e()}else{t.restClient.setAuthId("guest");t.restClient.setChatId(t.getChatId());if(typeof BX.SidePanel!=="undefined"){BX.SidePanel.Instance.disableAnchorBinding()}return t.restClient.callMethod("im.call.user.register",{alias:t.params.alias,user_hash:t.getUserHashCookie()||""}).then((function(n){BX.message["USER_ID"]=n.data().id;t.controller.getStore().commit("conference/user",{id:n.data().id,hash:n.data().hash});t.controller.setUserId(n.data().id);t.callView.setLocalUserId(n.data().id);if(n.data().created){t.params.userCount++}t.controller.getStore().commit("conference/common",{inited:true});t.restClient.setAuthId(n.data().hash);t.pullClient.start();return e()}))}}))}},{key:"startPageTagInterval",value:function e(){var t=this;return new Promise((function(e){clearInterval(t.conferencePageTagInterval);t.conferencePageTagInterval=setInterval((function(){c.LocalStorage.set(t.params.siteId,t.params.userId,BX.CallEngine.getConferencePageTag(t.params.dialogId),"Y",2)}),1e3);e()}))}},{key:"tryJoinExistingCall",value:function e(){var n=this;var i=t.Provider.Bitrix;this.restClient.callMethod("im.call.tryJoinCall",{entityType:"chat",entityId:this.params.dialogId,provider:i,type:t.Type.Permanent}).then((function(e){u.Logger.warn("tryJoinCall",e.data());if(e.data().success){n.waitingForCallStatus=true;n.waitingForCallStatusTimeout=setTimeout((function(){n.waitingForCallStatus=false;if(!n.callEventReceived){n.setConferenceStatus(false)}n.callEventReceived=false}),5e3)}else{n.setConferenceStatus(false)}}))}},{key:"initCall",value:function e(){t.Engine.setRestClient(this.restClient);t.Engine.setPullClient(this.pullClient);t.Engine.setCurrentUserId(this.controller.getUserId());this.callView.unblockButtons(["chat"])}},{key:"initPullHandlers",value:function e(){this.pullClient.subscribe(new U.ImCallPullHandler({store:this.controller.getStore(),application:this,controller:this.controller}));return new Promise((function(e,t){return e()}))}},{key:"subscribeToStoreChanges",value:function e(){var t=this;this.controller.getStore().subscribe((function(e,n){var i=e.payload,r=e.type;if(r==="users/update"&&i.fields.name){if(!t.callView){return false}t.callView.updateUserData(babelHelpers.defineProperty({},i.id,{name:i.fields.name}))}else if(r==="dialogues/set"){if(i[0].dialogId!==t.getDialogId()){return false}if(!R.Utils.platform.isBitrixDesktop()){t.callView.setButtonCounter("chat",i[0].counter)}}else if(r==="dialogues/update"){if(i.dialogId!==t.getDialogId()){return false}if(typeof i.fields.counter==="number"&&t.callView){if(R.Utils.platform.isBitrixDesktop()){if(i.actionName==="decreaseCounter"&&!i.dialogMuted&&typeof i.fields.previousCounter==="number"){var a=i.fields.counter;if(t.getConference().common.messageCount){a=t.getConference().common.messageCount-(i.fields.previousCounter-a);if(a<0){a=0}}t.callView.setButtonCounter("chat",a)}}else{t.callView.setButtonCounter("chat",i.fields.counter)}}if(typeof i.fields.name!=="undefined"){document.title=i.fields.name.toString()}}else if(r==="conference/common"&&typeof i.messageCount==="number"){if(t.callView){t.callView.setButtonCounter("chat",i.messageCount)}}}))}},{key:"initComplete",value:function e(){if(this.isExternalUser()){this.callView.localUser.userModel.allowRename=true}if(this.getConference().common.inited){this.inited=true;this.initPromise.resolve(this)}if(a.DesktopApi.isDesktop()){a.DesktopApi.emitToMainWindow("bxConferenceLoadComplete",[])}return new Promise((function(e,t){return e()}))}},{key:"initHardware",value:function e(){var n=this;return new Promise((function(e,i){t.Hardware.init().then((function(){if(n.hardwareInited){e();return true}if(Object.values(t.Hardware.microphoneList).length===0){n.setError(f.ConferenceErrorCode.missingMicrophone)}if(!n.isViewerMode()){n.callView.unblockButtons(["camera","microphone"]);n.callView.enableMediaSelection()}t.Hardware.subscribe(t.Hardware.Events.deviceChanged,n._onDeviceChange.bind(n));n.hardwareInited=true;e()}))["catch"]((function(e){if(e==="NO_WEBRTC"&&n.isHttps()){n.setError(f.ConferenceErrorCode.unsupportedBrowser)}else if(e==="NO_WEBRTC"&&!n.isHttps()){n.setError(f.ConferenceErrorCode.unsafeConnection)}u.Logger.error("Init hardware error",e);i(e)}))}))}},{key:"_onDeviceChange",value:function e(n){var i=this;if(!this.currentCall||!this.currentCall.ready){return}var r=n.data.added;var a=n.data.removed;var o=t.Hardware.getRemovedUsedDevices(n.data.removed,{microphoneId:this.currentCall.microphoneId,cameraId:this.currentCall.cameraId,speakerId:this.callView.speakerId});if(r){setTimeout((function(){return i.useDevicesInCurrentCall(r)}),500)}if(o.length>0){BX.UI.Notification.Center.notify({content:BX.message("IM_CALL_DEVICES_DETACHED")+"<br><ul>"+o.map((function(e){return"<li>"+e.label}))+"</ul>",position:"top-right",autoHideDelay:1e4,closeButton:true,actions:[{title:BX.message("IM_CALL_DEVICES_CLOSE"),events:{click:function e(t,n){n.close()}}}]})}if(a){setTimeout((function(){return i.removeDevicesFromCurrentCall(a)}),500)}}},{key:"useDevicesInCurrentCall",value:function e(n){var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!this.currentCall||!this.currentCall.ready){return}for(var r=0;r<n.length;r++){var a=n[r];switch(a.kind){case"audioinput":if(a.deviceId==="default"||i){var o=t.Hardware.getDefaultDeviceIdByGroupId(a.groupId,"audioinput");this.currentCall.setMicrophoneId(o);this.callView.setMicrophoneId(o)}break;case"videoinput":if(a.deviceId==="default"||i){this.currentCall.setCameraId(a.deviceId)}if(this.reconnectingCameraId===a.deviceId&&!t.Hardware.isCameraOn){this.updateCameraSettingsInCurrentCallAfterReconnecting(a.deviceId)}break;case"audiooutput":if(this.callView&&a.deviceId==="default"||i){var l=t.Hardware.getDefaultDeviceIdByGroupId(a.groupId,"audiooutput");this.callView.setSpeakerId(l)}break}}}},{key:"removeDevicesFromCurrentCall",value:function e(n){if(!this.currentCall||!this.currentCall.ready){return}for(var i=0;i<n.length;i++){var r=n[i];switch(r.kind){case"audioinput":if(this.currentCall.microphoneId==r.deviceId){var a=Object.keys(t.Hardware.microphoneList);var o=void 0;if(a.includes("default")){var l=t.Hardware.getDeviceGroupIdByDeviceId("default","audioinput");o=t.Hardware.getDefaultDeviceIdByGroupId(l,"audioinput")}if(!o){o=a.length>0?a[0]:""}this.currentCall.setMicrophoneId(o);if(this.currentCall.provider===t.Provider.Bitrix){this.callView.setMicrophoneId(o)}}break;case"videoinput":if(this.currentCall.cameraId==r.deviceId){var s=Object.keys(t.Hardware.cameraList);this.currentCall.setCameraId(s.length>0?s[0]:"")}break;case"audiooutput":if(this.callView&&this.callView.speakerId==r.deviceId){var c=Object.keys(t.Hardware.audioOutputList);var u=void 0;if(c.includes("default")){var d=t.Hardware.getDeviceGroupIdByDeviceId("default","audiooutput");u=t.Hardware.getDefaultDeviceIdByGroupId(d,"audiooutput")}if(!u){this.callView.setSpeakerId(c.length>0?c[0]:"")}}break}}}},{key:"startCall",value:function e(n){var i=this;var r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(this.initCallPromise){return}var a=t.Provider.Bitrix;if(R.Utils.device.isMobile()){this.callView.show();this.callView.setButtonCounter("chat",this.getDialogData().counter)}else{this.callView.setLayout(t.View.Layout.Grid)}this.callView.setUiState(t.View.UiState.Calling);if(n&&!t.Hardware.hasCamera()){this.showNotification(BX.message("IM_CALL_NO_CAMERA_ERROR"));n=false}if(this.localVideoStream){if(!n){this.stopLocalVideoStream()}}this.controller.getStore().commit("conference/startCall");this.initCallPromise=t.Engine.createCall({type:t.Type.Permanent,entityType:"chat",entityId:this.getDialogId(),provider:a,videoEnabled:n,enableMicAutoParameters:t.Hardware.enableMicAutoParameters,joinExisting:true}).then((function(e){u.Logger.warn("call created",e);i.currentCall=e.call;i.currentCall.useHdVideo(true);if(t.Hardware.defaultMicrophone){i.currentCall.setMicrophoneId(t.Hardware.defaultMicrophone)}if(t.Hardware.defaultCamera){i.currentCall.setCameraId(t.Hardware.defaultCamera)}if(!R.Utils.device.isMobile()){i.callView.setLayout(t.View.Layout.Grid)}i.callView.appendUsers(i.currentCall.getUsers());t.Util.getUsers(i.currentCall.id,i.getCallUsers(true)).then((function(e){i.controller.getStore().dispatch("users/set",Object.values(e));i.controller.getStore().dispatch("conference/setUsers",{users:Object.keys(e)});i.callView.updateUserData(e)}));i.releasePreCall();i.bindCallEvents();i.updateCallUser(i.currentCall.userId,{microphoneState:!t.Hardware.isMicrophoneMuted});if(e.isNew){i.currentCall.inviteUsers()}else{i.currentCall.answer({joinAsViewer:r})}i.onUpdateLastUsedCameraId()}))["catch"]((function(e){u.Logger.error("creating call error",e);i.initCallPromise=null}))}},{key:"joinCall",value:function e(n,i){var r=this;if(this.initCallPromise){return}var a=BX.prop.getBoolean(i,"video",false);var o=BX.prop.getBoolean(i,"joinAsViewer",false);if(!!a){t.Hardware.isCameraOn=false}if(R.Utils.device.isMobile()){this.callView.show()}else{this.callView.setLayout(t.View.Layout.Grid)}if(o){this.callView.setLocalUserDirection(t.EndpointDirection.RecvOnly)}else{this.callView.setLocalUserDirection(t.EndpointDirection.SendRecv)}this.callView.setUiState(t.View.UiState.Calling);this.initCallPromise=t.Engine.getCallWithId(n).then((function(e){r.currentCall=e.call;r.releasePreCall();r.bindCallEvents();r.controller.getStore().commit("conference/startCall");r.callView.appendUsers(r.currentCall.getUsers());t.Util.getUsers(r.currentCall.id,r.getCallUsers(true)).then((function(e){r.controller.getStore().dispatch("users/set",Object.values(e));r.controller.getStore().dispatch("conference/setUsers",{users:Object.keys(e)});r.callView.updateUserData(e)}));if(!o){r.currentCall.useHdVideo(true);if(t.Hardware.defaultMicrophone){r.currentCall.setMicrophoneId(t.Hardware.defaultMicrophone)}if(t.Hardware.defaultCamera){r.currentCall.setCameraId(t.Hardware.defaultCamera)}r.updateCallUser(r.currentCall.userId,{microphoneState:!t.Hardware.isMicrophoneMuted})}r.currentCall.answer({joinAsViewer:o});r.onUpdateLastUsedCameraId()}))["catch"]((function(e){console.error(e);r.initCallPromise=null}))}},{key:"endCall",value:function e(){var n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(this.currentCall){this.showFeedback=this.currentCall.wasConnected;this.callDetails={id:this.currentCall.id,provider:this.currentCall.provider,userCount:this.currentCall.users.length,browser:t.Util.getBrowserForStatistics(),isMobile:BX.browser.IsMobile(),isConference:true};this.removeCallEvents();this.currentCall.hangup(false,"",n)}if(this.isRecording()){BXDesktopSystem.CallRecordStop()}this.callRecordState=t.View.RecordState.Stopped;if(R.Utils.platform.isBitrixDesktop()){if(this.floatingScreenShareWindow){this.floatingScreenShareWindow.destroy();this.floatingScreenShareWindow=null}window.close()}else{this.callView.releaseLocalMedia();this.callView.close();this.closeReconnectionBaloon();this.setError(f.ConferenceErrorCode.userLeftCall);this.controller.getStore().commit("conference/endCall")}b.EventEmitter.unsubscribe(f.EventType.textarea.focus,this.onInputFocusHandler);b.EventEmitter.unsubscribe(f.EventType.textarea.blur,this.onInputBlurHandler);b.EventEmitter.unsubscribe(f.EventType.conference.userRenameFocus,this.onInputFocusHandler);b.EventEmitter.unsubscribe(f.EventType.conference.userRenameBlur,this.onInputBlurHandler)}},{key:"restart",value:function e(){console.trace(" restart");if(this.currentCall){this.removeCallEvents();this.currentCall=null}if(this.callView){this.callView.releaseLocalMedia();this.callView.close();this.closeReconnectionBaloon();this.callView.destroy();this.callView=null}this.initCallInterface();this.initCall();this.controller.getStore().commit("conference/endCall")}},{key:"kickFromCall",value:function e(){this.setError(f.ConferenceErrorCode.kickedFromCall);this.pullClient.disconnect();this.endCall()}},{key:"getCallUsers",value:function e(t){var n=Object.keys(this.currentCall.getUsers());if(t){n.push(this.currentCall.userId)}return n}},{key:"setLocalVideoStream",value:function e(t){this.localVideoStream=t}},{key:"stopLocalVideoStream",value:function e(){if(this.localVideoStream){this.localVideoStream.getTracks().forEach((function(e){return e.stop()}))}this.localVideoStream=null}},{key:"setSelectedCamera",value:function e(t){if(this.callView){this.callView.setCameraId(t)}}},{key:"setSelectedMic",value:function e(t){if(this.callView){this.callView.setMicrophoneId(t)}}},{key:"getFeature",value:function t(n){if(typeof this.featureConfig[n]==="undefined"){return{id:n,state:e.FeatureState.Enabled,articleCode:""}}return this.featureConfig[n]}},{key:"getFeatureState",value:function e(t){return this.getFeature(t).state}},{key:"canRecord",value:function e(){return R.Utils.platform.isBitrixDesktop()&&R.Utils.platform.getDesktopVersion()>=54}},{key:"isRecording",value:function e(){return this.canRecord()&&this.callRecordState!=t.View.RecordState.Stopped}},{key:"showFeatureLimitSlider",value:function e(t){var n=this.getFeature(t).articleCode;if(!n||!window.BX.UI.InfoHelper){console.warn("Limit article not found",t);return false}window.BX.UI.InfoHelper.show(n);return true}},{key:"showNotification",value:function e(t,n){if(!n){n=[]}BX.UI.Notification.Center.notify({content:y.Text.encode(t),position:"top-right",autoHideDelay:5e3,closeButton:true,actions:n})}},{key:"showMicMutedNotification",value:function e(){var n=this;if(this.mutePopup||!this.callView){return}this.mutePopup=new t.Hint({bindElement:this.callView.buttons.microphone.elements.icon,targetContainer:this.callView.container,buttons:[this.createUnmuteButton()],onClose:function e(){n.allowMutePopup=false;n.mutePopup.destroy();n.mutePopup=null}});this.mutePopup.show()}},{key:"createUnmuteButton",value:function e(){var t=this;return new BX.UI.Button({baseClass:"ui-btn ui-btn-icon-mic",text:BX.message("IM_CALL_UNMUTE_MIC"),size:BX.UI.Button.Size.EXTRA_SMALL,color:BX.UI.Button.Color.LIGHT_BORDER,noCaps:true,round:true,events:{click:function e(){t.onCallViewToggleMuteButtonClick({data:{muted:false}});t.mutePopup.destroy();t.mutePopup=null}}})}},{key:"showWebScreenSharePopup",value:function e(){if(this.webScreenSharePopup){this.webScreenSharePopup.show();return}this.webScreenSharePopup=new t.WebScreenSharePopup({bindElement:this.callView.buttons.screen.elements.root,targetContainer:this.callView.container,onClose:function(){this.webScreenSharePopup.destroy();this.webScreenSharePopup=null}.bind(this),onStopSharingClick:function(){this.onCallViewToggleScreenSharingButtonClick();this.webScreenSharePopup.destroy();this.webScreenSharePopup=null}.bind(this)});this.webScreenSharePopup.show()}},{key:"isViewerMode",value:function e(){var t=false;var n=this.isBroadcast();if(n){var i=this.getBroadcastPresenters();var r=this.controller.getStore().state.application.common.userId;var a=i.includes(r);t=n&&!a}return t}},{key:"onCallCreated",value:function e(n){var i=this;u.Logger.warn("we got event onCallCreated",n);if(this.preCall||this.currentCall){return}var r=n.call;if(r.associatedEntity.type==="chat"&&r.associatedEntity.id===this.params.dialogId){this.preCall=n.call;this.updatePreCallCounter();this.preCall.addEventListener(t.Event.onUserStateChanged,this.onPreCallUserStateChangedHandler);this.preCall.addEventListener(t.Event.onDestroy,this.onPreCallDestroyHandler);if(this.waitingForCallStatus){this.callEventReceived=true}this.setConferenceStatus(true);this.setConferenceStartDate(n.call.startDate)}var a=this.getConference().common.userReadyToJoin;if(a){var o=this.isViewerMode();var l=this.getConference().common.joinWithVideo;u.Logger.warn("ready to join call after waiting",l,o);setTimeout((function(){t.Hardware.init().then((function(){if(o&&i.preCall){i.joinCall(i.preCall.id,{joinAsViewer:true})}else{i.startCall(l)}}))}),1e3)}}},{key:"releasePreCall",value:function e(){if(this.preCall){this.preCall.removeEventListener(t.Event.onUserStateChanged,this.onPreCallUserStateChangedHandler);this.preCall.removeEventListener(t.Event.onDestroy,this.onPreCallDestroyHandler);this.preCall=null}}},{key:"onPreCallDestroy",value:function e(t){if(this.waitingForCallStatusTimeout){clearTimeout(this.waitingForCallStatusTimeout)}this.setConferenceStatus(false);this.releasePreCall()}},{key:"onPreCallUserStateChanged",value:function e(t){this.updatePreCallCounter()}},{key:"updatePreCallCounter",value:function e(){if(this.preCall){this.controller.getStore().commit("conference/common",{userInCallCount:this.preCall.getParticipatingUsers().length})}else{this.controller.getStore().commit("conference/common",{userInCallCount:0})}}},{key:"createVideoStrategy",value:function e(){if(this.videoStrategy){this.videoStrategy.destroy()}var t=R.Utils.device.isMobile()?VideoStrategy.Type.OnlySpeaker:VideoStrategy.Type.AllowAll;this.videoStrategy=new VideoStrategy({call:this.currentCall,callView:this.callView,strategyType:t})}},{key:"removeVideoStrategy",value:function e(){if(this.videoStrategy){this.videoStrategy.destroy()}this.videoStrategy=null}},{key:"onCallReplaceCamera",value:function e(n){var i=n.data.deviceId;if(this.reconnectingCameraId){this.setReconnectingCameraId(null)}t.Hardware.defaultCamera=i;if(this.currentCall){this.currentCall.setCameraId(i)}else{this.template.$emit("cameraSelected",i)}}},{key:"onCallReplaceMicrophone",value:function e(n){var i=n.data.deviceId;t.Hardware.defaultMicrophone=i.deviceId;if(this.callView){this.callView.setMicrophoneId(i)}if(this.currentCall){this.currentCall.setMicrophoneId(i)}else{this.template.$emit("micSelected",n.data.deviceId)}}},{key:"onCallReplaceSpeaker",value:function e(n){t.Hardware.defaultSpeaker=n.data.deviceId}},{key:"onCallViewHasMainStream",value:function e(n){if(this.currentCall&&this.currentCall.provider===t.Provider.Bitrix){this.currentCall.setMainStream(n.data.userId)}}},{key:"onCallViewChangeHdVideo",value:function e(n){t.Hardware.preferHdQuality=n.data.allowHdVideo}},{key:"onCallViewChangeMicAutoParams",value:function e(n){t.Hardware.enableMicAutoParameters=n.data.allowMicAutoParams}},{key:"onCallViewChangeFaceImprove",value:function e(t){if(!a.DesktopApi.isDesktop()){return}a.DesktopApi.setCameraSmoothingStatus(t.data.faceImproveEnabled)}},{key:"onCallViewUserRename",value:function e(t){var n=t.data.newName;if(!this.isExternalUser()){return false}if(R.Utils.device.isMobile()){this.renameGuestMobile(n)}else{this.renameGuest(n)}}},{key:"onCallViewUserPinned",value:function e(t){if(t.data.userId){this.updateCallUser(t.data.userId,{pinned:true});return true}this.controller.getStore().dispatch("call/unpinUser");return true}},{key:"onCallToggleSubscribe",value:function e(n){if(this.currentCall&&this.currentCall.provider===t.Provider.Bitrix&&n.data){this.currentCall.toggleRemoteParticipantVideo(n.data.participantIds,n.data.showVideo,true)}}},{key:"renameGuest",value:function e(t){var n=this;this.callView.localUser.userModel.renameRequested=true;this.setUserName(t).then((function(){n.callView.localUser.userModel.wasRenamed=true;u.Logger.log("setting name to",t)}))["catch"]((function(e){u.Logger.error("error setting name",e)}))}},{key:"renameGuestMobile",value:function e(t){var n=this;this.setUserName(t).then((function(){u.Logger.log("setting mobile name to",t);if(n.callView.renameSlider){n.callView.renameSlider.close()}}))["catch"]((function(e){u.Logger.error("error setting name",e)}))}},{key:"onCallButtonClick",value:function e(t){var n=t.data.buttonName;u.Logger.warn("Button clicked!",n);var i={hangup:this.onCallViewHangupButtonClick.bind(this),hangupOptions:this._onCallViewHangupOptionsButtonClick.bind(this),close:this.onCallViewCloseButtonClick.bind(this),toggleMute:this.onCallViewToggleMuteButtonClick.bind(this),toggleScreenSharing:this.onCallViewToggleScreenSharingButtonClick.bind(this),record:this.onCallViewRecordButtonClick.bind(this),toggleVideo:this.onCallViewToggleVideoButtonClick.bind(this),toggleSpeaker:this.onCallViewToggleSpeakerButtonClick.bind(this),showChat:this.onCallViewShowChatButtonClick.bind(this),toggleUsers:this.onCallViewToggleUsersButtonClick.bind(this),share:this.onCallViewShareButtonClick.bind(this),fullscreen:this.onCallViewFullScreenButtonClick.bind(this),floorRequest:this.onCallViewFloorRequestButtonClick.bind(this),feedback:this.onCallViewFeedbackButtonClick.bind(this)};if(i[n]){i[n](t)}else{u.Logger.error("Button handler not found!",n)}}},{key:"onCallViewHangupButtonClick",value:function e(t){this.stopLocalVideoStream();this.endCall()}},{key:"_onCallViewHangupOptionsButtonClick",value:function e(){var t=this;if(this.hangupOptionsMenu){this.hangupOptionsMenu.destroy();return}var n=this.callView.buttons.hangupOptions.elements.root.offsetWidth;var i=[{text:BX.message("CALL_M_BTN_HANGUP_OPTION_FINISH"),onclick:function e(){t.stopLocalVideoStream();t.endCall(true)}},{text:BX.message("CALL_M_BTN_HANGUP_OPTION_LEAVE"),onclick:function e(){t.stopLocalVideoStream();t.endCall(false)}}];this.hangupOptionsMenu=new BX.PopupMenuWindow({className:"bx-messenger-videocall-hangup-options-container",background:"#22272B",contentBackground:"#22272B",darkMode:true,contentBorderRadius:"6px",angle:false,bindElement:this.callView.buttons.hangupOptions.elements.root,targetContainer:this.container,offsetTop:-15,bindOptions:{position:"top"},cacheable:false,subMenuOptions:{maxWidth:450},events:{onShow:function e(t){var i=t.getTarget();i.getPopupContainer().style.display="block";var r=n/2-i.getPopupContainer().offsetWidth/2;i.setOffset({offsetLeft:r+40,offsetTop:0});i.setAngle({offset:i.getPopupContainer().offsetWidth/2-17})},onDestroy:function e(){return t.hangupOptionsMenu=null}},items:i});this.hangupOptionsMenu.show()}},{key:"onCallViewCloseButtonClick",value:function e(t){this.stopLocalVideoStream();this.endCall()}},{key:"onCallViewToggleMuteButtonClick",value:function e(n){var i;if(this.currentCall&&!this.currentCall.microphoneId&&!n.data.muted){this.currentCall.setMicrophoneId(t.Hardware.defaultMicrophone)}t.Hardware.isMicrophoneMuted=n.data.muted;if(!this.currentCall){this.template.$emit("setMicState",!n.data.muted)}if(this.isRecording()){BXDesktopSystem.CallRecordMute(n.data.muted)}if((i=this.currentCall)!==null&&i!==void 0&&i.userId){this.updateCallUser(this.currentCall.userId,{microphoneState:!n.data.muted})}}},{key:"onCallViewToggleScreenSharingButtonClick",value:function t(){if(this.getFeatureState("screenSharing")===e.FeatureState.Limited){this.showFeatureLimitSlider("screenSharing");return}if(this.getFeatureState("screenSharing")===e.FeatureState.Disabled){return}if(this.currentCall.isScreenSharingStarted()){this.currentCall.stopScreenSharing();if(this.isRecording()){BXDesktopSystem.CallRecordStopSharing()}if(this.floatingScreenShareWindow){this.floatingScreenShareWindow.close()}if(this.webScreenSharePopup){this.webScreenSharePopup.close()}}else{this.restClient.callMethod("im.call.onShareScreen",{callId:this.currentCall.id});this.currentCall.startScreenSharing()}}},{key:"onCallViewRecordButtonClick",value:function n(i){if(i.data.recordState===t.View.RecordState.Started){if(this.getFeatureState("record")===e.FeatureState.Limited){this.showFeatureLimitSlider("record");return}if(this.getFeatureState("record")===e.FeatureState.Disabled){return}if(this.canRecord()){this.callView.setButtonActive("record",true)}else{if(window.BX.Helper){window.BX.Helper.show("redirect=detail&code=12398134")}return}}else if(i.data.recordState===t.View.RecordState.Paused){if(this.canRecord()){BXDesktopSystem.CallRecordPause(true)}}else if(i.data.recordState===t.View.RecordState.Resumed){if(this.canRecord()){BXDesktopSystem.CallRecordPause(false)}}else if(i.data.recordState===t.View.RecordState.Stopped){this.callView.setButtonActive("record",false)}this.currentCall.sendRecordState({action:i.data.recordState,date:new Date});this.callRecordState=i.data.recordState}},{key:"onCallViewToggleVideoButtonClick",value:function e(n){t.Hardware.isCameraOn=n.data.video;if(this.currentCall){if(!t.Hardware.initialized){return}if(n.data.video&&Object.values(t.Hardware.cameraList).length===0){return}if(!n.data.video){this.callView.releaseLocalMedia()}if(!this.currentCall.cameraId&&n.data.video){this.currentCall.setCameraId(t.Hardware.defaultCamera)}}else{this.template.$emit("setCameraState",n.data.video)}}},{key:"onCallViewToggleSpeakerButtonClick",value:function e(t){this.callView.muteSpeaker(!t.data.speakerMuted);if(t.data.fromHotKey){BX.UI.Notification.Center.notify({content:BX.message(this.callView.speakerMuted?"IM_M_CALL_MUTE_SPEAKERS_OFF":"IM_M_CALL_MUTE_SPEAKERS_ON"),position:"top-right",autoHideDelay:3e3,closeButton:true})}}},{key:"onCallViewShareButtonClick",value:function e(){var t=400;if(R.Utils.device.isMobile()&&document.body.clientWidth<400){t=document.body.clientWidth-40}BX.UI.Notification.Center.notify({content:y.Loc.getMessage("BX_IM_VIDEOCONF_LINK_COPY_DONE"),autoHideDelay:4e3,width:t});d.Clipboard.copy(this.getDialogData()["public"].link)}},{key:"onCallViewFullScreenButtonClick",value:function e(){this.toggleFullScreen()}},{key:"onFloatingScreenShareBackToCallClick",value:function e(){BXDesktopWindow.ExecuteCommand("show.active");if(this.floatingScreenShareWindow){this.floatingScreenShareWindow.hide()}}},{key:"onFloatingScreenShareStopClick",value:function e(){BXDesktopWindow.ExecuteCommand("show.active");this.onCallViewToggleScreenSharingButtonClick()}},{key:"onFloatingScreenShareChangeScreenClick",value:function e(){if(this.currentCall){this.currentCall.startScreenSharing(true)}}},{key:"onWindowFocus",value:function e(){if(this.floatingScreenShareWindow){this.floatingScreenShareWindow.hide()}}},{key:"onWindowBlur",value:function e(){if(this.floatingScreenShareWindow&&this.currentCall&&this.currentCall.isScreenSharingStarted()){this.floatingScreenShareWindow.show()}}},{key:"isFullScreen",value:function e(){if("webkitFullscreenElement"in document){return!!document.webkitFullscreenElement}else if("fullscreenElement"in document){return!!document.fullscreenElement}return false}},{key:"toggleFullScreen",value:function e(){if(this.isFullScreen()){this.exitFullScreen()}else{this.enterFullScreen()}}},{key:"enterFullScreen",value:function e(){if(BX.browser.IsChrome()||BX.browser.IsSafari()){document.body.webkitRequestFullScreen()}else if(BX.browser.IsFirefox()){document.body.requestFullscreen()}}},{key:"exitFullScreen",value:function e(){if(document.cancelFullScreen){document.cancelFullScreen()}else if(document.mozCancelFullScreen){document.mozCancelFullScreen()}else if(document.webkitCancelFullScreen){document.webkitCancelFullScreen()}else if(document.document.exitFullscreen()){document.exitFullscreen()}}},{key:"onCallViewShowChatButtonClick",value:function e(){this.toggleChat()}},{key:"onCallViewToggleUsersButtonClick",value:function e(){this.toggleUserList()}},{key:"onCallViewFeedbackButtonClick",value:function e(){var t=this;BX.loadExt("ui.feedback.form").then((function(){BX.UI.Feedback.Form.open({id:"call_feedback_".concat(t.currentCall.id,"-").concat(t.currentCall.instanceId,"-").concat(Math.random()),forms:[{zones:["ru","by","kz"],id:406,sec:"9lhjhn",lang:"ru"},{zones:["de"],id:754,sec:"6upe49",lang:"de"},{zones:["es"],id:750,sec:"whk4la",lang:"es"},{zones:["com.br"],id:752,sec:"is01cs",lang:"com.br"},{zones:["en"],id:748,sec:"pds0h6",lang:"en"}],presets:{sender_page:"call",call_type:t.currentCall.provider,call_amount:t.currentCall.users.length+1,call_id:"id: ".concat(t.currentCall.id,", instanceId: ").concat(t.currentCall.instanceId),id_of_user:t.currentCall.userId,from_domain:location.origin}})}))}},{key:"onCallViewFloorRequestButtonClick",value:function e(){var n=this;var i=this.callView.getUserFloorRequestState(t.Engine.getCurrentUserId());var r=this.callView.getUserTalking(t.Engine.getCurrentUserId());this.callView.setUserFloorRequestState(t.Engine.getCurrentUserId(),!i);if(this.currentCall){this.currentCall.requestFloor(!i)}clearTimeout(this.callViewFloorRequestTimeout);if(r&&!i){this.callViewFloorRequestTimeout=setTimeout((function(){if(n.currentCall){n.currentCall.requestFloor(false)}}),1500)}}},{key:"bindCallEvents",value:function e(){this.currentCall.addEventListener(t.Event.onUserInvited,this.onCallUserInvitedHandler);this.currentCall.addEventListener(t.Event.onDestroy,this.onCallDestroyHandler);this.currentCall.addEventListener(t.Event.onUserStateChanged,this.onCallUserStateChangedHandler);this.currentCall.addEventListener(t.Event.onUserMicrophoneState,this.onCallUserMicrophoneStateHandler);this.currentCall.addEventListener(t.Event.onUserCameraState,this.onCallUserCameraStateHandler);this.currentCall.addEventListener(t.Event.onUserVideoPaused,this.onCallUserVideoPausedHandler);this.currentCall.addEventListener(t.Event.onLocalMediaReceived,this.onCallLocalMediaReceivedHandler);this.currentCall.addEventListener(t.Event.onRemoteMediaReceived,this.onCallRemoteMediaReceivedHandler);this.currentCall.addEventListener(t.Event.onRemoteMediaStopped,this.onCallRemoteMediaStoppedHandler);this.currentCall.addEventListener(t.Event.onUserVoiceStarted,this.onCallUserVoiceStartedHandler);this.currentCall.addEventListener(t.Event.onUserVoiceStopped,this.onCallUserVoiceStoppedHandler);this.currentCall.addEventListener(t.Event.onUserStatsReceived,this.onUserStatsReceivedHandler);this.currentCall.addEventListener(t.Event.onUserScreenState,this.onCallUserScreenStateHandler);this.currentCall.addEventListener(t.Event.onUserRecordState,this.onCallUserRecordStateHandler);this.currentCall.addEventListener(t.Event.onUserFloorRequest,this.onCallUserFloorRequestHandler);this.currentCall.addEventListener(t.Event.onMicrophoneLevel,this.onMicrophoneLevelHandler);this.currentCall.addEventListener(t.Event.onJoin,this._onCallJoinHandler);this.currentCall.addEventListener(t.Event.onLeave,this.onCallLeaveHandler);this.currentCall.addEventListener(t.Event.onReconnecting,this.onReconnectingHandler);this.currentCall.addEventListener(t.Event.onReconnected,this.onReconnectedHandler);this.currentCall.addEventListener(t.Event.onUpdateLastUsedCameraId,this.onUpdateLastUsedCameraIdHandler);this.currentCall.addEventListener(t.Event.onConnectionQualityChanged,this.onCallConnectionQualityChangedHandler);this.currentCall.addEventListener(t.Event.onToggleRemoteParticipantVideo,this.onCallToggleRemoteParticipantVideoHandler)}},{key:"removeCallEvents",value:function e(){this.currentCall.removeEventListener(t.Event.onUserInvited,this.onCallUserInvitedHandler);this.currentCall.removeEventListener(t.Event.onDestroy,this.onCallDestroyHandler);this.currentCall.removeEventListener(t.Event.onUserStateChanged,this.onCallUserStateChangedHandler);this.currentCall.removeEventListener(t.Event.onUserMicrophoneState,this.onCallUserMicrophoneStateHandler);this.currentCall.removeEventListener(t.Event.onUserCameraState,this.onCallUserCameraStateHandler);this.currentCall.removeEventListener(t.Event.onUserVideoPaused,this.onCallUserVideoPausedHandler);this.currentCall.removeEventListener(t.Event.onLocalMediaReceived,this.onCallLocalMediaReceivedHandler);this.currentCall.removeEventListener(t.Event.onRemoteMediaReceived,this.onCallRemoteMediaReceivedHandler);this.currentCall.removeEventListener(t.Event.onRemoteMediaStopped,this.onCallRemoteMediaStoppedHandler);this.currentCall.removeEventListener(t.Event.onUserVoiceStarted,this.onCallUserVoiceStartedHandler);this.currentCall.removeEventListener(t.Event.onUserVoiceStopped,this.onCallUserVoiceStoppedHandler);this.currentCall.removeEventListener(t.Event.onUserStatsReceived,this.onUserStatsReceivedHandler);this.currentCall.removeEventListener(t.Event.onUserScreenState,this.onCallUserScreenStateHandler);this.currentCall.removeEventListener(t.Event.onUserRecordState,this.onCallUserRecordStateHandler);this.currentCall.removeEventListener(t.Event.onUserFloorRequest,this.onCallUserFloorRequestHandler);this.currentCall.removeEventListener(t.Event.onMicrophoneLevel,this.onMicrophoneLevelHandler);this.currentCall.removeEventListener(t.Event.onConnectionQualityChanged,this.onCallConnectionQualityChangedHandler);this.currentCall.removeEventListener(t.Event.onToggleRemoteParticipantVideo,this.onCallToggleRemoteParticipantVideoHandler);this.currentCall.removeEventListener(t.Event.onLeave,this.onCallLeaveHandler);this.currentCall.removeEventListener(t.Event.onReconnecting,this.onReconnectingHandler);this.currentCall.removeEventListener(t.Event.onReconnected,this.onReconnectedHandler);this.currentCall.addEventListener(t.Event.onUpdateLastUsedCameraId,this.onUpdateLastUsedCameraIdHandler)}},{key:"onCallUserInvited",value:function e(n){var i=this;this.callView.addUser(n.userId);t.Util.getUsers(this.currentCall.id,[n.userId]).then((function(e){i.controller.getStore().dispatch("users/set",Object.values(e));i.controller.getStore().dispatch("conference/setUsers",{users:Object.keys(e)});i.callView.updateUserData(e)}))}},{key:"onCallUserStateChanged",value:function e(n){if(n.state!==t.UserState.Connected&&this.loopTimers[n.userId]===undefined){this.loopConnectionQuality(n.userId,1)}if(n.state===t.UserState.Connected){this.clearConnectionQualityTimer(n.userId);this.callView.setUserConnectionQuality(n.userId,5)}if(n.state===t.UserState.Ready&&n.previousState===t.UserState.Connected&&!Object.keys(this.currentCall).includes(n.userId)){n.state=t.UserState.Idle}this.callView.setUserState(n.userId,n.state);this.updateCallUser(n.userId,{state:n.state});if(!this.isRecording()){this.callView.getConnectedUserCount(false)?this.callView.unblockButtons(["record"]):this.callView.blockButtons(["record"])}}},{key:"onCallUserMicrophoneState",value:function e(n){if(n.userId==this.userId){t.Hardware.isMicrophoneMuted=!n.microphoneState}else{this.callView.setUserMicrophoneState(n.userId,n.microphoneState);this.updateCallUser(n.userId,{microphoneState:n.microphoneState})}}},{key:"onCallUserCameraState",value:function e(t){this.callView.setUserCameraState(t.userId,t.cameraState);this.updateCallUser(t.userId,{cameraState:t.cameraState})}},{key:"onCallUserVideoPaused",value:function e(t){this.callView.setUserVideoPaused(t.userId,t.videoPaused)}},{key:"onCallLocalMediaReceived",value:function e(n){console.log("Received local media stream "+n);if(this.callView){var i=n.tag=="main"||n.mediaRenderer?t.Hardware.enableMirroring:false;this.callView.setLocalStream(n);this.callView.flipLocalVideo(i);this.callView.setButtonActive("screen",this.currentCall.isScreenSharingStarted());if(this.currentCall.isScreenSharingStarted()){if(!a.DesktopApi.isDesktop()){this.showWebScreenSharePopup()}this.callView.blockSwitchCamera();this.callView.updateButtons()}else{if(this.floatingScreenShareWindow){this.floatingScreenShareWindow.close()}if(this.webScreenSharePopup){this.webScreenSharePopup.close()}if(!this.currentCall.callFromMobile&&!this.isViewerMode()){this.callView.unblockSwitchCamera();this.callView.updateButtons()}}}if(this.currentCall&&t.Hardware.isCameraOn&&n.tag==="main"&&n.stream.getVideoTracks().length===0){t.Hardware.isCameraOn=false}}},{key:"onCallRemoteMediaReceived",value:function e(t){if(this.callView){if("track"in t){this.callView.setUserMedia(t.userId,t.kind,t.track)}if("mediaRenderer"in t&&t.mediaRenderer.kind==="audio"){this.callView.setUserMedia(t.userId,"audio",t.mediaRenderer.stream.getAudioTracks()[0])}if("mediaRenderer"in t&&(t.mediaRenderer.kind==="video"||t.mediaRenderer.kind==="sharing")){this.callView.setVideoRenderer(t.userId,t.mediaRenderer)}}}},{key:"onCallRemoteMediaStopped",value:function e(t){if(this.callView){if("mediaRenderer"in t){if(t.kind==="video"||t.kind==="sharing"){t.mediaRenderer.stream=null;this.callView.setVideoRenderer(t.userId,t.mediaRenderer)}}else{this.callView.setUserMedia(t.userId,t.kind,null)}}}},{key:"loopConnectionQuality",value:function e(t,n){var i=this;var r=arguments.length>2&&arguments[2]!==undefined?arguments[2]:200;if(this.callView){this.loopTimers[t]=setTimeout((function(){i.callView.setUserConnectionQuality(t,n);var e=n>=4?1:n+1;i.loopConnectionQuality(t,e,r)}),r)}}},{key:"clearConnectionQualityTimer",value:function e(t){if(this.loopTimers[t]!==undefined){clearTimeout(this.loopTimers[t]);delete this.loopTimers[t]}}},{key:"onCallConnectionQualityChanged",value:function e(t){this.clearConnectionQualityTimer(t.userId);this.callView.setUserConnectionQuality(t.userId,t.score)}},{key:"onCallToggleRemoteParticipantVideo",value:function e(t){if(this.toogleParticipantsVideoBaloon){if(t.isVideoShown){this.toogleParticipantsVideoBaloon.close()}return}if(!t.isVideoShown){this.toogleParticipantsVideoBaloon=BX.UI.Notification.Center.notify({content:y.Text.encode(BX.message("IM_M_CALL_REMOTE_PARTICIPANTS_VIDEO_MUTED")),autoHide:false,position:"top-right",closeButton:false})}}},{key:"onCallUserVoiceStarted",value:function e(t){if(t.local){if(this.currentCall.muted&&this.allowMutePopup){this.showMicMutedNotification()}return}this.callView.setUserTalking(t.userId,true);this.callView.setUserFloorRequestState(t.userId,false);this.updateCallUser(t.userId,{talking:true,floorRequestState:false})}},{key:"onCallUserVoiceStopped",value:function e(t){this.callView.setUserTalking(t.userId,false);this.updateCallUser(t.userId,{talking:false})}},{key:"onUserStatsReceived",value:function e(t){if(this.callView){this.callView.setUserStats(t.userId,t.report)}}},{key:"onCallUserScreenState",value:function e(t){if(this.callView){this.callView.setUserScreenState(t.userId,t.screenState)}this.updateCallUser(t.userId,{screenState:t.screenState})}},{key:"onCallUserRecordState",value:function e(n){this.callRecordState=n.recordState.state;this.callView.setRecordState(n.recordState);if(!this.canRecord()||n.userId!=this.controller.getUserId()){return true}if(n.recordState.state===t.View.RecordState.Started&&n.recordState.userId==this.controller.getUserId()){var i=window.bxdWindowId||window.document.title;var r=BX.message("IM_CALL_RECORD_NAME");var a=this.currentCall.associatedEntity.id;var o=this.currentCall.associatedEntity.name;var l=this.currentCall.id;var s=BX.Main.Date.format(this.params.formatRecordDate||"d.m.Y");if(r){r=r.replace("#CHAT_TITLE#",o).replace("#CALL_ID#",l).replace("#DATE#",s)}else{r="call_record_"+this.currentCall.id}t.Engine.getRestClient().callMethod("im.call.onStartRecord",{callId:this.currentCall.id});BXDesktopSystem.CallRecordStart({windowId:i,fileName:r,callId:l,callDate:s,dialogId:a,dialogName:o,muted:t.Hardware.isMicrophoneMuted,cropTop:72,cropBottom:90,shareMethod:"im.disk.record.share"})}else if(n.recordState.state===t.View.RecordState.Stopped){BXDesktopSystem.CallRecordStop()}return true}},{key:"onCallUserFloorRequest",value:function e(t){this.callView.setUserFloorRequestState(t.userId,t.requestActive);this.updateCallUser(t.userId,{floorRequestState:t.requestActive})}},{key:"onMicrophoneLevel",value:function e(t){this.callView.setMicrophoneLevel(t.level)}},{key:"onCallJoin",value:function e(n){if(!n.local){return}if(!this.isViewerMode()){this.callView.unblockButtons(["camera","floorRequest","screen"])}if(this.callView.getConnectedUserCount(false)){this.callView.unblockButtons(["record"])}this.callView.setUiState(t.View.UiState.Connected)}},{key:"onCallLeave",value:function e(t){if(!t.local){return}if(this.webScreenSharePopup){this.webScreenSharePopup.close()}this.endCall()}},{key:"onCallDestroy",value:function e(t){this.currentCall=null;if(this.floatingScreenShareWindow){this.floatingScreenShareWindow.close}if(this.webScreenSharePopup){this.webScreenSharePopup.close()}this.restart()}},{key:"onCheckDevicesSave",value:function e(n){if(n["camera"]){t.Hardware.defaultCamera=n["camera"]}if(n["microphone"]){t.Hardware.defaultMicrophone=n["microphone"]}if(n["audioOutput"]){t.Hardware.defaultSpeaker=n["audioOutput"]}if(n["preferHDQuality"]){t.Hardware.preferHdQuality=n["preferHDQuality"]}if(n["enableMicAutoParameters"]){t.Hardware.enableMicAutoParameters=n["enableMicAutoParameters"]}}},{key:"setCameraState",value:function e(n){t.Hardware.isCameraOn=n}},{key:"isChatShowed",value:function e(){return this.getConference().common.showChat}},{key:"toggleChat",value:function e(){var t=this.getConference().common.rightPanelMode;if(t===f.ConferenceRightPanelMode.hidden){this.controller.getStore().dispatch("conference/changeRightPanelMode",{mode:f.ConferenceRightPanelMode.chat});this.callView.setButtonActive("chat",true)}else if(t===f.ConferenceRightPanelMode.chat){this.controller.getStore().dispatch("conference/changeRightPanelMode",{mode:f.ConferenceRightPanelMode.hidden});this.callView.setButtonActive("chat",false)}else if(t===f.ConferenceRightPanelMode.users){this.controller.getStore().dispatch("conference/changeRightPanelMode",{mode:f.ConferenceRightPanelMode.split});this.callView.setButtonActive("chat",true)}else if(t===f.ConferenceRightPanelMode.split){this.controller.getStore().dispatch("conference/changeRightPanelMode",{mode:f.ConferenceRightPanelMode.users});this.callView.setButtonActive("chat",false)}}},{key:"toggleUserList",value:function e(){var t=this.getConference().common.rightPanelMode;if(t===f.ConferenceRightPanelMode.hidden){this.controller.getStore().dispatch("conference/changeRightPanelMode",{mode:f.ConferenceRightPanelMode.users});this.callView.setButtonActive("users",true)}else if(t===f.ConferenceRightPanelMode.users){this.controller.getStore().dispatch("conference/changeRightPanelMode",{mode:f.ConferenceRightPanelMode.hidden});this.callView.setButtonActive("users",false)}else if(t===f.ConferenceRightPanelMode.chat){this.controller.getStore().dispatch("conference/changeRightPanelMode",{mode:f.ConferenceRightPanelMode.split});this.callView.setButtonActive("users",true)}else if(t===f.ConferenceRightPanelMode.split){this.controller.getStore().dispatch("conference/changeRightPanelMode",{mode:f.ConferenceRightPanelMode.chat});this.callView.setButtonActive("users",false)}}},{key:"pinUser",value:function e(n){if(!this.callView){return false}this.callView.pinUser(n.id);this.callView.setLayout(t.View.Layout.Centered)}},{key:"unpinUser",value:function e(){if(!this.callView){return false}this.callView.unpinUser()}},{key:"changeBackground",value:function e(){if(!t.Hardware){return false}t.BackgroundDialog.open()}},{key:"openChat",value:function e(t){a.DesktopApi.emitToMainWindow("bxConferenceOpenChat",[t.id])}},{key:"openProfile",value:function e(t){a.DesktopApi.emitToMainWindow("bxConferenceOpenProfile",[t.id])}},{key:"setDialogInited",value:function e(){this.dialogInited=true;var t=this.getDialogData();document.title=t.name}},{key:"changeVideoconfUrl",value:function e(t){window.history.pushState("","",t)}},{key:"sendNewMessageNotify",value:function e(t){if(!this.checkIfMessageNotifyIsNeeded(t)){return false}var n=R.Utils.text.purify(t.message.text,t.message.params,t.files);var i="";var r="";if(t.message.senderId>0&&t.message.system!=="Y"){var a=this.controller.getStore().getters["users/get"](t.message.senderId,true);r=a.name;i=a.avatar}C.Notifier.notify({id:"im-videconf-".concat(t.message.id),title:r,icon:i,text:n});return true}},{key:"checkIfMessageNotifyIsNeeded",value:function e(t){var n=this.getConference().common.rightPanelMode;return!R.Utils.device.isMobile()&&t.chatId===this.getChatId()&&(n!==f.ConferenceRightPanelMode.chat||n!==f.ConferenceRightPanelMode.split)&&t.message.senderId!==this.controller.getUserId()&&!this.getConference().common.error}},{key:"onInputFocus",value:function e(t){this.callView.setHotKeyTemporaryBlock(true)}},{key:"onInputBlur",value:function e(t){this.callView.setHotKeyTemporaryBlock(false)}},{key:"closeReconnectionBaloon",value:function e(){if(this.reconnectionBaloon){this.reconnectionBaloon.close();this.reconnectionBaloon=null}}},{key:"setReconnectingCameraId",value:function e(t){this.reconnectingCameraId=t;if(t){this.updateCameraSettingsInCurrentCallAfterReconnecting(t)}}},{key:"updateCameraSettingsInCurrentCallAfterReconnecting",value:function e(n){if(this.currentCall.cameraId===n){return}var i=t.Hardware.getCameraList();if(!i.find((function(e){return e.deviceId===n}))){return}this.currentCall.setCameraId(n);this.setReconnectingCameraId(null)}},{key:"onUpdateLastUsedCameraId",value:function e(){var t=this.currentCall.cameraId;if(t){this.lastUsedCameraId=t}}},{key:"onReconnecting",value:function e(){if(!(this.currentCall.provider===t.Provider.Bitrix||this.currentCall.provider===t.Provider.Plain)){return false}if(this.reconnectionBaloon){return}this.reconnectionBaloon=BX.UI.Notification.Center.notify({content:y.Text.encode(BX.message("IM_CALL_RECONNECTING")),autoHide:false,position:"top-right",closeButton:false})}},{key:"onReconnected",value:function e(){this.setReconnectingCameraId(this.lastUsedCameraId);if(!(this.currentCall.provider===t.Provider.Bitrix||this.currentCall.provider===t.Provider.Plain)){return false}this.closeReconnectionBaloon()}},{key:"setUserWasRenamed",value:function e(){if(this.callView){this.callView.localUser.userModel.wasRenamed=true}}},{key:"setError",value:function e(t){var n=this.getConference().common.error;if(n&&n===f.ConferenceErrorCode.kickedFromCall){return}this.controller.getStore().commit("conference/setError",{errorCode:t})}},{key:"toggleSmiles",value:function e(){this.controller.getStore().commit("conference/toggleSmiles")}},{key:"setJoinType",value:function e(t){this.controller.getStore().commit("conference/setJoinType",{joinWithVideo:t})}},{key:"setConferenceStatus",value:function e(t){this.controller.getStore().commit("conference/setConferenceStatus",{conferenceStarted:t})}},{key:"setConferenceStartDate",value:function e(t){this.controller.getStore().commit("conference/setConferenceStartDate",{conferenceStartDate:t})}},{key:"setUserReadyToJoin",value:function e(){this.controller.getStore().commit("conference/setUserReadyToJoin")}},{key:"updateCallUser",value:function e(t,n){this.controller.getStore().dispatch("call/updateUser",{id:t,fields:n})}},{key:"setUserName",value:function e(t){var n=this;return new Promise((function(e,i){n.restClient.callMethod("im.call.user.update",{name:t,chat_id:n.getChatId()}).then((function(){e()}))["catch"]((function(e){i(e)}))}))}},{key:"checkPassword",value:function e(t){var n=this;return new Promise((function(e,i){n.restClient.callMethod("im.videoconf.password.check",{password:t,alias:n.params.alias}).then((function(r){if(r.data()===true){n.restClient.setPassword(t);n.controller.getStore().commit("conference/common",{passChecked:true});n.initUserComplete();e()}else{i()}}))["catch"]((function(e){console.error("Password check error",e)}))}))}},{key:"changeLink",value:function e(){var t=this;return new Promise((function(e,n){t.restClient.callMethod("im.videoconf.share.change",{dialog_id:t.getDialogId()}).then((function(){e()}))["catch"]((function(e){n(e)}))}))}},{key:"ready",value:function e(){if(this.inited){var t=new BX.Promise;t.resolve(this);return t}return this.initPromise}},{key:"getConference",value:function e(){return this.controller.getStore().state.conference}},{key:"isBroadcast",value:function e(){return this.getConference().common.isBroadcast}},{key:"getBroadcastPresenters",value:function e(){return this.getConference().common.presenters}},{key:"isExternalUser",value:function e(){return!!this.getUserHash()}},{key:"getChatId",value:function e(){return parseInt(this.params.chatId)}},{key:"getDialogId",value:function e(){return this.params.dialogId}},{key:"getDialogData",value:function e(){if(!this.dialogInited){return false}return this.controller.getStore().getters["dialogues/get"](this.getDialogId())}},{key:"getHost",value:function e(){return location.origin||""}},{key:"getStartupErrorCode",value:function e(){return this.params.startupErrorCode?this.params.startupErrorCode:""}},{key:"isHttps",value:function e(){return location.protocol==="https:"}},{key:"getUserHash",value:function e(){return this.getConference().user.hash}},{key:"getUserHashCookie",value:function e(){var t="";var n=s.Cookie.get(null,"BITRIX_CALL_HASH");if(typeof n==="string"&&n.match(/^[a-f0-9]{32}$/)){t=n}return t}},{key:"switchToSessAuth",value:function e(){this.restClient.restClient.queryParams=undefined;return true}}]);return e}();P.FeatureState={Enabled:"enabled",Disabled:"disabled",Limited:"limited"};e.ConferenceApplication=P})(this.BX.Messenger.Application=this.BX.Messenger.Application||{},BX.Call,BX,BX.Messenger.Application,BX.Messenger,BX.Messenger.v2.Lib,BX.Messenger.Model,BX.Messenger,BX.Messenger.Lib,BX.Messenger.Lib,BX.Messenger.Lib,BX.Messenger.Lib,BX.Messenger.Lib,BX.Messenger.Const,BX.UI.NotificationManager,BX,BX.UI,BX.UI,BX.UI.Viewer,BX,BX,BX,BX,BX.Main,BX.Event,BX,BX.Messenger.Provider.Pull,BX,BX.Messenger.Lib);
//# sourceMappingURL=conference.bundle.map.js